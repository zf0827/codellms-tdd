{"input": "public static void main(String[] args) {\n        SpringApplication.run(Oauth2JwtServerApplication.class, args);\n    }", "timestamp": "2022-11-24T04:23:10.144303Z", "repo_name": "sx19990201/SpringCloudDemo", "path": "/oauth2-jwt-server/src/main/java/com/springcloud/oauth2jwtserver/Oauth2JwtServerApplication.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Oauth2JwtServerApplication", "index": 0, "label": 1}
{"input": "@JavascriptInterface\n    public String readAssetFile(String path) {\n        return Util.readAssetFile(path);\n    }", "timestamp": "2020-09-06T10:18:48.264931Z", "repo_name": "ofts7th/sdumbachouti", "path": "/app/src/main/java/cs/util/JsBridge.java", "source": "the-stack-v2", "method_name": "readAssetFile", "class_name": "JsBridge", "index": 1, "label": 1}
{"input": "@Override\n    protected void initInternal() throws LifecycleException {\n        super.initInternal();\n        \n        if (processTlds) {\n            this.addLifecycleListener(new TldConfig());\n        }\n\n        \n        if (namingResources != null) {\n            namingResources.init();\n        }\n\n        \n        if (this.getObjectName() != null) {\n            Notification notification = new Notification(\"j2ee.object.created\",\n                    this.getObjectName(), sequenceNumber.getAndIncrement());\n            broadcaster.sendNotification(notification);\n        }\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "initInternal", "class_name": "StandardContext", "index": 2, "label": 1}
{"input": "@Override\n\tpublic Object onTransactionException(Exception e) {\n\t\tJsonAction.setRedirect(\"jsps/error\");\n\t\tlogger.error(e.getMessage(), e);\n\t\treturn \"系统异常请重试\";\n\t}", "timestamp": "2020-05-30T14:18:20.808734Z", "repo_name": "modaokj/payInteract", "path": "/payInteract/src/com/softright/tbcards/actions/TaobaoEntryAction.java", "source": "the-stack-v2", "method_name": "onTransactionException", "class_name": "TaobaoEntryAction", "index": 3, "label": 1}
{"input": "@Test(expected = IllegalArgumentException.class)\n\tpublic void testAddContributorNull() {\n\t\tCodeInfo ci = new CodeInfo(\"test\");\n\t\tci.addContributor(null);\n\t\tAssert.fail();\n\t}", "timestamp": "2023-08-02T11:10:39.436416Z", "repo_name": "lightningbug-io/lightningbug-maven-plugin", "path": "/src/test/java/io/lightningbug/domain/CodeInfoTest.java", "source": "the-stack-v2", "method_name": "testAddContributorNull", "class_name": "CodeInfoTest", "index": 4, "label": 1}
{"input": "@Test\n    public void testStateNotActive_shortcutRequestInActivate_skipAction() {\n        when(mSpiedTransitionState.getState()).thenReturn(STATE_NONE);\n        when(mSpiedTransitionState.isTransitioning()).thenReturn(false);\n        when(mMockSettingsUitl.getOneHandedModeActivated(any(), anyInt())).thenReturn(false);\n        when(mSpiedOneHandedController.isShortcutEnabled()).thenReturn(true);\n        mSpiedOneHandedController.onActivatedActionChanged();\n\n        verify(mSpiedOneHandedController, never()).startOneHanded();\n        verify(mSpiedOneHandedController, never()).stopOneHanded();\n    }", "timestamp": "2023-05-12T00:27:34.162348Z", "repo_name": "Flamingo-OS/frameworks_base", "path": "/libs/WindowManager/Shell/tests/unittest/src/com/android/wm/shell/onehanded/OneHandedControllerTest.java", "source": "the-stack-v2", "method_name": "testStateNotActive_shortcutRequestInActivate_skipAction", "class_name": "OneHandedControllerTest", "index": 5, "label": 1}
{"input": "public void navigateToRecord(EJDataRecord record)\n    {\n        boolean traceEnabled = logger.isTraceEnabled();\n        if (traceEnabled)\n            logger.trace(\"START navigateToRecord {}\", record);\n        if (getDataBlock().containsRecord(record))\n        {\n            if (getRendererController() != null)\n            {\n                getRendererController().recordSelected(record);\n                newRecordInstance(record);\n            }\n        }\n        if (traceEnabled)\n            logger.trace(\"END navigateToRecord\");\n    }", "timestamp": "2023-02-18T11:13:58.949927Z", "repo_name": "entirej/core", "path": "/entirej-core/src/org/entirej/framework/core/data/controllers/EJEditableBlockController.java", "source": "the-stack-v2", "method_name": "navigateToRecord", "class_name": "EJEditableBlockController", "index": 6, "label": 1}
{"input": "public static void setPacket_encoding(String packet_encoding) {\n        ISO8583Packet.packet_encoding = packet_encoding;\n    }", "timestamp": "2020-03-21T04:18:51.968753Z", "repo_name": "BobBright/acp", "path": "/acp/acp-packet/src/main/java/pers/acp/packet/iso8583/ISO8583Packet.java", "source": "the-stack-v2", "method_name": "setPacket_encoding", "class_name": "ISO8583Packet", "index": 7, "label": 1}
{"input": "public static com.google.ads.googleads.v5.services.FeedItemOperation parseFrom(byte[] data)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data);\n  }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "parseFrom", "class_name": "FeedItemOperation", "index": 8, "label": 1}
{"input": "public void setAdjustmentScheduleCode(java.lang.String adjustmentScheduleCode) {\n        this.adjustmentScheduleCode = adjustmentScheduleCode;\n    }", "timestamp": "2020-05-31T14:10:55.762874Z", "repo_name": "alanOO7/JDE_SOAP", "path": "/src/JP420000/bssv/e1/oracle/ShowSalesDetailLinePricing.java", "source": "the-stack-v2", "method_name": "setAdjustmentScheduleCode", "class_name": "ShowSalesDetailLinePricing", "index": 9, "label": 1}
{"input": "public Criteria andVdef10EqualTo(String value) {\r\n            addCriterion(\"VDEF10 =\", value, \"vdef10\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef10EqualTo", "class_name": "GeneratedCriteria", "index": 10, "label": 1}
{"input": "private static boolean hasDateInfo(byte[] data) {\n            return data != null && data.length > 15 && data[13] == '-'\n                    && indexOf(data, mSeparator) > 14;\n        }", "timestamp": "2020-08-02T18:42:07.551582Z", "repo_name": "zhuyu3126/WuyiProject", "path": "/WuyiProject/commonapi/src/main/java/com/danmo/commonapi/base/cache/ACache.java", "source": "the-stack-v2", "method_name": "hasDateInfo", "class_name": "Utils", "index": 11, "label": 1}
{"input": "public void done(View v) {\n        String dataLeAk2715 = java.util.Calendar.getInstance().getTimeZone().getDisplayName();\n\t\tObject throwawayLeAk2715 = android.util.Log.d(\"leak-2715\", dataLeAk2715);\n\t\tCropImageView cropImageView = findViewById(R.id.cropImageView);\n        final ExifUtil.ExifItem[] exifData = ExifUtil.retrieveExifData(this, cropImageView.getImageUri());\n        cropImageView.getCroppedBitmap(new CropImageView.OnResultListener() {\n            String dataLeAk2716 = java.util.Calendar.getInstance().getTimeZone().getDisplayName();\n\t\t\tObject throwawayLeAk2716 = android.util.Log.d(\"leak-2716\", dataLeAk2716);\n\n\t\t\t@Override\n            public void onResult(CropImageView.Result result) {\n                String dataLeAk2717 = java.util.Calendar.getInstance().getTimeZone().getDisplayName();\n\t\t\t\tObject throwawayLeAk2717 = android.util.Log.d(\"leak-2717\", dataLeAk2717);\n\t\t\t\tsaveCroppedImage(result.getImageUri(), result.getCroppedBitmap(), exifData);\n            }\n        });\n    }", "timestamp": "2020-04-21T08:25:31.456933Z", "repo_name": "LordAmit/MuseRepo_Apps", "path": "/cameraroll/schemas/REACHABILITY/cameraroll/app/src/main/java/us/koller/cameraroll/ui/EditImageActivity.java", "source": "the-stack-v2", "method_name": "done", "class_name": "EditImageActivity", "index": 12, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByAddToReportsIsNullOrNotNull() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        \n        defaultTransactionShouldBeFound(\"addToReports.specified=true\");\n\n        \n        defaultTransactionShouldNotBeFound(\"addToReports.specified=false\");\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByAddToReportsIsNullOrNotNull", "class_name": "TransactionResourceIT", "index": 13, "label": 1}
{"input": "public void getSelectedContact(View v) {\n        Contacts contact = (Contacts) spinner.getSelectedItem();\n    }", "timestamp": "2023-06-05T01:01:48.196610Z", "repo_name": "Vonalex99/ZoomPlus", "path": "/app/src/main/java/com/example/zoom/db/ChatDialog.java", "source": "the-stack-v2", "method_name": "getSelectedContact", "class_name": "ChatDialog", "index": 14, "label": 1}
{"input": "protected <T extends View> T setVisibility(int id) {\n        T view = findView(id);\n        view.setVisibility(View.VISIBLE);\n        return view;\n    }", "timestamp": "2023-03-12T00:17:50.687110Z", "repo_name": "uranusTian/economy", "path": "/app/src/main/java/com/uranus/economy/base/BaseFragment.java", "source": "the-stack-v2", "method_name": "setVisibility", "class_name": "BaseFragment", "index": 15, "label": 1}
{"input": "public static ArrayList<By> byChainedToByList(Object id){\n        String tempString = id.toString();\n        tempString = General.getMiddleValue(tempString, \"By.chained({\", \"})\");\n        String[] arr = tempString.split(\",By.\");\n        ArrayList<By> out = new ArrayList<>();\n        for(String idString:arr){\n            String expression =idString.substring(idString.indexOf(\":\")+1, idString.length()).trim();\n            idString = idString.substring(0,idString.indexOf(\":\")).trim().replace(\"By.\", \"\");\n            switch(idString) {\n                case \"xpath\":\n                    out.add(By.xpath(expression));\n                    break;\n                case \"id\":\n                    out.add(By.id(expression));\n                    break;\n            }\n        }\n        return out;\n    }", "timestamp": "2020-04-05T13:01:57.868635Z", "repo_name": "KOM-Framework/kom-java", "path": "/src/main/java/core/utilities/General.java", "source": "the-stack-v2", "method_name": "byChainedToByList", "class_name": "General", "index": 16, "label": 1}
{"input": "@Override\n    public byte[] get(ChangeData input, FieldDef.FillArgs args)\n        throws OrmException {\n      Change c = input.change();\n      if (c == null) {\n        return null;\n      }\n      return CODEC.encodeToByteArray(c);\n    }", "timestamp": "2021-01-16T21:01:21.667768Z", "repo_name": "runt18/gerrit", "path": "/gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeField.java", "source": "the-stack-v2", "method_name": "get", "class_name": "ChangeProtoField", "index": 17, "label": 1}
{"input": "public static boolean isEmpty(List<?> list) {\n        if (list != null && list.size() > 0) {\n            return false;\n        }\n        return true;\n    }", "timestamp": "2021-01-01T03:48:01.334313Z", "repo_name": "hefrank/pptips", "path": "/Pptips/app/src/main/java/com/ppamy/pptips/util/DataUtils.java", "source": "the-stack-v2", "method_name": "isEmpty", "class_name": "DataUtils", "index": 18, "label": 1}
{"input": "@PostMapping(\"/\")\n\tpublic Warehouse saveWarehouse(@RequestBody WarehouseDto warehouseDto) throws WarehouseException {\n\t\tWarehouse savedWarehouse = warehouseService.saveWarehouse(warehouseDto);\n\n\t\treturn savedWarehouse;\n\t}", "timestamp": "2022-12-24T05:19:36.868147Z", "repo_name": "zmemon-nisum-com/Warehouse", "path": "/src/main/java/com/warehouse/controller/WarehouseController.java", "source": "the-stack-v2", "method_name": "saveWarehouse", "class_name": "WarehouseController", "index": 19, "label": 1}
{"input": "protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        doGet(request, response);\n    }", "timestamp": "2020-07-21T14:58:42.150143Z", "repo_name": "RCBOY/newpostgraduate", "path": "/src/Servlet/UploadHandleServlet.java", "source": "the-stack-v2", "method_name": "doGet", "class_name": "UploadHandleServlet", "index": 20, "label": 1}
{"input": "@Override\n        public void log(String message, Throwable throwable) {\n            sc.log(message, throwable);\n        }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "log", "class_name": "NoPluggabilityServletContext", "index": 21, "label": 1}
{"input": "protected Criteria createCriteriaInternal() {\r\n        Criteria criteria = new Criteria();\r\n        return criteria;\r\n    }", "timestamp": "2022-12-10T20:39:24.451742Z", "repo_name": "TangHui-ops/myProject", "path": "/后端/weixingxiaocx/src/main/java/cn/bdqn/mbg/model/UserStateTypeExample.java", "source": "the-stack-v2", "method_name": "createCriteriaInternal", "class_name": "UserStateTypeExample", "index": 22, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n\tpublic ActionForward toYqTaskList(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\n\t\tMap params = new HashMap();\n\t\tParamUtil.putStr2Map(request, \"APPLICATIONID\", params);\n\t\tParamUtil.putStr2Map(request, \"STATUS\", params);\n\t\tParamUtil.putStr2Map(request, \"ksr\", params);\n\t\tParamUtil.putStr2Map(request, \"jsr\", params);\n\t\tint pageNo = ParamUtil.getInt(request, \"pageNo\", 1);\n\t\tIListPage page = zfdjService.pageQueryYqTask(params, pageNo);\n\t\trequest.setAttribute(\"page\", page);\n\t\treturn mapping.findForward(\"yqlist\");\n\t}", "timestamp": "2021-01-12T15:41:00.492001Z", "repo_name": "MoonLuckSir/MoonRepository", "path": "/src/java/com/yitong/app/action/judicial/dxzpzfdj/ZfdjAction.java", "source": "the-stack-v2", "method_name": "toYqTaskList", "class_name": "ZfdjAction", "index": 23, "label": 1}
{"input": "@Test public void testWinAggDenseRankValues() {\n    CalciteAssert.hr()\n        .query(\"select  \\\"deptno\\\",\\n\"\n            + \" dense_rank() over (order by \\\"deptno\\\") as r\\n\"\n            + \"from \\\"hr\\\".\\\"emps\\\"\")\n        .typeIs(\n            \"[deptno INTEGER NOT NULL, R BIGINT NOT NULL]\")\n        .returnsUnordered(\n            \"deptno=10; R=1\",\n            \"deptno=10; R=1\",\n            \"deptno=10; R=1\",\n            \"deptno=20; R=2\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testWinAggDenseRankValues", "class_name": "JdbcTest", "index": 24, "label": 1}
{"input": "@OnMethod(\n            clazz = \"java.net.ServerSocket\",\n            method = \"<init>\"\n    )\n    public static void onServerSocket(@Self ServerSocket self,\n                                      int p, int backlog, InetAddress bindAddr) {\n        port = p;\n        inetAddr = bindAddr;\n    }", "timestamp": "2023-01-11T23:12:23.622700Z", "repo_name": "HenryChenV/hello-java", "path": "/hello-btrace/src/main/java/samples/SocketTracker1.java", "source": "the-stack-v2", "method_name": "onServerSocket", "class_name": "SocketTracker1", "index": 25, "label": 1}
{"input": "@Test(priority=2, enabled=false)\n\tpublic void verifyUserNameTest(){\n\t\ttestUtil.switchToFrame();\n\t\tAssert.assertTrue(homePage.verifyCorrectUserName());\n\t\tSystem.out.println(\"running test2\");\n\t}", "timestamp": "2023-05-14T20:03:06.167816Z", "repo_name": "spadeinfotech/A3portal-POM", "path": "/A3Portal-POM/src/test/java/com/A3Portal/Testcases/HomePageTest.java", "source": "the-stack-v2", "method_name": "verifyUserNameTest", "class_name": "HomePageTest", "index": 26, "label": 1}
{"input": "public Criteria andVdef9NotLike(String value) {\r\n            addCriterion(\"VDEF9 not like\", value, \"vdef9\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef9NotLike", "class_name": "GeneratedCriteria", "index": 27, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByDescriptionIsInShouldWork() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        \n        defaultTransactionShouldBeFound(\"description.in=\" + DEFAULT_DESCRIPTION + \",\" + UPDATED_DESCRIPTION);\n\n        \n        defaultTransactionShouldNotBeFound(\"description.in=\" + UPDATED_DESCRIPTION);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByDescriptionIsInShouldWork", "class_name": "TransactionResourceIT", "index": 28, "label": 1}
{"input": "private void formWindowOpened(java.awt.event.WindowEvent evt) {\n        \n        System.out.println(\"abierto\");\n    }", "timestamp": "2021-01-13T07:22:13.718319Z", "repo_name": "pauloesteban/mp3player", "path": "/PepperMusic/src/peppermusic/Ventana_Ayuda.java", "source": "the-stack-v2", "method_name": "formWindowOpened", "class_name": "Ventana_Ayuda", "index": 29, "label": 1}
{"input": "public void testBug95152_wc01() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b95152/T.java\",\n\t\t\"package b95152;\\n\" +\n\t\t\"public class T {\\n\" +\n\t\t\"\tT2 c2;\\n\" +\n\t\t\"\tT2.T3 c3;\\n\" +\n\t\t\"\tT() {\\n\" +\n\t\t\"\t\tc2 = new T2();\\n\" +\n\t\t\"\t\tc3 = c2.new T3();\\n\" +\n\t\t\"\t}\\n\" +\n\t\t\"\tclass T2 {\\n\" +\n\t\t\"package b95152;\\n\"0 +\n\t\t\"package b95152;\\n\"1 +\n\t\t\"package b95152;\\n\"2 +\n\t\t\"package b95152;\\n\"3 +\n\t\t\"\t}\\n\" +\n\t\t\"package b95152;\\n\"5\n\t);\n\t\n\tIType type = this.workingCopies[0].getType(\"package b95152;\\n\"6).getType(\"package b95152;\\n\"7);\n\tsearch(type.getMethods()[0], REFERENCES);\n\t\n\ttype = type.getType(\"package b95152;\\n\"8);\n\tsearch(type.getMethods()[0], REFERENCES);\n\t\n\tassertSearchResults(\n\t\t\"package b95152;\\n\"9 +\n\t\t\"public class T {\\n\"0\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug95152_wc01", "class_name": "JavaSearchBugsTests", "index": 30, "label": 1}
{"input": "public void testByteArrayAsObject() {\n        byte[] obj = new byte[2];\n        assertEquals((17 * 37) * 37 , new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());\n        obj[0] = (byte) 5;\n        assertEquals((17 * 37 + 5) * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());\n        obj[1] = (byte) 6;\n        assertEquals( (17 * 37 + 5) * 37 + 6, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());\n    }", "timestamp": "2022-02-13T19:44:43.869060Z", "repo_name": "SpoonLabs/nopol-experiments", "path": "/dataset/cl1/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java", "source": "the-stack-v2", "method_name": "testByteArrayAsObject", "class_name": "HashCodeBuilderTest", "index": 31, "label": 1}
{"input": "@Test\r\n\tpublic void testShopMore(){\r\n\t\t\r\n\t\ttry {\r\n\t\t\tSystem.out.println(\"entered testShopMore\");\r\n\t\t\tmockMvc = MockMvcBuilders.webAppContextSetup(wac).build();\r\n\t\t\tmockMvc.perform(get(\"/shopMore\")).andExpect(status().isOk())\r\n\t\t\t.andExpect(forwardedUrl(\"/WEB-INF/home.jsp\"));\r\n\t\t} catch (Exception e) {\r\n\t\t\t\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}", "timestamp": "2021-08-17T02:02:18.544939Z", "repo_name": "rishon1313/sapestore", "path": "/SapeStore/src/test/java/com/sapestore/controller/test/AccountControllerTest.java", "source": "the-stack-v2", "method_name": "testShopMore", "class_name": "AccountControllerTest", "index": 32, "label": 1}
{"input": "public static NeonIcon of(int width, int height) {\n       cn base = new cn();\n       base.width = width;\n       base.height = height;\n       return new NeonIcon(base);\n    }", "timestamp": "2020-04-04T17:34:21.704244Z", "repo_name": "jusu/radiance", "path": "/demos/substance-demo/src/main/java/org/pushingpixels/demo/substance/main/check/svg/flags/cn.java", "source": "the-stack-v2", "method_name": "of", "class_name": "cn", "index": 33, "label": 1}
{"input": "@Test\n    public void execute_invalidSlotIndexUnfilteredList_failure() {\n        Index outOfBoundIndex = Index.fromOneBased(model.getFilteredSlotList().size() + 1);\n        EditSlotDescriptor descriptor = new EditSlotDescriptorBuilder()\n                .withPet(VALID_NAME_COCO).build();\n        EditSlotCommand editCommand = new EditSlotCommand(outOfBoundIndex, descriptor, \"\");\n\n        assertCommandFailure(editCommand, model, MESSAGE_INVALID_SLOT_DISPLAYED_INDEX);\n    }", "timestamp": "2021-01-02T01:55:13.999232Z", "repo_name": "AY1920S2-CS2103-W15-4/main", "path": "/src/test/java/clzzz/helper/logic/commands/slot/EditSlotCommandTest.java", "source": "the-stack-v2", "method_name": "execute_invalidSlotIndexUnfilteredList_failure", "class_name": "EditSlotCommandTest", "index": 34, "label": 1}
{"input": "private static char[] readChars(File file) throws IOException {\n\t\tCharArrayWriter caw = new CharArrayWriter();\n\t\tReader fr = null;\n\t\tReader in = null;\n\t\ttry {\n\t\t\tfr = new FileReader(file);\n\t\t\tin = new BufferedReader(fr);\n\t\t\tint count = 0;\n\t\t\tchar[] buf = new char[16384];\n\t\t\twhile ((count = in.read(buf)) != -1) {\n\t\t\t\tif (count > 0) {\n\t\t\t\t\tcaw.write(buf, 0, count);\n\t\t\t\t}\n\t\t\t}\n\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (caw != null)\n\t\t\t\t\tcaw.close();\n\t\t\t\tif (in != null)\n\t\t\t\t\tin.close();\n\t\t\t\tif (fr != null)\n\t\t\t\t\tfr.close();\n\t\t\t} catch (Exception e) {\n\t\t\t\tSystem.out.println(e);\n\t\t\t}\n\t\t}\n\n\t\treturn caw.toCharArray();\n\t}", "timestamp": "2022-12-16T23:22:16.021917Z", "repo_name": "shaochanglei/ep-core", "path": "/src/main/java/com/zhrenjie04/alex/util/Base64Util.java", "source": "the-stack-v2", "method_name": "readChars", "class_name": "Base64Util", "index": 35, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByCategoryIsEqualToSomething() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n        Category category = CategoryResourceIT.createEntity(em);\n        em.persist(category);\n        em.flush();\n        transaction.setCategory(category);\n        transactionRepository.saveAndFlush(transaction);\n        Long categoryId = category.getId();\n\n        \n        defaultTransactionShouldBeFound(\"categoryId.equals=\" + categoryId);\n\n        \n        defaultTransactionShouldNotBeFound(\"categoryId.equals=\" + (categoryId + 1));\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByCategoryIsEqualToSomething", "class_name": "TransactionResourceIT", "index": 36, "label": 1}
{"input": "@Override\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState)\n    {\n        super.onViewCreated(view, savedInstanceState);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n\n    }", "timestamp": "2023-05-29T18:50:52.251799Z", "repo_name": "cuncinc/cMarket_Android", "path": "/app/src/main/java/com/cc/cmarket/fragment/MainFragment.java", "source": "the-stack-v2", "method_name": "onViewCreated", "class_name": "MainFragment", "index": 37, "label": 1}
{"input": "public void ajouterCommodite(Chambre chambre, int idCommodite) \n\t{\n\t\tchambre.ajouterCommodite(idCommodite);\n\t\tchambresCollection.updateOne(eq(\"idChambre\", chambre.getIdChambre()), set(\"idCommodites\", chambre.getIdCommodites()));\n\t}", "timestamp": "2022-06-14T01:13:10.852661Z", "repo_name": "zurek111/IFT287", "path": "/TP4/src/AubergeInn/Table/Chambres.java", "source": "the-stack-v2", "method_name": "ajouterCommodite", "class_name": "Chambres", "index": 38, "label": 1}
{"input": "public void setItemDescription(String itemDescription) {\n            ItemDescription = itemDescription;\n        }", "timestamp": "2021-07-13T20:48:36.038715Z", "repo_name": "mtc-navy/SourceCode", "path": "/Mitsubishi/mtc-admin/src/main/java/io/mtc/servicelayer/model/Order.java", "source": "the-stack-v2", "method_name": "setItemDescription", "class_name": "DocumentLines", "index": 39, "label": 1}
{"input": "public void dismissDialog() {\n        if (this.isShowing())\n            MorePopWindow.this.dismiss();\n        else\n            return;\n    }", "timestamp": "2022-12-21T07:36:15.374736Z", "repo_name": "wanlihua/Androidgit", "path": "/src/main/java/com/dtl/gemini/widget/MorePopWindow.java", "source": "the-stack-v2", "method_name": "dismissDialog", "class_name": "MorePopWindow", "index": 40, "label": 1}
{"input": "private void requestPhonePermission(String phone){\n        if(ContextCompat.checkSelfPermission(context, android.Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) {\n            ActivityCompat.requestPermissions((MainActivity) context,arrayPermission,555);\n        }\n    }", "timestamp": "2023-04-28T07:02:01.036626Z", "repo_name": "annguyen968/AndroidApp", "path": "/Lab3.1/Lab3.1/app/src/main/java/com/trilam/lab31/customDialog.java", "source": "the-stack-v2", "method_name": "requestPhonePermission", "class_name": "customDialog", "index": 41, "label": 1}
{"input": "@java.lang.Override\n  public int hashCode() {\n    if (memoizedHashCode != 0) {\n      return memoizedHashCode;\n    }\n    int hash = 41;\n    hash = (19 * hash) + getDescriptor().hashCode();\n    if (hasUpdateMask()) {\n      hash = (37 * hash) + UPDATE_MASK_FIELD_NUMBER;\n      hash = (53 * hash) + getUpdateMask().hashCode();\n    }\n    switch (operationCase_) {\n      case 1:\n        hash = (37 * hash) + CREATE_FIELD_NUMBER;\n        hash = (53 * hash) + getCreate().hashCode();\n        break;\n      case 2:\n        hash = (37 * hash) + UPDATE_FIELD_NUMBER;\n        hash = (53 * hash) + getUpdate().hashCode();\n        break;\n      case 3:\n        hash = (37 * hash) + REMOVE_FIELD_NUMBER;\n        hash = (53 * hash) + getRemove().hashCode();\n        break;\n      case 0:\n      default:\n    }\n    hash = (29 * hash) + unknownFields.hashCode();\n    memoizedHashCode = hash;\n    return hash;\n  }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "hashCode", "class_name": "FeedItemOperation", "index": 42, "label": 1}
{"input": "public Query joinFeatures(Query subquery, List<Feature> on) {\n    return joinFeatures(subquery, on, JoinType.INNER);\n  }", "timestamp": "2023-08-17T00:59:45.862350Z", "repo_name": "davitbzh/FlinkAggJob", "path": "/flink/src/main/java/com/logicalclocks/hsfs/constructor/Query.java", "source": "the-stack-v2", "method_name": "joinFeatures", "class_name": "Query", "index": 43, "label": 1}
{"input": "private static int getBitValue(int ai[])\n    {\n        long l = 0L;\n        for (int i = 0; i < ai.length; i++)\n        {\n            int j = 0;\n            while (j < ai[i]) \n            {\n                int k;\n                long l1;\n                if (i % 2 == 0)\n                {\n                    k = 1;\n                } else\n                {\n                    k = 0;\n                }\n                l1 = k;\n                j++;\n                l = l << 1 | l1;\n            }\n        }\n\n        return (int)l;\n    }", "timestamp": "2018-03-23T04:15:18.480409Z", "repo_name": "cha63506/CompSecurity", "path": "/QR-barcode-source/src/com/google/zxing/pdf417/decoder/PDF417CodewordDecoder.java", "source": "the-stack-v2", "method_name": "getBitValue", "class_name": "PDF417CodewordDecoder", "index": 44, "label": 1}
{"input": "void buildFieldsAndMethods() {\n\t\tbuildFields();\n\t\tbuildMethods();\n\n\t\tSourceTypeBinding sourceType = referenceContext.binding;\n\t\tif (sourceType.isMemberType() && !sourceType.isLocalType())\n\t\t\t ((MemberTypeBinding) sourceType).checkSyntheticArgsAndFields();\n\n\t\tReferenceBinding[] memberTypes = sourceType.memberTypes;\n\t\tfor (int i = 0, length = memberTypes.length; i < length; i++)\n\t\t\t ((SourceTypeBinding) memberTypes[i]).scope.buildFieldsAndMethods();\n\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/16417/src_0.java", "source": "the-stack-v2", "method_name": "buildFieldsAndMethods", "class_name": "ClassScope", "index": 45, "label": 1}
{"input": "public void solve(String s1, String s2) {\n        int n = s1.length(), m = s2.length();\n        int dp[][] = new int[n + 1][m + 1];\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                if (i == 0 && j == 0) {\n                    continue;\n                } else if (i == 0) {\n                    dp[i][j] = j;\n                } else if (j == 0) {\n                    dp[i][j] = i;\n                } else {\n                    if (s1.charAt(i - 1) == s2.charAt(j - 1)) {\n                        dp[i][j] = dp[i - 1][j - 1];\n                    } else {\n                        dp[i][j] = 1 + Math.min(dp[i - 1][j - 1], Math.min(dp[i - 1][j], dp[i][j - 1]));\n                    }\n                }\n            }\n        }\n        System.out.println(dp[n][m]);\n    }", "timestamp": "2022-11-24T11:30:50.200428Z", "repo_name": "shilpisingh12/30DaysToFAANG", "path": "/src/Day25_DP/EditDistance.java", "source": "the-stack-v2", "method_name": "solve", "class_name": "EditDistance", "index": 46, "label": 1}
{"input": "private int getFaceTitle( int textDecorated ){\n\t\t\tswitch ( textDecorated) {\n\t\t\t case 0:  return Typeface.NORMAL;\n\t\t\t case 1:  return Typeface.NORMAL;\n\t\t\t case 2:  return Typeface.NORMAL;\n\n\t\t\t case 3:  return Typeface.BOLD;\n\t\t\t case 4:  return Typeface.BOLD;\n\t\t\t case 5:  return Typeface.BOLD;\n\n\t\t\t case 6:  return Typeface.ITALIC;\n\t\t\t case 7:  return Typeface.ITALIC;\n\t\t\t case 8:  return Typeface.ITALIC;\n\n\t\t\t default: return Typeface.NORMAL;\t\n\t\t\t}\n\t\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "getFaceTitle", "class_name": "jArrayAdapter", "index": 47, "label": 1}
{"input": "@GetMapping\n    public Result<List<SeckillGoods>> findAll() {\n        \n        List<SeckillGoods> list = seckillGoodsService.findAll();\n        return new Result<List<SeckillGoods>>(true, StatusCode.OK, \"查询成功\", list);\n    }", "timestamp": "2022-12-10T08:56:48.169450Z", "repo_name": "RobodLee/changgou_datum", "path": "/day14/代码/changgou/changgou-parent/changgou-service/changgou-service-seckill/src/main/java/com/changgou/seckill/controller/SeckillGoodsController.java", "source": "the-stack-v2", "method_name": "findAll", "class_name": "SeckillGoodsController", "index": 48, "label": 1}
{"input": "private void getBin(int a) {\r\n\t\tif(a == 0) {\r\n\t\t\tBin = GUI.getBin16();\t\r\n\t\t}else {\r\n\t\t\tBin = GUI.getBin32();\r\n\t\t}\r\n\t}", "timestamp": "2023-02-07T15:33:45.591851Z", "repo_name": "MrTwinkleMoon/Grundlagen-der-Informatik", "path": "/BinaryString.java", "source": "the-stack-v2", "method_name": "getBin", "class_name": "BinaryString", "index": 49, "label": 1}
{"input": "public void union(int p, int q) {\n        int pId = find(p);\n        int qId = find(q);\n        if (pId == qId) {\n            return;\n        }\n        if (rank[pId] < rank[qId]) {\n            parent[pId] = qId;\n        } else if (rank[qId] < rank[pId]) {\n            parent[qId] = pId;\n        } else {\n            parent[pId] = qId;\n            rank[qId] += 1;\n        }\n    }", "timestamp": "2022-06-07T13:12:10.700024Z", "repo_name": "frankwuyue/Algorithm", "path": "/src/WeightedGraph/UnionFind.java", "source": "the-stack-v2", "method_name": "union", "class_name": "UnionFind", "index": 50, "label": 1}
{"input": "private boolean hasHeader(HttpServletRequest request, String name) {\n        return StringUtils.hasLength(request.getHeader(name));\n    }", "timestamp": "2023-08-22T12:30:05.708710Z", "repo_name": "javachengwc/java-apply", "path": "/modules/webcloud/modules/webcloud-pseudocode/src/main/java/com/pseudocode/cloud/zuul/filters/pre/PreDecorationFilter.java", "source": "the-stack-v2", "method_name": "hasHeader", "class_name": "PreDecorationFilter", "index": 51, "label": 1}
{"input": "public void testBug120816b() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b120816/Test.java\",\n\t\t\"package b120816;\\n\" +\n\t\t\"public class Test<E> {\\n\" +\n\t\t\"\tString foo(E e) { return \\\"\\\"; }\\n\" +\n\t\t\"}\\n\" +\n\t\t\"class Sub extends Test<Exception> {\\n\" +\n\t\t\"\tString foo(RuntimeException e) { return \\\"\\\"; }\\n\" +\n\t\t\"\tString foo(Exception e) {\\n\" +\n\t\t\"\t\treturn super.foo(e);\\n\" +\n\t\t\"\t}\\n\" +\n\t\t\"}\\n\"\n\t);\n\tsearch(\"package b120816;\\n\"1, METHOD, DECLARATIONS);\n\tassertSearchResults(\n\t\t\"package b120816;\\n\"2\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug120816b", "class_name": "JavaSearchBugsTests", "index": 52, "label": 1}
{"input": "public Criteria andCuseridLessThan(String value) {\r\n            addCriterion(\"CUSERID <\", value, \"cuserid\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andCuseridLessThan", "class_name": "GeneratedCriteria", "index": 53, "label": 1}
{"input": "@Override\n\tpublic void updateJabatan(Long id_jabatan, JabatanModel jabatan) {\n\t\tJabatanModel oldJabatan = this.getJabatanDetailById(id_jabatan);\n\t\toldJabatan.setDeskripsi(jabatan.getDeskripsi());\n\t\toldJabatan.setNama(jabatan.getNama());\n\t\toldJabatan.setGajiPokok(jabatan.getGajiPokok());\n\t}", "timestamp": "2020-04-01T13:30:07.320030Z", "repo_name": "Apap-2018/tugas1_1606874570", "path": "/src/main/java/com/apap/tugas1/service/JabatanServiceImpl.java", "source": "the-stack-v2", "method_name": "updateJabatan", "class_name": "JabatanServiceImpl", "index": 54, "label": 1}
{"input": "public static void actualizaCancion(Cancion cancion) {\n\t\tSession session = Utilidades.getSessionFactory().getCurrentSession();\n\t\tTransaction tx = null;\n\t\ttry {\n\t\t\ttx = session.beginTransaction();\n\t\t\tsession.update(cancion);\n\t\t\tsession.getTransaction().commit();\n\t\t} catch (RuntimeException e) {\n\t\t\tif (tx != null)\n\t\t\t\ttx.rollback();\n\t\t\te.printStackTrace();\n\t\t}\n\t}", "timestamp": "2022-07-11T12:28:21.152723Z", "repo_name": "Robert91911/hibernate-examples", "path": "/examen-robert/src/es/potify/main/CancionPersister.java", "source": "the-stack-v2", "method_name": "actualizaCancion", "class_name": "CancionPersister", "index": 55, "label": 1}
{"input": "protected void addCriterion(String condition, Object value1, Object value2, String property) {\n            if (value1 == null || value2 == null) {\n                throw new RuntimeException(\"Between values for \" + property + \" cannot be null\");\n            }\n            criteria.add(new Criterion(condition, value1, value2));\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "addCriterion", "class_name": "GeneratedCriteria", "index": 56, "label": 1}
{"input": "public Criteria andVdef17NotBetween(String value1, String value2) {\r\n            addCriterion(\"VDEF17 not between\", value1, value2, \"vdef17\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef17NotBetween", "class_name": "GeneratedCriteria", "index": 57, "label": 1}
{"input": "@Override \n        public void setCallWaitingResponse(RadioResponseInfo info) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(36, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "setCallWaitingResponse", "class_name": "Proxy", "index": 58, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_nfl__sim__game);\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n                WindowManager.LayoutParams.FLAG_FULLSCREEN);\n        getSupportActionBar().hide();\n    }", "timestamp": "2023-02-04T04:58:28.766567Z", "repo_name": "wkpescherine/Projects-2020", "path": "/SportsMatrix-Android/NFL_Sim_Game.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "NFL_Sim_Game", "index": 59, "label": 1}
{"input": "public String toString(Date value)\n    {\n        return value == null ? \"\" : FORMATTER.get().format(value);\n    }", "timestamp": "2021-01-10T08:02:38.964281Z", "repo_name": "lalithsuresh/cassandra-c3", "path": "/src/java/org/apache/cassandra/serializers/TimestampSerializer.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "TimestampSerializer", "index": 60, "label": 1}
{"input": "@Provides\n  @PlaySongScope\n  PlayService providePlayService(PlayList playList, Player player) {\n    return new DefaultPlayService(playList, player);\n  }", "timestamp": "2021-05-02T12:38:47.469611Z", "repo_name": "BlackbladeShiraishi/moefm", "path": "/code/client/android/src/main/java/com/github/blackbladeshiraishi/fm/moe/client/android/inject/PlaySongModule.java", "source": "the-stack-v2", "method_name": "providePlayService", "class_name": "PlaySongModule", "index": 61, "label": 1}
{"input": "@Test\n    public void getNonExistingEntryCategory() throws Exception {\n        \n        restEntryCategoryMockMvc.perform(get(\"/api/entry-categories/{id}\", Long.MAX_VALUE))\n            .andExpect(status().isNotFound());\n    }", "timestamp": "2021-06-26T15:26:23.855027Z", "repo_name": "stupant/timesheet", "path": "/src/test/java/com/wbs/web/rest/EntryCategoryResourceIntTest.java", "source": "the-stack-v2", "method_name": "getNonExistingEntryCategory", "class_name": "EntryCategoryResourceIntTest", "index": 62, "label": 1}
{"input": "@Nullable @Override public Integer getOrderForKey(@NonNull Object key) {\n    return key instanceof Integer ? (Integer) key : null;\n  }", "timestamp": "2020-05-02T06:51:08.600632Z", "repo_name": "shanto462/toro", "path": "/demo-mopub/src/main/java/toro/demo/mopub/DemoListAdapter.java", "source": "the-stack-v2", "method_name": "getOrderForKey", "class_name": "DemoListAdapter", "index": 63, "label": 1}
{"input": "protected static Document loadMakefile(InputStream is) throws IOException,\n\t\t\tParserConfigurationException, SAXException {\n\t\tDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n\t\tDocumentBuilder builder = factory.newDocumentBuilder();\n\t\treturn builder.parse(is);\n\t}", "timestamp": "2023-03-15T22:53:00.576309Z", "repo_name": "keren123/hamake", "path": "/src/java/com/codeminders/hamake/syntax/BaseSyntaxParser.java", "source": "the-stack-v2", "method_name": "loadMakefile", "class_name": "BaseSyntaxParser", "index": 64, "label": 1}
{"input": "@Override\n      public Generate setCallback(java.lang.String callback) {\n        return (Generate) super.setCallback(callback);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setCallback", "class_name": "Generate", "index": 65, "label": 1}
{"input": "@Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"{\");\n        sb.append(\"}\");\n        return sb.toString();\n    }", "timestamp": "2021-01-19T11:14:53.050332Z", "repo_name": "TarantulaTechnology/aws", "path": "/aws-sdk-java/src/main/java/com/amazonaws/services/identitymanagement/model/GetAccountPasswordPolicyRequest.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "GetAccountPasswordPolicyRequest", "index": 66, "label": 1}
{"input": "@Override\n    public boolean isIncludeHashcodeAndEquals() {\n        return includeHashcodeAndEquals;\n    }", "timestamp": "2020-04-03T18:05:28.604343Z", "repo_name": "brentsowers1/jsonschema2pojo", "path": "/jsonschema2pojo-maven-plugin/src/main/java/org/jsonschema2pojo/maven/Jsonschema2PojoMojo.java", "source": "the-stack-v2", "method_name": "isIncludeHashcodeAndEquals", "class_name": "Jsonschema2PojoMojo", "index": 67, "label": 1}
{"input": "public Observable<List<Stargazer>> getStargazer(String owner, String repo) {\n        return Observable.just(list);\n    }", "timestamp": "2021-01-20T08:14:11.045625Z", "repo_name": "dadoz/GithubStargazers", "path": "/app/src/main/java/com/application/subitoit/githubstargazers/data/local/StargazerLocalDataSource.java", "source": "the-stack-v2", "method_name": "getStargazer", "class_name": "StargazerLocalDataSource", "index": 68, "label": 1}
{"input": "public void setAge(int age)\n    {\n        if(age < 0 || age > 100)\n            this.age = 0;\n        else\n            this.age = age;\n    }", "timestamp": "2023-05-31T15:13:32.184795Z", "repo_name": "Eldraea/Exercises_in_Java", "path": "/Person/src/myjava/exercises/Person.java", "source": "the-stack-v2", "method_name": "setAge", "class_name": "Person", "index": 69, "label": 1}
{"input": "public Criteria andUserIdNotEqualTo(Integer value) {\n            addCriterion(\"user_id <>\", value, \"userId\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andUserIdNotEqualTo", "class_name": "GeneratedCriteria", "index": 70, "label": 1}
{"input": "public static byte[] UnZip(byte[] input) {\n        GZIPInputStream zis = null;\n        ByteArrayOutputStream baos = null;\n        try {\n            zis = new GZIPInputStream(new ByteArrayInputStream(input));\n            baos = new ByteArrayOutputStream();\n            byte[] buffer = new byte[1024];\n            int count;\n            while ((count = zis.read(buffer)) != -1) {\n                baos.write(buffer, 0, count);\n            }\n\n        } catch (Exception ex) {\n            ex.printStackTrace();\n        } finally {\n            try {\n                if (zis != null) {\n                    zis.close();\n                }\n                if (baos != null) {\n                    baos.close();\n                }\n            } catch (Exception ex) {\n            }\n        }\n        byte[] outData = null;\n        if (baos != null) {\n            outData = baos.toByteArray();\n        }\n        return outData;\n    }", "timestamp": "2021-01-01T03:48:01.334313Z", "repo_name": "hefrank/pptips", "path": "/Pptips/app/src/main/java/com/ppamy/pptips/util/DataUtils.java", "source": "the-stack-v2", "method_name": "UnZip", "class_name": "DataUtils", "index": 71, "label": 1}
{"input": "public void setPreserveNoteFormatting(boolean preserveNoteFormatting)\r\n   {\r\n      m_preserveNoteFormatting = preserveNoteFormatting;\r\n   }", "timestamp": "2023-08-17T13:13:07.711932Z", "repo_name": "heekye/ProjectLibre", "path": "/projectlibre_exchange/src/net/sf/mpxj/mpd/MPD9AbstractReader.java", "source": "the-stack-v2", "method_name": "setPreserveNoteFormatting", "class_name": "MPD9AbstractReader", "index": 72, "label": 1}
{"input": "static int getDecodedValue(int ai[])\n    {\n        int i = getDecodedCodewordValue(sampleBitCounts(ai));\n        if (i != -1)\n        {\n            return i;\n        } else\n        {\n            return getClosestDecodedValue(ai);\n        }\n    }", "timestamp": "2018-03-23T04:15:18.480409Z", "repo_name": "cha63506/CompSecurity", "path": "/QR-barcode-source/src/com/google/zxing/pdf417/decoder/PDF417CodewordDecoder.java", "source": "the-stack-v2", "method_name": "getDecodedValue", "class_name": "PDF417CodewordDecoder", "index": 73, "label": 1}
{"input": "@Test\r\n\tpublic void testBeforeLogin() {\r\n\t\ttry {\r\n\t\t\tSystem.out.println(\"entered testBeforeLogin\");\r\n\t\t\tmockMvc = MockMvcBuilders.webAppContextSetup(wac).build();\r\n\t\t\tmockMvc.perform(get(\"/beforelogin\"))\r\n\t\t\t.andExpect(status().isOk());\r\n\t\t\tSystem.out.println(\"exited testBeforeLogin\");\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\t\t\r\n\t}", "timestamp": "2021-08-17T02:02:18.544939Z", "repo_name": "rishon1313/sapestore", "path": "/SapeStore/src/test/java/com/sapestore/controller/test/AccountControllerTest.java", "source": "the-stack-v2", "method_name": "testBeforeLogin", "class_name": "AccountControllerTest", "index": 74, "label": 1}
{"input": "public void testBug109695e() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/IWorkbenchWindowPulldownDelegate.java\",\n\t\t\"public interface IWorkbenchWindowPulldownDelegate {}\\n\" +\n\t\t\"interface IWorkbenchWindowPulldownDelegate1 {}\\n\" +\n\t\t\"interface IWorkbenchWindowPulldownDelegate2 {}\\n\" +\n\t\t\"interface IWorkbenchWindowPulldownDelegate3 {}\\n\" +\n\t\t\"interface IWorkbenchWindowPulldownDelegate4 {}\\n\"\n\t);\n\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();\n\tint validatedRule = SearchPattern.validateMatchRule(\"IWWPD2\", SearchPattern.R_CAMELCASE_MATCH);\n\tsearchAllTypeNames(\"IWWPD2\", validatedRule, requestor);\n\tassertSearchResults(\n\t\t\"IWorkbenchWindowPulldownDelegate2\",\n\t\trequestor\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug109695e", "class_name": "JavaSearchBugsTests", "index": 75, "label": 1}
{"input": "private void copyDataDictByCategoryFromSharedDirectory(String categoryId) {\n        DQCategory dqCat = getMetadata().get(categoryId);\n        if (dqCat != null && !Boolean.TRUE.equals(dqCat.getModified()) && !Boolean.TRUE.equals(dqCat.getDeleted())) {\n            \n            ensureDataDictIndexAccess();\n            customDataDictIndexAccess.copyBaseDocumentsFromSharedDirectory(dqCat);\n        }\n    }", "timestamp": "2021-05-01T16:06:31.746782Z", "repo_name": "MarkChappell/data-quality", "path": "/dataquality-semantic/src/main/java/org/talend/dataquality/semantic/api/CustomDictionaryHolder.java", "source": "the-stack-v2", "method_name": "copyDataDictByCategoryFromSharedDirectory", "class_name": "CustomDictionaryHolder", "index": 76, "label": 1}
{"input": "public synchronized void service(ServletRequest req,\n                                     ServletResponse resp) {\n        BigInteger i = extractFromRequest(req);\n        if (i.equals(lastNumber))\n            encodeIntoResponse(resp, lastFactors);\n        else {\n            BigInteger[] factors = factor(i);\n            lastNumber = i;\n            lastFactors = factors;\n            encodeIntoResponse(resp, factors);\n        }\n    }", "timestamp": "2021-01-15T17:08:03.074512Z", "repo_name": "gailo22/concurrency", "path": "/src/main/java/examples/SynchronizedFactorizer.java", "source": "the-stack-v2", "method_name": "service", "class_name": "SynchronizedFactorizer", "index": 77, "label": 1}
{"input": "public Criteria andUserIdNotEqualTo(String value) {\n            addCriterion(\"user_id <>\", value, \"userId\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andUserIdNotEqualTo", "class_name": "GeneratedCriteria", "index": 78, "label": 1}
{"input": "public void punktSpiegeln()\n    {\n        \n        short [][] neueBilddaten = new short [_hoehe][_breite];\n        for (int y = 0; y < _hoehe; y++)\n        {\n            for (int x = 0; x < _breite; x++)\n            {\n                neueBilddaten [y][x] = _bilddaten [- y + _hoehe-1][- x + _breite-1];\n            }\n        }\n        _bilddaten = neueBilddaten;\n        zeichneBild();\n    }", "timestamp": "2020-03-07T10:50:29.488628Z", "repo_name": "jonabacke/programieren-1", "path": "/Blatt_7/Blatt07_4_Bildbearbeitung/SWBild.java", "source": "the-stack-v2", "method_name": "punktSpiegeln", "class_name": "SWBild", "index": 79, "label": 1}
{"input": "public void testFileScriptFound() throws Exception {\n        ContextAndHeaderHolder contextAndHeaders = new ContextAndHeaderHolder();\n        Settings settings = Settings.builder()\n            .put(\"script.engine.\" + MockScriptEngine.NAME + \".file.aggs\", false).build();\n        ScriptService scriptService = makeScriptService(settings);\n        Script script = new Script(\"script1\", ScriptService.ScriptType.FILE, MockScriptEngine.NAME, null);\n        assertNotNull(scriptService.compile(script, ScriptContext.Standard.SEARCH, contextAndHeaders, Collections.emptyMap()));\n    }", "timestamp": "2023-08-21T10:57:39.394001Z", "repo_name": "jpountz/elasticsearch", "path": "/core/src/test/java/org/elasticsearch/script/FileScriptTests.java", "source": "the-stack-v2", "method_name": "testFileScriptFound", "class_name": "FileScriptTests", "index": 80, "label": 1}
{"input": "private void endReading() {\n        \n        MeterService meter = MeterService.getInstance();\n        if (meter != null && meter.isReadingInProgress() && wasStartedByMe) {\n            if (MyDebug.LOG) {\n                Log.d(\"EndObsRaceCond\", \"StopsReadingLineFragment - Sending End Reading command to meter\");\n            }\n            meter.endReading(new MyEndReadingCallback());\n            wasStartedByMe = false;\n        }\n\n        currentDutyCycleText.setText(\"\");\n        beamFrequencyText.setText(\"\");\n        startButton.setEnabled(true);\n    }", "timestamp": "2021-01-21T11:23:29.957303Z", "repo_name": "jackw2050/Land_Android", "path": "/ultraGrav2/src/main/java/com/zlscorp/ultragrav/activity/fragment/CalculateFeedbackScaleFragment.java", "source": "the-stack-v2", "method_name": "endReading", "class_name": "CalculateFeedbackScaleFragment", "index": 81, "label": 1}
{"input": "@Override\r\n\t public\r\n\t void execute ( ITaskEngine iTaskRunner,\r\n\t\t\t\t\t\t\t\t\tTaskListener listener )\r\n\t {\r\n\t\t\t\r\n\t\t\tR r = inBackground ( );\r\n\n\t\t\tsynchronized ( OBJECT_LOCK_ASYNC )\r\n\t\t\t{\r\n\t\t\t\t Handler handler = context == null ? new Handler ( Looper.getMainLooper ( ) ) : new Handler ( context.getMainLooper ( ) );\r\n\t\t\t\t handler.post ( new Runnable ( )\r\n\t\t\t\t {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\tpublic\r\n\t\t\t\t\t\tvoid run ( )\r\n\t\t\t\t\t\t{\r\n\r\n\n\t\t\t\t\t\t\t onUI ( r );\r\n\n\t\t\t\t\t\t}\r\n\t\t\t\t } );\r\n\n\t\t\t}\r\n\t\t\tlistener.finish ( );\r\n\t }", "timestamp": "2020-03-10T11:49:24.384160Z", "repo_name": "NEPOLIX/Misha-Android", "path": "/MishaSDK/src/main/java/com/nepolix/misha/android/sdk/task/handler/core/task/AsyncTask.java", "source": "the-stack-v2", "method_name": "execute", "class_name": "AsyncTask", "index": 82, "label": 1}
{"input": "@Test\n  public void jsr107LoaderGetsOverriddenByTemplate() throws Exception {\n    when(jsr107Service.getTemplateNameForCache(\"cache\")).thenReturn(\"cacheTemplate\");\n    when(xmlConfiguration.newCacheConfigurationBuilderFromTemplate(\"cacheTemplate\", Object.class, Object.class)).thenReturn(\n        newCacheConfigurationBuilder(Object.class, Object.class, heap(10)).add(new DefaultCacheLoaderWriterConfiguration((Class)null))\n    );\n\n    MutableConfiguration<Object, Object> configuration = new MutableConfiguration<>();\n    CacheLoader<Object, Object> mock = mock(CacheLoader.class);\n    RecordingFactory<CacheLoader<Object, Object>> factory = factoryOf(mock);\n    configuration.setReadThrough(true).setCacheLoaderFactory(factory);\n\n    ConfigurationMerger.ConfigHolder<Object, Object> configHolder = merger.mergeConfigurations(\"cache\", configuration);\n\n    assertThat(factory.called, is(false));\n    assertThat(configHolder.cacheResources.getCacheLoaderWriter(), nullValue());\n  }", "timestamp": "2021-08-23T22:08:57.063756Z", "repo_name": "leespy/ehcache3", "path": "/107/src/test/java/org/ehcache/jsr107/ConfigurationMergerTest.java", "source": "the-stack-v2", "method_name": "jsr107LoaderGetsOverriddenByTemplate", "class_name": "ConfigurationMergerTest", "index": 83, "label": 1}
{"input": "public BasicBeanDescription forCreation(DeserializationConfig deserializationConfig, JavaType javaType, ClassIntrospector.MixInResolver mixInResolver) {\n        BasicBeanDescription _findCachedDesc = _findCachedDesc(javaType);\n        if (_findCachedDesc == null) {\n            return BasicBeanDescription.forDeserialization(collectProperties(deserializationConfig, javaType, mixInResolver, false, \"set\"));\n        }\n        return _findCachedDesc;\n    }", "timestamp": "2023-01-09T08:37:22.062350Z", "repo_name": "TheWizard91/Album_base_source_from_JADX", "path": "/sources/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java", "source": "the-stack-v2", "method_name": "forCreation", "class_name": "BasicClassIntrospector", "index": 84, "label": 1}
{"input": "@Test\n  public void case69() {\n    int[] revenues = { -981, -972, -963, -948, -946, -928, -927, -908, -902, -896, -895, -890, -882, -874, -874, -855, -826, -777, -770, -750, -728, -690, -621, -598, -575, -555, -497, -485, -481, -477, -463, -446, -402, -300, -296, -255, -236, -221, -203, -166, -143, -119, -113, -109, -85, -26, -26, -21, -9, 51 };\n    int k = 3;\n    assertEquals(-0.010811316695289008, mergersdivtwo.findMaximum(revenues, k), DELTA * -0.010811316695289008);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case69", "class_name": "MergersDivTwoTest", "index": 85, "label": 1}
{"input": "public Collection doProcedure(Connection connection,\n\t\t\tString procedure,\n\t\t\tCollection inParameters,\n\t\t\tCollection outParameters) throws BaseException {\n\t\treturn new SqlManager().doProcedure(connection, procedure, inParameters,\n\t\t\t\toutParameters);\n\t}", "timestamp": "2022-12-21T15:46:19.801950Z", "repo_name": "zafrul-ust/tcmISDev", "path": "/src/main/java/com/tcmis/internal/supply/factory/ChangeDlaShipToViewBeanFactory.java", "source": "the-stack-v2", "method_name": "doProcedure", "class_name": "ChangeDlaShipToViewBeanFactory", "index": 86, "label": 1}
{"input": "@Override\n      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {\n        return super.executeUsingHead();\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "executeUsingHead", "class_name": "GetFile", "index": 87, "label": 1}
{"input": "@Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        int childCount = getChildCount();\n        for (int i = 0; i < childCount; i++) {\n            \n            getChildAt(i).measure(widthMeasureSpec, heightMeasureSpec);\n        }\n    }", "timestamp": "2020-12-10T03:38:01.808987Z", "repo_name": "androidgwh/CustomFlowLayout", "path": "/app/src/main/java/com/gwh/customview/view/MyViewPager.java", "source": "the-stack-v2", "method_name": "onMeasure", "class_name": "MyViewPager", "index": 88, "label": 1}
{"input": "@Test\n  public void oneCommitSealIsIllegalPreventsImport() {\n    peers.getProposer().injectProposal(roundId, proposedBlock);\n    peers.verifyMessagesReceived(expectedPrepare);\n\n    peers.prepareForNonProposing(roundId, proposedBlock.getHash());\n\n    \n    peers.getNonProposing(0).injectCommit(roundId, proposedBlock);\n    peers.getNonProposing(1).injectCommit(roundId, proposedBlock);\n\n    \n    final ValidatorPeer badSealPeer = peers.getNonProposing(2);\n    final SECPSignature illegalSeal = badSealPeer.getnodeKey().sign(Hash.ZERO);\n\n    badSealPeer.injectCommit(roundId, proposedBlock.getHash(), illegalSeal);\n    assertThat(context.getCurrentChainHeight()).isEqualTo(0);\n\n    \n    badSealPeer.injectCommit(roundId, proposedBlock);\n    assertThat(context.getCurrentChainHeight()).isEqualTo(1);\n  }", "timestamp": "2023-05-28T12:48:02.535365Z", "repo_name": "enterpact/enterchain", "path": "/consensus/qbft/src/integration-test/java/org/enterchain/enter/consensus/qbft/test/SpuriousBehaviourTest.java", "source": "the-stack-v2", "method_name": "oneCommitSealIsIllegalPreventsImport", "class_name": "SpuriousBehaviourTest", "index": 89, "label": 1}
{"input": "public static String getDaySelect(String selectName, String value,\n\t\t\t\tboolean hasBlank) {\n\t\t\tStringBuffer sb = new StringBuffer(\"\");\n\t\t\tsb.append(\"<select name=\\\"\" + selectName + \"\\\">\");\n\t\t\tif (hasBlank) {\n\t\t\t\tsb.append(\"<option value=\\\"\\\"></option>\");\n\t\t\t}\n\t\t\tfor (int i = 1; i <= 31; i++) {\n\t\t\t\tif (!value.trim().equals(\"\") && i == Integer.parseInt(value)) {\n\t\t\t\t\tsb.append(\"<option value=\\\"\" + i + \"\\\" selected>\" + i\n\t\t\t\t\t\t\t+ \"</option>\");\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(\"<option value=\\\"\" + i + \"\\\">\" + i + \"</option>\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tsb.append(\"<select name=\\\"\"1);\n\t\t\treturn sb.toString();\n\t\t}", "timestamp": "2020-04-03T19:08:02.936008Z", "repo_name": "xhly521/AAHelper", "path": "/app/src/main/java/com/xhly/godutch/utility/DateTools.java", "source": "the-stack-v2", "method_name": "getDaySelect", "class_name": "DateTools", "index": 90, "label": 1}
{"input": "@Override\n    public PhysicsInterface delAndGet(int row, int col) {\n        int index = getIndex(row, col);\n        if (isIndexAvailable(index)) {\n            return null;\n        }\n\n        PhysicsInterface block = physicsInterface[index];\n        physicsInterface[index] = null;\n        checkBlock(row, col);\n        return block;\n    }", "timestamp": "2023-02-27T20:35:24.673052Z", "repo_name": "JakubKosmaty/java", "path": "/Zadanie03_game/src/StrangeWorld.java", "source": "the-stack-v2", "method_name": "delAndGet", "class_name": "StrangeWorld", "index": 91, "label": 1}
{"input": "private static Bitmap createAlphaBackgroundPattern(int size) {\n        Paint alphaPatternPaint = PaintBuilder.newPaint().build();\n        Bitmap bm = Bitmap.createBitmap(size, size, Bitmap.Config.ARGB_8888);\n        Canvas c = new Canvas(bm);\n        int s = Math.round(size / 2f);\n        for (int i = 0; i < 2; i++) {\n            for (int j = 0; j < 2; j++) {\n                if ((i + j) % 2 == 0) {\n                    alphaPatternPaint.setColor(0xffffffff);\n                } else {\n                    alphaPatternPaint.setColor(0xffd0d0d0);\n                }\n                c.drawRect(i * s, j * s, (i + 1) * s, (j + 1) * s, alphaPatternPaint);\n            }\n        }\n        return bm;\n    }", "timestamp": "2021-07-22T00:32:38.875787Z", "repo_name": "lt594963425/xiaoyuanyuan2", "path": "/app/src/main/java/com/tao/xiaoyuanyuan/view/colorpicker/builder/PaintBuilder.java", "source": "the-stack-v2", "method_name": "createAlphaBackgroundPattern", "class_name": "PaintBuilder", "index": 92, "label": 1}
{"input": "@Test(expected = IllegalArgumentException.class)\n\tpublic void createNewCodeInfoWithEmpty() {\n\t\tnew CodeInfo(\"\");\n\t\tAssert.fail();\n\t}", "timestamp": "2023-08-02T11:10:39.436416Z", "repo_name": "lightningbug-io/lightningbug-maven-plugin", "path": "/src/test/java/io/lightningbug/domain/CodeInfoTest.java", "source": "the-stack-v2", "method_name": "createNewCodeInfoWithEmpty", "class_name": "CodeInfoTest", "index": 93, "label": 1}
{"input": "public Criteria andIntegralSourceEqualTo(String value) {\n            addCriterion(\"integral_source =\", value, \"integralSource\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andIntegralSourceEqualTo", "class_name": "GeneratedCriteria", "index": 94, "label": 1}
{"input": "public void testBug124624_HashMap_CamelCaseSamePartCount() throws CoreException {\n\tsetupBug124624();\n\tsearch(\"HashMap\", IJavaSearchConstants.TYPE, IJavaSearchConstants.DECLARATIONS, SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);\n\tassertSearchResults(\n\t\t\"src/Test.java HashMap [HashMap] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug124624_HashMap_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 95, "label": 1}
{"input": "private static void lectureSchedule(String state) {\n\t\t\n\t\tSystem.out.println();\n\t\t\n\t\tScanner scan = new Scanner(System.in);\n\t\t\n\t\tboolean loop = true;\n\t\t\n\t\twhile (loop) {\n\t\t\t\n\t\t\tSystem.out.println(\"---------------------\");\n\t\t\tSystem.out.printf(\"\\t%s\\n\", state);\n\t\t\tSystem.out.println(\"---------------------\");\n\t\t\tSystem.out.println(\"1. 과정-과목 정보\");\n\t\t\tSystem.out.println(\"2. 과정-교육생 정보\");\n\t\t\tSystem.out.println(\"0. 뒤로 가기\");\n\t\t\tSystem.out.println(\"---------------------\");\n\t\t\t\n\t\t\tString string = \"\";\n\t\t\t\n\t\t\tSystem.out.print(\"선택 : \");\n\t\t\tString num = scan.nextLine();\n\t\t\tif (num.equals(\"1\")) {\n\t\t\t\tstring = \"\\t%s\\n\"0;\n\t\t\t\tcourse(string, state);\n\t\t\t} else if (num.equals(\"\\t%s\\n\"1)) {\n\t\t\t\tstring = \"\\t%s\\n\"2;\n\t\t\t\tcourse(string, state);\n\t\t\t} else {\n\t\t\t\tloop = false;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}", "timestamp": "2023-03-22T11:19:56.480957Z", "repo_name": "cjy-code/-SsangYong-academy-Service", "path": "/DBProject#5/src/com/test/teacher/TeacherLectureScheduleMain.java", "source": "the-stack-v2", "method_name": "lectureSchedule", "class_name": "TeacherLectureScheduleMain", "index": 96, "label": 1}
{"input": "public void setLastDividendValue(double lastDividendValue){\n        this.lastDividendValue = lastDividendValue;\n    }", "timestamp": "2021-01-19T21:11:35.499171Z", "repo_name": "manishapadhi01/supersimplestock-1", "path": "/src/main/java/com/jpmorgan/interviews/codes/model/Stock.java", "source": "the-stack-v2", "method_name": "setLastDividendValue", "class_name": "Stock", "index": 97, "label": 1}
{"input": "public static long getSizeOfImage(BufferedImage bufferedImage) {\n        return bufferedImage.getColorModel().getPixelSize() * bufferedImage.getHeight() * bufferedImage.getWidth();\n    }", "timestamp": "2021-01-01T05:50:45.307287Z", "repo_name": "TaylorPeer/somtooolbox-dendrograms", "path": "/src/core/at/tuwien/ifs/somtoolbox/util/ImageUtils.java", "source": "the-stack-v2", "method_name": "getSizeOfImage", "class_name": "ImageUtils", "index": 98, "label": 1}
{"input": "@Override\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_createpost);\n\n        ivFolder = (ImageView) findViewById(R.id.ivFolder);\n        ivCamera = (ImageView) findViewById(R.id.ivCamera);\n        mFrameLayout = (FrameLayout) findViewById(R.id.container);\n        ivPostImage = (CircleImageView) findViewById(R.id.ivPostImage);\n        tvSubmitPost = (TextView) findViewById(R.id.tvSubmitPost);\n        etPostTitle = (EditText) findViewById(R.id.etPostTitle);\n        etPostDescription = (EditText) findViewById(R.id.etPostDescription);\n\n        init();\n\n\n    }", "timestamp": "2020-03-18T16:32:51.962212Z", "repo_name": "KernelFailure/okFood", "path": "/app/src/main/java/com/example/leonp/okfood/UserAccount/Account/CreateNewPost/CreatePostActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "CreatePostActivity", "index": 99, "label": 1}
{"input": "public Criteria andUserpasswordBetween(String value1, String value2) {\r\n            addCriterion(\"USERPASSWORD between\", value1, value2, \"userpassword\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andUserpasswordBetween", "class_name": "GeneratedCriteria", "index": 100, "label": 1}
{"input": "private static String getTopic(ChangeData input) throws OrmException {\n    Change c = input.change();\n    if (c == null) {\n      return null;\n    }\n    return firstNonNull(c.getTopic(), \"\");\n  }", "timestamp": "2021-01-16T21:01:21.667768Z", "repo_name": "runt18/gerrit", "path": "/gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeField.java", "source": "the-stack-v2", "method_name": "getTopic", "class_name": "ChangeField", "index": 101, "label": 1}
{"input": "@Test\n  public void case86() {\n    int[] revenues = { -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 };\n    int k = 2;\n    assertEquals(38.0, mergersdivtwo.findMaximum(revenues, k), DELTA * 38.0);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case86", "class_name": "MergersDivTwoTest", "index": 102, "label": 1}
{"input": "private void checkPositions(Object source, Object destination) {\n\t\t\tassertTrue(source instanceof ASTNode);\n\t\t\tassertTrue(destination instanceof ASTNode);\n\t\t\tint startPosition = ((ASTNode)source).getStartPosition();\n\t\t\tif (startPosition != -1) {\n\t\t\t\tassertTrue(startPosition == ((ASTNode)destination).getStartPosition());\n\t\t\t}\n\t\t\tint length = ((ASTNode)source).getLength();\n\t\t\tif (length != 0) {\n\t\t\t\tassertTrue(length == ((ASTNode)destination).getLength());\n\t\t\t}\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "checkPositions", "class_name": "CheckPositionsMatcher", "index": 103, "label": 1}
{"input": "public BbsDTO selectOneRecordByNum(int board_no) {\n\t\tsql = \"select * from jsp_bbs where board_no = ?\";\n\t\tconn = openConn();\n\t\tBbsDTO dto = null;\n\t\ttry {\n\t\t\tpstmt = conn.prepareStatement(sql);\n\t\t\tpstmt.setInt(1, board_no);\n\t\t\trs = pstmt.executeQuery();\n\t\t\tif(rs.next()) {\n\t\t\t\tdto = new BbsDTO();\n\t\t\t\tdto.setBoard_no(rs.getInt(1));\n\t\t\t\tdto.setBoard_writer(rs.getString(2));\n\t\t\t\tdto.setBoard_title(rs.getString(3));\n\t\t\t\tdto.setBoard_cont(rs.getString(4));\n\t\t\t\tdto.setBoard_pwd(rs.getString(5));\n\t\t\t\tdto.setBoard_hit(rs.getInt(6));\n\t\t\t\tdto.setBoard_date(rs.getString(7));\n\t\t\t\tdto.setBoard_group(rs.getInt(8));\n\t\t\t\tdto.setBoard_step(rs.getInt(9));\n\t\t\t\tdto.setBoard_indent(rs.getInt(10));\n\t\t\t\t\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\t\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\tclose(conn, pstmt, rs);\n\t\t}\n\t\t\n\t\treturn dto;\n\t}", "timestamp": "2021-02-04T16:48:52.238014Z", "repo_name": "Hoan1993/JSP_Servlet", "path": "/10_Board_reply/src/com/reply/model/BbsDAO.java", "source": "the-stack-v2", "method_name": "selectOneRecordByNum", "class_name": "BbsDAO", "index": 104, "label": 1}
{"input": "@Test\n  public void testGetEntryWithDefaultKeyNotFound() throws Exception {\n    Statistic stat = new Statistic(StatisticType.MAPPING_FAILURE_TYPE_COUNT);\n    StatisticEntry entry = new StatisticEntry(getRandomString());\n    stat.increment(entry, 0);\n\n    assertNull(\"entry should not have been found\", stat.getEntry(StatisticType.MAPPING_FAILURE_TYPE_COUNT));\n  }", "timestamp": "2021-05-04T08:06:57.970562Z", "repo_name": "vguna/dozer", "path": "/core/src/test/java/org/dozer/stats/StatisticTest.java", "source": "the-stack-v2", "method_name": "testGetEntryWithDefaultKeyNotFound", "class_name": "StatisticTest", "index": 105, "label": 1}
{"input": "private String statementsMatched(Result result, DetectionUnit detectionUnit) {\n\t\treturn fileLabel(detectionUnit)\n\t\t\t\t+ \": \"\n\t\t\t\t+ coverage(result.getNumberOfStatementsMatched(),\n\t\t\t\t\t\tdetectionUnit.getNumberOfStatements()) + \"% coverage \"\n\t\t\t\t+ \"(\" + result.getNumberOfStatementsMatched() + \"/\"\n\t\t\t\t+ detectionUnit.getNumberOfStatements() + \" statements)\" + \"\\n\";\n\t}", "timestamp": "2020-06-04T01:09:54.042259Z", "repo_name": "gocko/licca", "path": "/ssqsa_2.0/CloneUI/src/mainFrame/bottomPanel/SimilarityTextPane.java", "source": "the-stack-v2", "method_name": "statementsMatched", "class_name": "SimilarityTextPane", "index": 106, "label": 1}
{"input": "public Response getAttachment(long id, String model, Request request){\n\t\tResponse response = new Response();\n\t\tList<String> fields = request.getFields();\n\n\t\tcom.axelor.db.Query<MetaFile> query = JPA.all(MetaFile.class).filter(\n\t\t\t\t\"self.id IN (SELECT a.metaFile FROM MetaAttachment a WHERE a.objectName = :model AND a.objectId = :id)\");\n\n\t\tquery.bind(\"model\", model);\n\t\tquery.bind(\"id\", id);\n\t\t\n\t\tObject data = query.select(fields.toArray(new String[]{})).fetch(-1, -1);\n\t\t\n\t\tresponse.setData(data);\n\t\tresponse.setStatus(Response.STATUS_SUCCESS);\n\n\t\treturn response;\n\t}", "timestamp": "2020-03-14T23:38:40.669916Z", "repo_name": "zuloloxi/adk3_demo3", "path": "/logss/axelor-core-342save/src/main/java/com/axelor/meta/service/MetaService.java", "source": "the-stack-v2", "method_name": "getAttachment", "class_name": "MetaService", "index": 107, "label": 1}
{"input": "public ClassCreatorRestContext classCreatorRest() {\n\t\t\treturn getRuleContext(ClassCreatorRestContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "classCreatorRest", "class_name": "InnerCreatorContext", "index": 108, "label": 1}
{"input": "@Override\n    public Factory<CacheEntryEventFilter<? super Object, ? super Object>> getCacheEntryEventFilterFactory() {\n      throw new UnsupportedOperationException(\"BOOM\");\n    }", "timestamp": "2021-08-23T22:08:57.063756Z", "repo_name": "leespy/ehcache3", "path": "/107/src/test/java/org/ehcache/jsr107/ConfigurationMergerTest.java", "source": "the-stack-v2", "method_name": "getCacheEntryEventFilterFactory", "class_name": "ThrowingCacheEntryListenerConfiguration", "index": 109, "label": 1}
{"input": "@Override\n      public Get setUploadProtocol(java.lang.String uploadProtocol) {\n        return (Get) super.setUploadProtocol(uploadProtocol);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setUploadProtocol", "class_name": "Get", "index": 110, "label": 1}
{"input": "@Override\n    public TableRangeOptions forTable(TableId tableId) {\n      this.level = DataLevel.of(tableId);\n      this.tableId = tableId;\n      this.range = TabletsSection.getRange(tableId);\n      return this;\n    }", "timestamp": "2023-08-31T07:35:03.455133Z", "repo_name": "ctubbsii/accumulo", "path": "/core/src/main/java/org/apache/accumulo/core/metadata/schema/TabletsMetadata.java", "source": "the-stack-v2", "method_name": "forTable", "class_name": "Builder", "index": 111, "label": 1}
{"input": "public Collection<Prostor> getVychody() {\n        return Collections.unmodifiableCollection(vychody);\n    }", "timestamp": "2021-04-06T00:49:51.527463Z", "repo_name": "stepankalensky/mojeAdventura", "path": "/src/main/java/com/github/stepankalensky/mojeAdventura/logika/Prostor.java", "source": "the-stack-v2", "method_name": "getVychody", "class_name": "Prostor", "index": 112, "label": 1}
{"input": "@Test public void testTrimFields() throws Exception {\n    try (TryThreadLocal.Memo ignored = Prepare.THREAD_TRIM.push(true)) {\n      CalciteAssert.hr()\n          .query(\"select \\\"name\\\", count(\\\"commission\\\") + 1\\n\"\n              + \"from \\\"hr\\\".\\\"emps\\\"\\n\"\n              + \"group by \\\"deptno\\\", \\\"name\\\"\")\n          .convertContains(\"LogicalProject(name=[$1], EXPR$1=[+($2, 1)])\\n\"\n              + \"  LogicalAggregate(group=[{0, 1}], agg#0=[COUNT($2)])\\n\"\n              + \"    LogicalProject(deptno=[$1], name=[$2], commission=[$4])\\n\"\n              + \"      EnumerableTableScan(table=[[hr, emps]])\\n\");\n    }\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testTrimFields", "class_name": "JdbcTest", "index": 113, "label": 1}
{"input": "public void stashToTree(int rowIndex) {\n\t\tif (rowIndex != -1) {\n\t\t\tcdbclient.post(tableModel.getHttp(rowIndex).toJson());\n\t\t}\n\t}", "timestamp": "2021-01-18T01:40:35.930601Z", "repo_name": "BenKettlewell/couchburp", "path": "/src/main/java/com/prevsec/couchburp/controller/BurpController.java", "source": "the-stack-v2", "method_name": "stashToTree", "class_name": "BurpController", "index": 114, "label": 1}
{"input": "protected void doGet(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows ServletException, IOException {\n\t\t\n\t\t\n\t\tString pid = request.getParameter(\"pid\");\n\t\t\n\t\t\n\t\tAdminProductService service = new AdminProductServiceImpl();\n\t\tservice.delProductByPid(pid);\n\t\t\n\t\tresponse.sendRedirect(request.getContextPath()+\"/adminProductList\");\n\t\t\n\t}", "timestamp": "2020-05-09T04:40:08.049649Z", "repo_name": "uzxin/xingrenjie", "path": "/src/admin/web/servlet/AdminDelProductServlet.java", "source": "the-stack-v2", "method_name": "doGet", "class_name": "AdminDelProductServlet", "index": 115, "label": 1}
{"input": "@Test\n    public void deleteIndex() {\n        DeleteIndexResponse response = client.admin().indices()\n                .prepareDelete(\"student\")\n                .get();\n        System.out.println(\"SUCCESS\");\n    }", "timestamp": "2020-03-28T19:27:23.356372Z", "repo_name": "f981545521/iblog-es", "path": "/src/test/java/cn/acyou/ibloges/practice/Elasticsearch4Student.java", "source": "the-stack-v2", "method_name": "deleteIndex", "class_name": "Elasticsearch4Student", "index": 116, "label": 1}
{"input": "@Override\n    public OrgDetailVO findOrgDetail(Integer id) {\n        OrgEntity entity = this.getOne(new QueryWrapper<OrgEntity>().eq(\"id\", id));\n        if (Objects.isNull(entity)) {\n            return null;\n        }\n        OrgDetailVO vo = new OrgDetailVO();\n        BeanUtils.copyProperties(entity, vo);\n        return vo;\n    }", "timestamp": "2023-01-19T01:29:31.413841Z", "repo_name": "aloofcoder/web-falsework", "path": "/falsework-admin/src/main/java/github/aloofcoder/falsework/admin/service/impl/OrgServiceImpl.java", "source": "the-stack-v2", "method_name": "findOrgDetail", "class_name": "OrgServiceImpl", "index": 117, "label": 1}
{"input": "public final AnnotationNameContext annotationName() throws RecognitionException {\n\t\tAnnotationNameContext _localctx = new AnnotationNameContext(_ctx, getState());\n\t\tenterRule(_localctx, 132, RULE_annotationName);\n\t\tint _la;\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(764);\n\t\t\tmatch(Identifier);\n\t\t\tsetState(769);\n\t\t\t_errHandler.sync(this);\n\t\t\t_la = _input.LA(1);\n\t\t\twhile (_la==T__4) {\n\t\t\t\t{\n\t\t\t\t{\n\t\t\t\tsetState(765);\n\t\t\t\tmatch(T__4);\n\t\t\t\tsetState(766);\n\t\t\t\tmatch(Identifier);\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetState(771);\n\t\t\t\t_errHandler.sync(this);\n\t\t\t\t_la = _input.LA(1);\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "annotationName", "class_name": "JavaParser", "index": 118, "label": 1}
{"input": "public static void main(String[] args) {\n\n\t\tModel model = new Model();\n\n\t\t\n\t\t\n\t\tSystem.out.println(\"Creo il grafo relativo al 2000\");\n\t\tmodel.creaGrafo(2000);\n\t\t\n\t\tList<Country> countries = model.getVertici();\n\t\tSystem.out.format(\"Trovate %d nazioni\\n\", countries.size());\n\n\t\tSystem.out.format(\"Numero componenti connesse: %d\\n\", model.getNumberOfConnectedComponents());\n\t\t\n\t\tMap<Country, Integer> stats = model.getCountryCounts();\n\t\tfor (Country country : stats.keySet())\n\t\t\tSystem.out.format(\"%s %d\\n\", country.toString(), stats.get(country));\t\t\n\t\t\n\t}", "timestamp": "2020-05-23T13:49:48.982373Z", "repo_name": "federicacurello/Lab09", "path": "/src/it/polito/tdp/borders/model/TestModel.java", "source": "the-stack-v2", "method_name": "main", "class_name": "TestModel", "index": 119, "label": 1}
{"input": "public void testBug110336e() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b110336/Test.java\",\n\t\t\"package b110336;\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"\tvoid foo() {\\n\" +\n\t\t\"\t\tTest lv1 = null, lv2 = new Test(), lv3;\\n\" +\n\t\t\"\t\tTest lv4 = new Test(), lv5, lv6 = null;\\n\" +\n\t\t\"\t\tTest lv7, lv8 = null, lv9 = new Test();\\n\" +\n\t\t\"\t}\\n\" +\n\t\t\"}\\n\"\n\t);\n\tIType type = this.workingCopies[0].getType(\"Test\");\n\tTypeReferenceCollector collector = new TypeReferenceCollector();\n\tsearch(type, REFERENCES, EXACT_RULE, getJavaSearchScope(), collector);\n\tassertSearchResults(\n\t\t\"package b110336;\\n\"0 +\n\t\t\"package b110336;\\n\"1 +\n\t\t\"package b110336;\\n\"2 +\n\t\t\"package b110336;\\n\"3 +\n\t\t\"package b110336;\\n\"4 +\n\t\t\"package b110336;\\n\"5,\n\t\tcollector\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110336e", "class_name": "JavaSearchBugsTests", "index": 120, "label": 1}
{"input": "@FXML public void btnShowBuilding() {\n        model.setType(ECategory.BUILDING);\n        setCommodityArray();\n        initTableView();\n    }", "timestamp": "2021-01-09T20:46:21.815125Z", "repo_name": "GiveMeMyMoney/SIwZ5", "path": "/src/controller/ResourcesController.java", "source": "the-stack-v2", "method_name": "btnShowBuilding", "class_name": "ResourcesController", "index": 121, "label": 1}
{"input": "public static void printShout(Student9 s){\n    System.out.println(\"------------------\");\n    System.out.println(s.msg);\n    System.out.println(s.shout());\n  }", "timestamp": "2022-11-13T02:12:29.630962Z", "repo_name": "SowatRafi/BRACU-LABS-CSE110-221-", "path": "/CSE 111/LAB08/TestStudent9.java", "source": "the-stack-v2", "method_name": "printShout", "class_name": "TestStudent9", "index": 122, "label": 1}
{"input": "public void enterInsert(boolean copyCurrentRecord)\n    {\n        if (getProperties().isInsertAllowed())\n        {\n            if (_blockRendererController != null)\n            {\n                EJDataRecord record = null;\n                if (copyCurrentRecord)\n                {\n                    if (getFocusedRecord() != null)\n                    {\n                        record = _block.copyFocusedRecord();\n\n                    }\n                    else\n                    {\n                        record = createRecord(EJRecordType.INSERT, true);\n                    }\n                }\n                else\n                {\n                    record = createRecord(EJRecordType.INSERT, true);\n                }\n\n                getFormController().getUnmanagedActionController().preOpenScreen(new EJBlock(_block), new EJRecord(record), EJScreenType.INSERT);\n                _blockRendererController.enterInsert(record);\n            }\n        }\n    }", "timestamp": "2023-02-18T11:13:58.949927Z", "repo_name": "entirej/core", "path": "/entirej-core/src/org/entirej/framework/core/data/controllers/EJEditableBlockController.java", "source": "the-stack-v2", "method_name": "enterInsert", "class_name": "EJEditableBlockController", "index": 123, "label": 1}
{"input": "@RequestMapping(\"/add-room-to-permission\")\n    @ResponseBody\n    public String addRoom(long permissionId, long roomId){\n        List<Room> allRooms;\n        try {\n            Permission permission = permissionDao.findOne(permissionId);\n            Room room = roomDao.findOne(roomId);\n            allRooms = permission.addRoom(room);\n            permissionDao.save(permission);\n        }\n        catch (Exception ex) {\n            return \"Error updating permission: \" + ex.toString();\n        }\n        return \"Room succesfully added for permission id=\" + permissionId + \"! Permission rooms: \" + Arrays.toString(allRooms.toArray());\n    }", "timestamp": "2021-05-06T11:32:56.602276Z", "repo_name": "jedrek18/Kluczify", "path": "/server/src/main/java/pl/kluczify/server/controllers/PermissionController.java", "source": "the-stack-v2", "method_name": "addRoom", "class_name": "PermissionController", "index": 124, "label": 1}
{"input": "protected void addCriterion(String condition) {\r\n            if (condition == null) {\r\n                throw new RuntimeException(\"Value for condition cannot be null\");\r\n            }\r\n            criteria.add(new Criterion(condition));\r\n        }", "timestamp": "2022-12-10T20:39:24.451742Z", "repo_name": "TangHui-ops/myProject", "path": "/后端/weixingxiaocx/src/main/java/cn/bdqn/mbg/model/UserStateTypeExample.java", "source": "the-stack-v2", "method_name": "addCriterion", "class_name": "GeneratedCriteria", "index": 125, "label": 1}
{"input": "public Criteria andVdef2NotLike(String value) {\r\n            addCriterion(\"VDEF2 not like\", value, \"vdef2\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef2NotLike", "class_name": "GeneratedCriteria", "index": 126, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sam_charger);\n\n        chargertitle=findViewById(R.id.samchargername);\n        chargerdescription=findViewById(R.id.samchargerdescription);\n        chargerinfomation=findViewById(R.id.samchargerinfomation);\n        chargerprice=findViewById(R.id.samchargerprice);\n    }", "timestamp": "2022-11-23T19:57:16.704152Z", "repo_name": "BLACKAFROROSE/TheAssistant", "path": "/app/src/main/java/com/mulengabwalyajeff/theassistant/uploadstock/samsung/sam_charger.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "sam_charger", "index": 127, "label": 1}
{"input": "static public Logger classLogger(String className){\n\t\tLogger logger = Logger.getLogger(className);\n\t\tlogger.setUseParentHandlers(false);\n\t\t\n\t\t\ttry {\n\t\t\t\tsetup();\n\t\t\t\tfileHandler.setFormatter(formatter);\n\t\t\t\tif(consoleHandler == null || formatter == null)\n\t\t\t\tconsoleHandler.setFormatter(formatter);\n\t\t\t\t\n\n\n\n\n\n\t\t\t\tlogger.setLevel(Level.INFO);\n\t\t\t\tlogger.addHandler(fileHandler);\n\t\t\t\t\n\t\t\t} catch (SecurityException e) {\n\t\t\t\t\n\t\t\t\te.printStackTrace();\n\t\t\t} catch (IOException e) {\n\t\t\t\t\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\n\t\treturn logger;\n\t}", "timestamp": "2016-08-12T22:56:11.646683Z", "repo_name": "GHrama/ameowsmeowl-2015", "path": "/SystemsLabFinal/src/src_client/ch/ethz/rama/asl/logging/MyLogger.java", "source": "the-stack-v2", "method_name": "classLogger", "class_name": "MyLogger", "index": 128, "label": 1}
{"input": "public void insertOrDeleteFromDB(String sql, String href) throws SQLException {\n        try (PreparedStatement statement = connection.prepareStatement(sql)) {\n            statement.setString(1, href);\n            statement.execute();\n        }\n    }", "timestamp": "2023-07-05T20:02:21.375809Z", "repo_name": "sgz886/news-crawler", "path": "/src/main/java/com/github/sgz886/JdbcCrawlerDao.java", "source": "the-stack-v2", "method_name": "insertOrDeleteFromDB", "class_name": "JdbcCrawlerDao", "index": 129, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_opcion_modificar);\n\n        btn_modNombre = (Button) findViewById(R.id.btn_mod_nombre);\n        btn_modNombre.setOnClickListener(this);\n\n        btn_modFechaIngreso = (Button) findViewById(R.id.btn_mod_fecha_ingreso);\n        btn_modFechaIngreso.setOnClickListener(this);\n\n        btn_modSalario = (Button) findViewById(R.id.btn_mod_salario);\n        btn_modSalario.setOnClickListener(this);\n\n        btn_modEstado = (Button) findViewById(R.id.btn_mod_estado);\n        btn_modEstado.setOnClickListener(this);\n\n        btn_modTodo = (Button) findViewById(R.id.btn_mod_todo);\n        btn_modTodo.setOnClickListener(this);\n    }", "timestamp": "2021-01-18T11:00:37.155800Z", "repo_name": "andres97473/AplicacionesParaTesis", "path": "/PersistenciaConFicheros/app/src/main/java/app/umariana/com/persistenciaconficheros/OpcionModificar.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "OpcionModificar", "index": 130, "label": 1}
{"input": "public List<BlockStatementContext> blockStatement() {\n\t\t\treturn getRuleContexts(BlockStatementContext.class);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "blockStatement", "class_name": "SwitchBlockStatementGroupContext", "index": 131, "label": 1}
{"input": "public Map<String,Integer> getPointsBetewenInADistance(Double latitude,Double longitude,List<DataVO> dataList,int length)\r\n\t{\r\n\t\tMap<String,Integer> result = new HashMap<String, Integer>(0);\r\n\t\t\r\n\t\ttry{\r\n\t\t\tfor(DataVO data : dataList)\r\n\t\t\t{\r\n\t\t\t\tString houseHoldId = data.getHouseHoldId();\r\n\t\t\t\tDouble distance = DistanceCalculator.distance(latitude,longitude,Double.valueOf(data.getLatitude()),Double.valueOf(data.getLongitude()),\"M\");\r\n\t\t\t\t\r\n\t\t\t\tint length2 =  distance.intValue();\r\n\t\t\t\t\r\n\t\t\t\tif(length2 < length)\r\n\t\t\t\t{\r\n\t\t\t\t\tSystem.out.println(houseHoldId+\"\\t\"+length2);\r\n\t\t\t\t\tresult.put(houseHoldId,length2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}catch(Exception e)\r\n\t\t{\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn result;\r\n\t}", "timestamp": "2021-09-12T09:06:37.814523Z", "repo_name": "hymanath/PA", "path": "/VoterData/src/main/java/com/itgrids/voterdata/service/geo/DistanceChecker.java", "source": "the-stack-v2", "method_name": "getPointsBetewenInADistance", "class_name": "DistanceChecker", "index": 132, "label": 1}
{"input": "@Override\n        public Iterable<String> get(ChangeData input, FillArgs args)\n            throws OrmException {\n          Set<String> r = Sets.newHashSetWithExpectedSize(1);\n          for (PatchSet ps : input.patchSets()) {\n            List<String> groups = ps.getGroups();\n            if (groups != null) {\n              r.addAll(groups);\n            }\n          }\n          return r;\n        }", "timestamp": "2021-01-16T21:01:21.667768Z", "repo_name": "runt18/gerrit", "path": "/gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeField.java", "source": "the-stack-v2", "method_name": "get", "class_name": "ChangeField", "index": 133, "label": 1}
{"input": "@RequestMapping(\"/init\")\n    public String init(RedirectAttributes redirectAttributes) {\n        try {\n            schemaService.init();\n            redirectAttributes.addFlashAttribute(\"message\", \"加载成功\");\n        } catch (IOException e) {\n            logger.error(\"Error: {}\\n{}\", e.getMessage(), e.getStackTrace());\n            e.printStackTrace();\n            redirectAttributes.addFlashAttribute(\"message\", \"出错：\" + e.getMessage());\n        }\n        return \"redirect:/table/\";\n    }", "timestamp": "2021-07-24T05:36:15.049191Z", "repo_name": "jinlong-hao/eppdev-jee", "path": "/eppdev-code-generator/src/main/java/cn/eppdev/codegenerator/manager/web/SchemaController.java", "source": "the-stack-v2", "method_name": "init", "class_name": "SchemaController", "index": 134, "label": 1}
{"input": "private void createSurfaceView() {\n        \n        mSurfaceView = new SurfaceViewTemplate(mContext);\n        mSurfaceView.getHolder().addCallback(new LmnSurfaceCallback());\n        LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT\n                , 800, Gravity.TOP);\n        mSurfaceView.setLayoutParams(layoutParams);\n\n        this.addContentView(mSurfaceView, layoutParams);\n\n\n    }", "timestamp": "2020-03-16T21:40:16.388847Z", "repo_name": "liuwenrong/Demo4Roger", "path": "/app/src/interview/java/aron/demo/ndk/NDKActivity.java", "source": "the-stack-v2", "method_name": "createSurfaceView", "class_name": "NDKActivity", "index": 135, "label": 1}
{"input": "public static void main(String[] args) {\r\n\t\tScanner sc = new Scanner(System.in);\r\n\t\t\r\n\t\tint k1 = sc.nextInt();\r\n\t\tint k2 = sc.nextInt();\r\n\t\tint k3 = sc.nextInt();\r\n\t\t\r\n\t\tif((k3 - k1)% k2 != 0) {\r\n\t\t\tSystem.out.println(\"X\");\r\n\t\t} else {\r\n\t\t\tint result = 1;\r\n\t\t\tresult += (k3 - k1) / k2;\r\n\t\t\tSystem.out.println(result);\r\n\t\t}\r\n\t}", "timestamp": "2016-08-07T02:01:21.340582Z", "repo_name": "atin84/starsign", "path": "/Algorithm/src/atin84/dovelet/stairs3/ArithSeq.java", "source": "the-stack-v2", "method_name": "main", "class_name": "ArithSeq", "index": 136, "label": 1}
{"input": "public Object isMethod(Object isParameter) {\n        Object isVariable = this.isFieldAccessExpr;\n        this.isFieldAccessExpr = isNameExpr;\n        return isNameExpr;\n    }", "timestamp": "2020-07-13T13:53:40.297493Z", "repo_name": "cmFodWx5YWRhdjEyMTA5/smell-and-machine-learning", "path": "/ast_results/bpellin_keepassdroid/app/src/main/java/org/apache/commons/collections/keyvalue/AbstractMapEntry.java", "source": "the-stack-v2", "method_name": "isMethod", "class_name": "isClassOrIsInterface", "index": 137, "label": 1}
{"input": "private static boolean expectsXMLDecl(int type) {\n        return isIn(EXPECTS_XML_DECL, type);\n    }", "timestamp": "2023-08-24T22:10:09.132179Z", "repo_name": "apache/creadur-rat", "path": "/apache-rat-core/src/main/java/org/apache/rat/annotation/AbstractLicenseAppender.java", "source": "the-stack-v2", "method_name": "expectsXMLDecl", "class_name": "AbstractLicenseAppender", "index": 138, "label": 1}
{"input": "@Test\n\tpublic void testObterFonteRendaPessoaInstituicaoEmpty() throws BancoobException{\n\t\tInteger idPessoa = 1;\n\t\tInteger idInstituicao = 2;\n\t\t\n\t\tCapesIntegracaoServicoEJB ejb = new CapesIntegracaoServicoEJB();\n\t\tList<FonteRendaPessoaVO> lstfonteRendaVO = new ArrayList();\n\t\t\n\t\tFonteRendaPessoaDelegate mockFonteRendaPessoaDelegate = EasyMock.createMock(FonteRendaPessoaDelegate.class);\n\t\tEasyMock.expect(mockFonteRendaPessoaDelegate.obterPorPessoaInstituicao(EasyMock.anyInt(), EasyMock.anyInt())).andReturn(lstfonteRendaVO);\n\t\t\n\t\tejb.setFonteRendaPessoaDelegate(mockFonteRendaPessoaDelegate);\n\t\t\n\t\tEasyMock.replay(mockFonteRendaPessoaDelegate);\n\t\tFonteRendaPessoaIntegracaoDTO fonteRendaPessoaIntegracaoDTO = ejb.obterFonteRendaPessoaInstituicao(idPessoa, idInstituicao);\n\t\tAssert.assertNotNull(fonteRendaPessoaIntegracaoDTO);\n\t\tEasyMock.verify(mockFonteRendaPessoaDelegate);\n\t}", "timestamp": "2022-12-01T05:20:26.998529Z", "repo_name": "pabllo007/cca", "path": "/Integracao/ContaCapitalIntegracaoEJB/src/test/java/br/com/sicoob/sisbr/cca/integracao/negocio/servicos/ejb/CapesIntegracaoServicoEJBTest.java", "source": "the-stack-v2", "method_name": "testObterFonteRendaPessoaInstituicaoEmpty", "class_name": "CapesIntegracaoServicoEJBTest", "index": 139, "label": 1}
{"input": "public void testProperty() {\n        Properties properties = System.getProperties();\n        foundProperty = properties.getProperty(\"java.home\");\n    }", "timestamp": "2021-01-19T02:26:59.864013Z", "repo_name": "mikroskeem/Shuriken", "path": "/instrumentation/src/test/java/eu/mikroskeem/test/shuriken/instrumentation/testclasses/TestTransformable5.java", "source": "the-stack-v2", "method_name": "testProperty", "class_name": "TestTransformable5", "index": 140, "label": 1}
{"input": "@Override\n      protected void updateEndpointRoles(Roles.Builder roles, boolean enable) {\n        roles.setSqlQuery(enable);\n      }", "timestamp": "2023-05-12T12:10:46.436039Z", "repo_name": "Panxing4game/dremio-oss", "path": "/services/coordinator/src/main/java/com/dremio/service/coordinator/ClusterCoordinator.java", "source": "the-stack-v2", "method_name": "updateEndpointRoles", "class_name": "ClusterCoordinator", "index": 141, "label": 1}
{"input": "public void setUUID(String uuid) throws Exception {\n        if (!StringUtils.isNullOrEmpty(uuid)) {\n            editor.putString(\"uuid\", uuid);\n            editor.commit();\n            setOffLineUuid(uuid);\n        } else {\n            throw new Exception(\"Invalid UUID\");\n        }\n    }", "timestamp": "2022-12-25T17:47:49.346465Z", "repo_name": "eyalmnm/AndAnergyBroker", "path": "/app/src/main/java/com/usenergysolutions/energybroker/utils/PreferencesUtils.java", "source": "the-stack-v2", "method_name": "setUUID", "class_name": "PreferencesUtils", "index": 142, "label": 1}
{"input": "@Test\n  public void case19() {\n    int[] revenues = { 1, -32, -764, -7, -951, -647, -2, -51, 253, -4, -345, 253, 244, -47, -272, -60, 543, -56, -2, -956, -950, 553, -40, 526, 544, -649, 243, -7, 0, -50, 244, 7, -53, -657, 248, -88, 9, -48, -348, -657, 804, -655, -9, -56, -48, 79, -478 };\n    int k = 9;\n    assertEquals(423.69955908289245, mergersdivtwo.findMaximum(revenues, k), DELTA * 423.69955908289245);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case19", "class_name": "MergersDivTwoTest", "index": 143, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByIncomingTransactionIsNullOrNotNull() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        \n        defaultTransactionShouldBeFound(\"incomingTransaction.specified=true\");\n\n        \n        defaultTransactionShouldNotBeFound(\"incomingTransaction.specified=false\");\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByIncomingTransactionIsNullOrNotNull", "class_name": "TransactionResourceIT", "index": 144, "label": 1}
{"input": "@JavascriptInterface\n    public void initVideo(final String z) {\n        if (!this.isInterstitial && Version.getAndroidSDKVersion() >= 14) {\n            Logging.log(\"window.ADMARVEL.setVideoUrl(\\\"\" + z + \"\\\")\");\n            final m m = (m)this.adMarvelWebViewReference.get();\n            if (m != null) {\n                m.z = z;\n                final d d = (d)this.adMarvelInternalWebViewReference.get();\n                if (d != null && !d.b() && m.z != null && m.z.length() > 0) {\n                    new Handler(Looper.getMainLooper()).post((Runnable)new m$q(z, m, d));\n                }\n            }\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "initVideo", "class_name": "AdMarvelWebViewJSInterface", "index": 145, "label": 1}
{"input": "public Builder filter(MetricFilter filter) {\n        this.filter = filter;\n        return this;\n      }", "timestamp": "2021-07-01T04:05:15.247476Z", "repo_name": "canglang1973/hbase", "path": "/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java", "source": "the-stack-v2", "method_name": "filter", "class_name": "Builder", "index": 146, "label": 1}
{"input": "protected <T extends Disposable> T disposeOnTearDown(final T disposable) {\n    Disposer.register(myTestRootDisposable, disposable);\n    return disposable;\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "disposeOnTearDown", "class_name": "UsefulTestCase", "index": 147, "label": 1}
{"input": "@Override\n    public String toString() {\n      String testName = getTestName(false);\n      return UsefulTestCase.this.getClass() + (StringUtil.isEmpty(testName) ? \"\" : \".test\" + testName);\n    }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "UsefulTestCase", "index": 148, "label": 1}
{"input": "@JavascriptInterface\n    public void expandto(final int n, final int n2) {\n        final d d = (d)this.adMarvelInternalWebViewReference.get();\n        if ((d == null || !d.b()) && !this.isInterstitial) {\n            final m m = (m)this.adMarvelWebViewReference.get();\n            if (m != null) {\n                final Context context = d.getContext();\n                if (context != null && context instanceof Activity) {\n                    final Activity activity = (Activity)context;\n                    if (m.x) {\n                        new Handler(Looper.getMainLooper()).post((Runnable)new m$j(m, activity, n, n2));\n                        return;\n                    }\n                    new Handler(Looper.getMainLooper()).post((Runnable)new m$k(m, activity, n, n2, this.adMarvelAd));\n                }\n            }\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "expandto", "class_name": "AdMarvelWebViewJSInterface", "index": 149, "label": 1}
{"input": "public void testBug199004_DefaultSystemLibraries() throws CoreException {\n\tDefaultContainerInitializer intializer = new DefaultContainerInitializer(new String[] {\"JavaSearchBugs\", \"/JavaSearchBugs/lib/b199004.jar\"}) {\n\t\tprotected DefaultContainer newContainer(char[][] libPaths) {\n\t\t\treturn new DefaultContainer(libPaths) {\n\t\t\t\tpublic int getKind() {\n\t\t\t\t\treturn IClasspathContainer.K_DEFAULT_SYSTEM;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\tContainerInitializer.setInitializer(intializer);\n\tPath libPath = new Path(\"org.eclipse.jdt.core.tests.model.TEST_CONTAINER\");\n\taddClasspathEntry(JAVA_PROJECT, JavaCore.newContainerEntry(libPath));\n\ttry {\n\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] { JAVA_PROJECT }, IJavaSearchScope.SYSTEM_LIBRARIES);\n\t\tsearch(\"length\", IJavaSearchConstants.METHOD, IJavaSearchConstants.DECLARATIONS, scope);\n\t\tassertSearchResults(\n\t\t\t\"lib/b199004.jar int Test.length() EXACT_MATCH\"\n\t\t);\n\t}\n\tfinally {\n\t\tremoveClasspathEntry(JAVA_PROJECT, libPath);\n\t}\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug199004_DefaultSystemLibraries", "class_name": "JavaSearchBugsTests", "index": 150, "label": 1}
{"input": "@Test\n    public void test1(){\n\n        long lStartTime = System.nanoTime();\n\n        oldSort();\n\n        long lEndTime = System.nanoTime();\n\n        System.out.println(\"Old sort time consume :\" + (lEndTime - lStartTime));\n\n        lStartTime = System.nanoTime();\n\n        newSort();\n\n        lEndTime = System.nanoTime();\n\n\n        System.out.println(\"New sort time consume :\" + (lEndTime - lStartTime));\n\n    }", "timestamp": "2020-03-20T06:28:19.262950Z", "repo_name": "lair101/Java8InAction", "path": "/src/main/java/com/guo/j8/Chapter2/Chapter1_1.java", "source": "the-stack-v2", "method_name": "test1", "class_name": "Chapter1_1", "index": 151, "label": 1}
{"input": "@Override\r\n  public void cancel() {\r\n    final boolean sn = gui.gprop.is(GUIProp.SHOWNAME);\r\n    gui.gprop.set(GUIProp.SHOWNAME, oldShowNames);\r\n    if(sn != oldShowNames) gui.notify.layout();\r\n    super.cancel();\r\n  }", "timestamp": "2021-01-23T22:06:47.908791Z", "repo_name": "zhuangy/basex", "path": "/src/main/java/org/basex/gui/dialog/DialogPrefs.java", "source": "the-stack-v2", "method_name": "cancel", "class_name": "DialogPrefs", "index": 152, "label": 1}
{"input": "public Criteria andVdef19GreaterThanOrEqualTo(String value) {\r\n            addCriterion(\"VDEF19 >=\", value, \"vdef19\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef19GreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 153, "label": 1}
{"input": "@Override\n    public ASTNode visitTableFactor(final TableFactorContext ctx) {\n        if (null != ctx.tableName()) {\n            TableSegment result = (TableSegment) visit(ctx.tableName());\n            if (null != ctx.alias()) {\n                result.setAlias((AliasSegment) visit(ctx.alias()));\n            }\n            return result;\n        }\n        if (null != ctx.tableReferences()) {\n            return visit(ctx.tableReferences());\n        }\n        return new SubquerySegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), ctx.getText());\n    }", "timestamp": "2020-09-10T15:32:50.163756Z", "repo_name": "avalon566/incubator-shardingsphere", "path": "/shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/impl/PostgreSQLDMLVisitor.java", "source": "the-stack-v2", "method_name": "visitTableFactor", "class_name": "PostgreSQLDMLVisitor", "index": 154, "label": 1}
{"input": "@Test\n  public void case15() {\n    int[] revenues = { 715, -347, 53, -947, 543, -681, -951, -10, 3, -354, -355, 253, -902, 73, -348, -104, 82, -349, -76, -347, 6, -50, -732, -657, -629, 61, -83, 0, -651, 52, -50, -47, -177, -349, -648, -7, -347, -947, 543, -55, 318, 6, 8, 735, -347, 248, 246, 547 };\n    int k = 7;\n    assertEquals(505.74137429510193, mergersdivtwo.findMaximum(revenues, k), DELTA * 505.74137429510193);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case15", "class_name": "MergersDivTwoTest", "index": 155, "label": 1}
{"input": "@Test public void testJdbcSchemaDirectConnection() throws Exception {\n    checkJdbcSchemaDirectConnection(\n        \"schemaFactory=org.apache.calcite.adapter.jdbc.JdbcSchema$Factory\");\n    checkJdbcSchemaDirectConnection(\"schemaType=JDBC\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testJdbcSchemaDirectConnection", "class_name": "JdbcTest", "index": 156, "label": 1}
{"input": "@Override\n    public int getBinderPosition(int position) {\n        E targetViewType = getEnumFromPosition(position);\n        int binderPosition = -1;\n        for (int i = 0; i <= position; i++) {\n            if (targetViewType == getEnumFromPosition(i)) {\n                binderPosition++;\n            }\n        }\n\n        if (binderPosition == -1) {\n            throw new IllegalArgumentException(\"Binder does not exists in the adapter.\");\n        }\n        return binderPosition;\n    }", "timestamp": "2021-01-04T15:36:04.131812Z", "repo_name": "H4NG-MAN/dynamic-support", "path": "/dynamic-support/src/main/java/com/pranavpandey/android/dynamic/support/recyclerview/adapter/DynamicTypeBinderAdapter.java", "source": "the-stack-v2", "method_name": "getBinderPosition", "class_name": "DynamicTypeBinderAdapter", "index": 157, "label": 1}
{"input": "@Test\n  public void case39() {\n    int[] revenues = { -145, -648, 544, -356, 2, -1, -948, -48, 2, -50, 983, 550, -49, -950, 694, -655, 795, 5, 3, -647, -6, 246, 551, -49, 10, 545, -952, -352, 35, 247, 553, 247, 249, -349, -4, -4, -649, -41, -20, 201, -649, -55 };\n    int k = 20;\n    assertEquals(306.5195652173913, mergersdivtwo.findMaximum(revenues, k), DELTA * 306.5195652173913);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case39", "class_name": "MergersDivTwoTest", "index": 158, "label": 1}
{"input": "public Criteria andVdef1GreaterThan(String value) {\r\n            addCriterion(\"VDEF1 >\", value, \"vdef1\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef1GreaterThan", "class_name": "GeneratedCriteria", "index": 159, "label": 1}
{"input": "@Test\n  public void jsr107WriterGetsRegistered() {\n    MutableConfiguration<Object, Object> configuration = new MutableConfiguration<>();\n    CacheWriter<Object, Object> mock = mock(CacheWriter.class);\n    RecordingFactory<CacheWriter<Object, Object>> factory = factoryOf(mock);\n    configuration.setWriteThrough(true).setCacheWriterFactory(factory);\n\n    merger.mergeConfigurations(\"cache\", configuration);\n\n    assertThat(factory.called, is(true));\n    verify(cacheLoaderWriterFactory).registerJsr107Loader(eq(\"cache\"), ArgumentMatchers.<CacheLoaderWriter<Object, Object>>isNotNull());\n  }", "timestamp": "2021-08-23T22:08:57.063756Z", "repo_name": "leespy/ehcache3", "path": "/107/src/test/java/org/ehcache/jsr107/ConfigurationMergerTest.java", "source": "the-stack-v2", "method_name": "jsr107WriterGetsRegistered", "class_name": "ConfigurationMergerTest", "index": 160, "label": 1}
{"input": "public List<Types> queryTypes(){\n\t\ttry {\n\t\t\tString sql = \"select * from types\";\n\t\t\tQueryRunner run = new QueryRunner(JdbcUtil.getDataSource());\n\t\t\tList<Types> types = (List<Types>)run.query(sql,new BeanListHandler(Types.class));\n\t\t\treturn types;\n\t\t} catch (SQLException e) {\n\t\t\te.printStackTrace();\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}", "timestamp": "2023-03-18T02:50:06.741765Z", "repo_name": "CodeRabbit-G/bookstore", "path": "/src/gz/itcast/biz/admin/type/dao/TypeDaoImpl.java", "source": "the-stack-v2", "method_name": "queryTypes", "class_name": "TypeDaoImpl", "index": 161, "label": 1}
{"input": "@Nullable\n    @Override\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)\n    {\n        \n        return inflater.inflate(R.layout.fragment_main, container, false);\n    }", "timestamp": "2023-05-29T18:50:52.251799Z", "repo_name": "cuncinc/cMarket_Android", "path": "/app/src/main/java/com/cc/cmarket/fragment/MainFragment.java", "source": "the-stack-v2", "method_name": "onCreateView", "class_name": "MainFragment", "index": 162, "label": 1}
{"input": "@JavascriptInterface\n    public String getChild(String s) {\n        return this.util.getChild(s);\n    }", "timestamp": "2020-09-06T10:18:48.264931Z", "repo_name": "ofts7th/sdumbachouti", "path": "/app/src/main/java/cs/util/JsBridge.java", "source": "the-stack-v2", "method_name": "getChild", "class_name": "JsBridge", "index": 163, "label": 1}
{"input": "@Override \n        public void setFacilityLockForAppResponse(RadioResponseInfo info, int retry) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            _hidl_request.writeInt32(retry);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(41, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "setFacilityLockForAppResponse", "class_name": "Proxy", "index": 164, "label": 1}
{"input": "@Override\n    public ArtifactId deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n        return new ArtifactId(json.getAsString());\n    }", "timestamp": "2021-01-01T16:26:22.839349Z", "repo_name": "CodingBadgers/ModPack-Installer", "path": "/src/main/java/com/mcbadgercraft/installer/config/json/ArtifactIdAdapter.java", "source": "the-stack-v2", "method_name": "deserialize", "class_name": "ArtifactIdAdapter", "index": 165, "label": 1}
{"input": "public static void main(String args[]) {  \n\n        java.awt.EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                new AddList().setVisible(true);\n            }\n        });\n    }", "timestamp": "2021-06-18T22:20:20.417881Z", "repo_name": "MattawanMeeraksa/programming-ii-project-2016-2-SEC02-PROJ08-SANTEX-OLD", "path": "/JavaApplication8/src/project/AddList.java", "source": "the-stack-v2", "method_name": "main", "class_name": "AddList", "index": 166, "label": 1}
{"input": "private void setUpBug110060_TypePattern() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b110060/Test.java\",\n\t\t\"package b110060;\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"\tAaa a1;\\n\" +\n\t\t\"\tAAa a2;\\n\" +\n\t\t\"\tAaAaAa a3;\\n\" +\n\t\t\"\tAAxx a4;\\n\" +\n\t\t\"\tAxA a5;\\n\" +\n\t\t\"\tAxxAyy a6;\\n\" +\n\t\t\"}\\n\" +\n\t\t\"package b110060;\\n\"0 +\n\t\t\"package b110060;\\n\"1 +\n\t\t\"package b110060;\\n\"2 +\n\t\t\"package b110060;\\n\"3 +\n\t\t\"package b110060;\\n\"4 +\n\t\t\"package b110060;\\n\"5\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "setUpBug110060_TypePattern", "class_name": "JavaSearchBugsTests", "index": 167, "label": 1}
{"input": "public void setUserDefinedInput(TextBox userDefinedInput) {\n\t\tthis.userDefinedInput = userDefinedInput;\n\t}", "timestamp": "2021-01-18T19:53:17.807267Z", "repo_name": "michaelaltmann/MeasureAuthoringTool_LatestSprint", "path": "/mat/src/mat/client/clause/QDMAvailableValueSetWidget.java", "source": "the-stack-v2", "method_name": "setUserDefinedInput", "class_name": "QDMAvailableValueSetWidget", "index": 168, "label": 1}
{"input": "@Test public void testExpandViewWithLateralJoin() {\n    final String sql = \"SELECT * FROM AUX.VIEWLATERAL\";\n    CalciteAssert.that(CalciteAssert.Config.AUX)\n        .query(sql)\n        .returnsUnordered(\n            \"STRCOL=ABC; INTCOL=1; n=0; s=\",\n            \"STRCOL=DEF; INTCOL=2; n=0; s=\",\n            \"STRCOL=DEF; INTCOL=2; n=1; s=a\",\n            \"STRCOL=GHI; INTCOL=3; n=0; s=\",\n            \"STRCOL=GHI; INTCOL=3; n=1; s=a\",\n            \"STRCOL=GHI; INTCOL=3; n=2; s=ab\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testExpandViewWithLateralJoin", "class_name": "JdbcTest", "index": 169, "label": 1}
{"input": "@Test public void testRightJoin() {\n    CalciteAssert.hr()\n        .query(\"select e.\\\"deptno\\\", d.\\\"deptno\\\"\\n\"\n            + \"from \\\"hr\\\".\\\"emps\\\" as e\\n\"\n            + \"  right join \\\"hr\\\".\\\"depts\\\" as d using (\\\"deptno\\\")\")\n        .returnsUnordered(\n            \"deptno=10; deptno=10\",\n            \"deptno=10; deptno=10\",\n            \"deptno=10; deptno=10\",\n            \"deptno=null; deptno=30\",\n            \"deptno=null; deptno=40\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testRightJoin", "class_name": "JdbcTest", "index": 170, "label": 1}
{"input": "public void setCheckoutRecord(CheckoutRecord checkoutRecord) {\n\t\tthis.checkoutRecord = checkoutRecord;\n\t}", "timestamp": "2020-04-08T14:18:30.863590Z", "repo_name": "vorleakchy/mpp", "path": "/src/standardtest/may2017/prob2/LibraryMember.java", "source": "the-stack-v2", "method_name": "setCheckoutRecord", "class_name": "LibraryMember", "index": 171, "label": 1}
{"input": "@Override\r\n\tpublic boolean save(Majorcost p) {\r\n\t\tdao = (MajorcostDaoImpl) SpringUtil.getApplicationContext().getBean(\"MajorcostDaoImpl\");\r\n\t\treturn dao.save(p);\r\n\t}", "timestamp": "2022-10-06T23:40:32.361550Z", "repo_name": "huangxinxi/reimbursement", "path": "/src/service/impl/MajorcostServiceImpl.java", "source": "the-stack-v2", "method_name": "save", "class_name": "MajorcostServiceImpl", "index": 172, "label": 1}
{"input": "public OffsetTime toMemberType(String str)\n    {\n        if (str == null)\n        {\n            return null;\n        }\n        try\n        {\n            return OffsetTime.parse(str);\n        }\n        catch (DateTimeParseException pe)\n        {\n            throw new NucleusDataStoreException(Localiser.msg(\"016002\", str, OffsetTime.class.getName()), pe);\n        }\n    }", "timestamp": "2023-09-04T03:45:58.216619Z", "repo_name": "datanucleus/datanucleus-core", "path": "/src/main/java/org/datanucleus/store/types/converters/OffsetTimeStringConverter.java", "source": "the-stack-v2", "method_name": "toMemberType", "class_name": "OffsetTimeStringConverter", "index": 173, "label": 1}
{"input": "public void finishImmediately() {\r\n\t\tif (!isRunning) {\r\n\t\t\t\n\t\t\tqtThreadFuture.cancel(false);\r\n\t\t\trun();\r\n\t\t}\r\n\t}", "timestamp": "2023-07-03T22:35:13.204983Z", "repo_name": "sdankbar/jaqumal", "path": "/library/src/main/java/com/github/sdankbar/qml/persistence/QMLThreadPersistanceTask.java", "source": "the-stack-v2", "method_name": "finishImmediately", "class_name": "QMLThreadPersistanceTask", "index": 174, "label": 1}
{"input": "@java.lang.Override\n  public com.google.ads.googleads.v5.services.FeedItemOperation getDefaultInstanceForType() {\n    return DEFAULT_INSTANCE;\n  }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "getDefaultInstanceForType", "class_name": "FeedItemOperation", "index": 175, "label": 1}
{"input": "@Test\n    public void oneElementLinkedListCycleTest() {\n        final LinkedListNode node = new LinkedListNode(1);\n        node.next = node;\n        final boolean result = containsCycle(node);\n        assertTrue(result);\n    }", "timestamp": "2022-06-23T01:18:24.225891Z", "repo_name": "bazikpath/codetryouts", "path": "/codedojo/src/com/kavanal/interviewcake/linkedlists/ContainsCycle.java", "source": "the-stack-v2", "method_name": "oneElementLinkedListCycleTest", "class_name": "ContainsCycle", "index": 176, "label": 1}
{"input": "@Override \n        public void pullLceDataResponse(RadioResponseInfo info, LceDataInfo lceInfo) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            lceInfo.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(122, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "pullLceDataResponse", "class_name": "Proxy", "index": 177, "label": 1}
{"input": "private void copyTaskProgressToVM(VM vm, TestResult testResult)\n    {\n        TaskProgress progress = new TaskProgress(Arrays.asList(testResult), new ArrayList<>(), 1, null, 0);\n        File tmp = FileUtils.createTmpFile();\n        progress.save(tmp);\n        vm.copyFromHost(tmp, AbstractTask.PROGRESS_FILE_IN_VM);\n    }", "timestamp": "2021-01-12T11:45:19.933604Z", "repo_name": "dmitrymurashenkov/frocate", "path": "/runner/src/test/java/com/frocate/taskrunner/AbstractTaskTest.java", "source": "the-stack-v2", "method_name": "copyTaskProgressToVM", "class_name": "AbstractTaskTest", "index": 178, "label": 1}
{"input": "@Override\r\n    public void run() {\r\n        super.run();\r\n        readData.readMethod(input);\r\n    }", "timestamp": "2021-05-26T05:14:27.590319Z", "repo_name": "Yommmm/Java-Basic", "path": "/src/main/java/com/basic/thread/pipeio/ThreadRead.java", "source": "the-stack-v2", "method_name": "run", "class_name": "ThreadRead", "index": 179, "label": 1}
{"input": "public ItemStack onItemRightClick(ItemStack itemStackIn, World worldIn, EntityPlayer playerIn) {\r\n        playerIn.displayGUIBook(itemStackIn);\r\n        playerIn.triggerAchievement(StatList.objectUseStats[Item.getIdFromItem(this)]);\r\n        return itemStackIn;\r\n    }", "timestamp": "2020-04-02T18:47:52.047731Z", "repo_name": "MicrowaveClient/Clarinet", "path": "/src/net/minecraft/item/ItemWritableBook.java", "source": "the-stack-v2", "method_name": "onItemRightClick", "class_name": "ItemWritableBook", "index": 180, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n\tpublic ActionForward toYqView(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\t\tString APPLICATIONID = ParamUtil.get(request, \"APPLICATIONID\");\n\t\tMap params = new HashMap();\n\t\tParamUtil.putStr2Map(request, \"APPLICATIONID\", params);\n\t\tMap entry = zfdjService.yqload(APPLICATIONID);\n\n\t\trequest.setAttribute(\"rst\", entry);\n\t\treturn mapping.findForward(\"yqview\");\n\t}", "timestamp": "2021-01-12T15:41:00.492001Z", "repo_name": "MoonLuckSir/MoonRepository", "path": "/src/java/com/yitong/app/action/judicial/dxzpzfdj/ZfdjAction.java", "source": "the-stack-v2", "method_name": "toYqView", "class_name": "ZfdjAction", "index": 181, "label": 1}
{"input": "public String goHome() {\n        session.setAttribute(\"mainopt\", \"home\");\n        return SUCCESS;\n    }", "timestamp": "2021-01-15T12:19:02.044999Z", "repo_name": "julianrojas87/Imsys", "path": "/src/java/com/imsys/admin/struts/action/SingInAction.java", "source": "the-stack-v2", "method_name": "goHome", "class_name": "SingInAction", "index": 182, "label": 1}
{"input": "public SimpleAsyncCallback<UserDo> getSignedInDataAsyncCallback() {\n\t\treturn signedInDataAsyncCallback;\n\t}", "timestamp": "2021-01-16T01:25:56.177798Z", "repo_name": "santhoshO/Gooru-Web", "path": "/src/main/java/org/ednovo/gooru/client/mvp/home/LoginPopupUc.java", "source": "the-stack-v2", "method_name": "getSignedInDataAsyncCallback", "class_name": "LoginPopupUc", "index": 183, "label": 1}
{"input": "public Criteria andIntegralLogIdNotBetween(String value1, String value2) {\n            addCriterion(\"integral_log_id not between\", value1, value2, \"integralLogId\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andIntegralLogIdNotBetween", "class_name": "GeneratedCriteria", "index": 184, "label": 1}
{"input": "public Criteria andVdef3EqualTo(String value) {\r\n            addCriterion(\"VDEF3 =\", value, \"vdef3\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef3EqualTo", "class_name": "GeneratedCriteria", "index": 185, "label": 1}
{"input": "public void setShipperAccount(String shipperAccount) {\r\n        this.shipperAccount = shipperAccount;\r\n    }", "timestamp": "2020-05-17T01:26:00.968575Z", "repo_name": "gahlawat4u/repoName", "path": "/rda0105-agl-aus-java-a43926f304e3/xms-dto/src/main/java/com/gms/xms/model/webship/ShipmentInfoModel.java", "source": "the-stack-v2", "method_name": "setShipperAccount", "class_name": "ShipmentInfoModel", "index": 186, "label": 1}
{"input": "@Override\n  public void toBytes(ByteBuf buf) {\n    super.toBytes(buf);\n    if(dir == null) {\n      buf.writeShort(-1);\n    }else {\n      buf.writeShort(dir.ordinal());\n    }\n    buf.writeBoolean(isStrong);\n  }", "timestamp": "2023-08-13T18:44:21.470062Z", "repo_name": "D-Inc/EnderIO", "path": "/src/main/java/crazypants/enderio/conduit/packet/PacketRedstoneConduitOutputStrength.java", "source": "the-stack-v2", "method_name": "toBytes", "class_name": "PacketRedstoneConduitOutputStrength", "index": 187, "label": 1}
{"input": "public void setStartDateUnit(String startDateUnit) {\n        this.startDateUnit = startDateUnit;\n    }", "timestamp": "2022-05-04T14:26:42.638419Z", "repo_name": "cckmit/zds-mortgage", "path": "/zds-repertory/zds-mortgage/mortgage-web/src/main/java/com/zdsoft/finance/marketing/vo/CaseApplyByProductVo.java", "source": "the-stack-v2", "method_name": "setStartDateUnit", "class_name": "CaseApplyByProductVo", "index": 188, "label": 1}
{"input": "public boolean set(int i, DataTable dt) {\r\n\t\tboolean rtn = false;\r\n\t\tif (i >= 0 && i < members.size()) {\r\n\t\t\trtn = true;\r\n\t\t\tmembers.set(i, dt);\r\n\t\t}\r\n\t\treturn rtn;\r\n\t}", "timestamp": "2021-01-19T17:19:52.577870Z", "repo_name": "mattirn/JavaGnuplotHybrid", "path": "/javagnuplothybrid/src/main/java/org/leores/gnuplot/util/data/DataTableSet.java", "source": "the-stack-v2", "method_name": "set", "class_name": "DataTableSet", "index": 189, "label": 1}
{"input": "public void internalOpen(final String iUserName, final String iUserPassword) {\n    internalOpen(iUserName, iUserPassword, true);\n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "internalOpen", "class_name": "ODatabaseDocumentEmbedded", "index": 190, "label": 1}
{"input": "@Override\n    public ErrorPage findErrorPage(int errorCode) {\n        if (errorCode == 200) {\n            return (okErrorPage);\n        } else {\n            return (statusPages.get(Integer.valueOf(errorCode)));\n        }\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "findErrorPage", "class_name": "StandardContext", "index": 191, "label": 1}
{"input": "@Override\n    @Transactional\n    public void addCity(CityDTO city) {\n        City savedCity = cityConverter.toEntity(city);\n        cityRepository.persist(savedCity);\n        logger.info(\"city with name {} successfully saved in database\", city.getName());\n    }", "timestamp": "2022-09-04T09:47:37.481331Z", "repo_name": "JediHardcode/test_task_OnTravelSolutions", "path": "/src/main/java/com/gmail/kirill/ked/telegram/service/impl/CityServiceImpl.java", "source": "the-stack-v2", "method_name": "addCity", "class_name": "CityServiceImpl", "index": 192, "label": 1}
{"input": "@Test \n    public void testScrubCompositeIndex() throws IOException, ExecutionException, InterruptedException\n    {\n        testScrubIndex(CF_INDEX2, COL_INDEX, true, true);\n    }", "timestamp": "2022-05-31T23:56:44.066378Z", "repo_name": "ealonsodb/cassandra", "path": "/test/unit/org/apache/cassandra/db/ScrubTest.java", "source": "the-stack-v2", "method_name": "testScrubCompositeIndex", "class_name": "ScrubTest", "index": 193, "label": 1}
{"input": "public Criteria andSuperiorVerifyPassedNotBetween(Integer value1, Integer value2) {\r\n            addCriterion(\"superior_verify_passed not between\", value1, value2, \"superiorVerifyPassed\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andSuperiorVerifyPassedNotBetween", "class_name": "GeneratedCriteria", "index": 194, "label": 1}
{"input": "public static com.google.cloud.securitycenter.v1.Cvssv3 parseDelimitedFrom(\n      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(\n        PARSER, input, extensionRegistry);\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "parseDelimitedFrom", "class_name": "Cvssv3", "index": 195, "label": 1}
{"input": "@Test\r\n        void ifYouSaluteRobotoSaluteBack (){\r\n        SaluteRoboto salute = new SaluteRoboto();\r\n        String answer = salute.answer(\"Hola Roboto\");\r\n        assertThat(answer,equalTo(\"Hola\"));\r\n    }", "timestamp": "2023-07-22T09:18:56.087594Z", "repo_name": "leobarna/KatasBootcamp", "path": "/src/test/java/RobotoTest.java", "source": "the-stack-v2", "method_name": "ifYouSaluteRobotoSaluteBack", "class_name": "RobotoTest", "index": 196, "label": 1}
{"input": "public Builder setAttackVectorValue(int value) {\n\n      attackVector_ = value;\n      onChanged();\n      return this;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "setAttackVectorValue", "class_name": "Builder", "index": 197, "label": 1}
{"input": "public void vlozPostavu(Postava vkladana) {\n        postavy.put(vkladana.getJmeno(), vkladana);\n\n    }", "timestamp": "2021-04-06T00:49:51.527463Z", "repo_name": "stepankalensky/mojeAdventura", "path": "/src/main/java/com/github/stepankalensky/mojeAdventura/logika/Prostor.java", "source": "the-stack-v2", "method_name": "vlozPostavu", "class_name": "Prostor", "index": 198, "label": 1}
{"input": "protected void addCriterion(String condition, Object value, String property) {\n            if (value == null) {\n                throw new RuntimeException(\"Value for \" + property + \" cannot be null\");\n            }\n            criteria.add(new Criterion(condition, value));\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "addCriterion", "class_name": "GeneratedCriteria", "index": 199, "label": 1}
{"input": "public void put(String key, String value) {\n        File file = mCache.newFile(key);\n        BufferedWriter out = null;\n        try {\n            out = new BufferedWriter(new FileWriter(file), 1024);\n            out.write(value);\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if (out != null) {\n                try {\n                    out.flush();\n                    out.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            mCache.put(file);\n        }\n    }", "timestamp": "2020-08-02T18:42:07.551582Z", "repo_name": "zhuyu3126/WuyiProject", "path": "/WuyiProject/commonapi/src/main/java/com/danmo/commonapi/base/cache/ACache.java", "source": "the-stack-v2", "method_name": "put", "class_name": "ACache", "index": 200, "label": 1}
{"input": "@Override\n  protected boolean isValidSortByValue(String value) {\n    return VALID_SORT_BY_VALUES.contains(value);\n  }", "timestamp": "2020-05-05T11:21:15.055791Z", "repo_name": "rezza72/camunda-bpm-platform", "path": "/engine-rest/engine-rest/src/main/java/org/camunda/bpm/engine/rest/dto/history/HistoricJobLogQueryDto.java", "source": "the-stack-v2", "method_name": "isValidSortByValue", "class_name": "HistoricJobLogQueryDto", "index": 201, "label": 1}
{"input": "@Override\n      public UpdateAvailability setUploadProtocol(java.lang.String uploadProtocol) {\n        return (UpdateAvailability) super.setUploadProtocol(uploadProtocol);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setUploadProtocol", "class_name": "UpdateAvailability", "index": 202, "label": 1}
{"input": "private static void createHeadRow(Map<String, String> titleMap) {\n        \n        SXSSFRow headRow = sheet.createRow(HEAD_START_POSITION);\n        int i = 0;\n        for (String entry : titleMap.keySet()) {\n            SXSSFCell headCell = headRow.createCell(i);\n            headCell.setCellValue(titleMap.get(entry));\n            i++;\n        }\n    }", "timestamp": "2022-12-22T13:26:20.663306Z", "repo_name": "xuhongda/load-service", "path": "/load-service-util/src/main/java/com/xu/util/Excel/ExportExcel.java", "source": "the-stack-v2", "method_name": "createHeadRow", "class_name": "ExportExcel", "index": 203, "label": 1}
{"input": "@Override\n    public MenuInflater getMenuInflater() {\n        return getDelegate().getMenuInflater();\n    }", "timestamp": "2020-04-24T04:10:40.106278Z", "repo_name": "lyriarte/tripmaster", "path": "/app/src/main/java/org/thingagora/tripmaster/AppCompatPreferenceActivity.java", "source": "the-stack-v2", "method_name": "getMenuInflater", "class_name": "AppCompatPreferenceActivity", "index": 204, "label": 1}
{"input": "private void preCheck() {\n      Preconditions.checkNotNull(op, \"condition is null. You need to specify the condition by\" +\n        \" calling ifNotExists/ifEquals/ifMatches before executing the request\");\n    }", "timestamp": "2020-03-21T15:28:16.237120Z", "repo_name": "siwuxietang/hbase", "path": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncTableImpl.java", "source": "the-stack-v2", "method_name": "preCheck", "class_name": "CheckAndMutateBuilderImpl", "index": 205, "label": 1}
{"input": "private static int[] generate(int size) {\n        int[] arr = new int[size];\n        for (int i = 0; i < size; i++) {\n\n            arr[i] = (int) Math.round(Math.random() * 100);\n        }\n        return arr;\n    }", "timestamp": "2022-12-06T12:56:13.193490Z", "repo_name": "OlegMaksimov/algoritms", "path": "/src/test/java/algoritms/SortableTest.java", "source": "the-stack-v2", "method_name": "generate", "class_name": "SortableTest", "index": 206, "label": 1}
{"input": "@Override\n    public boolean resolve() {\n        resolveBinding();\n        return super.resolve();\n    }", "timestamp": "2022-11-22T17:25:22.237840Z", "repo_name": "wjd198344/sofa-boot", "path": "/sofa-boot-project/sofa-boot-core/runtime-sofa-boot/src/main/java/com/alipay/sofa/runtime/service/component/ServiceComponent.java", "source": "the-stack-v2", "method_name": "resolve", "class_name": "ServiceComponent", "index": 207, "label": 1}
{"input": "public Criteria andVdef15GreaterThan(String value) {\r\n            addCriterion(\"VDEF15 >\", value, \"vdef15\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef15GreaterThan", "class_name": "GeneratedCriteria", "index": 208, "label": 1}
{"input": "public Criteria andIntegralValueEqualTo(Integer value) {\n            addCriterion(\"integral_value =\", value, \"integralValue\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andIntegralValueEqualTo", "class_name": "GeneratedCriteria", "index": 209, "label": 1}
{"input": "@Override\n    public String getExpression() {\n        if (not) {\n            return createFalseExpression();\n        }\n        else {\n            return createTrueExpression();\n        }\n    }", "timestamp": "2023-01-24T07:07:29.583737Z", "repo_name": "ForgeRock/openicf-xml-connector-community-edition", "path": "/src/main/java/com/forgerock/openicf/xml/query/FunctionQuery.java", "source": "the-stack-v2", "method_name": "getExpression", "class_name": "FunctionQuery", "index": 210, "label": 1}
{"input": "@RequestMapping(value=\"/deleteAll\")\r\n\t@ResponseBody\r\n\tpublic Object deleteAll() throws Exception{\r\n\t\tlogBefore(logger, Jurisdiction.getUsername()+\"批量删除Weal\");\r\n\t\tif(!Jurisdiction.buttonJurisdiction(menuUrl, \"del\")){return null;} \n\t\tPageData pd = new PageData();\t\t\r\n\t\tMap<String,Object> map = new HashMap<String,Object>();\r\n\t\tpd = this.getPageData();\r\n\t\tList<PageData> pdList = new ArrayList<PageData>();\r\n\t\tString DATA_IDS = pd.getString(\"DATA_IDS\");\r\n\t\tif(null != DATA_IDS && !\"\".equals(DATA_IDS)){\r\n\t\t\tString ArrayDATA_IDS[] = DATA_IDS.split(\",\");\r\n\t\t\twealService.deleteAll(ArrayDATA_IDS);\r\n\t\t\tpd.put(\"msg\", \"ok\");\r\n\t\t}else{\r\n\t\t\tpd.put(\"msg\", \"no\");\r\n\t\t}\r\n\t\tpdList.add(pd);\r\n\t\tmap.put(\"批量删除Weal\"0, pdList);\r\n\t\treturn AppUtil.returnObject(pd, map);\r\n\t}", "timestamp": "2021-01-11T09:00:41.561800Z", "repo_name": "MrXT/erp", "path": "/src/com/fh/controller/weal/weal/WealController.java", "source": "the-stack-v2", "method_name": "deleteAll", "class_name": "WealController", "index": 211, "label": 1}
{"input": "private MediaPlayer createMediaPlayer() {\n        this.mediaPlayer = new MediaPlayer();\n        this.mediaPlayer.reset();\n        this.mediaPlayer.setOnPreparedListener(this);\n        this.mediaPlayer.setOnCompletionListener(this);\n        this.mediaPlayer.setOnInfoListener(this);\n        this.mediaPlayer.setOnErrorListener(this);\n        this.mediaPlayer.setAudioStreamType(3);\n        if (this.videoSurface == null || !this.videoSurface.isValid()) {\n            stop();\n        } else {\n            this.mediaPlayer.setSurface(this.videoSurface);\n        }\n        return this.mediaPlayer;\n    }", "timestamp": "2020-11-25T21:02:17.790224Z", "repo_name": "pk1z/wladimir-computin-FimiX8-RE-App", "path": "/sources/com/fimi/album/widget/CustomVideoView.java", "source": "the-stack-v2", "method_name": "createMediaPlayer", "class_name": "CustomVideoView", "index": 212, "label": 1}
{"input": "@Test\n    @Transactional\n    void patchWithIdMismatchTransaction() throws Exception {\n        int databaseSizeBeforeUpdate = transactionRepository.findAll().size();\n        transaction.setId(count.incrementAndGet());\n\n        \n        restTransactionMockMvc\n            .perform(\n                patch(ENTITY_API_URL_ID, count.incrementAndGet())\n                    .with(csrf())\n                    .contentType(\"application/merge-patch+json\")\n                    .content(TestUtil.convertObjectToJsonBytes(transaction))\n            )\n            .andExpect(status().isBadRequest());\n\n        \n        List<Transaction> transactionList = transactionRepository.findAll();\n        assertThat(transactionList).hasSize(databaseSizeBeforeUpdate);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "patchWithIdMismatchTransaction", "class_name": "TransactionResourceIT", "index": 213, "label": 1}
{"input": "@Override\r\n\tpublic void insertar(DocumentoActualizar documentoActualizar) {\r\n\t\tdocumentosActualizarRepo.save(documentoActualizar);\r\n\t\t\r\n\t}", "timestamp": "2022-12-24T13:55:56.097323Z", "repo_name": "LuisLalo/sgc", "path": "/sgc/src/main/java/edu/uabc/app/service/DocumentosActualizarServiceJPA.java", "source": "the-stack-v2", "method_name": "insertar", "class_name": "DocumentosActualizarServiceJPA", "index": 214, "label": 1}
{"input": "public Criteria andVdef3IsNull() {\r\n            addCriterion(\"VDEF3 is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef3IsNull", "class_name": "GeneratedCriteria", "index": 215, "label": 1}
{"input": "@Override\n\tpublic void onChunkUnload() {\n\n\t\tsuper.onChunkUnload();\n\t\tif (_grindingWorld != null) {\n\t\t\t_grindingWorld.clearReferences();\n\t\t\t_grindingWorld.setMachine(null);\n\t\t}\n\t\t_grindingWorld = null;\n\t}", "timestamp": "2021-10-19T03:56:24.894626Z", "repo_name": "rotkodr3d/MineFactoryReloaded", "path": "/src/main/java/powercrystals/minefactoryreloaded/tile/machine/mobs/TileEntityGrinder.java", "source": "the-stack-v2", "method_name": "onChunkUnload", "class_name": "TileEntityGrinder", "index": 216, "label": 1}
{"input": "public final void run() {\n        if (!this.keep) {\n            return;\n        }\n        this.workingThread = Thread.currentThread();\n        while (this.keep && (!this.workingThread.isInterrupted())) {\n            doRun();\n        }\n    }", "timestamp": "2020-12-04T16:42:25.074498Z", "repo_name": "feelfreelinux/UsbSerial", "path": "/usbserial/src/main/java/com/felhr/usbserial/AbstractWorkerThread.java", "source": "the-stack-v2", "method_name": "run", "class_name": "AbstractWorkerThread", "index": 217, "label": 1}
{"input": "@Test public void testOrderUnionStarByExpr() {\n    CalciteAssert.hr()\n        .query(\"select * from \\\"hr\\\".\\\"emps\\\" where \\\"empid\\\" < 150\\n\"\n            + \"union all\\n\"\n            + \"select * from \\\"hr\\\".\\\"emps\\\" where \\\"empid\\\" > 150\\n\"\n            + \"order by - \\\"empid\\\"\")\n        .returns(\"\"\n            + \"empid=200; deptno=20; name=Eric; salary=8000.0; commission=500\\n\"\n            + \"empid=110; deptno=10; name=Theodore; salary=11500.0; commission=250\\n\"\n            + \"empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testOrderUnionStarByExpr", "class_name": "JdbcTest", "index": 218, "label": 1}
{"input": "public static double dotProduct(Point4 v1, Point4 v2){\n        return ((v1.x*v2.x)+(v1.y*v2.y)+(v1.z*v2.z));\n    }", "timestamp": "2020-12-20T21:05:43.720248Z", "repo_name": "angrajales/Computer-Graphics-2020-1", "path": "/starting-point/src/main/java/bezier/curves/pkg3d/camera/Point4.java", "source": "the-stack-v2", "method_name": "dotProduct", "class_name": "Point4", "index": 219, "label": 1}
{"input": "public List<SwitchBlockStatementGroupContext> switchBlockStatementGroup() {\n\t\t\treturn getRuleContexts(SwitchBlockStatementGroupContext.class);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "switchBlockStatementGroup", "class_name": "SwitchBlockContext", "index": 220, "label": 1}
{"input": "public boolean esMenorQue(Fecha f) {\r\n \t \r\n \t\tif (this.anio > f.anio)\r\n \t\t\treturn true;\t\r\n \t\tif (this.mes > f.mes && f.anio == this.anio)\r\n \t\t\treturn true;\r\n \t\tif (this.dia > f.dia && this.mes == f.mes && f.anio == this.anio)\r\n \t\t\treturn true;\r\n \t\t\t\r\n \t\treturn false; \t\r\n \t}", "timestamp": "2021-12-22T11:22:30.744139Z", "repo_name": "kodemakerDor/Java_programming", "path": "/practica5/Fecha.java", "source": "the-stack-v2", "method_name": "esMenorQue", "class_name": "Fecha", "index": 221, "label": 1}
{"input": "private static String getInitBitMap() {\n        return \"10000000\" + \"00000000\" + \"00000000\" + \"00000000\"\n                + \"00000000\" + \"00000000\" + \"00000000\" + \"00000000\"\n                + \"00000000\" + \"00000000\" + \"00000000\" + \"00000000\"\n                + \"00000000\" + \"00000000\" + \"00000000\" + \"00000000\";\n    }", "timestamp": "2020-03-21T04:18:51.968753Z", "repo_name": "BobBright/acp", "path": "/acp/acp-packet/src/main/java/pers/acp/packet/iso8583/ISO8583Packet.java", "source": "the-stack-v2", "method_name": "getInitBitMap", "class_name": "ISO8583Packet", "index": 222, "label": 1}
{"input": "@Override\n    public void onConnectionSuspended(int i) {\n        Log.d(TAG,\"onConnectionSuspended is called\");\n\n    }", "timestamp": "2021-01-10T05:30:07.032885Z", "repo_name": "pdroid84/LocationByPlacesAPI", "path": "/app/src/main/java/com/pdroid84/deb/locationbyplacesapi/MainActivity.java", "source": "the-stack-v2", "method_name": "onConnectionSuspended", "class_name": "MainActivity", "index": 223, "label": 1}
{"input": "public boolean addLevel(Level aLevel)\n  {\n    boolean wasAdded = false;\n    if (levels.contains(aLevel)) { return false; }\n    if (numberOfLevels() >= maximumNumberOfLevels())\n    {\n      return wasAdded;\n    }\n\n    Game existingGame = aLevel.getGame();\n    boolean isNewGame = existingGame != null && !this.equals(existingGame);\n\n    if (isNewGame && existingGame.numberOfLevels() <= minimumNumberOfLevels())\n    {\n      return wasAdded;\n    }\n\n    if (isNewGame)\n    {\n      aLevel.setGame(this);\n    }\n    else\n    {\n      levels.add(aLevel);\n    }\n    wasAdded = true;\n    return wasAdded;\n  }", "timestamp": "2020-09-27T06:19:22.075701Z", "repo_name": "mustafain117/Block-Breaker-Game", "path": "/Block223v2/src/ca/mcgill/ecse223/block/model/Game.java", "source": "the-stack-v2", "method_name": "addLevel", "class_name": "Game", "index": 224, "label": 1}
{"input": "public static org.datacontract.schemas._2004._07.microsoft_practices_enterpriselibrary_validation_integration_wcf.ValidationDetail parse(java.io.File file, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, java.io.IOException {\n          return (org.datacontract.schemas._2004._07.microsoft_practices_enterpriselibrary_validation_integration_wcf.ValidationDetail) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( file, type, options ); }", "timestamp": "2021-05-31T07:40:57.713006Z", "repo_name": "OLINSolutions/eiservices", "path": "/utote/wsdl2java/programservice/xmlbeans/src/org/datacontract/schemas/_2004/_07/microsoft_practices_enterpriselibrary_validation_integration_wcf/ValidationDetail.java", "source": "the-stack-v2", "method_name": "parse", "class_name": "Factory", "index": 225, "label": 1}
{"input": "public void testBug100772_HierarchyScope_InterfacesAndClass07() throws CoreException {\n\tsetUpBug100772_HierarchyScope_InterfacesAndClass();\n\tIType type = this.workingCopies[0].getType(\"X\");\n\tIMethod method = type.getMethod(\"foo\", new String[] { \"QClass;\" });\n\tsearch(method, UI_DECLARATIONS, SearchEngine.createHierarchyScope(type));\n\tassertSearchResults(\n\t\t\"src/b100772/Test.java void b100772.Test.foo(Class) [foo] EXACT_MATCH\\n\" +\n\t\t\"src/b100772/Test.java void b100772.X.foo(Class) [foo] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug100772_HierarchyScope_InterfacesAndClass07", "class_name": "JavaSearchBugsTests", "index": 226, "label": 1}
{"input": "public void onConnectionFailed(ConnectionResult connectionResult) {\n        log(\"onConnectionFailed\");\n    }", "timestamp": "2021-09-11T20:22:11.433488Z", "repo_name": "j-avdeev/MobileApplicationsDevelopment", "path": "/Lec9/LoginPleaseWork/app/src/main/java/edu/stanford/cs193a/loginpleasework/LoginPleaseActivity.java", "source": "the-stack-v2", "method_name": "onConnectionFailed", "class_name": "LoginPleaseActivity", "index": 227, "label": 1}
{"input": "protected void notifyDataChangedEvent() {\n        if (datasetObservers != null) {\n            for (DataSetObserver observer : datasetObservers) {\n                observer.onChanged();\n            }\n        }\n    }", "timestamp": "2021-01-21T13:44:13.989810Z", "repo_name": "lucky5237/FinalDesign", "path": "/breakfast/src/main/java/zjut/jianlu/breakfast/widget/AbstractWheelAdapter.java", "source": "the-stack-v2", "method_name": "notifyDataChangedEvent", "class_name": "AbstractWheelAdapter", "index": 228, "label": 1}
{"input": "@Override\n\tpublic Integer recommendNum(Integer articleId) {\n\t\treturn experevaluateDao.recommendNum(articleId);\n\t}", "timestamp": "2022-09-11T09:39:11.970942Z", "repo_name": "iamfine099/mia", "path": "/src/main/java/com/bootdo/mia/service/impl/ExperevaluateServiceImpl.java", "source": "the-stack-v2", "method_name": "recommendNum", "class_name": "ExperevaluateServiceImpl", "index": 229, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        init();\n    }", "timestamp": "2023-03-08T01:40:35.562585Z", "repo_name": "dev2033/Java_notebook", "path": "/app/src/main/java/com/example/javanotebook/MainActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "MainActivity", "index": 230, "label": 1}
{"input": "public void setChangeRecordingEnabled(final Boolean changeRecordingEnabled)\n\t{\n\t\tthis.modifiedPropsSet.add(\"changeRecordingEnabled\");\n\t\tthis.changeRecordingEnabled = changeRecordingEnabled;\n\t}", "timestamp": "2022-11-28T12:15:32.049256Z", "repo_name": "BaggaShivanshu2/hybris-bookstore-tutorial", "path": "/hybris/bin/ext-platform-optional/platformwebservices/custom/src/de/hybris/platform/cronjob/customdto/CronJobDTO.java", "source": "the-stack-v2", "method_name": "setChangeRecordingEnabled", "class_name": "CronJobDTO", "index": 231, "label": 1}
{"input": "@Override\n    public String[] findWrapperLifecycles() {\n\n        synchronized (wrapperLifecyclesLock) {\n            return (wrapperLifecycles);\n        }\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "findWrapperLifecycles", "class_name": "StandardContext", "index": 232, "label": 1}
{"input": "public void testChar() {\n        assertEquals(17 * 37, new HashCodeBuilder(17, 37).append((char) 0).toHashCode());\n        assertEquals(17 * 37 + 1234, new HashCodeBuilder(17, 37).append((char) 1234).toHashCode());\n    }", "timestamp": "2022-02-13T19:44:43.869060Z", "repo_name": "SpoonLabs/nopol-experiments", "path": "/dataset/cl1/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java", "source": "the-stack-v2", "method_name": "testChar", "class_name": "HashCodeBuilderTest", "index": 233, "label": 1}
{"input": "public Criteria andVdef20EqualTo(String value) {\r\n            addCriterion(\"VDEF20 =\", value, \"vdef20\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef20EqualTo", "class_name": "GeneratedCriteria", "index": 234, "label": 1}
{"input": "private void sendReset() {\n        if (pullMode) {\n            Ping recorded = new Ping();\n            recorded.setEventType(Ping.RECORDED_STREAM);\n            recorded.setValue2(streamId);\n            \n            RTMPMessage recordedMsg = RTMPMessage.build(recorded);\n            doPushMessage(recordedMsg);\n        }\n        Ping begin = new Ping();\n        begin.setEventType(Ping.STREAM_BEGIN);\n        begin.setValue2(streamId);\n        \n        RTMPMessage beginMsg = RTMPMessage.build(begin);\n        doPushMessage(beginMsg);\n        \n        ResetMessage reset = new ResetMessage();\n        doPushMessage(reset);\n    }", "timestamp": "2023-06-22T03:27:38.095086Z", "repo_name": "guyueyuqi/red5-server-common", "path": "/src/main/java/org/red5/server/stream/PlayEngine.java", "source": "the-stack-v2", "method_name": "sendReset", "class_name": "PlayEngine", "index": 235, "label": 1}
{"input": "public void testFloat() {\n        assertEquals(17 * 37, new HashCodeBuilder(17, 37).append((float) 0f).toHashCode());\n        float f = 1234.89f;\n        int i = Float.floatToIntBits(f);\n        assertEquals(17 * 37 + i, new HashCodeBuilder(17, 37).append(f).toHashCode());\n    }", "timestamp": "2022-02-13T19:44:43.869060Z", "repo_name": "SpoonLabs/nopol-experiments", "path": "/dataset/cl1/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java", "source": "the-stack-v2", "method_name": "testFloat", "class_name": "HashCodeBuilderTest", "index": 236, "label": 1}
{"input": "private void init(){\n        File archivo = new File(\"help/help_set.hs\");\n        URL hsURL;\n        try{\n            hsURL = archivo.toURI().toURL();\n            HelpSet helpset = new HelpSet(getClass().getClassLoader(), hsURL);\n            HelpBroker helpbroker = helpset.createHelpBroker();\n            \n            \n            helpbroker.enableHelpOnButton(ayuda, \"aplication\", helpset);\n            helpbroker.enableHelpKey(getContentPane(), \"aplication\", helpset);\n            \n        } catch (Exception ex){\n            Logger.getLogger(Ventana_Ayuda.class.getName()).log(Level.SEVERE, null, ex);\n        }\n        this.setTitle(\"PepperMusic:Ayuda\");\n        \n    }", "timestamp": "2021-01-13T07:22:13.718319Z", "repo_name": "pauloesteban/mp3player", "path": "/PepperMusic/src/peppermusic/Ventana_Ayuda.java", "source": "the-stack-v2", "method_name": "init", "class_name": "Ventana_Ayuda", "index": 237, "label": 1}
{"input": "@ResponseBody\n    @GetMapping(\"/category/getDepth2\")\n    public List<String> getDepth2(@RequestParam(\"depth1Field\")String depth1){\n        LOGGER.debug(\"depth1\",depth1);\n        return service.getDepth2(depth1);\n    }", "timestamp": "2023-08-23T19:49:03.359668Z", "repo_name": "dudgh9661/tsisProject", "path": "/src/main/java/kr/co/tsis/education/category/categoryController.java", "source": "the-stack-v2", "method_name": "getDepth2", "class_name": "categoryController", "index": 238, "label": 1}
{"input": "@Override\n      public Get set(String parameterName, Object value) {\n        return (Get) super.set(parameterName, value);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "set", "class_name": "Get", "index": 239, "label": 1}
{"input": "@Test public void testMockDdl() throws Exception {\n    final MockDdlDriver driver = new MockDdlDriver();\n    try (Connection connection =\n             driver.connect(\"jdbc:calcite:\", new Properties());\n        Statement statement = connection.createStatement()) {\n      assertThat(driver.counter, is(0));\n      statement.executeUpdate(\"COMMIT\");\n      assertThat(driver.counter, is(1));\n    }\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testMockDdl", "class_name": "JdbcTest", "index": 240, "label": 1}
{"input": "@Test\n            public void shouldReturnGameWithTurnPlayed() {\n                response.then().body(not(isEmptyOrNullString()));\n            }", "timestamp": "2021-01-23T06:35:39.821088Z", "repo_name": "anttiahonen/ekanban", "path": "/backend/src/integration-test/java/fi/aalto/ekanban/controllers/GameControllerTest.java", "source": "the-stack-v2", "method_name": "shouldReturnGameWithTurnPlayed", "class_name": "withValidRequest", "index": 241, "label": 1}
{"input": "void startRecording() {\n\n        recordedStatement = new HsqlArrayList();\n\n        recordedStatement.add(token.duplicate());\n\n        isRecording = true;\n    }", "timestamp": "2023-09-03T10:33:34.963710Z", "repo_name": "svn2github/hsqldb", "path": "/base/branches/odbcproto1/src/org/hsqldb/ParserBase.java", "source": "the-stack-v2", "method_name": "startRecording", "class_name": "ParserBase", "index": 242, "label": 1}
{"input": "@Test\n  public void testClear() throws Exception {\n    Statistic stat = new Statistic(StatisticType.CUSTOM_CONVERTER_TIME);\n    stat.increment(getRandomString(), 1);\n\n    assertEquals(\"stat should contain entry\", 1, stat.getEntries().size());\n    stat.clear();\n    assertEquals(\"stat entries should have been cleared\", 0, stat.getEntries().size());\n  }", "timestamp": "2021-05-04T08:06:57.970562Z", "repo_name": "vguna/dozer", "path": "/core/src/test/java/org/dozer/stats/StatisticTest.java", "source": "the-stack-v2", "method_name": "testClear", "class_name": "StatisticTest", "index": 243, "label": 1}
{"input": "@Override\n      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {\n        return (Insert) super.setPrettyPrint(prettyPrint);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setPrettyPrint", "class_name": "Insert", "index": 244, "label": 1}
{"input": "public static int clicked(int mouseX, int mouseY) {\n\t\tif (mouseX > 265 && mouseX < 535 && mouseY > 200 && mouseY < 245) {\n\t\t\treturn 1;\n\t\t} else if (mouseX > 265 && mouseX < 535 && mouseY > 270 && mouseY < 315) {\n\t\t\treturn 2;\n\t\t} else if (mouseX > 265 && mouseX < 535 && mouseY > 340 && mouseY < 395) {\n\t\t\treturn 3;\n\t\t} else if (mouseX > 265 && mouseX < 535 && mouseY > 410 && mouseY < 445) {\n\t\t\treturn 4;\n\t\t} else\n\t\t\treturn 0;\n\t}", "timestamp": "2023-04-20T14:40:29.336064Z", "repo_name": "HHSAPCompSci2020/capstone-project-traffic-invaders", "path": "/src/screens/MainMenu.java", "source": "the-stack-v2", "method_name": "clicked", "class_name": "MainMenu", "index": 245, "label": 1}
{"input": "public void testMarkerAnnotation() {\n\t\tif (ast.apiLevel() == AST.JLS2) {\n\t\t\t\n\t\t\ttry {\n\t\t\t\tast.newMarkerAnnotation();\n\t\t\t\tassertTrue(false);\n\t\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\t\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tlong previousCount = ast.modificationCount();\n\t\tfinal MarkerAnnotation x = ast.newMarkerAnnotation(); \n\t\tassertTrue(ast.modificationCount() > previousCount);\n\t\tpreviousCount = ast.modificationCount();\n\t\tassertTrue(x.getAST() == ast);\n\t\tassertTrue(x.getParent() == null);\n\t\tassertTrue(x.getTypeName().getParent() == x);\n\t\tassertTrue(x.isAnnotation());\n\t\tassertTrue(!x.isModifier());\n\t\tassertTrue(x.isMarkerAnnotation());\n\t\tassertTrue(!x.isNormalAnnotation());\n\t\tassertTrue(!x.isSingleMemberAnnotation());\n\t\tassertTrue(x.getNodeType() == ASTNode.MARKER_ANNOTATION);\n\t\tassertTrue(x.structuralPropertiesForType() == \n\t\t\tMarkerAnnotation.propertyDescriptors(ast.apiLevel()));\n\t\t\n\t\tassertTrue(ast.modificationCount() == previousCount);\n\t\t\n\t\ttAnnotationName(x);\n\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "testMarkerAnnotation", "class_name": "ASTTest", "index": 246, "label": 1}
{"input": "@Override\n      public Get setUploadType(java.lang.String uploadType) {\n        return (Get) super.setUploadType(uploadType);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setUploadType", "class_name": "Get", "index": 247, "label": 1}
{"input": "private void purgeTemporaryEntryPoints() {\n    for (RefElement entryPoint : myTemporaryEntryPoints) {\n      ((RefElementImpl)entryPoint).setEntry(false);\n    }\n\n    myTemporaryEntryPoints.clear();\n  }", "timestamp": "2020-09-01T20:17:15.244967Z", "repo_name": "lakshit1/intellij-community", "path": "/java/java-analysis-impl/src/com/intellij/codeInspection/ex/EntryPointsManagerBase.java", "source": "the-stack-v2", "method_name": "purgeTemporaryEntryPoints", "class_name": "EntryPointsManagerBase", "index": 248, "label": 1}
{"input": "public AttackComplexity findValueByNumber(int number) {\n                return AttackComplexity.forNumber(number);\n              }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "findValueByNumber", "class_name": "Cvssv3", "index": 249, "label": 1}
{"input": "@PUT\n\t@Consumes(MediaType.APPLICATION_JSON)\n\t@Produces(MediaType.APPLICATION_JSON)\n\t@Path(\"/students\")\n\tpublic Student updateStudent(Student student) {\n\t\tStudent result = null;\n\t\tif (student != null) {\n\t\t\tString id = student.getId();\n\t\t\tif (id != null) {\n\t\t\t\tsynchronized (students) {\n\t\t\t\t\tresult = students.get(student.getId());\n\t\t\t\t\tif (result != null) {\n\t\t\t\t\t\tString newName = student.getName();\n\t\t\t\t\t\tif (newName != null)\n\t\t\t\t\t\t\tresult.setName(newName);\n\t\t\t\t\t\tresult.setGrade(student.getGrade());\n\t\t\t\t\t\tresult.setAddress(student.getAddress());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}", "timestamp": "2020-04-21T08:12:58.345665Z", "repo_name": "harshana05/JaxRSProviders", "path": "/examples/com.mycorp.examples.student.remoteservice.host/src/com/mycorp/examples/student/remoteservice/host/StudentServiceImpl2.java", "source": "the-stack-v2", "method_name": "updateStudent", "class_name": "StudentServiceImpl2", "index": 250, "label": 1}
{"input": "public java.lang.String getName() throws Throwable {\n        if (classInstance == null)\n            throw new UnsupportedOperationException(\"classInstance is null.\");\n        try {\n            return (java.lang.String)classInstance.Get(\"Name\");\n        } catch (JCNativeException jcne) {\n            throw translateException(jcne);\n        }\n    }", "timestamp": "2023-03-28T22:51:08.117039Z", "repo_name": "marcocappolimases/JCOReflector", "path": "/netreflected/src/net461/microsoft.build.framework_version_4.0.0.0_culture_neutral_publickeytoken_b03f5f7f11d50a3a/microsoft/build/framework/xamltypes/NameValuePair.java", "source": "the-stack-v2", "method_name": "getName", "class_name": "NameValuePair", "index": 251, "label": 1}
{"input": "@CamundaQueryParam(\"processDefinitionKey\")\n  public void setProcessDefinitionKey(String processDefinitionKey) {\n    this.processDefinitionKey = processDefinitionKey;\n  }", "timestamp": "2020-05-05T11:21:15.055791Z", "repo_name": "rezza72/camunda-bpm-platform", "path": "/engine-rest/engine-rest/src/main/java/org/camunda/bpm/engine/rest/dto/history/HistoricJobLogQueryDto.java", "source": "the-stack-v2", "method_name": "setProcessDefinitionKey", "class_name": "HistoricJobLogQueryDto", "index": 252, "label": 1}
{"input": "@Override\n\tprotected void onPostExecute(Bitmap result) {\n        bmImage.setImageBitmap(result);\n    }", "timestamp": "2020-06-02T14:21:40.973866Z", "repo_name": "htw398/searchImagebyhtw", "path": "/src/kr/htw398/searchimage/DownloadImageTask.java", "source": "the-stack-v2", "method_name": "onPostExecute", "class_name": "DownloadImageTask", "index": 253, "label": 1}
{"input": "public Criteria andVdef2NotBetween(String value1, String value2) {\r\n            addCriterion(\"VDEF2 not between\", value1, value2, \"vdef2\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef2NotBetween", "class_name": "GeneratedCriteria", "index": 254, "label": 1}
{"input": "public boolean hasGameEnded() {\n        if (hasThreeSameHorizontalCells() || hasThreeSameVerticalCells() || hasThreeSameDiagonalCells()) {\n            winner.setValue(currentPlayer);\n            return true;\n        }\n\n        if (isBoardFull()) {\n            winner.setValue(null);\n            return true;\n        }\n\n        return false;\n    }", "timestamp": "2021-01-07T18:52:21.576876Z", "repo_name": "s4dman/TicTacToe-MVVM", "path": "/app/src/main/java/com/imsadman/tictactoe/models/Game.java", "source": "the-stack-v2", "method_name": "hasGameEnded", "class_name": "Game", "index": 255, "label": 1}
{"input": "private void setPasswordSource(SavedPasswordEntry entry) throws Exception {\n        SavedPasswordEntry[] entries = {};\n        if (entry != null) {\n            entries = new SavedPasswordEntry[] {entry};\n        }\n        setPasswordSourceWithMultipleEntries(entries);\n    }", "timestamp": "2022-12-08T04:12:54.583056Z", "repo_name": "yeahhhhhhhh/chromium_quic", "path": "/src/chrome/android/javatests/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferencesTest.java", "source": "the-stack-v2", "method_name": "setPasswordSource", "class_name": "SavePasswordsPreferencesTest", "index": 256, "label": 1}
{"input": "public void recordPlayBillingResolution(int paramInt)\r\n  {\r\n    try\r\n    {\r\n      this.pg.recordPlayBillingResolution(paramInt);\r\n      return;\r\n    }\r\n    catch (RemoteException localRemoteException)\r\n    {\r\n      for (;;)\r\n      {\r\n        ev.c(\"Could not forward recordPlayBillingResolution to InAppPurchase\", localRemoteException);\r\n      }\r\n    }\r\n  }", "timestamp": "2016-08-05T08:24:11.701355Z", "repo_name": "dat0106/datkts0106", "path": "/reference no run/com.martinstudio.hiddenrecorder/src/com/google/android/gms/internal/dl.java", "source": "the-stack-v2", "method_name": "recordPlayBillingResolution", "class_name": "dl", "index": 257, "label": 1}
{"input": "public Vector max(Vector other) {\n\t\treturn new Vector(Math.max(x, other.x), Math.max(y, other.y));\n\t}", "timestamp": "2020-04-05T16:05:37.994185Z", "repo_name": "xopheS/DrivingTony", "path": "/DrivingTony/src/main/java/ch/epfl/cs107/play/math/Vector.java", "source": "the-stack-v2", "method_name": "max", "class_name": "Vector", "index": 258, "label": 1}
{"input": "@java.lang.Override\n    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {\n      return super.setUnknownFields(unknownFields);\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "setUnknownFields", "class_name": "Builder", "index": 259, "label": 1}
{"input": "@Override\n\tpublic boolean equals(Object object) {\n\t\tif (object == null || !(object instanceof Vector))\n\t\t\treturn false;\n\t\tVector other = (Vector) object;\n\t\treturn x == other.x && y == other.y;\n\t}", "timestamp": "2020-04-05T16:05:37.994185Z", "repo_name": "xopheS/DrivingTony", "path": "/DrivingTony/src/main/java/ch/epfl/cs107/play/math/Vector.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "Vector", "index": 260, "label": 1}
{"input": "private Boolean isRelIncrement(String result) {\n        RequestPullListEntity.PaggingEvent paggingEvent = mEntity.mPaggingEvent;\n        if (null == paggingEvent) return false;\n        final int curOffset = paggingEvent.getOffSet(mEntity.params);\n        final int pageSize = paggingEvent.getPageSize(mEntity.params);\n        final int total = paggingEvent.getTotalPage(result);\n        final int curTotalNum = pageSize * curOffset;\n        return total > curTotalNum ? Boolean.TRUE : Boolean.FALSE;\n    }", "timestamp": "2022-06-02T23:57:03.881868Z", "repo_name": "xieningtao/new_sflib", "path": "/BaseSmartFrame/src/com/basesmartframe/filecache/cache/DownloadListItems.java", "source": "the-stack-v2", "method_name": "isRelIncrement", "class_name": "DownloadListItems", "index": 261, "label": 1}
{"input": "@Test public void testArrayIndexes() throws ConfigCompileException{\n \t\tRun(\"assign(@array, array(1, 2, 2, 3)) msg(array_indexes(@array, 2))\", fakePlayer);\n \t\tverify(fakePlayer).sendMessage(\"{1, 2}\");\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/19/19_3b3438a24e33893035d2c602198d49ca13a35845/ArrayHandlingTest/19_3b3438a24e33893035d2c602198d49ca13a35845_ArrayHandlingTest_s.java", "source": "the-stack-v2", "method_name": "testArrayIndexes", "class_name": "ArrayHandlingTest", "index": 262, "label": 1}
{"input": "@Override\n    public void notifyObservers() {\n        for (Observer observer : observers) {\n            observer.update(this);\n        }\n    }", "timestamp": "2021-05-09T05:09:39.134332Z", "repo_name": "michal-adamczyk8/kodilla-exception", "path": "/kodilla-patterns3/src/main/java/com/kodilla/kodillapatterns3/observer/forum/ForumTopic.java", "source": "the-stack-v2", "method_name": "notifyObservers", "class_name": "ForumTopic", "index": 263, "label": 1}
{"input": "private void connectMemberTypes() {\n\t\tSourceTypeBinding sourceType = referenceContext.binding;\n\t\tReferenceBinding[] memberTypes = sourceType.memberTypes;\n\t\tif (memberTypes != null && memberTypes != Binding.NO_MEMBER_TYPES) {\n\t\t\tfor (int i = 0, size = memberTypes.length; i < size; i++)\n\t\t\t\t ((SourceTypeBinding) memberTypes[i]).scope.connectTypeHierarchy();\n\t\t}\n\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/16417/src_0.java", "source": "the-stack-v2", "method_name": "connectMemberTypes", "class_name": "ClassScope", "index": 264, "label": 1}
{"input": "public boolean updateBT(Integer id, String btdevice){\n        SQLiteDatabase db = this.getWritableDatabase();\n        ContentValues contentValues = new ContentValues();\n        contentValues.put(\"btdevice\", btdevice);\n        db.update(\"prefs\", contentValues, \"id = ? \", new String[] { Integer.toString(id) } );\n        return true;\n    }", "timestamp": "2020-03-22T13:09:56.343529Z", "repo_name": "JamesHarley/BTWeatherStation", "path": "/app/src/main/java/gnosisdevelopment/arduinobtweatherstation/DBHelper.java", "source": "the-stack-v2", "method_name": "updateBT", "class_name": "DBHelper", "index": 265, "label": 1}
{"input": "@Test\n    @Transactional\n    public void getAllAuthoritiesByOrderIsInShouldWork() throws Exception {\n        \n        authorityRepository.saveAndFlush(authority);\n\n        \n        defaultAuthorityShouldBeFound(\"order.in=\" + DEFAULT_ORDER + \",\" + UPDATED_ORDER);\n\n        \n        defaultAuthorityShouldNotBeFound(\"order.in=\" + UPDATED_ORDER);\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "getAllAuthoritiesByOrderIsInShouldWork", "class_name": "AuthorityResourceIT", "index": 266, "label": 1}
{"input": "@Before\n  public void setup() throws Exception {\n    when(retryPolicy.delay(any(ThrottleState.class))).thenReturn(10L);\n\n    sut = createSupervisor(JOB);\n    mockTaskStatus(JOB.getId());\n  }", "timestamp": "2021-01-11T17:01:51.211646Z", "repo_name": "fguerco/helios", "path": "/helios-services/src/test/java/com/spotify/helios/agent/SupervisorTest.java", "source": "the-stack-v2", "method_name": "setup", "class_name": "SupervisorTest", "index": 267, "label": 1}
{"input": "public QuteEndpoint findOrCreateEndpoint(String uri, String newResourceUri) {\n        String newUri = uri.replace(getResourceUri(), newResourceUri);\n        log.debug(\"Getting endpoint with URI: {}\", newUri);\n        return getCamelContext().getEndpoint(newUri, QuteEndpoint.class);\n    }", "timestamp": "2023-08-31T10:54:12.673685Z", "repo_name": "ppalaga/camel-quarkus", "path": "/extensions/qute/component/src/main/java/org/apache/camel/component/qute/QuteEndpoint.java", "source": "the-stack-v2", "method_name": "findOrCreateEndpoint", "class_name": "QuteEndpoint", "index": 268, "label": 1}
{"input": "String getText(GC gc, TableColumn column) {\r\n\tint columnIndex = column.getIndex();\r\n\tString label = getTrimmedText(columnIndex);\r\n\tint maxWidth;\r\n\r\n\tif (label == null) {\r\n\t\tmaxWidth = getMaxTextWidth(columnIndex, column.getWidth());\r\n\t\tlabel = getParent().trimItemText(getText(columnIndex), maxWidth, gc);\r\n\t}\r\n\treturn label;\r\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipseswt_cluster/56034/tar_1.java", "source": "the-stack-v2", "method_name": "getText", "class_name": "TableItem", "index": 269, "label": 1}
{"input": "public void testBug161028() throws CoreException {\n\tTypeNameMatch match1 = SearchEngine.createTypeNameMatch(null, 0);\n\tassertEquals(\"Should be equals!\", match1, match1);\n\tassertEquals(\"Wrong toString value!\", \"org.eclipse.jdt.internal.core.search.JavaSearchTypeNameMatch@0\", match1.toString());\n\tTypeNameMatch match2 = SearchEngine.createTypeNameMatch(null, 0);\n\tassertFalse(\"Should NOT be identical!\", match1 == match2);\n\tassertTrue(\"Should be equals!\", match1.equals(match2));\n\tassertTrue(\"Should be equals!\", match2.equals(match1));\n\tassertEquals(\"Wrong toString value!\", match1, match2);\n\tassertEquals(\"Should have same hashCode!\", match1.hashCode(), match2.hashCode());\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug161028", "class_name": "JavaSearchBugsTests", "index": 270, "label": 1}
{"input": "public static void resetTuple(Tuple tuple) {\n    try {\n      int tupleSize = tuple.size();\n      for (int i = 0; i < tupleSize; ++i) {\n        tuple.set(i, null);\n      }\n    }\n    catch (Exception e) {\n      throw new RuntimeException(\"Internal error: \" + e.toString());\n    }\n  }", "timestamp": "2021-01-25T03:54:55.074368Z", "repo_name": "hirohanin/pig7hadoop21", "path": "/contrib/zebra/src/java/org/apache/hadoop/zebra/types/TypesUtils.java", "source": "the-stack-v2", "method_name": "resetTuple", "class_name": "TypesUtils", "index": 271, "label": 1}
{"input": "@Override\n  public com.actifsource.simpleservice.generic.javamodel.IType selectReturnType() {\n    return _getSingle(com.actifsource.simpleservice.generic.javamodel.IType.class, \"43ca7009-8b4c-11df-abce-ffdcfaccc0b3\");\n  }", "timestamp": "2016-09-05T16:42:50.124353Z", "repo_name": "copton/ActifsourceExamples", "path": "/SimpleService/src-gen/com/actifsource/simpleservice/generic/javamodel/Call.java", "source": "the-stack-v2", "method_name": "selectReturnType", "class_name": "Call", "index": 272, "label": 1}
{"input": "private static int division(int first, int second, int i) {\n\nSystem.out.println(\"Q.\"+i+\" how much is \" + first + \" / \" + second + \"?\");\n\nint correctAns = first / second;\n\nreturn correctAns;\n\n}", "timestamp": "2021-01-15T06:45:38.681176Z", "repo_name": "aryanjharwal/jharwal_assignment3", "path": "/jharwal_problem1/src/jharwal_problem1/CAI5.java", "source": "the-stack-v2", "method_name": "division", "class_name": "CAI5", "index": 273, "label": 1}
{"input": "public void register(View view) {\n        Intent intent = new Intent(this, CreateAccount.class);\n        startActivity(intent);\n    }", "timestamp": "2022-06-10T17:57:08.381357Z", "repo_name": "wilsonmwiti/FirebaseUiSignin", "path": "/app/src/main/java/com/spiritledinc/firebaseuisignin/MainActivity.java", "source": "the-stack-v2", "method_name": "register", "class_name": "MainActivity", "index": 274, "label": 1}
{"input": "@Override\n    public Void visitType(TypeMirror t, Void p) {\n        generateJavaCode(t);\n        return p;\n    }", "timestamp": "2020-07-02T02:37:57.141618Z", "repo_name": "Jihannn/LearningDemo", "path": "/mini_compiler/src/main/java/com/jihan/mini_compiler/PayEntryVisitor.java", "source": "the-stack-v2", "method_name": "visitType", "class_name": "PayEntryVisitor", "index": 275, "label": 1}
{"input": "HsqlException unsupportedFeature(String string) {\n        return Error.error(ErrorCode.X_0A501, string);\n    }", "timestamp": "2023-09-03T10:33:34.963710Z", "repo_name": "svn2github/hsqldb", "path": "/base/branches/odbcproto1/src/org/hsqldb/ParserBase.java", "source": "the-stack-v2", "method_name": "unsupportedFeature", "class_name": "ParserBase", "index": 276, "label": 1}
{"input": "private LinkedDataRecord createLinkedDataRecord()\n    {\n        LinkedDataRecord r = new LinkedDataRecord();\n        r.setLinkType(LinkedDataRecord.LINK_TYPE_TITLE_OR_TEXT);\n        r.setReferenceType(LinkedDataRecord.REFERENCE_TYPE_DIRECT);\n        r.setCustomNumberFormat(false);\n        r.setIndexNumberFmtRecord((short)0);\n        r.setFormulaOfLink( new LinkedDataFormulaField() );\n        return r;\n    }", "timestamp": "2023-01-11T02:29:36.328694Z", "repo_name": "DXYyang/SDP", "path": "/sourcedata/poi-REL_3_0/src/scratchpad/src/org/apache/poi/hssf/usermodel/HSSFChart.java", "source": "the-stack-v2", "method_name": "createLinkedDataRecord", "class_name": "HSSFChart", "index": 277, "label": 1}
{"input": "public String toString() {\n\t\tStringBuffer result = new StringBuffer();\n\t\tresult.append(\"\\nMighty Gumball, Inc.\");\n\t\tresult.append(\"\\nJava-enabled Standing Gumball Model #2004\");\n\t\tresult.append(\"\\nInventory: \" + count + \" gumball\");\n\t\tif (count != 1) {\n\t\t\tresult.append(\"s\");\n\t\t}\n\t\tresult.append(\"\\n\");\n\t\tresult.append(\"Machine is \" + state + \"\\n\");\n\t\treturn result.toString();\n\t}", "timestamp": "2021-06-25T00:51:06.680581Z", "repo_name": "AndriySV/JavaPatterns", "path": "/src/main/java/com/as/structural/proxy/gumballWithoutProxy/GumballMachine.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "GumballMachine", "index": 278, "label": 1}
{"input": "@Test\n\tpublic void testObterPessoaInstituicaoNull() throws BancoobException {\n\t\tInteger idPessoa = 1;\n\t\tInteger idInstituicao = 2;\n\t\t\n\t\tCapesIntegracaoServicoEJB ejb = new CapesIntegracaoServicoEJB();\n\t\t\n\t\tPessoaDelegate mockPessoaDelegate = EasyMock.createMock(PessoaDelegate.class);\n\t\tEasyMock.expect(mockPessoaDelegate.obterPorPessoaInstituicao(EasyMock.anyInt(), EasyMock.anyInt())).andReturn(null);\n\t\t\n\t\tejb.setPessoaDelegate(mockPessoaDelegate);\n\t\t\n\t\tEasyMock.replay(mockPessoaDelegate);\n\t\tPessoaIntegracaoDTO pessoa = ejb.obterPessoaInstituicao(idPessoa, idInstituicao);\n\t\tAssert.assertNotNull(pessoa);\n\t\tEasyMock.verify(mockPessoaDelegate);\n\t}", "timestamp": "2022-12-01T05:20:26.998529Z", "repo_name": "pabllo007/cca", "path": "/Integracao/ContaCapitalIntegracaoEJB/src/test/java/br/com/sicoob/sisbr/cca/integracao/negocio/servicos/ejb/CapesIntegracaoServicoEJBTest.java", "source": "the-stack-v2", "method_name": "testObterPessoaInstituicaoNull", "class_name": "CapesIntegracaoServicoEJBTest", "index": 279, "label": 1}
{"input": "public static boolean isCardboardUri(final Uri uri) {\n        return isOriginalCardboardDeviceUri(uri) || isCardboardDeviceUri(uri);\n    }", "timestamp": "2021-07-24T07:43:42.210830Z", "repo_name": "cumtchenchang/cardboard-java", "path": "/library/src/main/java/com/google/vrtoolkit/cardboard/CardboardDeviceParams.java", "source": "the-stack-v2", "method_name": "isCardboardUri", "class_name": "CardboardDeviceParams", "index": 280, "label": 1}
{"input": "public String getMusicName(int flag) {\n        Vector v = getFileList(\"src/music\");\n        int length = v.size();\n        String now = fileName;\n        if (flag < 0) { \n            for (int i = 1; i < length; i++) {\n                if (v.get(i).toString().equals(now))\n                    return v.get(i - 1).toString();\n            }\n            return v.get(length - 1).toString();\n        } else { \n            for (int i = 0; i < length - 1; i++) {\n                if (v.get(i).toString().equals(now))\n                    return v.get(i + 1).toString();\n            }\n            return v.get(0).toString();\n        }\n    }", "timestamp": "2023-04-15T13:53:26.916349Z", "repo_name": "wang-kui-die/MediaPlayer", "path": "/src/main/java/com/player/Player/AudioPlayer.java", "source": "the-stack-v2", "method_name": "getMusicName", "class_name": "AudioPlayer", "index": 281, "label": 1}
{"input": "@Test public void testArrayRemoveValues() throws ConfigCompileException{\n \t\tRun(\"assign(@array, array(1, 2, 2, 3)) array_remove_values(@array, 2) msg(@array)\", fakePlayer);\n \t\tverify(fakePlayer).sendMessage(\"{1, 3}\");\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/19/19_3b3438a24e33893035d2c602198d49ca13a35845/ArrayHandlingTest/19_3b3438a24e33893035d2c602198d49ca13a35845_ArrayHandlingTest_s.java", "source": "the-stack-v2", "method_name": "testArrayRemoveValues", "class_name": "ArrayHandlingTest", "index": 282, "label": 1}
{"input": "public Criteria andCuseridLessThanOrEqualTo(String value) {\r\n            addCriterion(\"CUSERID <=\", value, \"cuserid\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andCuseridLessThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 283, "label": 1}
{"input": "public void testBug92944_INTERFACE() throws CoreException {\n\tthis.resultCollector.showRule();\n\tsetUpBug92944();\n\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();\n\tnew SearchEngine(this.workingCopies).searchAllTypeNames(\n\t\tnull,\n\t\tSearchPattern.R_EXACT_MATCH,\n\t\tnull,\n\t\tSearchPattern.R_PATTERN_MATCH, \n\t\tINTERFACE,\n\t\tgetJavaSearchWorkingCopiesScope(),\n\t\trequestor,\n\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,\n\t\tnull\n\t);\n\tassertSearchResults(\n\t\t\"Unexpected all type names\",\n\t\t\"b92944.B92944_I\",\n\t\trequestor);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug92944_INTERFACE", "class_name": "JavaSearchBugsTests", "index": 284, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n    public void deleteDirtyRecords()\n    {\n        if (getProperties().isControlBlock() || getBlockService() == null || getProperties().isMirrorChild())\n        {\n            \n            \n            return;\n        }\n\n        \n        @SuppressWarnings(\"rawtypes\")\n        List entityList = new ArrayList();\n        for (EJDataRecord record : getDeletedRecords())\n        {\n            entityList.add(record.getServicePojo());\n        }\n\n        \n        if (entityList.size() > 0)\n        {\n            getBlockService().executeDelete(new EJForm(_block.getForm()), entityList);\n        }\n    }", "timestamp": "2023-02-18T11:13:58.949927Z", "repo_name": "entirej/core", "path": "/entirej-core/src/org/entirej/framework/core/data/controllers/EJEditableBlockController.java", "source": "the-stack-v2", "method_name": "deleteDirtyRecords", "class_name": "EJEditableBlockController", "index": 285, "label": 1}
{"input": "public static String get16BitMapFrom8583Byte(byte[] content8583) {\n        \n        byte[] bitMap16 = getPacketHeaderMap(content8583);\n        if (bitMap16 != null) {\n            \n            return get16BitMapStr(bitMap16);\n        } else {\n            return null;\n        }\n    }", "timestamp": "2020-03-21T04:18:51.968753Z", "repo_name": "BobBright/acp", "path": "/acp/acp-packet/src/main/java/pers/acp/packet/iso8583/ISO8583Packet.java", "source": "the-stack-v2", "method_name": "get16BitMapFrom8583Byte", "class_name": "ISO8583Packet", "index": 286, "label": 1}
{"input": "public void _read (org.omg.CORBA.portable.InputStream i)\n  {\n    value = scs.auxiliar.UndefinedPropertyHelper.read (i);\n  }", "timestamp": "2021-01-18T07:45:01.582616Z", "repo_name": "hubefonseca/log-monitor", "path": "/src/java/scs/auxiliar/UndefinedPropertyHolder.java", "source": "the-stack-v2", "method_name": "_read", "class_name": "UndefinedPropertyHolder", "index": 287, "label": 1}
{"input": "@DELETE\n\t@Path(\"/students/{studentId}\")\n\t@Produces(MediaType.APPLICATION_JSON)\n\tpublic Student deleteStudent(@PathParam(\"studentId\") String studentId) {\n\t\treturn students.remove(studentId);\n\t}", "timestamp": "2020-04-21T08:12:58.345665Z", "repo_name": "harshana05/JaxRSProviders", "path": "/examples/com.mycorp.examples.student.remoteservice.host/src/com/mycorp/examples/student/remoteservice/host/StudentServiceImpl2.java", "source": "the-stack-v2", "method_name": "deleteStudent", "class_name": "StudentServiceImpl2", "index": 288, "label": 1}
{"input": "public void testBug127628() throws CoreException {\n\tclass DeprecatedTypesRequestor extends SearchTests.SearchTypeNameRequestor {\n\t\tpublic void acceptType(int modifiers, char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path) {\n\t\t\tif ((modifiers & ClassFileConstants.AccDeprecated) != 0) {\n\t\t\t\tchar[] typeName =\n\t\t\t\t\tCharOperation.concat(\n\t\t\t\t\t\tCharOperation.concatWith(enclosingTypeNames, '$'),\n\t\t\t\t\t\tsimpleTypeName,\n\t\t\t\t\t\t'$');\n\t\t\t\tthis.results.addElement(new String(CharOperation.concat(packageName, typeName, '.')));\n\t\t\t}\n\t\t}\n\t}\n\tTypeNameRequestor requestor =  new DeprecatedTypesRequestor();\n\tnew SearchEngine().searchAllTypeNames(\n\t\tnull,\n\t\tSearchPattern.R_EXACT_MATCH,\n\t\tnull,\n\t\tSearchPattern.R_PATTERN_MATCH, \n\t\tTYPE,\n\t\tgetJavaSearchScope(),\n\t\trequestor,\n\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,\n\t\tnull\n\t);\n\tassertSearchResults(\n\t\t\"Unexpected all type names\",\n\t\t\"b127628.Test127628\",\n\t\trequestor);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug127628", "class_name": "JavaSearchBugsTests", "index": 289, "label": 1}
{"input": "public static void main(String[] args) {\n\n        \n        Light light = new Light();\n        LightOnCommand lightOn = new LightOnCommand(light);\n\n        \n        GarageDoor garageDoor = new GarageDoor();\n        GarageDoorOpenCommand garageDoorOpen = new GarageDoorOpenCommand(garageDoor);\n\n        \n        \n        SimpleRemoteControl remote = new SimpleRemoteControl();\n\n        \n        remote.setCommand(lightOn);\n        remote.buttonWasPressed();\n\n        \n        remote.setCommand(garageDoorOpen);\n        remote.buttonWasPressed();\n    }", "timestamp": "2021-09-18T06:55:00.687690Z", "repo_name": "gzltommy/design-paterns", "path": "/java_test/src/DesignPattern/Command/SimpleRemote/RemoteControlTest.java", "source": "the-stack-v2", "method_name": "main", "class_name": "RemoteControlTest", "index": 290, "label": 1}
{"input": "public static WritableWorkbook createWorkbook(OutputStream os,\n                                                Workbook in,\n                                                WorkbookSettings ws)\n    throws IOException\n  {\n    WritableWorkbook w = new WritableWorkbookImpl(os, in, false, ws);\n    return w;\n  }", "timestamp": "2020-12-27T09:34:47.148817Z", "repo_name": "bloomer024/Mobile-Development", "path": "/excelClassExceptionDebug/src/jxl/Workbook.java", "source": "the-stack-v2", "method_name": "createWorkbook", "class_name": "Workbook", "index": 291, "label": 1}
{"input": "public void testBug80264_Fields() throws CoreException {\n\tsetUpBug80264_Fields();\n\tIType type = this.workingCopies[0].getType(\"Fields\");\n\tIField[] fields = type.getFields();\n\tsearch(fields[0], DECLARATIONS);\n\tsearch(fields[1], DECLARATIONS);\n\tassertSearchResults(\n\t\t\"src/b80264/Fields.java b80264.Fields.field1 [field1] EXACT_MATCH\\n\" +\n\t\t\"src/b80264/Fields.java b80264.Fields.field2 [field2] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug80264_Fields", "class_name": "JavaSearchBugsTests", "index": 292, "label": 1}
{"input": "public Criteria andVdef15NotBetween(String value1, String value2) {\r\n            addCriterion(\"VDEF15 not between\", value1, value2, \"vdef15\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef15NotBetween", "class_name": "GeneratedCriteria", "index": 293, "label": 1}
{"input": "@Override\n    public void addNewHouse() {\n        Scanner sc=new Scanner(System.in);\n        House house =new House();\n        System.out.println(\"input name house\");\n        house.setServiceName(sc.nextLine());\n        System.out.println(\"type service\");\n        house.setTypeServices(sc.nextLine());\n        System.out.println(\"input convenient \");\n        house.setConvenient(sc.nextLine());\n        System.out.println(\"input area used\");\n        house.setAreaUsed(sc.nextFloat());\n        System.out.println(\"input floor\");\n        house.setNumberOfFloor(sc.nextInt());\n        System.out.println(\"input Standard Room\");\n        house.setStandardRoom(sc.nextLine());\n        System.out.println(\"input Price\");\n        house.setRentalCosts(sc.nextFloat());\n        System.out.println(\"maximum people\");\n        house.setMaximumPeople(sc.nextInt());\n        WriteFileCsv(house);\n\n    }", "timestamp": "2023-06-28T02:24:21.221771Z", "repo_name": "nguyenhoatho/C0221G1_nguyenhoatho", "path": "/module2/main/java/service/house/HouseServiceIml.java", "source": "the-stack-v2", "method_name": "addNewHouse", "class_name": "HouseServiceIml", "index": 294, "label": 1}
{"input": "protected void putPermission(AclEntryImpl entry) {\n    if (access == ParserConstants.RO) {\n       \n       \n       entry.addPermission(com.sun.jmx.snmp.IPAcl.SnmpAcl.getREAD());\n    }\n    if (access == ParserConstants.RW) {\n       \n       \n       entry.addPermission(com.sun.jmx.snmp.IPAcl.SnmpAcl.getREAD());\n       entry.addPermission(com.sun.jmx.snmp.IPAcl.SnmpAcl.getWRITE());\n    }\n  }", "timestamp": "2023-05-14T11:18:19.429673Z", "repo_name": "petterobam/study-jdk", "path": "/src/jdk/com/sun/jmx/snmp/IPAcl/JDMAccess.java", "source": "the-stack-v2", "method_name": "putPermission", "class_name": "JDMAccess", "index": 295, "label": 1}
{"input": "private void addField(final View view, final Axes axes, final ObjectAdapter object, final ObjectAssociation field) {\n        final ObjectAdapter value = field.get(object);\n        View fieldView;\n        fieldView = createFieldView(view, axes, object, field, value);\n        if (fieldView != null) {\n            view.addView(decorateSubview(axes, fieldView));\n        } else {\n            view.addView(new FieldErrorView(\"No field for \" + value));\n        }\n    }", "timestamp": "2021-01-17T11:09:18.879033Z", "repo_name": "mukulashokjoshi/apache-isis", "path": "/framework/viewer/dnd/src/main/java/org/apache/isis/viewer/dnd/table/TableCellBuilder.java", "source": "the-stack-v2", "method_name": "addField", "class_name": "TableCellBuilder", "index": 296, "label": 1}
{"input": "public Criteria andVdef4LessThanOrEqualTo(String value) {\r\n            addCriterion(\"VDEF4 <=\", value, \"vdef4\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef4LessThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 297, "label": 1}
{"input": "public void addApplicationLifecycleListener(Object listener) {\n        int len = applicationLifecycleListenersObjects.length;\n        Object[] newListeners = Arrays.copyOf(\n                applicationLifecycleListenersObjects, len + 1);\n        newListeners[len] = listener;\n        applicationLifecycleListenersObjects = newListeners;\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "addApplicationLifecycleListener", "class_name": "StandardContext", "index": 298, "label": 1}
{"input": "public Query pullChanges(String wallclockStartTime, String wallclockEndTime)\n      throws FeatureStoreException, ParseException {\n    this.setLeftFeatureGroupStartTime(utils.getTimeStampFromDateString(wallclockStartTime));\n    this.setLeftFeatureGroupEndTime(utils.getTimeStampFromDateString(wallclockEndTime));\n    return this;\n  }", "timestamp": "2023-08-17T00:59:45.862350Z", "repo_name": "davitbzh/FlinkAggJob", "path": "/flink/src/main/java/com/logicalclocks/hsfs/constructor/Query.java", "source": "the-stack-v2", "method_name": "pullChanges", "class_name": "Query", "index": 299, "label": 1}
{"input": "private void unSpawnFlags()\n\t{\n\t\tif (FortSiegeManager.getInstance().getFlagList(getFort().getResidenceId()) == null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tfor (CombatFlag cf : FortSiegeManager.getInstance().getFlagList(getFort().getResidenceId()))\n\t\t{\n\t\t\tcf.unSpawnMe();\n\t\t}\n\t}", "timestamp": "2021-01-10T03:42:04.091432Z", "repo_name": "soultobe/L2JOlivia_EpicEdition", "path": "/java/com/l2jolivia/gameserver/model/entity/FortSiege.java", "source": "the-stack-v2", "method_name": "unSpawnFlags", "class_name": "FortSiege", "index": 300, "label": 1}
{"input": "public Criteria andLogTimeNotIn(List<Timestamp> values) {\n            addCriterion(\"log_time not in\", values, \"logTime\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andLogTimeNotIn", "class_name": "GeneratedCriteria", "index": 301, "label": 1}
{"input": "@Override\n    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        \n        getActivity().setTitle(\"Islamic History\");\n    }", "timestamp": "2020-05-21T18:13:03.136623Z", "repo_name": "saarahasad/Arabiyah-Classes-Android-Application", "path": "/app/src/main/java/com/example/apple/project4/IslamicHistoryFragment.java", "source": "the-stack-v2", "method_name": "onViewCreated", "class_name": "IslamicHistoryFragment", "index": 302, "label": 1}
{"input": "@CamundaQueryParam(value=\"failureLog\", converter = BooleanConverter.class)\n  public void setFailureLog(Boolean failureLog) {\n    this.failureLog = failureLog;\n  }", "timestamp": "2020-05-05T11:21:15.055791Z", "repo_name": "rezza72/camunda-bpm-platform", "path": "/engine-rest/engine-rest/src/main/java/org/camunda/bpm/engine/rest/dto/history/HistoricJobLogQueryDto.java", "source": "the-stack-v2", "method_name": "setFailureLog", "class_name": "HistoricJobLogQueryDto", "index": 303, "label": 1}
{"input": "@Test\n\tvoid testExecuteStringMultiply() {\n\t\tString addResult = Calculator.parseSimpleOperation(\"   4  * 2   \");\n\t\tassertEquals(\"8\", addResult);\n\t}", "timestamp": "2020-04-10T17:42:49.574277Z", "repo_name": "lewisgrass/ezo", "path": "/src/test/java/com/gmail/danslclo/CalculatorTest.java", "source": "the-stack-v2", "method_name": "testExecuteStringMultiply", "class_name": "CalculatorTest", "index": 304, "label": 1}
{"input": "@Test\n\tpublic void createTable(){\n\t\tString nativeQuerySql=\"create table foo(name char(10) ,age char(3));\";\n\t\texecuteNativeSql(nativeQuerySql);\n\t}", "timestamp": "2021-01-12T08:33:32.073792Z", "repo_name": "AdamBobFei/testHibernate", "path": "/src/test/java/testHibernate/testHibernateNativeSql.java", "source": "the-stack-v2", "method_name": "createTable", "class_name": "testHibernateNativeSql", "index": 305, "label": 1}
{"input": "public PrimitiveTypeContext primitiveType() {\n\t\t\treturn getRuleContext(PrimitiveTypeContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "primitiveType", "class_name": "CreatedNameContext", "index": 306, "label": 1}
{"input": "String getLastPart() {\n        return scanner.getPart(parsePosition, scanner.getTokenPosition());\n    }", "timestamp": "2023-09-03T10:33:34.963710Z", "repo_name": "svn2github/hsqldb", "path": "/base/branches/odbcproto1/src/org/hsqldb/ParserBase.java", "source": "the-stack-v2", "method_name": "getLastPart", "class_name": "ParserBase", "index": 307, "label": 1}
{"input": "public Criteria andSystemSourceLike(String value) {\n            addCriterion(\"system_source like\", value, \"systemSource\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andSystemSourceLike", "class_name": "GeneratedCriteria", "index": 308, "label": 1}
{"input": "@Test\n    public void testWithSerializedContextData() throws Throwable {\n        when(request.getHeader(SW6CarrierItem.HEADER_NAME)).thenReturn(\"1-MC4wLjA=-MS4yMzQuMTEx-3-1-1-IzE5Mi4xNjguMS44OjE4MDAy-Iy9wb3J0YWwv-Iy90ZXN0RW50cnlTcGFu\");\n\n        tomcatInvokeInterceptor.beforeMethod(enhancedInstance, null, arguments, argumentType, methodInterceptResult);\n        tomcatInvokeInterceptor.afterMethod(enhancedInstance, null, arguments, argumentType, null);\n\n        assertThat(segmentStorage.getTraceSegments().size(), is(1));\n        TraceSegment traceSegment = segmentStorage.getTraceSegments().get(0);\n        List<AbstractTracingSpan> spans = SegmentHelper.getSpans(traceSegment);\n\n        assertHttpSpan(spans.get(0));\n        assertTraceSegmentRef(traceSegment.getRefs().get(0));\n    }", "timestamp": "2021-01-02T16:56:37.447564Z", "repo_name": "amogege/skywalking", "path": "/apm-sniffer/apm-sdk-plugin/tomcat-7.x-8.x-plugin/src/test/java/org/apache/skywalking/apm/plugin/tomcat78x/TomcatInvokeInterceptorTest.java", "source": "the-stack-v2", "method_name": "testWithSerializedContextData", "class_name": "TomcatInvokeInterceptorTest", "index": 309, "label": 1}
{"input": "@Override\n\tpublic SuccessMessageDisplayInterface getApplyToMeasureSuccessMsg() {\n\t\treturn successMessagePanel;\n\t}", "timestamp": "2021-01-18T19:53:17.807267Z", "repo_name": "michaelaltmann/MeasureAuthoringTool_LatestSprint", "path": "/mat/src/mat/client/clause/QDMAvailableValueSetWidget.java", "source": "the-stack-v2", "method_name": "getApplyToMeasureSuccessMsg", "class_name": "QDMAvailableValueSetWidget", "index": 310, "label": 1}
{"input": "public VariableDeclaratorsContext variableDeclarators() {\n\t\t\treturn getRuleContext(VariableDeclaratorsContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "variableDeclarators", "class_name": "FieldDeclarationContext", "index": 311, "label": 1}
{"input": "private void addArgs(StringBuilder sb) {\n        \n        for (int i = 0; i < args.length; i++) {\n            sb.append(args[i]);\n            if (i < args.length-1)\n                sb.append(\", \");\n        }\n    }", "timestamp": "2023-01-24T07:07:29.583737Z", "repo_name": "ForgeRock/openicf-xml-connector-community-edition", "path": "/src/main/java/com/forgerock/openicf/xml/query/FunctionQuery.java", "source": "the-stack-v2", "method_name": "addArgs", "class_name": "FunctionQuery", "index": 312, "label": 1}
{"input": "public void testBug110060_TypePattern11() throws CoreException {\n\tsetUpBug110060_TypePattern();\n\tsearch(\"AxxA\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_MATCH);\n\tassertSearchResults(\n\t\t\"src/b110060/Test.java b110060.Test.a6 [AxxAyy] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_TypePattern11", "class_name": "JavaSearchBugsTests", "index": 313, "label": 1}
{"input": "@Override\n\tpublic String onTalk(L2Npc npc, L2PcInstance player)\n\t{\n\t\tfinal QuestState qs = getQuestState(player, true);\n\t\tString htmltext = getNoQuestMsg(player);\n\t\t\n\t\tswitch (qs.getState())\n\t\t{\n\t\t\tcase State.CREATED:\n\t\t\t\thtmltext = \"33963-01.htm\";\n\t\t\t\tbreak;\n\t\t\tcase State.STARTED:\n\t\t\t\thtmltext = (qs.isCond(1)) ? \"33963-04.html\" : \"33963-05.html\";\n\t\t\t\tbreak;\n\t\t\tcase State.COMPLETED:\n\t\t\t\thtmltext = getAlreadyCompletedMsg(player);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn htmltext;\n\t}", "timestamp": "2021-01-13T10:30:20.094599Z", "repo_name": "singto53/underground", "path": "/dist/game/data/scripts/quests/Q10758_TheOathOfTheWind/Q10758_TheOathOfTheWind.java", "source": "the-stack-v2", "method_name": "onTalk", "class_name": "Q10758_TheOathOfTheWind", "index": 314, "label": 1}
{"input": "@Test\n    @Transactional\n    void putWithMissingIdPathParamTransaction() throws Exception {\n        int databaseSizeBeforeUpdate = transactionRepository.findAll().size();\n        transaction.setId(count.incrementAndGet());\n\n        \n        restTransactionMockMvc\n            .perform(\n                put(ENTITY_API_URL)\n                    .with(csrf())\n                    .contentType(MediaType.APPLICATION_JSON)\n                    .content(TestUtil.convertObjectToJsonBytes(transaction))\n            )\n            .andExpect(status().isMethodNotAllowed());\n\n        \n        List<Transaction> transactionList = transactionRepository.findAll();\n        assertThat(transactionList).hasSize(databaseSizeBeforeUpdate);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "putWithMissingIdPathParamTransaction", "class_name": "TransactionResourceIT", "index": 315, "label": 1}
{"input": "public Criteria andTopicIdNotIn(List<Integer> values) {\r\n            addCriterion(\"topic_id not in\", values, \"topicId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2021-05-08T12:41:18.691106Z", "repo_name": "suoyiguke/weixinparent", "path": "/weixinpojo/src/main/java/com/yinkai/entities/ImageExample.java", "source": "the-stack-v2", "method_name": "andTopicIdNotIn", "class_name": "GeneratedCriteria", "index": 316, "label": 1}
{"input": "public Criteria andUsernameLessThan(String value) {\r\n            addCriterion(\"USERNAME <\", value, \"username\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andUsernameLessThan", "class_name": "GeneratedCriteria", "index": 317, "label": 1}
{"input": "@Transactional\n\tpublic void bulkInsert(List<ReportTmpMapping> list) {\n\t\tfor (ReportTmpMapping reportTmpMapping : list) {\n\t\t\tif (StringUtils.isEmpty(reportTmpMapping.getId())) {\n\t\t\t\treportTmpMapping.setId(idGenerator.getNextId(\"REPORT_TMP_MAPPING\"));\n\t\t\t}\n\t\t}\n\t\tif (StringUtils.equals(DBUtils.ORACLE, DBConnectionFactory.getDatabaseType())) {\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t}\n\t}", "timestamp": "2021-05-08T16:38:30.406098Z", "repo_name": "eosite/openyourarm", "path": "/glaf-web/src/main/java/com/glaf/report/core/service/ReportTmpMappingServiceImpl.java", "source": "the-stack-v2", "method_name": "bulkInsert", "class_name": "ReportTmpMappingServiceImpl", "index": 318, "label": 1}
{"input": "private void nextTrial() {\n \t\tif (mTrialNum >= mTrials[mSetIndex].length) {\n \t\t\tnextBlock();\n \t\t\treturn;\n \t\t}\n \t\t\n \t\tmTrialStart = System.nanoTime();\n \t\tmUITime = 0;\n \t\tmNumErrors = 0;\n \t\tmTimesPainted = 0;\n \t\tmErrors = new StringBuilder();\n \n \t\tmTrialIndex = mTrialOrder[mTrialNum];\n \t\tmTrialNum++;\n \t\t\n \t\tmToSelect = new LinkedHashSet<String>(Arrays.asList(mTrials[mSetIndex][mTrialIndex]));\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/3/3_4cd8a69f6192f2d8f84b9f96771db798e04f1b40/StudyController/3_4cd8a69f6192f2d8f84b9f96771db798e04f1b40_StudyController_s.java", "source": "the-stack-v2", "method_name": "nextTrial", "class_name": "StudyController", "index": 319, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        init();\n    }", "timestamp": "2021-05-31T01:02:53.417110Z", "repo_name": "phndavid/calculator", "path": "/Calculator/app/src/main/java/com/master/ndavid/calculator/MainActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "MainActivity", "index": 320, "label": 1}
{"input": "@Test(timeout = 10000)\n     public void testStringSlice() throws ConfigCompileException {\n         SRun(\"msg('slice'[2..])\", fakePlayer);\n         verify(fakePlayer).sendMessage(\"ice\");\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/19/19_3b3438a24e33893035d2c602198d49ca13a35845/ArrayHandlingTest/19_3b3438a24e33893035d2c602198d49ca13a35845_ArrayHandlingTest_s.java", "source": "the-stack-v2", "method_name": "testStringSlice", "class_name": "ArrayHandlingTest", "index": 321, "label": 1}
{"input": "@Override \n        public void getCdmaSubscriptionSourceResponse(RadioResponseInfo info, int source) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            _hidl_request.writeInt32(source);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(94, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "getCdmaSubscriptionSourceResponse", "class_name": "Proxy", "index": 322, "label": 1}
{"input": "@Override\n        public Iterable<String> get(ChangeData input, FillArgs args)\n            throws OrmException {\n          return firstNonNull(input.currentFilePaths(),\n              ImmutableList.<String> of());\n        }", "timestamp": "2021-01-16T21:01:21.667768Z", "repo_name": "runt18/gerrit", "path": "/gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeField.java", "source": "the-stack-v2", "method_name": "get", "class_name": "ChangeField", "index": 323, "label": 1}
{"input": "void reset(String sql) {\n\n        scanner.reset(sql);\n\n        \n        parsePosition             = 0;\n        isCheckOrTriggerCondition = false;\n        isSchemaDefinition        = false;\n        isRecording               = false;\n        recordedStatement         = null;\n    }", "timestamp": "2023-09-03T10:33:34.963710Z", "repo_name": "svn2github/hsqldb", "path": "/base/branches/odbcproto1/src/org/hsqldb/ParserBase.java", "source": "the-stack-v2", "method_name": "reset", "class_name": "ParserBase", "index": 324, "label": 1}
{"input": "public String globalInfo() {\n    return \n        \"Learn SVM for regression using SMO with Shevade, Keerthi, et al. \" \n      + \"adaption of the stopping criterion.\\n\\n\"\n      + \"For more information see:\\n\\n\"\n      + getTechnicalInformation().toString();\n  }", "timestamp": "2023-04-14T12:37:30.510795Z", "repo_name": "suhitaghosh10/Tune2Timeseries", "path": "/src/main/java/org/ovgu/de/classifier/functions/supportVector/RegSMOImproved.java", "source": "the-stack-v2", "method_name": "globalInfo", "class_name": "RegSMOImproved", "index": 325, "label": 1}
{"input": "public Criteria andVdef6LessThan(String value) {\r\n            addCriterion(\"VDEF6 <\", value, \"vdef6\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef6LessThan", "class_name": "GeneratedCriteria", "index": 326, "label": 1}
{"input": "public void stopRead(String s, long stamp){\n        System.out.println(\"Reader: \" + s + \" stopped reading.\");\n        lock.unlockRead(stamp);                         \n    }", "timestamp": "2020-03-23T01:49:29.861074Z", "repo_name": "ChrisKour/University-Projects", "path": "/Readers Writers/Stamped Lock/Buffer.java", "source": "the-stack-v2", "method_name": "stopRead", "class_name": "Buffer", "index": 327, "label": 1}
{"input": "private void addAuto(Note note) {\n\t\tsearchByUUID(note.getParentUUID()).add(new DefaultMutableTreeNode(note));\n\t}", "timestamp": "2021-01-18T01:40:35.930601Z", "repo_name": "BenKettlewell/couchburp", "path": "/src/main/java/com/prevsec/couchburp/controller/BurpController.java", "source": "the-stack-v2", "method_name": "addAuto", "class_name": "BurpController", "index": 328, "label": 1}
{"input": "@Override\r\n    public void handleUpdateState(Object state, Object arg) {\r\n        mState.icon = iconFromResId(R.drawable.ic_qs_volume);\r\n        super.handleUpdateState(state, arg);\r\n    }", "timestamp": "2022-12-11T12:38:58.964325Z", "repo_name": "Firefds/GravityBox", "path": "/src/com/ceco/oreo/gravitybox/quicksettings/VolumeTile.java", "source": "the-stack-v2", "method_name": "handleUpdateState", "class_name": "VolumeTile", "index": 329, "label": 1}
{"input": "public String showTicketNumberName() {\n\t\tString data = \"チケット名:チケット番号=\";\n\t\t\n\t\tfor(Ticket t:ticketList) {\n\t\t\tdata+=t.getTicketName();\n\t\t\tdata+=\":\";\n\t\t\tdata+=t.getTicketNumber();\n\t\t\tdata+=\"=\";\n\t\t}\n\t\t\n\t\treturn data;\n\t}", "timestamp": "2022-11-16T04:41:18.855632Z", "repo_name": "TakedaMasashi46/Team5", "path": "/04_implementation/src/hanpuku1/database/TicketList.java", "source": "the-stack-v2", "method_name": "showTicketNumberName", "class_name": "TicketList", "index": 330, "label": 1}
{"input": "public String rowString(int index){\r\n\t\tString result = \"\";\r\n\t\tVector<Object> vector = data.get(index);\r\n\t\tfor (Object object: vector)\r\n\t\t\tif (object!=null)\r\n\t\t\t\tresult +=\" \"+object.toString();\r\n\t\treturn result;\r\n\t}", "timestamp": "2022-07-01T16:52:01.783312Z", "repo_name": "JaroslawHryszko/MISTA", "path": "/src/edit/GeneralTableModel.java", "source": "the-stack-v2", "method_name": "rowString", "class_name": "GeneralTableModel", "index": 331, "label": 1}
{"input": "@Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      W3CDom w3CDom0 = new W3CDom();\n      Document document0 = Parser.parse(\"~&%fsQ71hr9\", \"~&%fsQ71hr9\");\n      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);\n      \n\n        w3CDom0.convert(document0, document1);\n\n      \n\n\n  }", "timestamp": "2022-11-25T00:39:58.983828Z", "repo_name": "pderakhshanfar/EMSE-BBC-experiment", "path": "/tests-without-trycatch/Jsoup-84/org.jsoup.helper.W3CDom/default/11/org/jsoup/helper/W3CDom_ESTest.java", "source": "the-stack-v2", "method_name": "test06", "class_name": "W3CDom_ESTest", "index": 332, "label": 1}
{"input": "public static int GetNetAP(Context context) {\n        if (context == null) {\n            return 0;\n        }\n        ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService(\"connectivity\");\n        if (connectivityManager == null) {\n            return 0;\n        }\n        NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();\n        if (activeNetworkInfo == null) {\n            return 0;\n        }\n        if (\"wifi\".equalsIgnoreCase(activeNetworkInfo.getTypeName())) {\n            return 1;\n        }\n        return 2;\n    }", "timestamp": "2022-01-27T12:48:43.446804Z", "repo_name": "jambestwick/HackWechat", "path": "/app/src/main/java/com/tencent/qqvideo/proxy/common/VcSystemInfo.java", "source": "the-stack-v2", "method_name": "GetNetAP", "class_name": "VcSystemInfo", "index": 333, "label": 1}
{"input": "public void addCategories(List<VatLy1Category> categories ){\n        db = getWritableDatabase();\n        for(VatLy1Category category:categories){\n            insertCategory(category);\n        }\n    }", "timestamp": "2023-01-18T20:19:28.045856Z", "repo_name": "DongPhamBK/DaiCuongBachKhoa2", "path": "/DaiCuongFirstApp - v1.1/app/src/main/java/com/project/daicuongbachkhoa/ui/vatly1/VatLy1QuizDbHelper.java", "source": "the-stack-v2", "method_name": "addCategories", "class_name": "VatLy1QuizDbHelper", "index": 334, "label": 1}
{"input": "@Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n\n        \n        if (modelAndView == null || modelAndView.getViewName() == null) {\n            return;\n        }\n\n        \n        if (!modelAndView.getViewName().endsWith(\"html\")) {\n            return;\n        }\n\n        ShiroUser user = ShiroKit.getUser();\n\n        if (user == null) {\n            throw new AuthenticationException(\"当前没有登录账号！\");\n        } else {\n            modelAndView.addObject(\"name\", user.getName());\n            modelAndView.addObject(\"avatar\", DefaultImages.defaultAvatarUrl());\n            modelAndView.addObject(\"email\", user.getEmail());\n        }\n    }", "timestamp": "2023-07-03T21:21:21.464250Z", "repo_name": "gechangjiang/wms", "path": "/code/tdt-base-support/tdt-sys/src/main/java/com/tdt/sys/core/attribute/AttributeSetInteceptor.java", "source": "the-stack-v2", "method_name": "postHandle", "class_name": "AttributeSetInteceptor", "index": 335, "label": 1}
{"input": "@Test\r\n    public void addition_isCorrect() throws Exception {\r\n        assertEquals(4, 2 + 2);\r\n    }", "timestamp": "2021-01-01T04:07:23.345913Z", "repo_name": "HappinessBot/AndroidApp", "path": "/Project/Smiley/app/src/test/java/com/peikova/gery/happy/ExampleUnitTest.java", "source": "the-stack-v2", "method_name": "addition_isCorrect", "class_name": "ExampleUnitTest", "index": 336, "label": 1}
{"input": "private void qtThreadSaveModel(final JQMLListModel<?> model) {\r\n\t\tscheduled.remove(model.getModelName());\r\n\t\tfinal ByteArrayOutputStream stream = new ByteArrayOutputStream();\r\n\t\ttry {\r\n\t\t\tmodel.serialize(stream, null, rootKeysToPersist);\r\n\t\t\tsaveModel(model.getModelName(), stream.toByteArray());\r\n\t\t} catch (final IOException e) {\r\n\t\t\tlog.warn(\"Failed to persist \" + model.getModelName(), e);\r\n\t\t}\r\n\t}", "timestamp": "2023-07-03T22:35:13.204983Z", "repo_name": "sdankbar/jaqumal", "path": "/library/src/main/java/com/github/sdankbar/qml/persistence/QMLThreadPersistanceTask.java", "source": "the-stack-v2", "method_name": "qtThreadSaveModel", "class_name": "QMLThreadPersistanceTask", "index": 337, "label": 1}
{"input": "public Criteria andUserIdIn(List<Integer> values) {\n            addCriterion(\"user_id in\", values, \"userId\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andUserIdIn", "class_name": "GeneratedCriteria", "index": 338, "label": 1}
{"input": "public static void main(String args[])\n {\n  int i = 1;\n  \n  do\n  {\n   System.out.println(i);\n   i++;\n  }while( i <= 5);\n }", "timestamp": "2023-08-20T23:53:39.694347Z", "repo_name": "yveslox/Genesisras", "path": "/practice-code-blue/programme-java/do-whileloop.java", "source": "the-stack-v2", "method_name": "main", "class_name": "dowhileloop", "index": 339, "label": 1}
{"input": "public UpdateAvailability updateAvailability(com.google.api.services.doubleclicksearch.model.UpdateAvailabilityRequest content) throws java.io.IOException {\n      UpdateAvailability result = new UpdateAvailability(content);\n      initialize(result);\n      return result;\n    }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "updateAvailability", "class_name": "Conversion", "index": 340, "label": 1}
{"input": "@JavascriptInterface\n    public void closeinterstitialad() {\n        if (this.isInterstitial) {\n            final AdMarvelActivity adMarvelActivity = (AdMarvelActivity)this.adMarvelActivityReference.get();\n            if (adMarvelActivity != null) {\n                final d d = (d)this.adMarvelInternalWebViewReference.get();\n                if (d == null || !d.b()) {\n                    adMarvelActivity.g();\n                }\n            }\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "closeinterstitialad", "class_name": "AdMarvelWebViewJSInterface", "index": 341, "label": 1}
{"input": "@Override\n      public Update setCallback(java.lang.String callback) {\n        return (Update) super.setCallback(callback);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setCallback", "class_name": "Update", "index": 342, "label": 1}
{"input": "@Override\n    public ClientContext clientContext() {\n        String namespace = ApiConstants.NAMESPACE;\n        String name = ApiConstants.Events.SpeechState.NAME;\n        Header header = new Header(namespace, name);\n        VoiceOutputStatePayload payload = new VoiceOutputStatePayload(lastSpeakToken,\n                mediaPlayer.getCurrentPosition(),\n                speechState.name());\n        return new ClientContext(header, payload);\n    }", "timestamp": "2020-03-18T20:34:35.302007Z", "repo_name": "exiaoqu/BluetoothDemo", "path": "/app/src/main/java/com/baidu/duer/dcs/devicemodule/voiceoutput/VoiceOutputDeviceModule.java", "source": "the-stack-v2", "method_name": "clientContext", "class_name": "VoiceOutputDeviceModule", "index": 343, "label": 1}
{"input": "public void clearSiegeClan()\n\t{\n\t\ttry (Connection con = DatabaseFactory.getInstance().getConnection();\n\t\t\tPreparedStatement ps = con.prepareStatement(\"DELETE FROM fortsiege_clans WHERE fort_id=?\"))\n\t\t{\n\t\t\tps.setInt(1, getFort().getResidenceId());\n\t\t\tps.execute();\n\t\t\t\n\t\t\tif (getFort().getOwnerClan() != null)\n\t\t\t{\n\t\t\t\ttry (PreparedStatement delete = con.prepareStatement(\"DELETE FROM fortsiege_clans WHERE clan_id=?\"))\n\t\t\t\t{\n\t\t\t\t\tdelete.setInt(1, getFort().getOwnerClan().getId());\n\t\t\t\t\tdelete.execute();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tgetAttackerClans().clear();\n\t\t\t\n\t\t\t\n\t\t\tif (isInProgress())\n\t\t\t{\n\t\t\t\tendSiege();\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif (_siegeStartTask != null)\n\t\t\t{\n\t\t\t\t_siegeStartTask.cancel(true);\n\t\t\t\t_siegeStartTask = null;\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\t_log.log(Level.WARNING, \"Exception: clearSiegeClan(): \" + e.getMessage(), e);\n\t\t}\n\t}", "timestamp": "2021-01-10T03:42:04.091432Z", "repo_name": "soultobe/L2JOlivia_EpicEdition", "path": "/java/com/l2jolivia/gameserver/model/entity/FortSiege.java", "source": "the-stack-v2", "method_name": "clearSiegeClan", "class_name": "FortSiege", "index": 344, "label": 1}
{"input": "private SeriesToChartGroupRecord createSeriesToChartGroupRecord()\n    {\n        return new SeriesToChartGroupRecord();\n    }", "timestamp": "2023-01-11T02:29:36.328694Z", "repo_name": "DXYyang/SDP", "path": "/sourcedata/poi-REL_3_0/src/scratchpad/src/org/apache/poi/hssf/usermodel/HSSFChart.java", "source": "the-stack-v2", "method_name": "createSeriesToChartGroupRecord", "class_name": "HSSFChart", "index": 345, "label": 1}
{"input": "public void paySys(Passenger bp){\n\t\tSystem.out.println(busNum+\"번 버스에 승객이 탑승하였습니다.\");\n\t\t\n\t\tif(bp != null){\n\t\t\tbp.showAll();\n\t\t}else {\n\t\t\tSystem.out.println(\"승객이 없습니다.\");\n\t\t}\n\t}", "timestamp": "2021-01-13T16:42:11.779798Z", "repo_name": "paul2oh/new_java", "path": "/javastart/src/javastart/b01_object/C05_Bus.java", "source": "the-stack-v2", "method_name": "paySys", "class_name": "Bus", "index": 346, "label": 1}
{"input": "@Override\n\tpublic double calculaSalarioComImposto(Funcionario funcionario) {\n\t\tif (funcionario.getSalarioBase() > 2000) {\n\t\t\treturn funcionario.getSalarioBase() * 0.85;\n\t\t}\n\t\treturn funcionario.getSalarioBase() * 0.9;\n\t}", "timestamp": "2021-07-09T01:42:37.295234Z", "repo_name": "mauriciomanoel/AESODESENV32015.2", "path": "/src/br/aeso/aula24/CalculoImpostoQuinzeOuDez.java", "source": "the-stack-v2", "method_name": "calculaSalarioComImposto", "class_name": "CalculoImpostoQuinzeOuDez", "index": 347, "label": 1}
{"input": "@Override\n  public CacheType unparseServiceConfiguration(CacheConfiguration<?, ?> cacheConfiguration, CacheType cacheType) {\n    U serviceConfig = ServiceUtils.findSingletonAmongst(configType, cacheConfiguration.getServiceConfigurations());\n    if (serviceConfig == null) {\n      return cacheType;\n    } else {\n      OUT foo = getter.apply(cacheType);\n      if (foo == null) {\n        setter.accept(cacheType, unparser.apply(serviceConfig));\n      } else {\n        setter.accept(cacheType, merger.apply(foo, unparser.apply(serviceConfig)));\n      }\n      return cacheType;\n    }\n  }", "timestamp": "2020-03-22T19:15:31.802788Z", "repo_name": "mangotomato/ehcache3", "path": "/xml/src/main/java/org/ehcache/xml/service/SimpleCoreServiceConfigurationParser.java", "source": "the-stack-v2", "method_name": "unparseServiceConfiguration", "class_name": "SimpleCoreServiceConfigurationParser", "index": 348, "label": 1}
{"input": "@Test\n\tvoid testBringToFront2() {\n\t\tleaf4.bringToFront();\n\t\tassert List.of(leaf4, leaf5).equals(group2.getSubgroups());\n\t\tleaf4.bringToFront();\n\t\tassert List.of(leaf4, leaf5).equals(group2.getSubgroups());\n\t\tleaf5.bringToFront();\n\t\tassert List.of(leaf5, leaf4).equals(group2.getSubgroups());\n\t\tleaf5.bringToFront();\n\t\tassert List.of(leaf5, leaf4).equals(group2.getSubgroups());\n\t\tleaf4.bringToFront();\n\t\tassert List.of(leaf4, leaf5).equals(group2.getSubgroups());\n\t}", "timestamp": "2023-06-17T03:00:53.904887Z", "repo_name": "AdiBad/drawit", "path": "/drawit/tests/shapegroups2/ShapeGroupTest_Nonleaves_2Levels.java", "source": "the-stack-v2", "method_name": "testBringToFront2", "class_name": "ShapeGroupTest_Nonleaves_2Levels", "index": 349, "label": 1}
{"input": "public void testDownload() {\n        List<ICICITransaction> transactions = new TransactionDownloader(new PMDate(1, 6, 2008), new PMDate(23, 6, 2008)).download();\n        assertEquals(5, transactions.size());\n        TransactionVO ranbaxyBuy = new ICICITransaction(new PMDate(11, 6, 2008), \"RANLAB\", AppConst.TRADINGTYPE.Buy, 30f, 571f, 165.76f, false, \"20080611N600020451\");\n        assertEquals(ranbaxyBuy, transactions.get(0));\n        TransactionVO suntvSell = new ICICITransaction(new PMDate(10, 6, 2008), \"SUNTV\", AppConst.TRADINGTYPE.Sell, 25f, 338.1f, 18.97f, true, \"20080610N900008911\");\n        assertEquals(suntvSell, transactions.get(1));\n    }", "timestamp": "2021-01-01T15:51:02.130554Z", "repo_name": "thaond/pm2", "path": "/externalTest/pm/net/icici/TransactionDownloaderExternalTest.java", "source": "the-stack-v2", "method_name": "testDownload", "class_name": "TransactionDownloaderExternalTest", "index": 350, "label": 1}
{"input": "public static void main(String[] args) {\n        SpringApplication.run(ZuulGatewayApp.class, args);\n    }", "timestamp": "2023-01-15T02:02:58.994008Z", "repo_name": "bellmit/jmhshop", "path": "/zuul_gateway/src/main/java/com/zuulGateway/ZuulGatewayApp.java", "source": "the-stack-v2", "method_name": "main", "class_name": "ZuulGatewayApp", "index": 351, "label": 1}
{"input": "public void testSetConfigPropertiesInvalidFormat()\n    {\n        \n        startDummyMain(\"-prop namevalue\");\n        assertTrue(\"expected exception did not occur\",\n                _startupException instanceof IllegalArgumentException);\n\n        \n        startDummyMain(\"-prop =value\");\n        assertTrue(\"expected exception did not occur\",\n                _startupException instanceof IllegalArgumentException);\n    }", "timestamp": "2022-06-16T21:32:19.633099Z", "repo_name": "scholzj/qpid-java", "path": "/broker/src/test/java/org/apache/qpid/server/MainTest.java", "source": "the-stack-v2", "method_name": "testSetConfigPropertiesInvalidFormat", "class_name": "MainTest", "index": 352, "label": 1}
{"input": "public Criteria andModifyTimeNotEqualTo(Date value) {\n            addCriterion(\"modify_time <>\", value, \"modifyTime\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andModifyTimeNotEqualTo", "class_name": "GeneratedCriteria", "index": 353, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByNameIsNullOrNotNull() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        \n        defaultTransactionShouldBeFound(\"name.specified=true\");\n\n        \n        defaultTransactionShouldNotBeFound(\"name.specified=false\");\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByNameIsNullOrNotNull", "class_name": "TransactionResourceIT", "index": 354, "label": 1}
{"input": "public static void main(String args[]) {\n        java.awt.EventQueue.invokeLater(new Runnable() {\n\n            public void run() {\n                diagUnidadInvestigacion dialog = new diagUnidadInvestigacion(new javax.swing.JFrame(), true, new String());\n                dialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\n                    public void windowClosing(java.awt.event.WindowEvent e) {\n                        System.exit(0);\n                    }\n                });\n                dialog.setVisible(true);\n            }\n        });\n    }", "timestamp": "2021-06-04T03:02:13.867648Z", "repo_name": "victornavelino/ProyectoUno", "path": "/src/vista/panelControl/diagUnidadInvestigacion.java", "source": "the-stack-v2", "method_name": "main", "class_name": "diagUnidadInvestigacion", "index": 355, "label": 1}
{"input": "@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\r\n\tpublic Class getColumnClass(int columnIndex) {\r\n\n\n        return String.class;\r\n    }", "timestamp": "2022-07-01T16:52:01.783312Z", "repo_name": "JaroslawHryszko/MISTA", "path": "/src/edit/GeneralTableModel.java", "source": "the-stack-v2", "method_name": "getColumnClass", "class_name": "GeneralTableModel", "index": 356, "label": 1}
{"input": "@RequiresApi(api = Build.VERSION_CODES.KITKAT)\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n\n        initView();\n        initData();\n        initListener();\n    }", "timestamp": "2020-03-11T01:03:28.826526Z", "repo_name": "ynztlxdeai/SmsSender", "path": "/app/src/main/java/com/vincent/luoxiang/smsmanager/MainActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "MainActivity", "index": 357, "label": 1}
{"input": "public boolean hasPathSum2(TreeNode root, int sum) {\r\n\t\treturn root != null && doProbe(root, sum);\r\n\t}", "timestamp": "2020-12-24T15:14:32.605376Z", "repo_name": "flamearrow/Solutions", "path": "/src/pathSum/Solution.java", "source": "the-stack-v2", "method_name": "hasPathSum2", "class_name": "Solution", "index": 358, "label": 1}
{"input": "protected void onScrollChanged(int l, int t, int oldl, int oldt) {\n        Collect.getInstance().getActivityLogger().logScrollAction(this, t - oldt);\n    }", "timestamp": "2021-06-23T10:37:16.452332Z", "repo_name": "tamsir/collect", "path": "/collect_app/src/main/java/org/odk/collect/android/views/ODKView.java", "source": "the-stack-v2", "method_name": "onScrollChanged", "class_name": "ODKView", "index": 359, "label": 1}
{"input": "@Test\n\tpublic void testExplicitSendMonoErrorOnGet() {\n\t\tDisposableServer server =\n\t\t\t\tHttpServer.create()\n\t\t\t\t          .port(0)\n\t\t\t\t          .handle((req, res) -> res.send(req.receive().retain()))\n\t\t\t\t          .bindNow();\n\n\t\tConnectionProvider pool = ConnectionProvider.fixed(\"test\", 1);\n\n\t\tStepVerifier.create(\n\t\t\t\tFlux.range(0, 1000)\n\t\t\t\t    .flatMapDelayError(i ->\n\t\t\t\t        createHttpClientForContextWithAddress(server, pool)\n\t\t\t\t                .request(HttpMethod.GET)\n\t\t\t\t                .uri(\"/\")\n\t\t\t\t                .send((req, out) -> out.send(Mono.error(new Exception(\"test\"))))\n\t\t\t\t                .responseContent(), Queues.SMALL_BUFFER_SIZE, Queues.XS_BUFFER_SIZE))\n\t\t\t\t    .expectError()\n\t\t\t\t    .verify(Duration.ofSeconds(30));\n\n\t\tpool.dispose();\n\t\tserver.disposeNow();\n\t}", "timestamp": "2020-05-04T21:11:25.751515Z", "repo_name": "hhy5277/reactor-netty", "path": "/src/test/java/reactor/netty/http/client/HttpClientTest.java", "source": "the-stack-v2", "method_name": "testExplicitSendMonoErrorOnGet", "class_name": "HttpClientTest", "index": 360, "label": 1}
{"input": "private void exportTo(File output) {\n        try (PrintWriter writer = new PrintWriter(new BufferedWriter(new FileWriter(output)))) {\n            writer.println(OS.asString(headers));\n            table.getItems().forEach(line -> writer.println(OS.asString(line)));\n        } catch (IOException ex) {\n            Logger.getLogger(getClass().getName()).log(Level.SEVERE, null, ex);\n        }\n    }", "timestamp": "2022-12-10T15:14:46.882345Z", "repo_name": "uichuimi/Coat", "path": "/src/main/java/org/uichuimi/coat/view/tsv/TsvFileReader.java", "source": "the-stack-v2", "method_name": "exportTo", "class_name": "TsvFileReader", "index": 361, "label": 1}
{"input": "@Autowired\n    public void setDateFactory(DateFactory dateFactory)\n    {\n        this.dateFactory = dateFactory;\n    }", "timestamp": "2022-11-26T19:35:30.152581Z", "repo_name": "balazskrizsan/weather-snapshot", "path": "/src/main/java/com/kbalazsworks/weathersnapshot/service/DownloaderService.java", "source": "the-stack-v2", "method_name": "setDateFactory", "class_name": "DownloaderService", "index": 362, "label": 1}
{"input": "public DefaultMutableTreeNode searchByUUID(String uuid) {\n\t\tif (uuid == null) {\n\t\t\tlog.warning(\"Unable to search by a null uuid\");\n\t\t\treturn null;\n\t\t}\n\t\tEnumeration<DefaultMutableTreeNode> searchEnum = root.depthFirstEnumeration();\n\t\tlog.fine(\"Searching tree by depth first for uuid: \" + uuid);\n\t\twhile (searchEnum.hasMoreElements()) {\n\t\t\tDefaultMutableTreeNode currentNode = searchEnum.nextElement();\n\t\t\tif (currentNode.getUserObject() instanceof HttpRequestResponse) {\n\t\t\t\tlog.fine(\"Found a node that is an instance of HttpRequestResponse\");\n\t\t\t\tHttpRequestResponse parentRequestResponse = (HttpRequestResponse) currentNode.getUserObject();\n\t\t\t\tString parentuuid = parentRequestResponse.getUUID();\n\t\t\t\tlog.fine(\"Comparing uuid: \" + uuid + \" to uuid: \" + parentuuid != null ? parentuuid : \"null\");\n\t\t\t\tif (parentuuid.equals(uuid)) {\n\t\t\t\t\tlog.info(\"Match  found for uuid: \" + uuid);\n\t\t\t\t\treturn currentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "timestamp": "2021-01-18T01:40:35.930601Z", "repo_name": "BenKettlewell/couchburp", "path": "/src/main/java/com/prevsec/couchburp/controller/BurpController.java", "source": "the-stack-v2", "method_name": "searchByUUID", "class_name": "BurpController", "index": 363, "label": 1}
{"input": "@java.lang.Override\n  public com.google.cloud.securitycenter.v1.Cvssv3.Impact getConfidentialityImpact() {\n    @SuppressWarnings(\"deprecation\")\n    com.google.cloud.securitycenter.v1.Cvssv3.Impact result =\n        com.google.cloud.securitycenter.v1.Cvssv3.Impact.valueOf(confidentialityImpact_);\n    return result == null ? com.google.cloud.securitycenter.v1.Cvssv3.Impact.UNRECOGNIZED : result;\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "getConfidentialityImpact", "class_name": "Cvssv3", "index": 364, "label": 1}
{"input": "private SurefireLauncher unpack()\n    {\n        return unpack( \"/junit4\", version.toString() );\n    }", "timestamp": "2023-01-07T02:20:09.881872Z", "repo_name": "wessam1292/finalcertificates", "path": "/surefire-3.0.0-M5/surefire-its/src/test/java/org/apache/maven/surefire/its/JUnit4VersionsIT.java", "source": "the-stack-v2", "method_name": "unpack", "class_name": "JUnit4VersionsIT", "index": 365, "label": 1}
{"input": "public ElementValuePairContext elementValuePair(int i) {\n\t\t\treturn getRuleContext(ElementValuePairContext.class,i);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "elementValuePair", "class_name": "ElementValuePairsContext", "index": 366, "label": 1}
{"input": "@Column(name =\"UPDATE_BY\",nullable=true,length=50)\n\tpublic String getUpdateBy(){\n\t\treturn this.updateBy;\n\t}", "timestamp": "2022-12-28T08:28:08.585073Z", "repo_name": "289222346/dianshang", "path": "/src/main/java/org/jeecgframework/web/superquery/entity/SuperQueryHistoryEntity.java", "source": "the-stack-v2", "method_name": "getUpdateBy", "class_name": "SuperQueryHistoryEntity", "index": 367, "label": 1}
{"input": "@Test public void testSemiJoin() {\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.JDBC_FOODMART)\n        .query(\"select *\\n\"\n            + \" from \\\"foodmart\\\".\\\"employee\\\"\"\n            + \" where \\\"employee_id\\\" = 1 and \\\"last_name\\\" in\"\n            + \" (select \\\"last_name\\\" from \\\"foodmart\\\".\\\"employee\\\" where \\\"employee_id\\\" = 2)\")\n        .runs();\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testSemiJoin", "class_name": "JdbcTest", "index": 368, "label": 1}
{"input": "public void run() {\r\n            this.requestFocus(); \n            long lastLoopTime = System.nanoTime();\r\n            double amountOFTicks = 60.0;\r\n            double ns = 1000000000 / amountOFTicks;\r\n            long timer = System.currentTimeMillis();\r\n            int frames = 0;\r\n            double delta = 0;\r\n            while(running){\r\n                long now = System.nanoTime();\r\n                delta += (now - lastLoopTime) / ns;\r\n                lastLoopTime = now;\r\n                while (delta >= 1) {\r\n                    tick();\r\n                    delta--;\r\n                }\r\n                if (running) {\r\n                    render();\r\n                }\r\n                frames++;\r\n    \r\n                if (System.currentTimeMillis() - timer > 1000) {\r\n                    timer += 1000;\r\n                    System.out.println(\"FPS: \" + frames);\r\n                    frames = 0; \r\n                }\r\n            }\r\n            System.exit(1);\r\n        }", "timestamp": "2023-07-11T22:07:51.461702Z", "repo_name": "APioB/OOP20-StickWars", "path": "/Game.java", "source": "the-stack-v2", "method_name": "run", "class_name": "Game", "index": 369, "label": 1}
{"input": "@Override \n        public final boolean linkToDeath(IHwBinder.DeathRecipient recipient, long cookie) {\n            return true;\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "linkToDeath", "class_name": "Stub", "index": 370, "label": 1}
{"input": "public void testBug110060_MethodPattern03() throws CoreException {\n\tsetUpBug110060_MethodPattern();\n\tsearch(\"aMWD\", METHOD, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);\n\tassertSearchResults(\n\t\t\"src/b110060/Test.java void b110060.Test.aMethodWith1Digit() [aMethodWith1Digit] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java void b110060.Test.aMethodWith1DigitAnd_AnUnderscore() [aMethodWith1DigitAnd_AnUnderscore] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java void b110060.Test.testReferences() [aMethodWith1Digit()] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java void b110060.Test.testReferences() [aMethodWith1DigitAnd_AnUnderscore()] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_MethodPattern03", "class_name": "JavaSearchBugsTests", "index": 371, "label": 1}
{"input": "@Override\n    protected void onDestroy() {\n        super.onDestroy();\n        if (mPresenter != null) {\n            mPresenter.detachView();\n        }\n    }", "timestamp": "2023-02-26T23:09:19.854822Z", "repo_name": "NEW-MIKE/Stareader", "path": "/app/src/main/java/com/kaya/stareader/ui/activity/SearchByAuthorActivity.java", "source": "the-stack-v2", "method_name": "onDestroy", "class_name": "SearchByAuthorActivity", "index": 372, "label": 1}
{"input": "@Override\n      public Request setAlt(java.lang.String alt) {\n        return (Request) super.setAlt(alt);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setAlt", "class_name": "Request", "index": 373, "label": 1}
{"input": "protected void assertException(Runnable r, Class<?> exceptionType) {\n        assertExceptionWithMessage(r, exceptionType, null);\n    }", "timestamp": "2022-03-22T02:13:22.843800Z", "repo_name": "bellmit/tastr", "path": "/tastr-infrastructure/src/test/java/eu/tastr/infrastructure/test/UnitTest.java", "source": "the-stack-v2", "method_name": "assertException", "class_name": "UnitTest", "index": 374, "label": 1}
{"input": "public void testBug110060_FieldPattern04() throws CoreException {\n\tsetUpBug110060_FieldPattern();\n\tsearch(\"aSFWSCD\", FIELD, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);\n\tassertSearchResults(\n\t\t\"src/b110060/Test.java b110060.Test.aStrangeFieldWith$$$$$$$$$$$$$$$SeveraContiguousDollars [aStrangeFieldWith$$$$$$$$$$$$$$$SeveraContiguousDollars] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java void b110060.Test.testReferences() [aStrangeFieldWith$$$$$$$$$$$$$$$SeveraContiguousDollars] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_FieldPattern04", "class_name": "JavaSearchBugsTests", "index": 375, "label": 1}
{"input": "public List<LabourSubContractor> getLabourSubContractors() {\r\n\t\treturn this.labourSubContractors;\r\n\t}", "timestamp": "2020-06-21T19:31:46.654192Z", "repo_name": "uvaisTrivecta/ConstructionApp", "path": "/AttendenceTracker-0.0.1-SNAPSHOT/src/main/java/com/trivecta/attendencetracker/model/entity/SubContractor.java", "source": "the-stack-v2", "method_name": "getLabourSubContractors", "class_name": "SubContractor", "index": 376, "label": 1}
{"input": "public Criteria andUserStNameBetween(String value1, String value2) {\r\n            addCriterion(\"user_st_name between\", value1, value2, \"userStName\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2022-12-10T20:39:24.451742Z", "repo_name": "TangHui-ops/myProject", "path": "/后端/weixingxiaocx/src/main/java/cn/bdqn/mbg/model/UserStateTypeExample.java", "source": "the-stack-v2", "method_name": "andUserStNameBetween", "class_name": "GeneratedCriteria", "index": 377, "label": 1}
{"input": "protected void updateBaseCalendarNames()\r\n   {\r\n      for (Pair<ProjectCalendar, Integer> pair : m_baseCalendarReferences)\r\n      {\r\n         ProjectCalendar cal = pair.getFirst();\r\n         Integer baseCalendarID = pair.getSecond();\r\n         ProjectCalendar baseCal = m_calendarMap.get(baseCalendarID);\r\n         if (baseCal != null)\r\n         {\r\n            cal.setParent(baseCal);\r\n         }\r\n      }\r\n   }", "timestamp": "2023-08-17T13:13:07.711932Z", "repo_name": "heekye/ProjectLibre", "path": "/projectlibre_exchange/src/net/sf/mpxj/mpd/MPD9AbstractReader.java", "source": "the-stack-v2", "method_name": "updateBaseCalendarNames", "class_name": "MPD9AbstractReader", "index": 378, "label": 1}
{"input": "@Override\n      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {\n        return super.buildHttpRequestUsingHead();\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "buildHttpRequestUsingHead", "class_name": "List", "index": 379, "label": 1}
{"input": "public Criteria andUsercodeIsNotNull() {\r\n            addCriterion(\"USERCODE is not null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andUsercodeIsNotNull", "class_name": "GeneratedCriteria", "index": 380, "label": 1}
{"input": "public void insert(int index, E s) {\n\t\texpandCapacity();\n\n\t\tfor (int i = this.size; i > index; i--) {\n\t\t\tthis.elements[i] = this.elements[i - 1];\n\t\t}\n\n\t\tthis.elements[index] = s;\n\t\tthis.size += 1;\n\n\t\treturn;\n\t}", "timestamp": "2023-05-12T07:50:32.348623Z", "repo_name": "CSE12-SP21-Assignments/cse12-sp21-final-coding", "path": "/cse12final/src/AList.java", "source": "the-stack-v2", "method_name": "insert", "class_name": "AList", "index": 381, "label": 1}
{"input": "@Override\n\tpublic Object resolveArgument(MethodParameter parameter, ModelAndViewContainer mavContainer,\n\t\t\tNativeWebRequest webRequest, WebDataBinderFactory binderFactory) throws Exception {\n\t\t\n\t\tCommandMap commandMap = new CommandMap();\n\t\t\n\t\tHttpServletRequest request = (HttpServletRequest) webRequest.getNativeRequest();\n\t\tEnumeration<?> enumeration = request.getParameterNames();\n\t\t\n\t\tString key = null;\n\t\tString[] values = null;\n\t\twhile(enumeration.hasMoreElements()) {\n\t\t\tkey = (String) enumeration.nextElement();\n\t\t\tvalues = request.getParameterValues(key);\n\t\t\tif(values != null) {\n\t\t\t\tcommandMap.put(key, (values.length > 1 ) ? values : values[0]);\n\t\t\t}\n\t\t}\n\t\treturn commandMap;\n\t}", "timestamp": "2020-04-28T09:31:19.570313Z", "repo_name": "aster1212/FinalProject", "path": "/src/main/java/ksm/common/resolver/CustomMapArgumentResolver.java", "source": "the-stack-v2", "method_name": "resolveArgument", "class_name": "CustomMapArgumentResolver", "index": 382, "label": 1}
{"input": "public HttpResult post(String urlStr,Map<String,String> headers,byte[] bytes)\r\n\t{\r\n\t\treturn requestToProxy(HttpClient.POST,urlStr, headers, bytes, null, 0);\r\n\t}", "timestamp": "2021-02-26T21:32:11.243331Z", "repo_name": "znj929/springBootDemo", "path": "/demo/src/main/java/com/example/demo/utils/HttpClient.java", "source": "the-stack-v2", "method_name": "post", "class_name": "HttpClient", "index": 383, "label": 1}
{"input": "public boolean hasThreeSameDiagonalCells() {\n        try {\n            return areEqual(cells[0][0], cells[1][1], cells[2][2]) ||\n                    areEqual(cells[0][2], cells[1][1], cells[2][0]);\n        } catch (NullPointerException e) {\n            Log.e(TAG, e.getMessage());\n            return false;\n        }\n    }", "timestamp": "2021-01-07T18:52:21.576876Z", "repo_name": "s4dman/TicTacToe-MVVM", "path": "/app/src/main/java/com/imsadman/tictactoe/models/Game.java", "source": "the-stack-v2", "method_name": "hasThreeSameDiagonalCells", "class_name": "Game", "index": 384, "label": 1}
{"input": "@Override \n        \n        public final AbstractC0185l2<List<C0147g2>> mo100a(int i) {\n            return new C0175k2(new C0147g2.C0148a());\n        }", "timestamp": "2023-02-23T06:37:03.730470Z", "repo_name": "alissonlauffer/via-browser-dump", "path": "/app/src/main/java/com/flurry/sdk/C0136f2.java", "source": "the-stack-v2", "method_name": "mo100a", "class_name": "C0137a", "index": 385, "label": 1}
{"input": "@Override\n      public UpdateAvailability setFields(java.lang.String fields) {\n        return (UpdateAvailability) super.setFields(fields);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setFields", "class_name": "UpdateAvailability", "index": 386, "label": 1}
{"input": "private Method findMethod(Class<?> cl, String name, Class... param) {\n        try {\n            return cl.getDeclaredMethod(name, param);\n        } catch (NoSuchMethodException e) {\n            fail(\"\\nERROR:Тест не пройден. Метод \" + cl.getName() + \".\" + name + \" не найден\\n\");\n        }\n        return null;\n    }", "timestamp": "2020-04-12T09:47:01.862944Z", "repo_name": "migeniya/JD2018-12-10", "path": "/src/by/it/dziomin/jd01_02/Test_jd01_02.java", "source": "the-stack-v2", "method_name": "findMethod", "class_name": "Test_jd01_02", "index": 387, "label": 1}
{"input": "@Test\n    public void testCallOnFailure() {\n        AtomicInteger res = new AtomicInteger(-1);\n        AtomicInteger twoGotCalled = new AtomicInteger(-1);\n\n        assertThatThrownBy(() -> failed.onItem().call(i -> {\n            res.set(i);\n            return two.onItem().invoke(twoGotCalled::set);\n        }).await().indefinitely()).isInstanceOf(CompletionException.class).hasCauseInstanceOf(IOException.class)\n                .hasMessageContaining(\"boom\");\n\n        assertThat(twoGotCalled).hasValue(-1);\n        assertThat(res).hasValue(-1);\n    }", "timestamp": "2022-11-30T09:32:52.267405Z", "repo_name": "lamtrhieu/smallrye-mutiny", "path": "/implementation/src/test/java/io/smallrye/mutiny/operators/UniOnItemInvokeTest.java", "source": "the-stack-v2", "method_name": "testCallOnFailure", "class_name": "UniOnItemInvokeTest", "index": 388, "label": 1}
{"input": "@Override\n\tpublic void updateEmployees(int id, String newFirstName, String newLastName, String newTitle, String newReportTo, String newEmail) {\n\t\ttry(Connection con = ConnectionUtil.getConnection(filename)) {\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tString sql = \"UPDATE EMPLOYEES \" + \n\t\t\t\t\t\"SET FIRSTNAME = ?, LASTNAME = ?, TITLE = ?, REPORTTO = ?, EMAIL = ? \" + \n\t\t\t\t\t\"WHERE ID = ?\";\n\t\t\tPreparedStatement pstmt = con.prepareStatement(sql);\n\t\t\tpstmt.setString(1, newFirstName);\n\t\t\tpstmt.setString(2, newLastName);\n\t\t\tpstmt.setString(3, newTitle);\n\t\t\tpstmt.setString(4, newReportTo);\n\t\t\tpstmt.setString(5, newEmail);\n\t\t\tpstmt.setInt(6, id);\n\t\t\tpstmt.executeQuery();\n\t\t} catch (SQLException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t}", "timestamp": "2020-04-04T11:58:08.778182Z", "repo_name": "1810Oct29SPARK/RuizR", "path": "/ProjectOne/src/main/java/com/revature/dao/EmployeesDAOImpl.java", "source": "the-stack-v2", "method_name": "updateEmployees", "class_name": "EmployeesDAOImpl", "index": 389, "label": 1}
{"input": "@Override\r\n\tpublic\r\n\tString genTopCode(String indent) {\r\n\t\tString result = super.genTopCode(indent);\r\n\t\t\r\n\t\tif( !listToDo.isEmpty() ){\r\n\t\t\tresult += indent + \"reg [31:0] \" + getRegName( this ) + \";\\n\";\r\n\t\t\t\r\n\t\t\t\r\n\t\r\n\t\t\tresult += \"\\n\";\r\n\t\t\t\r\n\t\t\tint doerCount = 0;\r\n\t\t\tresult += indent + \"parameter \" + getResetParamName( this ) + \" = \" + (doerCount++) + \";\\n\";\r\n\t\t\tfor( Doable doer : listToDo ){\r\n\t\t\t\tresult += indent + \"parameter \" + getParamName( doer ) + \" = \" + (doerCount++) + \";\\n\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tresult += \"\\n\";\r\n\t\t\t\r\n\t\t\tfor( Doable doable : listToDo ){\r\n\t\t\t\tresult += indent + \";\\n\"0 + getActiveWireName( doable ) + \";\\n\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}", "timestamp": "2021-06-01T23:40:47.953614Z", "repo_name": "JEdward7777/VerilogExpress", "path": "/eclipse/VerilogExpress/src/verilogExpress/SequentualDoer.java", "source": "the-stack-v2", "method_name": "genTopCode", "class_name": "SequentualDoer", "index": 390, "label": 1}
{"input": "public boolean addLevelAt(Level aLevel, int index)\n  {  \n    boolean wasAdded = false;\n    if(addLevel(aLevel))\n    {\n      if(index < 0 ) { index = 0; }\n      if(index > numberOfLevels()) { index = numberOfLevels() - 1; }\n      levels.remove(aLevel);\n      levels.add(index, aLevel);\n      wasAdded = true;\n    }\n    return wasAdded;\n  }", "timestamp": "2020-09-27T06:19:22.075701Z", "repo_name": "mustafain117/Block-Breaker-Game", "path": "/Block223v2/src/ca/mcgill/ecse223/block/model/Game.java", "source": "the-stack-v2", "method_name": "addLevelAt", "class_name": "Game", "index": 391, "label": 1}
{"input": "public Criteria andVdef7NotLike(String value) {\r\n            addCriterion(\"VDEF7 not like\", value, \"vdef7\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef7NotLike", "class_name": "GeneratedCriteria", "index": 392, "label": 1}
{"input": "public static OrderDiscountCodeRemovedMessagePayloadBuilder of() {\n        return new OrderDiscountCodeRemovedMessagePayloadBuilder();\n    }", "timestamp": "2023-08-14T16:16:38.709763Z", "repo_name": "commercetools/commercetools-sdk-java-v2", "path": "/commercetools/commercetools-sdk-java-api/src/main/java-generated/com/commercetools/api/models/message/OrderDiscountCodeRemovedMessagePayloadBuilder.java", "source": "the-stack-v2", "method_name": "of", "class_name": "OrderDiscountCodeRemovedMessagePayloadBuilder", "index": 393, "label": 1}
{"input": "public Criteria andMsgIdNotLike(String value) {\r\n            addCriterion(\"msg_id not like\", value, \"msgId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andMsgIdNotLike", "class_name": "GeneratedCriteria", "index": 394, "label": 1}
{"input": "public String toString()\n{\nStringBuffer sb = new StringBuffer (\"X_C_CashBook[\").append(getID()).append(\"]\");\nreturn sb.toString();\n}", "timestamp": "2021-01-10T16:52:41.332435Z", "repo_name": "Lucas128/libertya", "path": "/base/src/org/openXpertya/model/X_C_CashBook.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "X_C_CashBook", "index": 395, "label": 1}
{"input": "private void updateSpeaking() {\n\t\tif (mSpeaking)  {\n\t\t\t\n\t\t\tif (bottom.rotation().x == mLowerAngle) {\n\t\t\t\tmOpening = !mOpening;\n\t\t\t} \n\t\t\tif (mOpening) {\n\t\t\t\tmLowerAngle = MOUTH_OPEN_ANGLE;\n\t\t\t}else {\n\t\t\t\t\n\t\t\t\tmLowerAngle = MOUTH_CLOSED_ANGLE;\n\t\t\t}\n\t\t}\n\t\t\n\t}", "timestamp": "2016-08-11T07:51:42.621498Z", "repo_name": "emote-project/Migration-App", "path": "/Android3DEmys/src/uk/ac/hw/lirec/emys3d/EmysModel.java", "source": "the-stack-v2", "method_name": "updateSpeaking", "class_name": "EmysModel", "index": 396, "label": 1}
{"input": "@GetMapping(\"/user\")\n    @JsonView({Views.UserViews.class})\n    public ResponseEntity fetchCurrentUser() {\n        return ResponseEntity.ok(userService.fetchCurrentUser(SecurityContextHolder.getContext().getAuthentication().getPrincipal().toString()));\n    }", "timestamp": "2020-12-14T22:33:52.338213Z", "repo_name": "itsaviu/passlocker-auth", "path": "/src/main/java/com/ua/passlocker/auth/controller/UserController.java", "source": "the-stack-v2", "method_name": "fetchCurrentUser", "class_name": "UserController", "index": 397, "label": 1}
{"input": "public void setOrganizationId(UUID organizationId) {\n        this.organizationId = organizationId;\n    }", "timestamp": "2023-06-07T11:12:40.864092Z", "repo_name": "ahgrq28/elevator", "path": "/modules/global/src/ru/company/elevator/dto/VehicleDto.java", "source": "the-stack-v2", "method_name": "setOrganizationId", "class_name": "VehicleDto", "index": 398, "label": 1}
{"input": "public Builder previewHeight(int previewHeight) {\n            mPreviewHeight = previewHeight;\n            return this;\n        }", "timestamp": "2020-05-15T12:10:00.878334Z", "repo_name": "qinhaihang/OpenCVDemo-master", "path": "/app/src/main/java/com/qhh/opencvdemo/camera/CameraConfig.java", "source": "the-stack-v2", "method_name": "previewHeight", "class_name": "Builder", "index": 399, "label": 1}
{"input": "public Criteria andVdef20NotBetween(String value1, String value2) {\r\n            addCriterion(\"VDEF20 not between\", value1, value2, \"vdef20\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef20NotBetween", "class_name": "GeneratedCriteria", "index": 400, "label": 1}
{"input": "@Override \n        public String interfaceDescriptor() throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(IBase.kInterfaceName);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(256136003, _hidl_request, _hidl_reply, 0);\n                _hidl_reply.verifySuccess();\n                _hidl_request.releaseTemporaryStorage();\n                return _hidl_reply.readString();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "interfaceDescriptor", "class_name": "Proxy", "index": 401, "label": 1}
{"input": "private boolean partieFinie() {\n\t\tfor(Carte c : joueurActif.getMain()) {\n\t\t\tif(c instanceof Monument) {\n\t\t\t\tif( !((Monument)c).estConstruit() ){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}", "timestamp": "2020-05-29T14:30:59.287416Z", "repo_name": "Quentin-V/Miniville", "path": "/src/Controleur.java", "source": "the-stack-v2", "method_name": "partieFinie", "class_name": "Controleur", "index": 402, "label": 1}
{"input": "@java.lang.Override\n    public com.google.ads.googleads.v5.services.FeedItemOperation buildPartial() {\n      com.google.ads.googleads.v5.services.FeedItemOperation result = new com.google.ads.googleads.v5.services.FeedItemOperation(this);\n      if (updateMaskBuilder_ == null) {\n        result.updateMask_ = updateMask_;\n      } else {\n        result.updateMask_ = updateMaskBuilder_.build();\n      }\n      if (operationCase_ == 1) {\n        if (createBuilder_ == null) {\n          result.operation_ = operation_;\n        } else {\n          result.operation_ = createBuilder_.build();\n        }\n      }\n      if (operationCase_ == 2) {\n        if (updateBuilder_ == null) {\n          result.operation_ = operation_;\n        } else {\n          result.operation_ = updateBuilder_.build();\n        }\n      }\n      if (operationCase_ == 3) {\n        result.operation_ = operation_;\n      }\n      result.operationCase_ = operationCase_;\n      onBuilt();\n      return result;\n    }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "buildPartial", "class_name": "Builder", "index": 403, "label": 1}
{"input": "private static boolean isIri(String string) {\r\n \r\n \t\tint indexColon = string.indexOf(':');\r\n \t\tint indexEquals = string.indexOf(XDIConstants.CS_EQUALS.charValue());\r\n \t\tint indexAt = string.indexOf(XDIConstants.CS_AT.charValue());\r\n \t\tint indexPlus = string.indexOf(XDIConstants.CS_PLUS.charValue());\r\n \t\tint indexDollar = string.indexOf(XDIConstants.CS_DOLLAR.charValue());\r\n \t\tint indexStar = string.indexOf(XDIConstants.CS_STAR.charValue());\r\n \t\tint indexBang = string.indexOf(XDIConstants.CS_BANG.charValue());\r\n \r\n \t\tif (indexColon == -1) return false;\r\n \r\n \t\tif (indexEquals != -1 && indexEquals < indexColon) return false;\r\n \t\tif (indexAt != -1 && indexAt < indexColon) return false;\r\n \t\tif (indexPlus != -1 && indexPlus < indexColon) return false;\r\n \t\tif (indexDollar != -1 && indexDollar < indexColon) return false;\r\n \t\tif (indexStar != -1 && indexStar < indexColon) return false;\r\n \t\tif (indexBang != -1 && indexBang < indexColon) return false;\r\n \r\n \t\treturn true;\r\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/17/17_0a5dbe869eedf204b0fd7ac7721dc93e8e3ea32a/XDI3ParserManual/17_0a5dbe869eedf204b0fd7ac7721dc93e8e3ea32a_XDI3ParserManual_t.java", "source": "the-stack-v2", "method_name": "isIri", "class_name": "XDI3ParserManual", "index": 404, "label": 1}
{"input": "@java.lang.Override\n    public com.google.ads.googleads.v14.enums.CustomAudienceTypeEnum getDefaultInstanceForType() {\n      return com.google.ads.googleads.v14.enums.CustomAudienceTypeEnum.getDefaultInstance();\n    }", "timestamp": "2023-08-19T07:39:40.744879Z", "repo_name": "googleads/google-ads-java", "path": "/google-ads-stubs-v14/src/main/java/com/google/ads/googleads/v14/enums/CustomAudienceTypeEnum.java", "source": "the-stack-v2", "method_name": "getDefaultInstanceForType", "class_name": "Builder", "index": 405, "label": 1}
{"input": "@Override\n    public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state) {\n        int left = parent.getPaddingLeft();\n        int right = parent.getWidth() - parent.getPaddingRight();\n\n        int childCount = parent.getChildCount();\n        for (int i = 0; i < childCount; i++) {\n            View child = parent.getChildAt(i);\n\n            RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child.getLayoutParams();\n\n            int top = child.getBottom() + params.bottomMargin;\n            int bottom = top + lineaDivisoria.getIntrinsicHeight();\n\n            lineaDivisoria.setBounds(left, top, right, bottom);\n            lineaDivisoria.draw(c);\n        }\n    }", "timestamp": "2020-12-02T18:06:55.843031Z", "repo_name": "sjcantillo/holaquilla", "path": "/HolaQuilla/app/src/main/java/com/example/silviocantillo/holaquilla/ui/DecoracionLineaDivisoria.java", "source": "the-stack-v2", "method_name": "onDrawOver", "class_name": "DecoracionLineaDivisoria", "index": 406, "label": 1}
{"input": "public Asset assignAsset(CustomerId customerId, AssetId assetId) {\n        return restTemplate.postForEntity(baseURL + \"/api/customer/{customerId}/asset/{assetId}\", null, Asset.class,\n                customerId.toString(), assetId.toString()).getBody();\n    }", "timestamp": "2023-01-12T13:57:08.253533Z", "repo_name": "hashmapinc/Tempus", "path": "/tools/src/main/java/com/hashmapinc/client/tools/RestClient.java", "source": "the-stack-v2", "method_name": "assignAsset", "class_name": "RestClient", "index": 407, "label": 1}
{"input": "@Override\n    public boolean onGesture(Gesture gesture) {\n        if (gesture == Gesture.TAP) {\n            int position = mView.getSelectedItemPosition();\n            SetTimerScrollAdapter.TimeComponents component =\n                    (SetTimerScrollAdapter.TimeComponents) mAdapter.getItem(position);\n            Intent selectValueIntent = new Intent(this, SelectValueActivity.class);\n\n            selectValueIntent.putExtra(SelectValueActivity.EXTRA_COUNT, component.getMaxValue());\n            selectValueIntent.putExtra(\n                    SelectValueActivity.EXTRA_INITIAL_VALUE,\n                    (int) mAdapter.getTimeComponent(component));\n            startActivityForResult(selectValueIntent, SELECT_VALUE);\n            mAudioManager.playSoundEffect(AudioManager.FX_KEY_CLICK);\n            return true;\n        }\n        return false;\n    }", "timestamp": "2021-01-15T23:40:01.791369Z", "repo_name": "longzheng/PTVGlass", "path": "/Components/googleglass-1.1/lib/android/1/content/google-gdk/samples/Timer/src/com/google/android/glass/sample/timer/SetTimerActivity.java", "source": "the-stack-v2", "method_name": "onGesture", "class_name": "SetTimerActivity", "index": 408, "label": 1}
{"input": "public void setU_PriceOrderNum(String u_PriceOrderNum) {\n        U_PriceOrderNum = u_PriceOrderNum;\n    }", "timestamp": "2021-07-13T20:48:36.038715Z", "repo_name": "mtc-navy/SourceCode", "path": "/Mitsubishi/mtc-admin/src/main/java/io/mtc/servicelayer/model/Order.java", "source": "the-stack-v2", "method_name": "setU_PriceOrderNum", "class_name": "Order", "index": 409, "label": 1}
{"input": "private <T extends CalculusFieldElement<T>> void doCompareFieldExpectedValues(final Field<T> field) {\n\n        T zero = field.getZero();\n        T height = zero;\n        T elevation = zero.add(FastMath.toRadians(10));\n        double expectedValue = 13.26069;\n        T actualValue = model.pathDelay(elevation, new FieldGeodeticPoint<>(zero.add(latitude), zero.add(longitude), height), null, FieldAbsoluteDate.getJ2000Epoch(field));\n\n        Assertions.assertEquals(expectedValue, actualValue.getReal(), 1.0e-5);\n    }", "timestamp": "2023-09-03T20:33:42.748576Z", "repo_name": "CS-SI/Orekit", "path": "/src/test/java/org/orekit/models/earth/troposphere/MariniMurrayModelTest.java", "source": "the-stack-v2", "method_name": "doCompareFieldExpectedValues", "class_name": "MariniMurrayModelTest", "index": 410, "label": 1}
{"input": "public void checkLeftService(List<SubcategoryData> options) {\n        dropDownServiceLeft.shouldHaveSize(options.size());\n        List<String> expectedTexts = options.stream().map(SubcategoryData::toString).collect(Collectors.toList());\n        dropDownServiceLeft.shouldHave(texts(expectedTexts));\n    }", "timestamp": "2020-04-18T03:13:53.667347Z", "repo_name": "cxqwer/ChebotarevAleksandr", "path": "/src/main/java/homeworks/hw6/ex1/HomePageGherkin.java", "source": "the-stack-v2", "method_name": "checkLeftService", "class_name": "HomePageGherkin", "index": 411, "label": 1}
{"input": "@Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }", "timestamp": "2021-01-10T22:53:13.369638Z", "repo_name": "flavion-dsa/eye-hospital-management", "path": "/src/java/controller/RegisterServlet.java", "source": "the-stack-v2", "method_name": "doGet", "class_name": "RegisterServlet", "index": 412, "label": 1}
{"input": "public static String encrypt(String plainText, SecretKey secretKey)\n\t\t\tthrows Exception {\n\t\tbyte[] plainTextByte = plainText.getBytes();\n\t\tcipher.init(Cipher.ENCRYPT_MODE, secretKey);\n\t\tbyte[] encryptedByte = cipher.doFinal(plainTextByte);\n\t\tBase64.Encoder encoder = Base64.getEncoder();\n\t\tString encryptedText = encoder.encodeToString(encryptedByte);\n\t\treturn encryptedText;\n\t}", "timestamp": "2021-01-17T15:49:00.010394Z", "repo_name": "johnosullivan/WSP", "path": "/src/client/Session.java", "source": "the-stack-v2", "method_name": "encrypt", "class_name": "Session", "index": 413, "label": 1}
{"input": "public void SetDispatchOnDrawItemTextColor(boolean _value) {\n\t\tmDispatchOnDrawItemTextColor = _value;\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "SetDispatchOnDrawItemTextColor", "class_name": "jArrayAdapter", "index": 414, "label": 1}
{"input": "public Client searchClientById(Long id) {\n        Client resultat = null;\n        JpaUtil.creerContextePersistance();\n        try {\n            resultat = clientDao.searchById(id);\n        } catch (Exception ex) {\n            Logger.getAnonymousLogger().log(Level.WARNING, \"Exception lors de l'appel au Service searchClientById(id)\", ex);\n            resultat = null;\n        } finally {\n            JpaUtil.fermerContextePersistance();\n        }\n        return resultat;\n    }", "timestamp": "2023-05-04T20:25:05.351761Z", "repo_name": "Lezzio/PROJET-DASI", "path": "/src/main/java/com/mycompany/td2/dasi/metier/services/EntityService.java", "source": "the-stack-v2", "method_name": "searchClientById", "class_name": "EntityService", "index": 415, "label": 1}
{"input": "public static void print(double[][] a) {\n        int m = a.length;\n        int n = a[0].length;\n        StdOut.println(m + \" \" + n);\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                StdOut.printf(\"%9.5f \", a[i][j]);\n            }\n            StdOut.println();\n        }\n    }", "timestamp": "2020-05-22T08:05:18.503891Z", "repo_name": "gjgj821/fortress", "path": "/src/main/java/stdlib/StdArrayIO.java", "source": "the-stack-v2", "method_name": "print", "class_name": "StdArrayIO", "index": 416, "label": 1}
{"input": "public void showErrorDialog(String message) {\n        if (errorDialog != null) {\n            errorDialog.dispose();\n        }\n        errorDialog = new ErrorDialog(this, message);\n        errorDialog.setVisible(true);\n    }", "timestamp": "2020-05-06T15:49:29.551449Z", "repo_name": "gokcse/Go-Cloud", "path": "/Go Cloud Source Code/Netbeans 6.1 - Virtual Machine/CloudComputingServer/src/org/cit/CloudComputing/T_Editor.java", "source": "the-stack-v2", "method_name": "showErrorDialog", "class_name": "Frame_class", "index": 417, "label": 1}
{"input": "private void init(FMLCommonSetupEvent event) {\n\t\telements.getElements().forEach(element -> element.init(event));\n\t}", "timestamp": "2023-06-01T01:05:39.099062Z", "repo_name": "shadowforce78/ScriptorMod", "path": "/src/main/java/net/mcreator/scriptor/ScriptorMod.java", "source": "the-stack-v2", "method_name": "init", "class_name": "ScriptorMod", "index": 418, "label": 1}
{"input": "@PutMapping(\"/\")\n\tpublic Warehouse updateWarehouse(@RequestBody WarehouseDto warehouseDto) throws WarehouseException {\n\t\tWarehouse updatedWarehouse = warehouseService.updateWarehouse(warehouseDto);\n\t\t\n\t\treturn updatedWarehouse;\n\t}", "timestamp": "2022-12-24T05:19:36.868147Z", "repo_name": "zmemon-nisum-com/Warehouse", "path": "/src/main/java/com/warehouse/controller/WarehouseController.java", "source": "the-stack-v2", "method_name": "updateWarehouse", "class_name": "WarehouseController", "index": 419, "label": 1}
{"input": "public <DB extends ODatabase> DB open(final String iUserName, final String iUserPassword) {\n    throw new UnsupportedOperationException(\"Use OrientDB\");\n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "open", "class_name": "ODatabaseDocumentEmbedded", "index": 420, "label": 1}
{"input": "@Override\n    public void setReportVersion(String version) {\n        model.setReportVersion(version);\n    }", "timestamp": "2023-07-22T18:01:47.280074Z", "repo_name": "de-jcup/sechub", "path": "/sechub-scan/src/main/java/com/mercedesbenz/sechub/domain/scan/report/ScanSecHubReport.java", "source": "the-stack-v2", "method_name": "setReportVersion", "class_name": "ScanSecHubReport", "index": 421, "label": 1}
{"input": "@Override\n    public CoordinateReferenceSystem getCoordinateReferenceSystem() {\n        return crs;\n    }", "timestamp": "2020-12-26T04:37:41.379469Z", "repo_name": "kailIII/geotoolkit", "path": "/modules/storage/geotk-coverage-store/src/main/java/org/geotoolkit/storage/coverage/DefaultPyramid.java", "source": "the-stack-v2", "method_name": "getCoordinateReferenceSystem", "class_name": "DefaultPyramid", "index": 422, "label": 1}
{"input": "public Query join(Query subquery, List<String> leftOn, List<String> rightOn, String prefix) {\n    return joinFeatures(subquery, leftOn.stream().map(Feature::new).collect(Collectors.toList()),\n        rightOn.stream().map(Feature::new).collect(Collectors.toList()), JoinType.INNER, prefix);\n  }", "timestamp": "2023-08-17T00:59:45.862350Z", "repo_name": "davitbzh/FlinkAggJob", "path": "/flink/src/main/java/com/logicalclocks/hsfs/constructor/Query.java", "source": "the-stack-v2", "method_name": "join", "class_name": "Query", "index": 423, "label": 1}
{"input": "public void showTEDialog(String message) {\n        if (teDialog != null) {\n            teDialog.dispose();\n        }\n        teDialog = new TEDialog(this, message);\n        teDialog.setVisible(true);\n    }", "timestamp": "2020-05-06T15:49:29.551449Z", "repo_name": "gokcse/Go-Cloud", "path": "/Go Cloud Source Code/Netbeans 6.1 - Virtual Machine/CloudComputingServer/src/org/cit/CloudComputing/T_Editor.java", "source": "the-stack-v2", "method_name": "showTEDialog", "class_name": "Frame_class", "index": 424, "label": 1}
{"input": "@Test public void testCustomSchemaInFileInPwd() throws SQLException {\n    checkCustomSchemaInFileInPwd(\"custom-schema-model.json\");\n    switch (File.pathSeparatorChar) {\n    case '/':\n      \n      \n      checkCustomSchemaInFileInPwd(\".\" + File.pathSeparatorChar\n          + \"custom-schema-model2.json\");\n    }\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testCustomSchemaInFileInPwd", "class_name": "JdbcTest", "index": 425, "label": 1}
{"input": "public boolean VerifyData(JCRefOut dupParam0, JCRefOut dupParam1) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.PlatformNotSupportedException, system.collections.generic.KeyNotFoundException, system.security.cryptography.CryptographicException, system.OutOfMemoryException {\n        if (classInstance == null)\n            throw new UnsupportedOperationException(\"classInstance is null.\");\n        try {\n            return (boolean)classInstance.Invoke(\"VerifyData\", dupParam0, dupParam1);\n        } catch (JCNativeException jcne) {\n            throw translateException(jcne);\n        }\n    }", "timestamp": "2022-12-07T21:13:06.208025Z", "repo_name": "lvyitian/JCOReflector", "path": "/netreflected/src/Framework/System.Core,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089/system/security/cryptography/ECDsaCng.java", "source": "the-stack-v2", "method_name": "VerifyData", "class_name": "ECDsaCng", "index": 426, "label": 1}
{"input": "@Override\r\n        public Integer call(Integer a, Integer b) throws Exception {\r\n          return a + b;\r\n        }", "timestamp": "2021-01-23T07:10:34.655229Z", "repo_name": "Vivek89/SparkTraining", "path": "/content/Day2/WordCount.java", "source": "the-stack-v2", "method_name": "call", "class_name": "WordCount", "index": 427, "label": 1}
{"input": "public void setFullsize(boolean fullsize)\n    {\n        this.fullsize = fullsize;\n        refreshUI();\n    }", "timestamp": "2020-06-26T11:11:13.172251Z", "repo_name": "fly7632785/android-proxy", "path": "/proxy-settings/src/main/java/com/lechucksoftware/proxy/proxysettings/ui/components/InputField.java", "source": "the-stack-v2", "method_name": "setFullsize", "class_name": "InputField", "index": 428, "label": 1}
{"input": "private void updateLeaseDate(List<String> leaseIds, String nextBillDate)  {\r\n\t\t\r\n\t\tQuery query = new Query(Criteria.where(\"leaseId\").in(leaseIds));\r\n\t\tUpdate update = new Update();\r\n\t\tupdate.set(\"leaseEndDate\", nextBillDate);\r\n\t\ttemplate.updateFirst(query, update, Lease.class);\r\n\t\t\t\t\r\n\t}", "timestamp": "2021-09-02T00:31:10.750820Z", "repo_name": "SelsoftInc/TrackMe-1", "path": "/AUTO_BILLING_MANAGEMENT/src/main/java/com/selsoft/auto/dao/AutoBillingDAOImpl.java", "source": "the-stack-v2", "method_name": "updateLeaseDate", "class_name": "AutoBillingDAOImpl", "index": 429, "label": 1}
{"input": "@Column(name =\"UPDATE_NAME\",nullable=true,length=50)\n\tpublic String getUpdateName(){\n\t\treturn this.updateName;\n\t}", "timestamp": "2022-12-28T08:28:08.585073Z", "repo_name": "289222346/dianshang", "path": "/src/main/java/org/jeecgframework/web/superquery/entity/SuperQueryHistoryEntity.java", "source": "the-stack-v2", "method_name": "getUpdateName", "class_name": "SuperQueryHistoryEntity", "index": 430, "label": 1}
{"input": "public DictionarySnapshot getDictionarySnapshot() {\n        return new DictionarySnapshot(getMetadata(), \n                new LuceneIndex(CategoryRegistryManager.getInstance().getSharedDataDictDirectory(),\n                        DictionarySearchMode.MATCH_SEMANTIC_DICTIONARY), \n                new LuceneIndex(getDataDictDirectory(), DictionarySearchMode.MATCH_SEMANTIC_DICTIONARY), \n                new LuceneIndex(CategoryRegistryManager.getInstance().getSharedKeywordDirectory(),\n                        DictionarySearchMode.MATCH_SEMANTIC_KEYWORD), \n                getRegexClassifier()\n        );\n    }", "timestamp": "2021-05-01T16:06:31.746782Z", "repo_name": "MarkChappell/data-quality", "path": "/dataquality-semantic/src/main/java/org/talend/dataquality/semantic/api/CustomDictionaryHolder.java", "source": "the-stack-v2", "method_name": "getDictionarySnapshot", "class_name": "CustomDictionaryHolder", "index": 431, "label": 1}
{"input": "protected void rememberCell() {\n        Gdx.app.debug(\"AIDummy\", \"remember cell: \" + turnX + \"x\" + turnY);\n        if (enemy.getState(turnX, turnY) == World.STATE_UNDAMAGED) {\n            hitX = turnX;\n            hitY = turnY;\n        } else\n            hitX = -1;\n    }", "timestamp": "2023-05-19T09:22:00.510698Z", "repo_name": "Ky3He4iK/battleship", "path": "/core/src/dev/ky3he4ik/battleship/ai/AIDummy.java", "source": "the-stack-v2", "method_name": "rememberCell", "class_name": "AIDummy", "index": 432, "label": 1}
{"input": "public Criteria andIdIsNull() {\n            addCriterion(\"ID is null\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andIdIsNull", "class_name": "GeneratedCriteria", "index": 433, "label": 1}
{"input": "public void testBug79990c() throws CoreException {\n\tsetUpBug79990();\n\tIMethod method = this.workingCopies[0].getType(\"Test\").getMethods()[1];\n\tsearch(method, DECLARATIONS|IGNORE_DECLARING_TYPE|IGNORE_RETURN_TYPE);\n\tassertSearchResults(\n\t\t\"src/b79990/Test.java void b79990.Test.second(T) [second] EXACT_MATCH\\n\" +\n\t\t\"src/b79990/Test.java void b79990.Sub.second(Exception) [second] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug79990c", "class_name": "JavaSearchBugsTests", "index": 434, "label": 1}
{"input": "public Criteria andVdef17LessThanOrEqualTo(String value) {\r\n            addCriterion(\"VDEF17 <=\", value, \"vdef17\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef17LessThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 435, "label": 1}
{"input": "public T getCurrent() throws java.lang.IllegalStateException {\n    \t\n    \tif(!isCurrent()) {\n    \t\tthrow new java.lang.IllegalStateException(\"there is no current element, so advance may not be called\");\n    \t}\n    \t\n    \treturn this.value;\n    }", "timestamp": "2020-03-07T00:45:31.868890Z", "repo_name": "abstructs/DS_assignment1", "path": "/src/task2/LinkedSequence.java", "source": "the-stack-v2", "method_name": "getCurrent", "class_name": "LinkedSequence", "index": 436, "label": 1}
{"input": "@Override\n\t@Transactional(readOnly = true)\n\tpublic Page<Categoria> buscarTodo(Pageable pageable) {\n\t\treturn categoriaRepositorio.findAll(pageable);\n\t}", "timestamp": "2022-09-15T19:36:37.448675Z", "repo_name": "sebasdiaz67/sistema-facturacion-rest", "path": "/sistema-facturacion-rest/src/main/java/com/homeoffice/sistema/facturacion/servicios/implementacion/CategoriaServicioImpl.java", "source": "the-stack-v2", "method_name": "buscarTodo", "class_name": "CategoriaServicioImpl", "index": 437, "label": 1}
{"input": "@Override\n  public ORecord fromStream(final byte[] iSource, ORecord iRecord, final String[] iFields) {\n    if (iSource.length == 0)\n      return iRecord;\n    if (iRecord == null)\n      iRecord = new ODocument();\n    else\n      checkTypeODocument(iRecord);\n\n    BytesContainer container = new BytesContainer(iSource);\n    container.skip(1);\n\n    try {\n      if (iFields != null && iFields.length > 0)\n        serializerByVersion[iSource[0]].deserializePartial((ODocument) iRecord, container, iFields);\n      else\n        serializerByVersion[iSource[0]].deserialize((ODocument) iRecord, container);\n    } catch (RuntimeException e) {\n      OLogManager.instance().warn(this, \"Error deserializing record with id %s send this data for debugging: %s \",\n          iRecord.getIdentity().toString(), OBase64Utils.encodeBytes(iSource));\n      throw e;\n    }\n    return iRecord;\n  }", "timestamp": "2021-01-19T06:50:08.211003Z", "repo_name": "fracz/refactor-extractor", "path": "/results-java/orientechnologies--orientdb/9328ce558638d85dce5566a565f791beed5230fa/before/ORecordSerializerBinary.java", "source": "the-stack-v2", "method_name": "fromStream", "class_name": "ORecordSerializerBinary", "index": 438, "label": 1}
{"input": "public static void main(String[] args) throws ClassNotFoundException,\n           InstantiationException, IllegalAccessException\n    {\n        mainFromParent(args);\n    }", "timestamp": "2021-01-18T05:46:03.351267Z", "repo_name": "zhujinhua/GitFun", "path": "/src/testcases/CWE113_HTTP_Response_Splitting/CWE113_HTTP_Response_Splitting__URLConnection_setHeaderServlet_07.java", "source": "the-stack-v2", "method_name": "main", "class_name": "CWE113_HTTP_Response_Splitting__URLConnection_setHeaderServlet_07", "index": 439, "label": 1}
{"input": "@Override\n\tpublic int addAsset(Asset a) throws SQLException {\n\t\tint status=dao.addAsset(a);\n\t\treturn status;\n\t}", "timestamp": "2023-08-03T13:18:26.464330Z", "repo_name": "aparajitahalder/Codefury", "path": "/src/main/java/com/demo/service/assetService/AssetInterfaceImpl.java", "source": "the-stack-v2", "method_name": "addAsset", "class_name": "AssetInterfaceImpl", "index": 440, "label": 1}
{"input": "public static WritableWorkbook createWorkbook(java.io.File file,\n                                                Workbook in)\n    throws IOException\n  {\n    return createWorkbook(file, in, new WorkbookSettings());\n  }", "timestamp": "2020-12-27T09:34:47.148817Z", "repo_name": "bloomer024/Mobile-Development", "path": "/excelClassExceptionDebug/src/jxl/Workbook.java", "source": "the-stack-v2", "method_name": "createWorkbook", "class_name": "Workbook", "index": 441, "label": 1}
{"input": "private void stopPreview() {\n        if (_camera != null) {\n            stopCamera();\n        }\n    }", "timestamp": "2021-01-22T13:30:35.067748Z", "repo_name": "javiercf/react-cam-fd", "path": "/android/src/main/java/com/lwansbrough/RCTCamera/RCTCameraViewFinder.java", "source": "the-stack-v2", "method_name": "stopPreview", "class_name": "RCTCameraViewFinder", "index": 442, "label": 1}
{"input": "private String ripMultiplexingExtras(String str) {\n        return (TextUtils.isEmpty(str) || !str.startsWith(ID_PREFIX)) ? str : str.substring(7);\n    }", "timestamp": "2020-07-22T15:46:54.149313Z", "repo_name": "cmFodWx5YWRhdjEyMTA5/Gaana2", "path": "/sources/com/moengage/push/PushManager.java", "source": "the-stack-v2", "method_name": "ripMultiplexingExtras", "class_name": "PushManager", "index": 443, "label": 1}
{"input": "public Criteria andVdef10GreaterThanOrEqualTo(String value) {\r\n            addCriterion(\"VDEF10 >=\", value, \"vdef10\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef10GreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 444, "label": 1}
{"input": "public static boolean isGrantedPermission(Context context, String... permissions) {\n        return isGrantedPermission(context, Arrays.asList(permissions));\n    }", "timestamp": "2020-03-27T06:07:40.168195Z", "repo_name": "Lebron-Liu/Basketballl", "path": "/vwill/app/src/main/java/com/xykj/vwill/PermissionActivity.java", "source": "the-stack-v2", "method_name": "isGrantedPermission", "class_name": "PermissionActivity", "index": 445, "label": 1}
{"input": "@Test\n    public void testCallOnItem() {\n        AtomicInteger res = new AtomicInteger();\n        AtomicInteger twoGotCalled = new AtomicInteger();\n\n        int r = one.onItem().call(i -> {\n            res.set(i);\n            return two.onItem().invoke(twoGotCalled::set);\n        })\n                .await().indefinitely();\n\n        assertThat(r).isEqualTo(1);\n        assertThat(twoGotCalled).hasValue(2);\n        assertThat(res).hasValue(1);\n    }", "timestamp": "2022-11-30T09:32:52.267405Z", "repo_name": "lamtrhieu/smallrye-mutiny", "path": "/implementation/src/test/java/io/smallrye/mutiny/operators/UniOnItemInvokeTest.java", "source": "the-stack-v2", "method_name": "testCallOnItem", "class_name": "UniOnItemInvokeTest", "index": 446, "label": 1}
{"input": "@ManyToOne\n    @JoinColumn(name = \"Id\")\n    public Purchased getPurchased() {\n        return purchased;\n    }", "timestamp": "2023-07-05T17:17:18.305098Z", "repo_name": "methmal1997/HIbernate", "path": "/src/com/moviesite/hibernate/entity/Review.java", "source": "the-stack-v2", "method_name": "getPurchased", "class_name": "Review", "index": 447, "label": 1}
{"input": "public Criteria andVdef18LessThanOrEqualTo(String value) {\r\n            addCriterion(\"VDEF18 <=\", value, \"vdef18\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef18LessThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 448, "label": 1}
{"input": "@Override\n        public Builder<T> setTemplate(String templateName) {\n            this.templateDefDescriptor = Aura.getDefinitionService().getDefDescriptor(templateName, ComponentDef.class);\n            return this;\n        }", "timestamp": "2020-12-14T02:11:21.814429Z", "repo_name": "fawnapp/aura", "path": "/aura-impl/src/main/java/org/auraframework/impl/root/component/BaseComponentDefImpl.java", "source": "the-stack-v2", "method_name": "setTemplate", "class_name": "Builder", "index": 449, "label": 1}
{"input": "@Test\n    @Transactional\n    public void getAuthoritiesByIdFiltering() throws Exception {\n        \n        authorityRepository.saveAndFlush(authority);\n\n        Long id = authority.getId();\n\n        defaultAuthorityShouldBeFound(\"id.equals=\" + id);\n        defaultAuthorityShouldNotBeFound(\"id.notEquals=\" + id);\n\n        defaultAuthorityShouldBeFound(\"id.greaterThanOrEqual=\" + id);\n        defaultAuthorityShouldNotBeFound(\"id.greaterThan=\" + id);\n\n        defaultAuthorityShouldBeFound(\"id.lessThanOrEqual=\" + id);\n        defaultAuthorityShouldNotBeFound(\"id.lessThan=\" + id);\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "getAuthoritiesByIdFiltering", "class_name": "AuthorityResourceIT", "index": 450, "label": 1}
{"input": "private static <REQ, RESP> CompletableFuture<RESP> mutate(HBaseRpcController controller,\n      HRegionLocation loc, ClientService.Interface stub, REQ req,\n      Converter<MutateRequest, byte[], REQ> reqConvert,\n      Converter<RESP, HBaseRpcController, MutateResponse> respConverter) {\n    return call(controller, loc, stub, req, reqConvert, (s, c, r, done) -> s.mutate(c, r, done),\n      respConverter);\n  }", "timestamp": "2020-03-21T15:28:16.237120Z", "repo_name": "siwuxietang/hbase", "path": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncTableImpl.java", "source": "the-stack-v2", "method_name": "mutate", "class_name": "RawAsyncTableImpl", "index": 451, "label": 1}
{"input": "public static List<ProductSale> get_product_sales( Long id_product_info ) {\n\n\t  List<ProductSale> products_list =Ebean.find(ProductSale.class).where().eq(\"ref_product_info\", id_product_info.toString()).findList();\n\t  return products_list;\n  \n  }", "timestamp": "2021-01-10T19:17:11.751315Z", "repo_name": "Neozaru/Play_Shop", "path": "/app/controllers/Application.java", "source": "the-stack-v2", "method_name": "get_product_sales", "class_name": "Application", "index": 452, "label": 1}
{"input": "public Criteria andSuperiorVerifiUserIdNotBetween(Long value1, Long value2) {\r\n            addCriterion(\"superior_verifi_user_id not between\", value1, value2, \"superiorVerifiUserId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andSuperiorVerifiUserIdNotBetween", "class_name": "GeneratedCriteria", "index": 453, "label": 1}
{"input": "@Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.demo_fragment_list_base, container, false);\n    }", "timestamp": "2021-01-18T06:07:57.846404Z", "repo_name": "MobileSam/cardslib", "path": "/demo/stock/src/main/java/it/gmariotti/cardslib/demo/fragment/ListBaseFragment.java", "source": "the-stack-v2", "method_name": "onCreateView", "class_name": "ListBaseFragment", "index": 454, "label": 1}
{"input": "@Override\n    public BotState getUsersCurrentBotState(int userId) {\n        BotState botState = usersBotStates.get(userId);\n        if (botState == null){\n            botState = BotState.ASK_OPTION;\n        }\n        return botState;\n    }", "timestamp": "2023-06-04T07:06:59.978601Z", "repo_name": "a6jora/uxboost-bot", "path": "/src/main/java/cache/UserAdCache.java", "source": "the-stack-v2", "method_name": "getUsersCurrentBotState", "class_name": "UserAdCache", "index": 455, "label": 1}
{"input": "private String revalidateParamSelections(ParamStruct paramStruct, SelectionHandler handler, Vector<String> countryNames) {\n\t\tif (!handler.CheckAnalysisCountry(paramStruct._analysis, paramStruct._country)) {\n\t\t\tJOptionPane.showMessageDialog(null, paramStruct._country + \" is not compatible with the \" + paramStruct._analysis + \" analysis!\",\"Error On Analysis Change\",JOptionPane.INFORMATION_MESSAGE);\n\t\t\tfor(int i = 0; i <= countryNames.size() - 1; i++) {\n\t\t\t\tif(handler.CheckAnalysisCountry(paramStruct._analysis, countryNames.elementAt(i))) {\n\t\t\t\t\treturn countryNames.elementAt(i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "timestamp": "2023-04-15T00:23:45.859903Z", "repo_name": "Soran-i/Dandy-Data-Display", "path": "/src/main/java/statsVisualiser/gui/MainUI.java", "source": "the-stack-v2", "method_name": "revalidateParamSelections", "class_name": "MainUI", "index": 456, "label": 1}
{"input": "@Override\n        public void onProcessorState(ProcessorState processorState) {\n            if (MyDebug.LOG) {\n                Log.d(TAG, \"processor state changed. state=\" + processorState);\n            }\n            beamFrequencyText.setText(convert(Integer.toString(processorState.getBeamFreq())));\n        }", "timestamp": "2021-01-21T11:23:29.957303Z", "repo_name": "jackw2050/Land_Android", "path": "/ultraGrav2/src/main/java/com/zlscorp/ultragrav/activity/fragment/CalculateFeedbackScaleFragment.java", "source": "the-stack-v2", "method_name": "onProcessorState", "class_name": "MyProcessorStateListener", "index": 457, "label": 1}
{"input": "@Test\n  public void case44() {\n    int[] revenues = { 3, 550, -353, 268, 62, 53, -62, -49, 549, 553, 543, -6, -655, 4, 1, -355, -876, -956, -10, -656, -950, -57, 83, 244, 547, -48, 545, 553, -52, -948, -100, -1, 8, 99, -577, -55, -51, -47, 246, -4, 5, 24, -52, -947, 248 };\n    int k = 9;\n    assertEquals(469.38949474165526, mergersdivtwo.findMaximum(revenues, k), DELTA * 469.38949474165526);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case44", "class_name": "MergersDivTwoTest", "index": 458, "label": 1}
{"input": "private WebFeatureServiceLayer createWfsLayer(String displayName,\n             String proxyUrl, String featureType) {\n         WebFeatureServiceLayer wfsLayer = new WebFeatureServiceLayer();\n         wfsLayer.setDisplayName(displayName);\n         wfsLayer.setUri(proxyUrl);\n         wfsLayer.setFeatureType(featureType);\n         wfsLayer.setFeatureNS(\"http://www.openplans.org/topp\");\n         wfsLayer.setProjection(\"EPSG:4326\");\n         wfsLayer.setSelectionCtrlId(\"1\");\n         return wfsLayer;\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/19/19_5fb2f00edba1f1f7c2c7a63a283131ac855da05a/WebFeatureServiceLayerTest2/19_5fb2f00edba1f1f7c2c7a63a283131ac855da05a_WebFeatureServiceLayerTest2_s.java", "source": "the-stack-v2", "method_name": "createWfsLayer", "class_name": "WebFeatureServiceLayerTest2", "index": 459, "label": 1}
{"input": "@Test\n    public void getWebsocketEndpoint() throws Exception {\n        restMockMvc.perform(get(\"/websocket/tracker/308/sessionId/websocket\"))\n            .andExpect(status().isNotFound());\n    }", "timestamp": "2023-02-04T07:50:23.383164Z", "repo_name": "CyberCastle/WasteCollectorTracer", "path": "/src/test/java/cl/cc/web/rest/ClientForwardControllerTest.java", "source": "the-stack-v2", "method_name": "getWebsocketEndpoint", "class_name": "ClientForwardControllerTest", "index": 460, "label": 1}
{"input": "public static com.google.ads.googleads.v5.services.FeedItemOperation parseDelimitedFrom(\n      java.io.InputStream input,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);\n  }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "parseDelimitedFrom", "class_name": "FeedItemOperation", "index": 461, "label": 1}
{"input": "public UpdatePatchBaselineResult withModifiedDate(java.util.Date modifiedDate) {\n        setModifiedDate(modifiedDate);\n        return this;\n    }", "timestamp": "2021-01-25T05:50:39.073013Z", "repo_name": "erbrito/aws-java-sdk", "path": "/aws-java-sdk-ssm/src/main/java/com/amazonaws/services/simplesystemsmanagement/model/UpdatePatchBaselineResult.java", "source": "the-stack-v2", "method_name": "withModifiedDate", "class_name": "UpdatePatchBaselineResult", "index": 462, "label": 1}
{"input": "public void setDomainName(String domainName) {\r\n\t\tthis.domainName = domainName;\r\n\t\tif(domainName != null){\n\t\t\tputQueryParameter(\"DomainName\", domainName);\r\n\t\t}\n\t}", "timestamp": "2020-04-26T02:00:35.360905Z", "repo_name": "longtx/aliyun-openapi-java-sdk", "path": "/aliyun-java-sdk-live/src/main/java/com/aliyuncs/live/model/v20161101/UpdateLiveRecordNotifyConfigRequest.java", "source": "the-stack-v2", "method_name": "setDomainName", "class_name": "UpdateLiveRecordNotifyConfigRequest", "index": 463, "label": 1}
{"input": "@Test public void testLike() {\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.REGULAR)\n        .query(\"select * from \\\"hr\\\".\\\"emps\\\"\\n\"\n            + \"where \\\"name\\\" like '%i__'\")\n        .returns(\"\"\n            + \"empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000\\n\"\n            + \"empid=150; deptno=10; name=Sebastian; salary=7000.0; commission=null\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testLike", "class_name": "JdbcTest", "index": 464, "label": 1}
{"input": "protected static Author get(Connection connection,String name) throws SQLException {\n        PreparedStatement preparedStatement = connection.prepareStatement(\n                \"SELECT id, name FROM authors WHERE name = ?\");\n\n        preparedStatement.setString(1, name);\n\n        return getFromPreparedStatement(preparedStatement);\n    }", "timestamp": "2021-07-08T09:35:13.163549Z", "repo_name": "fapedroso/another-book-in-the-shelf", "path": "/src/main/java/br/ufsm/piveta/system/entities/Author.java", "source": "the-stack-v2", "method_name": "get", "class_name": "Author", "index": 465, "label": 1}
{"input": "public void getEquals(View view){\n        if(operation != null && !operation.equals(\"\") && !sign.equals(\"\")) {\n            String[] numbers = operation.split('\\\\' + sign);\n            float num1 = Float.parseFloat(numbers[0]);\n            float num2 = Float.parseFloat(numbers[1]);\n            float result = result(sign, num1, num2);\n            editText.setText(result + \"\");\n            textView.setText(operation + \"=\");\n            operation = result + \"\";\n        }\n    }", "timestamp": "2021-05-31T01:02:53.417110Z", "repo_name": "phndavid/calculator", "path": "/Calculator/app/src/main/java/com/master/ndavid/calculator/MainActivity.java", "source": "the-stack-v2", "method_name": "getEquals", "class_name": "MainActivity", "index": 466, "label": 1}
{"input": "public static Evaluable parse(String napis){\r\n\t\tnapis = napis.replaceAll(\"\\\\s+\", \"\");\r\n\t\tnapis = napis.replaceAll(\"\\\\s+\", \"\");\r\n\t\tString[] parts = napis.split(\"(?<=\\\\+)|(?=\\\\+)|(?<=-)|(?=-)|(?<=\\\\*)|(?=\\\\*)|(?<=/)|(?=/)\");\r\n\t\t\r\n\t\t\r\n\t\tif(parts.length == 1) return new Singleton(parts[0]);\r\n\t\t\r\n\t\tEvaluable result = Factory.createEquotation(parts[1], parts[0], parts[2]);\r\n\t\t\r\n\t\tfor(int i = 3; i < parts.length; i+=2){\r\n\t\t\tString op = parts[i];\r\n\t\t\tString number = parts[i+1];\r\n\t\t\t\r\n\t\t\tresult = result.addRightOperation(op, number);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}", "timestamp": "2021-01-22T21:45:02.919951Z", "repo_name": "MonikaDjordjevic/Calculator", "path": "/kalkulator/src/kalkulator/Parser.java", "source": "the-stack-v2", "method_name": "parse", "class_name": "Parser", "index": 467, "label": 1}
{"input": "public Criteria andUserIdIsNotNull() {\n            addCriterion(\"user_id is not null\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andUserIdIsNotNull", "class_name": "GeneratedCriteria", "index": 468, "label": 1}
{"input": "public void updateActiveState() {\n        if (input != null && input.isPut()) {\n            if (!interrupted) {\n                if (state == KEY_NO_INPUT) {\n                    state = KEY_CLICKED;\n                } else {\n                    state = KEY_PRESSED;\n                }\n            } else {\n                updateBlockedState();\n            }\n        } else {\n            if (state == KEY_PRESSED) {\n                state = KEY_RELEASED;\n            } else {\n                state = KEY_NO_INPUT;\n            }\n            interrupted = false;\n        }\n    }", "timestamp": "2022-08-26T19:37:43.916742Z", "repo_name": "przwr/GameEngine", "path": "/src/game/gameobject/inputs/Action.java", "source": "the-stack-v2", "method_name": "updateActiveState", "class_name": "Action", "index": 469, "label": 1}
{"input": "public void bind(int port) throws Exception {\n\t\n\tEventLoopGroup bossGroup = new NioEventLoopGroup();\n\tEventLoopGroup workerGroup = new NioEventLoopGroup();\n\ttry {\n\t    ServerBootstrap b = new ServerBootstrap();\n\t    b.group(bossGroup, workerGroup)\n\t\t    .channel(NioServerSocketChannel.class)\n\t\t    .option(ChannelOption.SO_BACKLOG, 1024)\n\t\t    .childHandler(new ChildChannelHandler());\n\t    \n\t    ChannelFuture f = b.bind(port).sync();\n\n\t    \n\t    f.channel().closeFuture().sync();\n\t} finally {\n\t    \n\t    bossGroup.shutdownGracefully();\n\t    workerGroup.shutdownGracefully();\n\t}\n    }", "timestamp": "2022-07-12T04:11:02.960324Z", "repo_name": "huaxueyihao/NoteOfStudy", "path": "/A04.Netty/B01.Netty_Book/doc/nettybook2-master/src/com/phei/netty/frame/correct/TimeServer.java", "source": "the-stack-v2", "method_name": "bind", "class_name": "TimeServer", "index": 470, "label": 1}
{"input": "public String[] getServlets() {\n        \n        String[] result = null;\n\n        Container[] children = findChildren();\n        if (children != null) {\n            result = new String[children.length];\n            for( int i=0; i< children.length; i++ ) {\n                result[i] = children[i].getObjectName().toString();\n            }\n        }\n\n        return result;\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "getServlets", "class_name": "StandardContext", "index": 471, "label": 1}
{"input": "@Profile(\"sender\")\n    @Bean\n    public Tut1Sender sender() {\n        return new Tut1Sender();\n    }", "timestamp": "2020-03-21T02:38:09.013418Z", "repo_name": "a-chauhan/rabbitmq-spring-tutorials", "path": "/src/main/java/org/springframework/amqp/tutorials/tut1/Tut1Config.java", "source": "the-stack-v2", "method_name": "sender", "class_name": "Tut1Config", "index": 472, "label": 1}
{"input": "@Test\n    public void test2x2() {\n        int[][] inMatrix  = { {1, 2}, {3, 4} };\n        int[][] expOutput = { {1, 2}, {4, 3} };\n        assertTrue(testEqual(expOutput, MatrixHelixMorph.helix(inMatrix)));\n    }", "timestamp": "2023-03-28T05:11:03.621410Z", "repo_name": "Piyush1077/Junit-Assignment", "path": "/JavaJunitAssignment-master/src/test/java/helix/MatrixHelixMorphTest.java", "source": "the-stack-v2", "method_name": "test2x2", "class_name": "MatrixHelixMorphTest", "index": 473, "label": 1}
{"input": "void paint(GC gc, Point paintPosition, TableColumn column) {\r\n\tint columnIndex = column.getIndex();\r\n\tString label = getText(gc, column);\r\n\tString oldLabel = getTrimmedText(columnIndex);\r\n\r\n\tif (label != null && label.equals(oldLabel) == false) {\r\n\t\tsetTrimmedText(label, columnIndex);\r\n\t\tselectionExtent = null;\t\t\n\t}\r\n\tif (columnIndex == TableColumn.FIRST) {\r\n\t\tpaintPosition.x += getImageIndentPixel();\r\n\t\tif (isCheckable() == true) {\r\n\t\t\tpaintPosition = drawCheckbox(gc, paintPosition);\r\n\t\t}\t\t\r\n\t}\r\n\tpaintPosition = drawImage(gc, paintPosition, columnIndex);\r\n\tpaintPosition.x += getTextIndent(columnIndex);\r\n\tdrawText(label, gc, paintPosition, columnIndex);\r\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipseswt_cluster/56034/tar_1.java", "source": "the-stack-v2", "method_name": "paint", "class_name": "TableItem", "index": 474, "label": 1}
{"input": "@Autowired\n    public void setLogger(Slf4jLoggerFactory logger)\n    {\n        this.logger = logger.create(DownloaderService.class);\n    }", "timestamp": "2022-11-26T19:35:30.152581Z", "repo_name": "balazskrizsan/weather-snapshot", "path": "/src/main/java/com/kbalazsworks/weathersnapshot/service/DownloaderService.java", "source": "the-stack-v2", "method_name": "setLogger", "class_name": "DownloaderService", "index": 475, "label": 1}
{"input": "public void OnLocalGalleryButtonClick(View v) {\n        Intent intent = new Intent(this, LocalGallery.class);\n        startActivity(intent);\n    }", "timestamp": "2020-03-29T14:22:44.535521Z", "repo_name": "k-siva/learn-app", "path": "/PictureGallery/app/src/main/java/com/example/asiablr/picturegallery/GalleryMain.java", "source": "the-stack-v2", "method_name": "OnLocalGalleryButtonClick", "class_name": "GalleryMain", "index": 476, "label": 1}
{"input": "private void a(boolean paramBoolean1, boolean paramBoolean2)\n  {\n    this.b = new ca(this, this.e);\n    this.b.a(paramBoolean1);\n    this.b.b(paramBoolean2);\n    if (this.e.k()) {\n      this.e.j();\n    }\n  }", "timestamp": "2020-05-29T08:54:50.751842Z", "repo_name": "waterwitness/dazhihui", "path": "/classes/com/d/a/c/bz.java", "source": "the-stack-v2", "method_name": "a", "class_name": "bz", "index": 477, "label": 1}
{"input": "private static ClassReader createClassReader(Resource resource) throws IOException {\n\n\t\ttry (InputStream is = new BufferedInputStream(resource.getInputStream())) {\n\n\t\t\treturn new ClassReader(is);\n\n\t\t} catch (IllegalArgumentException ex) {\n\t\t\tthrow new NestedIOException(\"ASM ClassReader failed to parse class file - \"\n\t\t\t\t\t+ \"probably due to a new Java class file version that isn't supported yet: \" + resource, ex);\n\t\t}\n\t}", "timestamp": "2023-09-01T12:19:32.846147Z", "repo_name": "2635064692/source-code-mytest", "path": "/source-code-lib/spring-data-commons-2.2.3.RELEASE-sources/org/springframework/data/type/classreading/DefaultMethodsMetadataReader.java", "source": "the-stack-v2", "method_name": "createClassReader", "class_name": "DefaultMethodsMetadataReader", "index": 478, "label": 1}
{"input": "@Test(priority=1, enabled=true)\n\tpublic void verifyHomePageTitleTest(){\n\t\tString homePageTitle = homePage.verifyHomePageTitle();\n\t\tAssert.assertEquals(homePageTitle, \"Core Compete\",\"Home page title not matched\");\n\t\tSystem.out.println(\"running test1\");\n\t}", "timestamp": "2023-05-14T20:03:06.167816Z", "repo_name": "spadeinfotech/A3portal-POM", "path": "/A3Portal-POM/src/test/java/com/A3Portal/Testcases/HomePageTest.java", "source": "the-stack-v2", "method_name": "verifyHomePageTitleTest", "class_name": "HomePageTest", "index": 479, "label": 1}
{"input": "protected void executeGUIActionBefore()\n         {\n         PrototypingPlayground.this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));\n         if (isVideoStreamPaused)\n            {\n            pauseResumeVideoButton.setText(\"Pause Video\");\n            }\n         else\n            {\n            pauseResumeVideoButton.setText(\"Resume Video\");\n            }\n         }", "timestamp": "2021-01-19T11:51:31.891500Z", "repo_name": "CMU-CREATE-Lab/terk-legacy", "path": "/TeRKClient/code/java/prototypingplayground/src/PrototypingPlayground.java", "source": "the-stack-v2", "method_name": "executeGUIActionBefore", "class_name": "PauseResumeVideoAction", "index": 480, "label": 1}
{"input": "@Override\n  public void runBare() throws Throwable {\n    if (!shouldRunTest()) return;\n\n    if (runInDispatchThread()) {\n      TestRunnerUtil.replaceIdeEventQueueSafely();\n      TestFrameworkPackage.runInEdtAndWait(new ThrowableRunnable<Throwable>() {\n        @Override\n        public void run() throws Throwable {\n          defaultRunBare();\n        }\n      });\n    }\n    else {\n      defaultRunBare();\n    }\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "runBare", "class_name": "UsefulTestCase", "index": 481, "label": 1}
{"input": "@Override\n    public VideoListViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n\n\n\n        View view = LayoutInflater.from(parent.getContext())\n                .inflate(R.layout.activity_videolist_item, parent, false);\n\n        VideoListViewHolder holder = new VideoListViewHolder(view);\n\n        return holder;\n    }", "timestamp": "2021-02-11T03:42:15.131574Z", "repo_name": "cupucharm/BlahBlah", "path": "/app/src/main/java/com/cookandroid/blahblar/VideoListAdapter.java", "source": "the-stack-v2", "method_name": "onCreateViewHolder", "class_name": "VideoListAdapter", "index": 482, "label": 1}
{"input": "public void testBug216875h() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[2];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/pack/Test.java\",\n\t\t\"package pack;\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"\tpublic int field;\\n\" +\n\t\t\"}\\n\"\n\t);\n\tthis.workingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/test/X.java\",\n\t\t\"package test;\\n\" +\n\t\t\"import pack.Test;\\n\" +\n\t\t\"public class X {\\n\" +\n\t\t\"\tTest t1, t2;\\n\" +\n\t\t\"package pack;\\n\"0 +\n\t\t\"package pack;\\n\"1 +\n\t\t\"package pack;\\n\"2 +\n\t\t\"package pack;\\n\"3 +\n\t\t\"package pack;\\n\"4 +\n\t\t\"}\\n\"\n\t);\n\tthis.resultCollector.showSelection();\n\tthis.resultCollector.showAccess();\n\tthis.resultCollector.showAccuracy(false);\n\tIField field = this.workingCopies[1].getType(\"package pack;\\n\"6).getField(\"package pack;\\n\"7);\n\tsearch(field, REFERENCES, getJavaSearchWorkingCopiesScope(), this.resultCollector);\n\tassertSearchResults(\n\t\t\"package pack;\\n\"8 +\n\t\t\"package pack;\\n\"9 +\n\t\t\"public class Test {\\n\"0 +\n\t\t\"public class Test {\\n\"1\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug216875h", "class_name": "JavaSearchBugsTests", "index": 483, "label": 1}
{"input": "@Test\n    public void testSettingsObserverUpdateEnabled() {\n        mSpiedOneHandedController.onEnabledSettingChanged();\n\n        verify(mSpiedOneHandedController).setOneHandedEnabled(anyBoolean());\n    }", "timestamp": "2023-05-12T00:27:34.162348Z", "repo_name": "Flamingo-OS/frameworks_base", "path": "/libs/WindowManager/Shell/tests/unittest/src/com/android/wm/shell/onehanded/OneHandedControllerTest.java", "source": "the-stack-v2", "method_name": "testSettingsObserverUpdateEnabled", "class_name": "OneHandedControllerTest", "index": 484, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n\tpublic ActionForward toDjyqTaskList(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\n\t\tMap params = new HashMap();\n\t\tParamUtil.putStr2Map(request, \"APPLICATIONID\", params);\n\t\tParamUtil.putStr2Map(request, \"ORIGINALAPPLICATIONID\", params);\n\t\tParamUtil.putStr2Map(request, \"ACCOUNTNUMBER\", params);\n\t\tParamUtil.putStr2Map(request, \"STATUS\", params);\n\t\tParamUtil.putStr2Map(request, \"ksr\", params);\n\t\tParamUtil.putStr2Map(request, \"jsr\", params);\n\t\tint pageNo = ParamUtil.getInt(request, \"pageNo\", 1);\n\t\tIListPage page = zfdjService.pageQueryDjyqTask(params, pageNo);\n\t\trequest.setAttribute(\"page\", page);\n\t\treturn mapping.findForward(\"djyqlist\");\n\t}", "timestamp": "2021-01-12T15:41:00.492001Z", "repo_name": "MoonLuckSir/MoonRepository", "path": "/src/java/com/yitong/app/action/judicial/dxzpzfdj/ZfdjAction.java", "source": "the-stack-v2", "method_name": "toDjyqTaskList", "class_name": "ZfdjAction", "index": 485, "label": 1}
{"input": "public void testBug124469b() throws CoreException {\n\tIType type = getClassFile(\"JavaSearchBugs\", \"lib/b124469.jar\", \"pack\", \"A1.class\").getType();\n\tsearch(type, REFERENCES);\n\tassertSearchResults(\n\t\t\"lib/b124469.jar pack.A1 pack.A2.annot() EXACT_MATCH\\n\" +\n\t\t\"lib/b124469.jar test.C EXACT_MATCH\\n\" +\n\t\t\"lib/b124469.jar test.C EXACT_MATCH\\n\" +\n\t\t\"lib/b124469.jar test.F.field EXACT_MATCH\\n\" +\n\t\t\"lib/b124469.jar void test.M.foo() EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug124469b", "class_name": "JavaSearchBugsTests", "index": 486, "label": 1}
{"input": "private static void m424k(String str) {\n        C0328z2.m889d();\n        String str2 = f423d;\n        C0260s1.m686c(5, str2, \"Deleting Index File for \" + str + \" file name:\" + C0118e1.m386a().f361a.getFileStreamPath(\".FlurrySenderIndex.info.\".concat(String.valueOf(str))));\n        File fileStreamPath = C0118e1.m386a().f361a.getFileStreamPath(\".FlurrySenderIndex.info.\".concat(String.valueOf(str)));\n        if (fileStreamPath.exists()) {\n            boolean delete = fileStreamPath.delete();\n            C0260s1.m686c(5, str2, \"Found file for \" + str + \". Deleted - \" + delete);\n        }\n    }", "timestamp": "2023-02-23T06:37:03.730470Z", "repo_name": "alissonlauffer/via-browser-dump", "path": "/app/src/main/java/com/flurry/sdk/C0136f2.java", "source": "the-stack-v2", "method_name": "m424k", "class_name": "C0136f2", "index": 487, "label": 1}
{"input": "public Criteria andReasonNotBetween(String value1, String value2) {\r\n            addCriterion(\"reason not between\", value1, value2, \"reason\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andReasonNotBetween", "class_name": "GeneratedCriteria", "index": 488, "label": 1}
{"input": "@Override\r\n\tpublic boolean canAccessKineticEnergyFromDirection(Direction direction)\r\n\t{\r\n\t\treturn true;\r\n\t}", "timestamp": "2021-01-25T15:19:00.440484Z", "repo_name": "ueyudiud/FLE", "path": "/src/main/java/fle/api/tile/kinetic/TEGearBoxBase.java", "source": "the-stack-v2", "method_name": "canAccessKineticEnergyFromDirection", "class_name": "TEGearBoxBase", "index": 489, "label": 1}
{"input": "@Test\n    public void testOneHandedEnabledRotation90ShouldHandleRotate() {\n        when(mMockSettingsUitl.getSettingsOneHandedModeEnabled(any(), anyInt())).thenReturn(true);\n        when(mMockSettingsUitl.getSettingsSwipeToNotificationEnabled(any(), anyInt())).thenReturn(\n                false);\n        final WindowContainerTransaction handlerWCT = new WindowContainerTransaction();\n        mSpiedOneHandedController.onRotateDisplay(mDisplay.getDisplayId(), Surface.ROTATION_0,\n                Surface.ROTATION_90, handlerWCT);\n\n        verify(mMockDisplayAreaOrganizer, atLeastOnce()).onRotateDisplay(eq(mContext),\n                eq(Surface.ROTATION_90), any(WindowContainerTransaction.class));\n    }", "timestamp": "2023-05-12T00:27:34.162348Z", "repo_name": "Flamingo-OS/frameworks_base", "path": "/libs/WindowManager/Shell/tests/unittest/src/com/android/wm/shell/onehanded/OneHandedControllerTest.java", "source": "the-stack-v2", "method_name": "testOneHandedEnabledRotation90ShouldHandleRotate", "class_name": "OneHandedControllerTest", "index": 490, "label": 1}
{"input": "protected ClassLoader bindThread() {\n\n        ClassLoader oldContextClassLoader =\n            Thread.currentThread().getContextClassLoader();\n\n        if (getResources() == null)\n            return oldContextClassLoader;\n\n        if (getLoader() != null && getLoader().getClassLoader() != null) {\n            Thread.currentThread().setContextClassLoader\n                (getLoader().getClassLoader());\n        }\n\n        DirContextURLStreamHandler.bindThread(getResources());\n\n        if (isUseNaming()) {\n            try {\n                ContextBindings.bindThread(this, this);\n            } catch (NamingException e) {\n                \n                \n            }\n        }\n\n        return oldContextClassLoader;\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "bindThread", "class_name": "StandardContext", "index": 491, "label": 1}
{"input": "public final Property<ManageablePosition> position() {\n    return metaBean().position().createProperty(this);\n  }", "timestamp": "2020-12-02T16:35:36.745672Z", "repo_name": "emcleod/OG-Platform", "path": "/projects/OG-Master/src/main/java/com/opengamma/master/position/PositionDocument.java", "source": "the-stack-v2", "method_name": "position", "class_name": "PositionDocument", "index": 492, "label": 1}
{"input": "@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n\n        MethodReference that = (MethodReference) o;\n\n        if (declaringClass != null ? !declaringClass.equals(that.declaringClass) : that.declaringClass != null)\n            return false;\n        if (methodName != null ? !methodName.equals(that.methodName) : that.methodName != null) return false;\n        if (!Arrays.equals(parameterTypes, that.parameterTypes)) return false;\n\n        return true;\n    }", "timestamp": "2023-07-22T19:42:57.915715Z", "repo_name": "dmlloyd/core", "path": "/impl/src/main/java/org/jboss/weld/interceptor/builder/MethodReference.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "MethodReference", "index": 493, "label": 1}
{"input": "public StatementExpressionContext statementExpression() {\n\t\t\treturn getRuleContext(StatementExpressionContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "statementExpression", "class_name": "StatementContext", "index": 494, "label": 1}
{"input": "public boolean match(SuperMethodInvocation node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 495, "label": 1}
{"input": "@Override\n     public void attachTo(DeploymentUnit unit) {\n         super.attachTo( unit );\n         unit.putAttachment( ATTACHMENT_KEY, this );\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/33/33_9d556bb155b90787a532ff5f8246d892165619a8/RackMetaData/33_9d556bb155b90787a532ff5f8246d892165619a8_RackMetaData_t.java", "source": "the-stack-v2", "method_name": "attachTo", "class_name": "RackMetaData", "index": 496, "label": 1}
{"input": "@Override\n      public Generate setAccessToken(java.lang.String accessToken) {\n        return (Generate) super.setAccessToken(accessToken);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setAccessToken", "class_name": "Generate", "index": 497, "label": 1}
{"input": "public String toString() {\n         return \"[RackApplicationMetaData:\" + System.identityHashCode( this ) + \"\\n  rackupScriptLocation=\" + this.rackUpScriptLocation + \"\\n  rackUpScript=\"\n                 + this.rackUpScript + \"\\n  host=\" + getHosts() + \"\\n  context=\" + getContextPath() + \"\\n  static=\" + getStaticPathPrefix() + \"]\";\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/33/33_9d556bb155b90787a532ff5f8246d892165619a8/RackMetaData/33_9d556bb155b90787a532ff5f8246d892165619a8_RackMetaData_t.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "RackMetaData", "index": 498, "label": 1}
{"input": "@Bean\n    public AccessDeniedHandler ajaxAccessDeniedHandler() {\n        return new AjaxAccessDeniedHandler();\n    }", "timestamp": "2022-12-21T15:58:58.931728Z", "repo_name": "arhrina/toyPrj", "path": "/AsyncSpringSecurity/src/main/java/me/arhrina/asynchronous/security/config/AjaxSecurityConfig.java", "source": "the-stack-v2", "method_name": "ajaxAccessDeniedHandler", "class_name": "AjaxSecurityConfig", "index": 499, "label": 1}
{"input": "public void setOrderGoodsList(List<TdOrderGoods> orderGoodsList) {\n        this.orderGoodsList = orderGoodsList;\n    }", "timestamp": "2021-01-10T07:10:13.758215Z", "repo_name": "nieshr/xjr", "path": "/src/main/java/com/ynyes/kjxjr/entity/TdOrder.java", "source": "the-stack-v2", "method_name": "setOrderGoodsList", "class_name": "TdOrder", "index": 500, "label": 1}
{"input": "@Override\n        public void onClick(View v) {\n            if (mSurfaceView != null) {\n                mSurfaceView.reDraw();\n            }\n        }", "timestamp": "2020-03-16T21:40:16.388847Z", "repo_name": "liuwenrong/Demo4Roger", "path": "/app/src/interview/java/aron/demo/ndk/NDKActivity.java", "source": "the-stack-v2", "method_name": "onClick", "class_name": "NDKActivity", "index": 501, "label": 1}
{"input": "public LocalVariableDeclarationContext localVariableDeclaration() {\n\t\t\treturn getRuleContext(LocalVariableDeclarationContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "localVariableDeclaration", "class_name": "ForInitContext", "index": 502, "label": 1}
{"input": "@Test\n  public void case3() {\n    int[] revenues = { 1, 2, 2, 3, -10, 7 };\n    int k = 3;\n    assertEquals(2.9166666666666665, mergersdivtwo.findMaximum(revenues, k), DELTA * 2.9166666666666665);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case3", "class_name": "MergersDivTwoTest", "index": 503, "label": 1}
{"input": "@java.lang.Override\n  protected Builder newBuilderForType(\n      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {\n    Builder builder = new Builder(parent);\n    return builder;\n  }", "timestamp": "2023-08-19T07:39:40.744879Z", "repo_name": "googleads/google-ads-java", "path": "/google-ads-stubs-v14/src/main/java/com/google/ads/googleads/v14/enums/CustomAudienceTypeEnum.java", "source": "the-stack-v2", "method_name": "newBuilderForType", "class_name": "CustomAudienceTypeEnum", "index": 504, "label": 1}
{"input": "public void setProviderFirewallIds(String[] providerFirewallIds) {\n        this.providerFirewallIds = providerFirewallIds;\n    }", "timestamp": "2023-04-27T16:24:27.422581Z", "repo_name": "TheWeatherCompany/dasein-cloud-core", "path": "/src/main/java/org/dasein/cloud/compute/LaunchConfiguration.java", "source": "the-stack-v2", "method_name": "setProviderFirewallIds", "class_name": "LaunchConfiguration", "index": 505, "label": 1}
{"input": "@Override\n        public javax.servlet.FilterRegistration.Dynamic addFilter(\n                String filterName, Class<? extends Filter> filterClass) {\n            throw new UnsupportedOperationException(\n                    sm.getString(\"noPluggabilityServletContext.notAllowed\"));\n        }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "addFilter", "class_name": "NoPluggabilityServletContext", "index": 506, "label": 1}
{"input": "private static void list(File file, PrintStream out) throws IOException {\n        final SimpleDateFormat format = new SimpleDateFormat(\"EEE MMM dd HH:mm:ss z yyyy\");\n        final ZipFile zip = new ZipFile(file);\n        final Enumeration<? extends ZipEntry> enumeration = zip.entries();\n        while (enumeration.hasMoreElements()) {\n            ZipEntry entry = enumeration.nextElement();\n            out.printf(\"%1$7s %2$2s %3$2s\", entry.getSize(), format.format(entry.getTime()), entry.getName() );\n            out.println();\n        }\n    }", "timestamp": "2023-08-15T17:45:22.852380Z", "repo_name": "apache/openejb", "path": "/sandbox/release-tools/src/main/java/org/apache/openejb/tools/release/cmd/Binaries.java", "source": "the-stack-v2", "method_name": "list", "class_name": "Binaries", "index": 507, "label": 1}
{"input": "@RequestMapping(value = \"/tweet/new\", method = RequestMethod.GET)\n    public ModelAndView newTweet(ModelAndView mav) {\n    \t\tmav.setViewName(\"tweet/new\");\n    \t\treturn mav;\n    }", "timestamp": "2021-10-10T06:02:37.572372Z", "repo_name": "rokuyamad/pictweet_java", "path": "/src/main/java/com/example/web/controller/TweetController.java", "source": "the-stack-v2", "method_name": "newTweet", "class_name": "TweetController", "index": 508, "label": 1}
{"input": "public static Node[] createToolBarButtons(Action... actions) {\n\t\tNode[] buttons = new Node[actions.length];\n\t\tfor (int i = 0; i < actions.length; i++) {\n\t\t\tbuttons[i] = (actions[i] != null)\n\t\t\t\t\t? createToolBarButton(actions[i])\n\t\t\t\t\t: new Separator();\n\t\t}\n\t\treturn buttons;\n\t}", "timestamp": "2021-01-17T15:58:03.152382Z", "repo_name": "andreas-oberheim/universal-markup-editor", "path": "/src/main/java/org/markdownwriterfx/util/ActionUtils.java", "source": "the-stack-v2", "method_name": "createToolBarButtons", "class_name": "ActionUtils", "index": 509, "label": 1}
{"input": "public boolean isBtnAddTaskDisplayed() {\n\t\ttry {\n\t\t\tif (driver.findElement(btnAddTask).isDisplayed() == true) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch (Exception e) {\n\n\t\t\treturn false;\n\t\t}\n\t}", "timestamp": "2023-04-28T20:07:48.832750Z", "repo_name": "JohnTo88/Wize_L-D", "path": "/src/main/java/talentwize/pages/TimesheetConfigurations_Task.java", "source": "the-stack-v2", "method_name": "isBtnAddTaskDisplayed", "class_name": "TimesheetConfigurations_Task", "index": 510, "label": 1}
{"input": "@Parameters( name = \"{index}: JUnit {0}\" )\n    public static Collection<Object[]> junitVersions()\n    {\n        return asList( new Object[][] {\n                { JUNIT_4_0 },\n                { JUNIT_4_1 },\n                { JUNIT_4_2 },\n                { JUNIT_4_3 },\n                { JUNIT_4_3_1 },\n                { JUNIT_4_4 },\n                { JUNIT_4_5 },\n                { JUNIT_4_6 },\n                { JUNIT_4_7 },\n                { JUNIT_4_8 },\n                { JUNIT_4_8_1 },\n                { JUNIT_4_8_2 },\n                { JUNIT_4_9 },\n                { JUNIT_4_10 },\n                { JUNIT_4_11 },\n                { JUNIT_4_12 },\n                { JUNIT_4_13 }\n        } );\n    }", "timestamp": "2023-01-07T02:20:09.881872Z", "repo_name": "wessam1292/finalcertificates", "path": "/surefire-3.0.0-M5/surefire-its/src/test/java/org/apache/maven/surefire/its/JUnit4VersionsIT.java", "source": "the-stack-v2", "method_name": "junitVersions", "class_name": "JUnit4VersionsIT", "index": 511, "label": 1}
{"input": "@Override\r\n\t\tpublic void initContainer(DataContainer container) {\r\n\t\t\tTileContainer cont = (TileContainer)container;\r\n\t\t\tfor (int i = 0; i < getTanks(); i++)\r\n\t\t\t\tcont.addTankSlot(new TankSlot(this, i, 26 + 18 * i, 16, (byte)0x11));\r\n\t\t\tcont.addPlayerInventory(8, 50, false, true);\r\n\t\t\tplayer = cont.player.inventory;\r\n\t\t}", "timestamp": "2020-07-29T23:15:57.914435Z", "repo_name": "coldino/InductiveLogistics", "path": "/src/java/cd4017be/indlog/item/ItemFluidFilter.java", "source": "the-stack-v2", "method_name": "initContainer", "class_name": "GuiData", "index": 512, "label": 1}
{"input": "protected Object executeTimeConsumingAction()\n         {\n         \n         final int servoPosition = getTextFieldValueAsInt(buttonIndex);\n\n         \n         getQwerkController().getServoService().setPosition(servoIndex, servoPosition);\n\n         return null;\n         }", "timestamp": "2021-01-19T11:51:31.891500Z", "repo_name": "CMU-CREATE-Lab/terk-legacy", "path": "/TeRKClient/code/java/prototypingplayground/src/PrototypingPlayground.java", "source": "the-stack-v2", "method_name": "executeTimeConsumingAction", "class_name": "MoveServoAction", "index": 513, "label": 1}
{"input": "@JavascriptInterface\n    public int isvideocached() {\n        if (this.isInterstitial) {\n            return 0;\n        }\n        if (Version.getAndroidSDKVersion() < 14) {\n            return 0;\n        }\n        Logging.log(\"window.ADMARVEL.isvideocached()\");\n        final m m = (m)this.adMarvelWebViewReference.get();\n        if (m == null) {\n            return 0;\n        }\n        if (Version.getAndroidSDKVersion() >= 14) {\n            return new m$r().a(m);\n        }\n        return 0;\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "isvideocached", "class_name": "AdMarvelWebViewJSInterface", "index": 514, "label": 1}
{"input": "@GetMapping(\"/compra/eliminar/{id}\")\n\tpublic ModelAndView eliminarCompraPage(@PathVariable(value = \"id\")Long id) {\n\t\tModelAndView model = new ModelAndView(\"redirect:/compra/listado\");\n\t\tcompraService.eliminarCompra(id);\n\t\treturn model;\n\t}", "timestamp": "2023-05-25T21:40:53.650090Z", "repo_name": "sofia-munoz/repo-GrupoMVG-TP9", "path": "/Grupo_MVG_TP9/src/main/java/ar/edu/unju/fi/tp9/controller/CompraController.java", "source": "the-stack-v2", "method_name": "eliminarCompraPage", "class_name": "CompraController", "index": 515, "label": 1}
{"input": "public void setTextPosition(int value, int index){\n\t\talist.get(index).textPosition = value;\n\t\taadapter.notifyDataSetChanged();\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "setTextPosition", "class_name": "jListView", "index": 516, "label": 1}
{"input": "private void expandAll() {\n\t\tfor (int i = 0; i < tree.getRowCount(); i++) {\n\t\t\ttree.expandRow(i);\n\t\t}\n\t}", "timestamp": "2021-01-18T01:40:35.930601Z", "repo_name": "BenKettlewell/couchburp", "path": "/src/main/java/com/prevsec/couchburp/controller/BurpController.java", "source": "the-stack-v2", "method_name": "expandAll", "class_name": "BurpController", "index": 517, "label": 1}
{"input": "public static GetBillOutput convert(Bill bill) {\n    GetBillOutput result = new GetBillOutput();\n    result.setBill(new BillOutput());\n    result.getBill().setAmount(bill.getAmount());\n    result.getBill().setCurrencyCode(bill.getCurrencyCode());\n    result.getBill().setCarPlateNumber(bill.getSlotAssignment().getCarPlateNumber());\n    result.getBill().setProrated(bill.getFare().isProrated());\n    result.getBill().setStartDateTime(bill.getSlotAssignment().getStartDateTime());\n    result.getBill().setEndDateTime(bill.getSlotAssignment().getEndDateTime());\n    result.getBill().setBillNumber(bill.getId());\n    result.getBill().setSlotNumber(bill.getSlotAssignment().getSlot().getNumber());\n    result.getBill().setPaymentStatus(bill.getPaymentStatus());\n    return result;\n  }", "timestamp": "2022-07-07T00:17:21.915216Z", "repo_name": "myousstools/parkingapi", "path": "/src/main/java/com/parking/manager/web/beans/GetBillOutputConverter.java", "source": "the-stack-v2", "method_name": "convert", "class_name": "GetBillOutputConverter", "index": 518, "label": 1}
{"input": "public void pause() {\n        if (this.playerState == 1) {\n            LogUtil.i(TAG, \"do full pause\");\n            setCurrentPlayState(2);\n            if (isPlaying()) {\n                this.mediaPlayer.pause();\n                if (!this.canPlay) {\n                    this.mediaPlayer.seekTo(0);\n                }\n            }\n            showPauseView(false);\n            this.mHandler.removeCallbacksAndMessages(null);\n        }\n    }", "timestamp": "2020-11-25T21:02:17.790224Z", "repo_name": "pk1z/wladimir-computin-FimiX8-RE-App", "path": "/sources/com/fimi/album/widget/CustomVideoView.java", "source": "the-stack-v2", "method_name": "pause", "class_name": "CustomVideoView", "index": 519, "label": 1}
{"input": "@Test\n    public void isRenewalNecessaryWithExpiredToken()\n    {\n        \n        new Expectations()\n        {\n            {\n                Deencapsulation.invoke(mockSasToken, \"isExpired\");\n                result = true;\n            }\n        };\n\n        IotHubSasTokenAuthenticationProvider sasAuth = new mockIotHubSasTokenAuthenticationImplementation();\n        Deencapsulation.setField(sasAuth, \"sasToken\", mockSasToken);\n\n        \n        boolean isRenewalNecessary = Deencapsulation.invoke(sasAuth, \"isRenewalNecessary\");\n\n        \n        assertTrue(isRenewalNecessary);\n    }", "timestamp": "2021-02-22T23:58:57.886943Z", "repo_name": "kartben/azure-iot-sdk-java", "path": "/device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/auth/IotHubSasTokenAuthenticationProviderTest.java", "source": "the-stack-v2", "method_name": "isRenewalNecessaryWithExpiredToken", "class_name": "IotHubSasTokenAuthenticationProviderTest", "index": 520, "label": 1}
{"input": "public static String ensureBraces(String value) {\n    value = value.trim();\n    if (value.startsWith(\"{\") && value.endsWith(\"}\")) {\n      return value;\n    }\n    return \"{\" + value + \"}\";\n  }", "timestamp": "2023-07-21T09:39:51.361234Z", "repo_name": "datastax/dsbulk", "path": "/codecs/text/src/main/java/com/datastax/oss/dsbulk/codecs/text/utils/StringUtils.java", "source": "the-stack-v2", "method_name": "ensureBraces", "class_name": "StringUtils", "index": 521, "label": 1}
{"input": "public static boolean isAllUppercaseName(String name) {\n    int uppercaseChars = 0;\n    for (int i = 0; i < name.length(); i++) {\n      if (Character.isLowerCase(name.charAt(i))) {\n        return false;\n      }\n      if (Character.isUpperCase(name.charAt(i))) {\n        uppercaseChars++;\n      }\n    }\n    return uppercaseChars >= 3;\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "isAllUppercaseName", "class_name": "UsefulTestCase", "index": 522, "label": 1}
{"input": "public boolean isServicesOK() {\n        int available = GoogleApiAvailability.getInstance().isGooglePlayServicesAvailable(MainActivity.this);\n        if (available == ConnectionResult.SUCCESS) {\n            \n            return true;\n        } else if (GoogleApiAvailability.getInstance().isUserResolvableError(available)) {\n            Dialog dialog = GoogleApiAvailability.getInstance().getErrorDialog(MainActivity.this, available, ERROR_DIALOGUE_REQUEST);\n            dialog.show();\n        } else {\n            Toast.makeText(this, \"you cant make map request\", Toast.LENGTH_SHORT).show();\n        }\n        return false;\n    }", "timestamp": "2022-11-11T01:16:25.347455Z", "repo_name": "FawwazFaisal/BloodDotNet", "path": "/app/src/main/java/com/omnitech/blooddonationnetwork/MainActivity.java", "source": "the-stack-v2", "method_name": "isServicesOK", "class_name": "MainActivity", "index": 523, "label": 1}
{"input": "@Test public void testArraySort3() throws ConfigCompileException{\n         Run(\"msg(array_sort(array('002', '1', '03'), STRING))\", fakePlayer);\n         verify(fakePlayer).sendMessage(\"{002, 03, 1}\");\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/19/19_3b3438a24e33893035d2c602198d49ca13a35845/ArrayHandlingTest/19_3b3438a24e33893035d2c602198d49ca13a35845_ArrayHandlingTest_s.java", "source": "the-stack-v2", "method_name": "testArraySort3", "class_name": "ArrayHandlingTest", "index": 524, "label": 1}
{"input": "public String getIsenabledTxt() {\r\n\t\tif (isenabled==1) {\r\n\t\t\treturn \"可用\";\r\n\t\t} else {\r\n\t\t\treturn \"不可用\";\r\n\t\t}\r\n\t}", "timestamp": "2020-04-24T01:59:36.835713Z", "repo_name": "lishuai1030/code", "path": "/src/main/java/com/zs/pms/po/TUser.java", "source": "the-stack-v2", "method_name": "getIsenabledTxt", "class_name": "TUser", "index": 525, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n    }", "timestamp": "2021-04-28T22:32:52.924513Z", "repo_name": "xuyt11/androidBackFlow", "path": "/app/src/main/java/cn/ytxu/androidbackflow/sample/normal/request_activity_count/letter/ACLetterJActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "ACLetterJActivity", "index": 526, "label": 1}
{"input": "public boolean checks(ImportFileX.State currentState) {\n             return this.currentState == currentState;\n         }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/21/21_73c5c105e2ff0853742c14fce731689ee8ccf11e/ImportFileStatusWidget/21_73c5c105e2ff0853742c14fce731689ee8ccf11e_ImportFileStatusWidget_s.java", "source": "the-stack-v2", "method_name": "checks", "class_name": "StatusCheckTimer", "index": 527, "label": 1}
{"input": "@Override\n\t\tpublic void onValueChange(ValueChangeEvent<String> event) {\n\t\t\tspecificOccurrence.setValue(false);\n\t\t\tString selectedValue = event.getValue();\n\t\t\tif (!selectedValue.isEmpty() && !selectedValue.equals(\"\")) {\n\t\t\t\tapplyToMeasureButton.setEnabled(true);\n\t\t\t} else {\n\t\t\t\tapplyToMeasureButton.setEnabled(false);\n\t\t\t}\n\t\t\t\n\t\t\tListBoxMVP listbox = (ListBoxMVP) event.getSource();\n\t\t\tif (listbox.getItemText(listbox.getSelectedIndex()).equalsIgnoreCase(ConstantMessages.ATTRIBUTE)) {\n\t\t\t\tspecificOccurrence.setValue(false);\n\t\t\t\tspecificOccurrence.setEnabled(false);\n\t\t\t} else {\n\t\t\t\tspecificOccurrence.setEnabled(true);\n\t\t\t}\n\t\t}", "timestamp": "2021-01-18T19:53:17.807267Z", "repo_name": "michaelaltmann/MeasureAuthoringTool_LatestSprint", "path": "/mat/src/mat/client/clause/QDMAvailableValueSetWidget.java", "source": "the-stack-v2", "method_name": "onValueChange", "class_name": "QDMAvailableValueSetWidget", "index": 528, "label": 1}
{"input": "@Override\n        public Class<RDBColumnMetaData> getType() {\n            return RDBColumnMetaData.class;\n        }", "timestamp": "2022-09-14T22:43:10.618239Z", "repo_name": "keqingyuan/onion-easy-orm", "path": "/onion-easy-orm-rdb/src/main/java/cc/kebei/ezorm/rdb/meta/parser/AbstractTableMetaParser.java", "source": "the-stack-v2", "method_name": "getType", "class_name": "RDBColumnMetaDataWrapper", "index": 529, "label": 1}
{"input": "public Criteria andVdef2IsNull() {\r\n            addCriterion(\"VDEF2 is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef2IsNull", "class_name": "GeneratedCriteria", "index": 530, "label": 1}
{"input": "public static void setUpDriver(String browser, String url) {\n\t\tif(browser.equalsIgnoreCase(\"chrome\")) {\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"src/driver/chromedriver\");\n\t\tdriver=new ChromeDriver();\n\t\t}else if (browser.equalsIgnoreCase(\"firefox\")){\n\t\t\tSystem.setProperty(\"webdriver.gecko.driver\", \"src/driver/geckodriver\");\n\t\t\tdriver=new FirefoxDriver();\n\t\t} else {\n\t\t\tSystem.out.println(\"browser given is wrong\");\n\t\t}\n\t\tdriver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);\n\t\tdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);\n\t\tdriver.manage().window().fullscreen();\n\t\tdriver.get(url);\n\n\n\t}", "timestamp": "2020-05-29T10:20:07.610927Z", "repo_name": "shaq5035/Seleuium", "path": "/methods/CommonMethods.java", "source": "the-stack-v2", "method_name": "setUpDriver", "class_name": "CommonMethods", "index": 531, "label": 1}
{"input": "@Override\n   public void execute(Tuple tuple, BasicOutputCollector collector) {\n       String sentence = tuple.getString(0);\n       String[]words=sentence.split(\"[\\\\s~`!@#$%^&*(-)+=_:;'\\\",.<>?/\\\\\\\\0-9\"+\"\\\\]\\\\[\\\\}\\\\{]+\");\n\n       for(String word:words){\n           collector.emit(new Values(word));\n       }\n   }", "timestamp": "2020-03-07T20:25:05.424003Z", "repo_name": "UIUC-public/storm-tutorial", "path": "/src/SplitSentenceBolt.java", "source": "the-stack-v2", "method_name": "execute", "class_name": "SplitSentenceBolt", "index": 532, "label": 1}
{"input": "@Override\n    public void invoke(@NotNull final Project project, final Editor editor, PsiFile file, DataContext dataContext) {\n        JetRefactoringUtil.SelectExpressionCallback callback = new JetRefactoringUtil.SelectExpressionCallback() {\n            @Override\n            public void run(@Nullable JetExpression expression) {\n                doRefactoring(project, editor, expression, null);\n            }\n        };\n        try {\n            JetRefactoringUtil.selectExpression(editor, file, callback);\n        }\n        catch (JetRefactoringUtil.IntroduceRefactoringException e) {\n            showErrorHint(project, editor, e.getMessage());\n        }\n    }", "timestamp": "2021-01-16T19:01:44.796215Z", "repo_name": "leomindez/kotlin", "path": "/idea/src/org/jetbrains/kotlin/idea/refactoring/introduce/introduceVariable/KotlinIntroduceVariableHandler.java", "source": "the-stack-v2", "method_name": "invoke", "class_name": "KotlinIntroduceVariableHandler", "index": 533, "label": 1}
{"input": "public Map<Resource,List<Wire>> resolve(ResolveContext resolveContext) throws ResolutionException {\n\t\treturn resolver.resolve(resolveContext);\n\t}", "timestamp": "2021-01-10T09:52:13.695489Z", "repo_name": "joansmith3/bnd", "path": "/biz.aQute.resolve/src/biz/aQute/resolve/BndResolver.java", "source": "the-stack-v2", "method_name": "resolve", "class_name": "BndResolver", "index": 534, "label": 1}
{"input": "@Test\n    @Transactional\n    public void getAllAuthoritiesByOrderIsLessThanSomething() throws Exception {\n        \n        authorityRepository.saveAndFlush(authority);\n\n        \n        defaultAuthorityShouldNotBeFound(\"order.lessThan=\" + DEFAULT_ORDER);\n\n        \n        defaultAuthorityShouldBeFound(\"order.lessThan=\" + UPDATED_ORDER);\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "getAllAuthoritiesByOrderIsLessThanSomething", "class_name": "AuthorityResourceIT", "index": 535, "label": 1}
{"input": "@Override\n      public Generate setUploadProtocol(java.lang.String uploadProtocol) {\n        return (Generate) super.setUploadProtocol(uploadProtocol);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setUploadProtocol", "class_name": "Generate", "index": 536, "label": 1}
{"input": "public static void main(String[] args) {\n\t\t\n\t\t\n\t\tSystem.out.println(\"value of a\");\n\t\tScanner sc=new Scanner(System.in);\n\t\tint a=sc.nextInt();\n\t\tSystem.out.println(\"value of b\");\n\t\t\n\t\tint b=sc.nextInt();\n\t\t\n\t\tswap(a,b);\n\t\t\n\t\t\n\n\t}", "timestamp": "2022-12-31T15:50:44.132177Z", "repo_name": "sameerKhan2/cdac", "path": "/Assignment/src/Session4/SwapWithoutThird.java", "source": "the-stack-v2", "method_name": "main", "class_name": "SwapWithoutThird", "index": 537, "label": 1}
{"input": "void tAlternateRoot(final Comment x) {\n\t\tCompilationUnit cu = ast.newCompilationUnit();\n\t\tlong previousCount = ast.modificationCount();\n\t\tx.setAlternateRoot(cu);\n\t\tassertTrue(ast.modificationCount() > previousCount);\n\t\tassertTrue(x.getAlternateRoot() == cu);\n\t\tpreviousCount = ast.modificationCount();\n\t\tx.setAlternateRoot(null);\n\t\tassertTrue(x.getAlternateRoot() == null);\n\t\tassertTrue(ast.modificationCount() > previousCount);\n\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "tAlternateRoot", "class_name": "ASTTest", "index": 538, "label": 1}
{"input": "public String format(Date oo,String panel){\n        SimpleDateFormat dateformatter = new SimpleDateFormat(panel);\n        return dateformatter.format(oo);\n    }", "timestamp": "2020-04-30T08:31:17.276721Z", "repo_name": "chuanqingli/unitk", "path": "/src/main/java/unitk/util/DateUtil.java", "source": "the-stack-v2", "method_name": "format", "class_name": "DateUtil", "index": 539, "label": 1}
{"input": "private JsonObject getJsonObject(String id) {\n\t\ttry {\n\t\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(cdbclient.find(id)));\n\t\t\tString line;\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile ((line = reader.readLine()) != null) {\n\t\t\t\tsb.append(line);\n\t\t\t}\n\t\t\tSystem.out.println(sb.toString());\n\t\t\treturn new JsonParser().parse(new InputStreamReader(cdbclient.find(id))).getAsJsonObject();\n\t\t} catch (Exception e) {\n\t\t\treturn null;\n\t\t}\n\t}", "timestamp": "2021-01-18T01:40:35.930601Z", "repo_name": "BenKettlewell/couchburp", "path": "/src/main/java/com/prevsec/couchburp/controller/BurpController.java", "source": "the-stack-v2", "method_name": "getJsonObject", "class_name": "BurpController", "index": 540, "label": 1}
{"input": "@Test public void testMergeJoin() {\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.REGULAR)\n        .query(\"select \\\"emps\\\".\\\"empid\\\",\\n\"\n            + \" \\\"depts\\\".\\\"deptno\\\", \\\"depts\\\".\\\"name\\\"\\n\"\n            + \"from \\\"hr\\\".\\\"emps\\\"\\n\"\n            + \" join \\\"hr\\\".\\\"depts\\\" using (\\\"deptno\\\")\")\n        .explainContains(\"\"\n            + \"EnumerableCalc(expr#0..3=[{inputs}], empid=[$t2], deptno=[$t0], name=[$t1])\\n\"\n            + \"  EnumerableHashJoin(condition=[=($0, $3)], joinType=[inner])\\n\"\n            + \"    EnumerableCalc(expr#0..3=[{inputs}], proj#0..1=[{exprs}])\\n\"\n            + \"      EnumerableTableScan(table=[[hr, depts]])\\n\"\n            + \"    EnumerableCalc(expr#0..4=[{inputs}], proj#0..1=[{exprs}])\\n\"\n            + \" \\\"depts\\\".\\\"deptno\\\", \\\"depts\\\".\\\"name\\\"\\n\"0)\n        .returns(\" \\\"depts\\\".\\\"deptno\\\", \\\"depts\\\".\\\"name\\\"\\n\"1\n            + \" \\\"depts\\\".\\\"deptno\\\", \\\"depts\\\".\\\"name\\\"\\n\"2\n            + \" \\\"depts\\\".\\\"deptno\\\", \\\"depts\\\".\\\"name\\\"\\n\"3);\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testMergeJoin", "class_name": "JdbcTest", "index": 541, "label": 1}
{"input": "@Override\r\n\t\tpublic <T> LazyOptional<T> getCapability(Capability<T> capability, @Nullable Direction facing) {\r\n\t\t\tif (!this.removed && facing != null && capability == CapabilityItemHandler.ITEM_HANDLER_CAPABILITY)\r\n\t\t\t\treturn handlers[facing.ordinal()].cast();\r\n\t\t\treturn super.getCapability(capability, facing);\r\n\t\t}", "timestamp": "2023-08-24T17:39:59.738030Z", "repo_name": "ChrisCraddock/Crates-and-Containers", "path": "/src/main/java/net/mcreator/blocktesting/block/SnowyRedContainer2Block.java", "source": "the-stack-v2", "method_name": "getCapability", "class_name": "CustomTileEntity", "index": 542, "label": 1}
{"input": "public void registerAsService(String serviceName) throws RemoteException {\n            registerService(serviceName);\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "registerAsService", "class_name": "Stub", "index": 543, "label": 1}
{"input": "@Override\n    public Map<String, String> onSuccess(WorkflowInstance workflowInstance) {\n        return null;\n    }", "timestamp": "2020-04-21T18:36:26.492140Z", "repo_name": "anindoasaha/workflow_engine", "path": "/src/main/java/com/anindoasaha/workflowengine/prianza/task/control/composite/AsyncWorkflowTask.java", "source": "the-stack-v2", "method_name": "onSuccess", "class_name": "AsyncWorkflowTask", "index": 544, "label": 1}
{"input": "public Criteria andSendTimeGreaterThan(Date value) {\r\n            addCriterion(\"send_time >\", value, \"sendTime\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andSendTimeGreaterThan", "class_name": "GeneratedCriteria", "index": 545, "label": 1}
{"input": "@Test\n    public void getWebsocketInfoEndpoint() throws Exception {\n        restMockMvc.perform(get(\"/websocket/info\"))\n            .andExpect(status().isNotFound());\n    }", "timestamp": "2023-02-04T07:50:23.383164Z", "repo_name": "CyberCastle/WasteCollectorTracer", "path": "/src/test/java/cl/cc/web/rest/ClientForwardControllerTest.java", "source": "the-stack-v2", "method_name": "getWebsocketInfoEndpoint", "class_name": "ClientForwardControllerTest", "index": 546, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_lost_pet_location);\n        \n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\n                .findFragmentById(R.id.map);\n        mapFragment.getMapAsync(this);\n    }", "timestamp": "2023-03-02T11:49:15.205897Z", "repo_name": "jbuildstuff/PetLocator", "path": "/app/src/main/java/edu/illinois/cs465/petlocator/LostPetLocationActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "LostPetLocationActivity", "index": 547, "label": 1}
{"input": "public boolean match(ImportDeclaration node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 548, "label": 1}
{"input": "private FooterRecord createFooterRecord()\n    {\n        FooterRecord r = new FooterRecord();\n        r.setFooter(null);\n        return r;\n    }", "timestamp": "2023-01-11T02:29:36.328694Z", "repo_name": "DXYyang/SDP", "path": "/sourcedata/poi-REL_3_0/src/scratchpad/src/org/apache/poi/hssf/usermodel/HSSFChart.java", "source": "the-stack-v2", "method_name": "createFooterRecord", "class_name": "HSSFChart", "index": 549, "label": 1}
{"input": "public Criteria andNameLike(String value) {\r\n            addCriterion(\"name like\", value, \"name\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2021-05-08T12:41:18.691106Z", "repo_name": "suoyiguke/weixinparent", "path": "/weixinpojo/src/main/java/com/yinkai/entities/ImageExample.java", "source": "the-stack-v2", "method_name": "andNameLike", "class_name": "GeneratedCriteria", "index": 550, "label": 1}
{"input": "@Override \n        public void sendCdmaSmsResponse(RadioResponseInfo info, SendSmsResult sms) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            sms.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(77, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "sendCdmaSmsResponse", "class_name": "Proxy", "index": 551, "label": 1}
{"input": "public Criteria andVdef20In(List<String> values) {\r\n            addCriterion(\"VDEF20 in\", values, \"vdef20\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef20In", "class_name": "GeneratedCriteria", "index": 552, "label": 1}
{"input": "@Override\n    public UUID perform(ImmerseServer server, ObjectInput objectInput) throws ClassNotFoundException, IOException {\n        Scenario scenario = this.read(objectInput, Scenario.class);\n\n        if (!server.hasMixer()) {\n            throw new IllegalStateException(\"Server does not have a mixer, playing a scenario is not possible\");\n        }\n        return server.getMixer().playScenario(scenario);\n    }", "timestamp": "2021-10-11T00:27:58.982416Z", "repo_name": "OrangeBaoWang/immerse", "path": "/network-server/src/main/java/com/programyourhome/immerse/network/server/action/PlayScenarioAction.java", "source": "the-stack-v2", "method_name": "perform", "class_name": "PlayScenarioAction", "index": 553, "label": 1}
{"input": "public void go_on() {\n        this.isPlaying = true;\n        this.playMusicThread.resume();\n        Process.getInstance().go_on();\n    }", "timestamp": "2023-04-15T13:53:26.916349Z", "repo_name": "wang-kui-die/MediaPlayer", "path": "/src/main/java/com/player/Player/AudioPlayer.java", "source": "the-stack-v2", "method_name": "go_on", "class_name": "AudioPlayer", "index": 554, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByAmountIsNullOrNotNull() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        \n        defaultTransactionShouldBeFound(\"amount.specified=true\");\n\n        \n        defaultTransactionShouldNotBeFound(\"amount.specified=false\");\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByAmountIsNullOrNotNull", "class_name": "TransactionResourceIT", "index": 555, "label": 1}
{"input": "@Override\n    public Field<String[]> field7() {\n        return TypeMeaningWord.MW_LEX_REGISTER_CODES;\n    }", "timestamp": "2020-12-23T02:30:44.911257Z", "repo_name": "tonisnurk/ekilex", "path": "/ekilex-app/src/main/java/eki/ekilex/data/db/udt/records/TypeMeaningWordRecord.java", "source": "the-stack-v2", "method_name": "field7", "class_name": "TypeMeaningWordRecord", "index": 556, "label": 1}
{"input": "@Test\n    public void testWithTomcatException() throws Throwable {\n        tomcatInvokeInterceptor.beforeMethod(enhancedInstance, null, arguments, argumentType, methodInterceptResult);\n        tomcatExceptionInterceptor.beforeMethod(enhancedInstance, null, exceptionArguments, exceptionArgumentType, null);\n        tomcatInvokeInterceptor.afterMethod(enhancedInstance, null, arguments, argumentType, null);\n\n        assertThat(segmentStorage.getTraceSegments().size(), is(1));\n        TraceSegment traceSegment = segmentStorage.getTraceSegments().get(0);\n        List<AbstractTracingSpan> spans = SegmentHelper.getSpans(traceSegment);\n\n        assertHttpSpan(spans.get(0));\n        List<LogDataEntity> logDataEntities = SpanHelper.getLogs(spans.get(0));\n        assertThat(logDataEntities.size(), is(1));\n        SpanAssert.assertException(logDataEntities.get(0), RuntimeException.class);\n    }", "timestamp": "2021-01-02T16:56:37.447564Z", "repo_name": "amogege/skywalking", "path": "/apm-sniffer/apm-sdk-plugin/tomcat-7.x-8.x-plugin/src/test/java/org/apache/skywalking/apm/plugin/tomcat78x/TomcatInvokeInterceptorTest.java", "source": "the-stack-v2", "method_name": "testWithTomcatException", "class_name": "TomcatInvokeInterceptorTest", "index": 557, "label": 1}
{"input": "public void setPriceUnitForeign(java.math.BigDecimal priceUnitForeign) {\n        this.priceUnitForeign = priceUnitForeign;\n    }", "timestamp": "2020-05-31T14:10:55.762874Z", "repo_name": "alanOO7/JDE_SOAP", "path": "/src/JP420000/bssv/e1/oracle/ShowSalesDetailLinePricing.java", "source": "the-stack-v2", "method_name": "setPriceUnitForeign", "class_name": "ShowSalesDetailLinePricing", "index": 558, "label": 1}
{"input": "private boolean checkExists(FileSystem fs, Path path, FsPermission fsPerm)\n      throws IOException {\n    boolean exists = true;\n    try {\n      FileStatus appDirStatus = fs.getFileStatus(path);\n      if (!APP_DIR_PERMISSIONS.equals(appDirStatus.getPermission())) {\n        fs.setPermission(path, APP_DIR_PERMISSIONS);\n      }\n    } catch (FileNotFoundException fnfe) {\n      exists = false;\n    }\n    return exists;\n  }", "timestamp": "2023-01-22T01:16:51.642516Z", "repo_name": "qtt-bigdata/hadoop", "path": "/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java", "source": "the-stack-v2", "method_name": "checkExists", "class_name": "LogAggregationService", "index": 559, "label": 1}
{"input": "private void errorePaloArrivo()\n        {\n            alert.setTitle(\"ATTENZIONE\");\n            alert.setHeaderText(\"ATTENZIONE!!\");\n            alert.setContentText(\"il palo di partenza e quello di destinazione non possono coincidere\");\n            alert.showAndWait();\n        }", "timestamp": "2023-03-15T21:04:55.054868Z", "repo_name": "lbottona/UNITN-lingProg-Torre_Hanoi", "path": "/src/it/unitn/disi/giugno2018/torrehannoi.java", "source": "the-stack-v2", "method_name": "errorePaloArrivo", "class_name": "ListenerPali", "index": 560, "label": 1}
{"input": "@Before\n    public void setup() throws Exception {\n        networkingFactory = new SelectWithSelectorFix_NioNetworkingFactory();\n        super.setup();\n    }", "timestamp": "2023-03-09T03:43:26.786644Z", "repo_name": "pivovarit/hazelcast", "path": "/hazelcast/src/test/java/com/hazelcast/internal/networking/nio/SelectWithSelectorFix_TcpIpConnection_TransferStressTest.java", "source": "the-stack-v2", "method_name": "setup", "class_name": "SelectWithSelectorFix_TcpIpConnection_TransferStressTest", "index": 561, "label": 1}
{"input": "protected void addCriterion(String condition) {\r\n            if (condition == null) {\r\n                throw new RuntimeException(\"Value for condition cannot be null\");\r\n            }\r\n            criteria.add(new Criterion(condition));\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "addCriterion", "class_name": "GeneratedCriteria", "index": 562, "label": 1}
{"input": "@Override\n    public List<Doctor> findAll() {\n        List<Doctor> doctors = spannerTemplate.readAll(REPOSITORY_CLASS);\n        return doctors;\n    }", "timestamp": "2022-06-09T18:31:42.193080Z", "repo_name": "yuliiakorabelska/data-jdbc", "path": "/src/main/java/com/korabelska/demo/repository/impl/DoctorRepositoryImpl.java", "source": "the-stack-v2", "method_name": "findAll", "class_name": "DoctorRepositoryImpl", "index": 563, "label": 1}
{"input": "public Criteria andVdef13EqualTo(String value) {\r\n            addCriterion(\"VDEF13 =\", value, \"vdef13\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef13EqualTo", "class_name": "GeneratedCriteria", "index": 564, "label": 1}
{"input": "public static int getMonthFromDateString(String date){\n        if(validateDate(date)){\n            return Integer.valueOf(date.substring(5,7));\n        }\n        throw new RuntimeException(\"Invalid Date Format\");\n    }", "timestamp": "2021-05-04T23:26:16.085316Z", "repo_name": "saurabhmanwani/Qantas_Challenge", "path": "/src/au/com/qantas/DateUtil.java", "source": "the-stack-v2", "method_name": "getMonthFromDateString", "class_name": "DateUtil", "index": 565, "label": 1}
{"input": "public Criteria andSituationGreaterThanOrEqualTo(String value) {\r\n            addCriterion(\"situation >=\", value, \"situation\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andSituationGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 566, "label": 1}
{"input": "@Override\r\n    public synchronized TunerInputController getTunerInputController() {\r\n        if (mTunerInputController == null) {\r\n            mTunerInputController =\r\n                    new TunerInputController(\r\n                            ComponentName.unflattenFromString(getEmbeddedTunerInputId()));\r\n        }\r\n        return mTunerInputController;\r\n    }", "timestamp": "2020-03-31T22:30:02.802799Z", "repo_name": "johnjcool/TV", "path": "/app/src/main/java/com/android/tv/TvApplication.java", "source": "the-stack-v2", "method_name": "getTunerInputController", "class_name": "TvApplication", "index": 567, "label": 1}
{"input": "@Override\n        public void onSuccess(double dutyCycle) {\n            if (MyDebug.LOG) {\n                Log.d(TAG, \"Duty Cycle from Meter: \" + dutyCycle);\n            }\n            currentDutyCycleText.setText(convert(new DecimalFormat(\"0.0\").format(dutyCycle)));\n\n            MeterService meter = MeterService.getInstance();\n            if (meter != null && meter.isConnected()) {\n                meter.startReading(ObservationType.READ_METER, null, null, \n                        new MyStartReadingCallback(), new MyReadingResponseCallback(),\n                        new MyProcessorStateListener());\n\n                \n                \n\n\n\n                \n\n            }\n        }", "timestamp": "2021-01-21T11:23:29.957303Z", "repo_name": "jackw2050/Land_Android", "path": "/ultraGrav2/src/main/java/com/zlscorp/ultragrav/activity/fragment/CalculateFeedbackScaleFragment.java", "source": "the-stack-v2", "method_name": "onSuccess", "class_name": "MyGetDutyCycleCallback", "index": 568, "label": 1}
{"input": "@Test\n    @Transactional\n    public void getAllAuthoritiesByNameIsNotEqualToSomething() throws Exception {\n        \n        authorityRepository.saveAndFlush(authority);\n\n        \n        defaultAuthorityShouldNotBeFound(\"name.notEquals=\" + DEFAULT_NAME);\n\n        \n        defaultAuthorityShouldBeFound(\"name.notEquals=\" + UPDATED_NAME);\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "getAllAuthoritiesByNameIsNotEqualToSomething", "class_name": "AuthorityResourceIT", "index": 569, "label": 1}
{"input": "public static void main(String[] args) {\n        WeaponFactoryInterface M4A1Factory = new M4A1Factory();\n        WeaponFactoryInterface AK47Factory = new AK47Factory();\n        SimpleWeapon M4A1 = M4A1Factory.getWeapon();\n        SimpleWeapon AK47 = AK47Factory.getWeapon();\n        M4A1.openFire();\n        AK47.openFire();\n    }", "timestamp": "2020-04-29T01:33:29.029610Z", "repo_name": "mactavisher/JavaEnssensials", "path": "/src/main/java/lynx/designpattern/Factory/FactoryMethodTest.java", "source": "the-stack-v2", "method_name": "main", "class_name": "FactoryMethodTest", "index": 570, "label": 1}
{"input": "private void entryResumeState() {\n        this.canPlay = true;\n        setCurrentPlayState(1);\n        setIsRealPause(false);\n        setIsComplete(false);\n    }", "timestamp": "2020-11-25T21:02:17.790224Z", "repo_name": "pk1z/wladimir-computin-FimiX8-RE-App", "path": "/sources/com/fimi/album/widget/CustomVideoView.java", "source": "the-stack-v2", "method_name": "entryResumeState", "class_name": "CustomVideoView", "index": 571, "label": 1}
{"input": "void simulate(AbstractDuckFactory duckFactory){\n\n        Quackable mallardDuck = duckFactory.createMallardDuck();\n        Quackable redheadDuck = duckFactory.createRedheadDuck();\n        Quackable duckCall = duckFactory.createDuckCll();\n        Quackable rubberDuck = duckFactory.createRubberDuck();\n\n        Quackable gooseDuck = new GooseAdapter(new Goose());\n        Quackable pigeonDuck = new PigeonAdapter(new Pigeon());\n\n\n        System.out.println(\"\\nDuck Simulator: Abstract Factory\");\n\n        simulate(mallardDuck);\n        simulate(redheadDuck);\n        simulate(duckCall);\n        simulate(rubberDuck);\n        simulate(gooseDuck);\n        simulate(pigeonDuck);\n\n        System.out.println(\"The ducks quacked \" + QuackCounter.getQuack() + \" times\");\n\n    }", "timestamp": "2020-03-31T09:19:41.872427Z", "repo_name": "wipa-frn/duckdesignpatterns", "path": "/AbstractFactoryPattern/DuckSimulator.java", "source": "the-stack-v2", "method_name": "simulate", "class_name": "DuckSimulator", "index": 572, "label": 1}
{"input": "@SuppressWarnings({\"SuspiciousMethodCalls\"})\n    @Override public boolean contains(Object o) {\n        return map.containsKey(o);\n    }", "timestamp": "2023-04-05T01:12:29.531841Z", "repo_name": "sirinath/ignite", "path": "/modules/core/src/main/java/org/gridgain/grid/util/GridBoundedLinkedHashSet.java", "source": "the-stack-v2", "method_name": "contains", "class_name": "GridBoundedLinkedHashSet", "index": 573, "label": 1}
{"input": "public void testBug137087f_CamelCaseSamePartCount() throws CoreException {\n\tint matchRule = SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH;\n\tString pattern = \"illegalMsExceptionSException\";\n\tsearch(pattern, TYPE, DECLARATIONS, matchRule);\n\tassertSearchResults(\n\t\t\"\" \n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug137087f_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 574, "label": 1}
{"input": "public void testBug79990b() throws CoreException {\n\tsetUpBug79990();\n\tIMethod method = this.workingCopies[0].getType(\"Test\").getMethods()[1];\n\tsearch(method, DECLARATIONS);\n\tassertSearchResults(\n\t\t\"src/b79990/Test.java void b79990.Test.second(T) [second] EXACT_MATCH\\n\" +\n\t\t\"src/b79990/Test.java void b79990.Sub.second(Exception) [second] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug79990b", "class_name": "JavaSearchBugsTests", "index": 575, "label": 1}
{"input": "public void testBug80194b() throws CoreException, JavaModelException {\n\tsetUpBug80194();\n\tIType type = this.workingCopies[0].getType(\"Test\");\n\tIMethod method = type.getMethod(\"doSomething\", new String[] { \"QMap<QString;QObject;>;\", \"Z\" } );\n\tsearch(method, REFERENCES);\n\tassertSearchResults(\n\t\t\"src/b80194/Test.java void b80194.Test.callDoSomething() [doSomething(map, true)] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug80194b", "class_name": "JavaSearchBugsTests", "index": 576, "label": 1}
{"input": "@Override\n        public void onCompletion() {\n            LogUtil.d(TAG, \" IMediaPlayer onCompletion\");\n            finishedSpeechItem();\n        }", "timestamp": "2020-03-18T20:34:35.302007Z", "repo_name": "exiaoqu/BluetoothDemo", "path": "/app/src/main/java/com/baidu/duer/dcs/devicemodule/voiceoutput/VoiceOutputDeviceModule.java", "source": "the-stack-v2", "method_name": "onCompletion", "class_name": "VoiceOutputDeviceModule", "index": 577, "label": 1}
{"input": "public void queryForNativeSql(String nativeQuerySql) {\n\t\t\n\t\tSession session = getSessionFactory().getCurrentSession();\n\t\tsession.beginTransaction();\n\t\ttry {\n\t\t\tNativeQuery nativeQuery = session.createNativeQuery(nativeQuerySql);\n\t\t\t\n\t\t\tnativeQuery.setParameter(1, \"fei1\");\n\t\t\t\n\t\t\tSystem.out.println(nativeQuery.getSingleResult().toString());;\n\t\t} catch (Exception e) {\n\t\t\t\n\t\t\te.printStackTrace();\n\t\t}\n\t\tsession.getTransaction().commit();\n\t\tsession.close();\n\t}", "timestamp": "2021-01-12T08:33:32.073792Z", "repo_name": "AdamBobFei/testHibernate", "path": "/src/test/java/testHibernate/testHibernateNativeSql.java", "source": "the-stack-v2", "method_name": "queryForNativeSql", "class_name": "testHibernateNativeSql", "index": 578, "label": 1}
{"input": "@Override\n        public SSLContext getSSLContext() throws IOException\n        {\n            return null;\n        }", "timestamp": "2021-02-22T23:58:57.886943Z", "repo_name": "kartben/azure-iot-sdk-java", "path": "/device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/auth/IotHubSasTokenAuthenticationProviderTest.java", "source": "the-stack-v2", "method_name": "getSSLContext", "class_name": "mockIotHubSasTokenAuthenticationImplementation", "index": 579, "label": 1}
{"input": "public void IniciarImg(){\n        usu.setIdusuario(IU.getIdusu());\n        up.setUsuarioID(usu);\n        try {\n            id = upDAO.AcharPato(up);\n        } catch (Exception ex) {\n            Logger.getLogger(TelaEscolhaPato.class.getName()).log(Level.SEVERE, null, ex);\n        }\n    }", "timestamp": "2020-03-19T08:54:56.873611Z", "repo_name": "Brunohvc/TCCPatos", "path": "/Tcc/src/br/senai/sc/Telas/TelaEscolhaPato.java", "source": "the-stack-v2", "method_name": "IniciarImg", "class_name": "TelaEscolhaPato", "index": 580, "label": 1}
{"input": "public static int getDayOfWeek(Date date) {\n\t\t\tCalendar cal = new GregorianCalendar();\n\t\t\tcal.setTime(date);\n\t\t\treturn cal.get(Calendar.DAY_OF_WEEK);\n\t\t}", "timestamp": "2020-04-03T19:08:02.936008Z", "repo_name": "xhly521/AAHelper", "path": "/app/src/main/java/com/xhly/godutch/utility/DateTools.java", "source": "the-stack-v2", "method_name": "getDayOfWeek", "class_name": "DateTools", "index": 581, "label": 1}
{"input": "public boolean updateHumidState(Integer id, boolean humidstate){\n        SQLiteDatabase db = this.getWritableDatabase();\n        ContentValues contentValues = new ContentValues();\n        contentValues.put(\"humidstate\", humidstate);\n        db.update(\"prefs\", contentValues, \"id = ? \", new String[] { Integer.toString(id) } );\n        Log.d(\"BTWeather - DB\", \"update humid state\");\n        return true;\n    }", "timestamp": "2020-03-22T13:09:56.343529Z", "repo_name": "JamesHarley/BTWeatherStation", "path": "/app/src/main/java/gnosisdevelopment/arduinobtweatherstation/DBHelper.java", "source": "the-stack-v2", "method_name": "updateHumidState", "class_name": "DBHelper", "index": 582, "label": 1}
{"input": "public void namanis(){\r\n  for (int i = 0; i< 3; i++){\r\n    for (int j = 0; j< 1; j++){\r\n        System.out.println(nama[i][j]+\":\"+nis[i][j]);\r\n  }\r\n }\r\n}", "timestamp": "2021-07-05T17:57:53.172623Z", "repo_name": "andienkhansa/Array", "path": "/src/array_multy_dimensi/testarraydua.java", "source": "the-stack-v2", "method_name": "namanis", "class_name": "testarraydua", "index": 583, "label": 1}
{"input": "@GetMapping\n    public String tagPage(@PageableDefault(size = 5) Pageable pageable, Model model){\n        Page<Tag> tags = tagService.TagPage(pageable);\n        model.addAttribute(\"tagPages\",tags);\n        return \"admin/tag\";\n    }", "timestamp": "2022-11-13T10:44:00.988950Z", "repo_name": "z778107203/pengzihao1999.github.io", "path": "/java/blog1/src/main/java/com/pzh/blog/controls/admin/TagControl.java", "source": "the-stack-v2", "method_name": "tagPage", "class_name": "TagControl", "index": 584, "label": 1}
{"input": "public void setOnItemClickListener(OnItemClickListener itemClickListener) {\n        this.itemClickListener = itemClickListener;\n    }", "timestamp": "2020-04-27T08:23:29.216219Z", "repo_name": "madhavc/HelloSearch", "path": "/app/src/main/java/com/example/hellosearch/ImagesAdapter.java", "source": "the-stack-v2", "method_name": "setOnItemClickListener", "class_name": "ImagesAdapter", "index": 585, "label": 1}
{"input": "public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {\n    if (_jsp_instancemanager == null) {\n      synchronized (this) {\n        if (_jsp_instancemanager == null) {\n          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());\n        }\n      }\n    }\n    return _jsp_instancemanager;\n  }", "timestamp": "2023-04-01T18:23:58.704317Z", "repo_name": "sagardhakal-photon/myDatabase", "path": "/NoRecordsDatabase/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/work/Catalina/localhost/mydatabase/org/apache/jsp/select/selectMusician_jsp.java", "source": "the-stack-v2", "method_name": "_jsp_getInstanceManager", "class_name": "selectMusician_jsp", "index": 586, "label": 1}
{"input": "public Collection<Folder> findAllFoldersByOwner(){\n\t\tOwner principal;\n\t\t\n\t\tprincipal=ownerService.findByPrincipal();\n\t\t\n\t\tCollection<Folder> result;\n\t\tUserAccount userAccount;\n\t\tInteger userAccountId;\n\t\t\n\t\tuserAccount=principal.getUserAccount();\n\t\tuserAccountId=userAccount.getId();\n\t\t\n\t\tresult=folderRepository.findAllFoldersByOwner(userAccountId);\n\t\t\n\t\treturn result;\n\t}", "timestamp": "2021-07-07T11:33:00.207263Z", "repo_name": "juagarfer4/Condominium-Manager", "path": "/src/main/java/services/FolderService.java", "source": "the-stack-v2", "method_name": "findAllFoldersByOwner", "class_name": "FolderService", "index": 587, "label": 1}
{"input": "public void testDefaultManagementModePassword()\n    {\n        BrokerOptions options = startDummyMain(\"-mm\");\n        assertTrue(options.isManagementMode());\n        assertNotNull(options.getManagementModePassword());\n    }", "timestamp": "2022-06-16T21:32:19.633099Z", "repo_name": "scholzj/qpid-java", "path": "/broker/src/test/java/org/apache/qpid/server/MainTest.java", "source": "the-stack-v2", "method_name": "testDefaultManagementModePassword", "class_name": "MainTest", "index": 588, "label": 1}
{"input": "@GetMapping(\"/Login/Validate/{name}/{password}\")\n\tpublic int validateLogin(@PathVariable String name,@PathVariable String password)\n\t{\n\t\tif(name.contentEquals(\"null\") || password.contentEquals(\"null\"))\n\t\t{ \n\t\t\tthrow new UserNamePasswordNotProvidedException(\"UserName or Password Should Not be Empty\");\n\t\t}\n\t\telse\n\t\treturn userService.validateLogin(name, password);\n\t}", "timestamp": "2022-07-13T20:32:11.679113Z", "repo_name": "tushartevetia/SPRINT2", "path": "/Spring/OnlineMovieTicketSystem/src/main/java/com/cg/OnlineMovieTicketSystem/controller/BookingController.java", "source": "the-stack-v2", "method_name": "validateLogin", "class_name": "BookingController", "index": 589, "label": 1}
{"input": "public Query filter(Filter filter) {\n    if (this.filter == null) {\n      this.filter = new FilterLogic(filter);\n    } else {\n      this.filter = this.filter.and(filter);\n    }\n    return this;\n  }", "timestamp": "2023-08-17T00:59:45.862350Z", "repo_name": "davitbzh/FlinkAggJob", "path": "/flink/src/main/java/com/logicalclocks/hsfs/constructor/Query.java", "source": "the-stack-v2", "method_name": "filter", "class_name": "Query", "index": 590, "label": 1}
{"input": "public void announceToPlayer(SystemMessage sm, String s)\n\t{\n\t\tsm.addString(s);\n\t\tannounceToPlayer(sm);\n\t}", "timestamp": "2021-01-10T03:42:04.091432Z", "repo_name": "soultobe/L2JOlivia_EpicEdition", "path": "/java/com/l2jolivia/gameserver/model/entity/FortSiege.java", "source": "the-stack-v2", "method_name": "announceToPlayer", "class_name": "FortSiege", "index": 591, "label": 1}
{"input": "static void rotateBottomClockwise(int[][] cube) {\n        int temp66 = cube[6][6];\n        int temp67 = cube[6][7];\n        cube[6][6] = cube[8][6];\n        cube[6][7] = cube[7][6];\n        cube[8][6] = cube[8][8];\n        cube[7][6] = cube[8][7];\n        cube[8][8] = cube[6][8];\n        cube[8][7] = cube[7][8];\n        cube[6][8] = temp66;\n        cube[7][8] = temp67;\n\n        int temp56 = cube[5][6];\n        int temp57 = cube[5][7];\n        int temp58 = cube[5][8];\n        cube[5][6] = cube[5][3];\n        cube[5][7] = cube[5][4];\n        cube[5][8] = cube[5][5];\n        cube[5][3] = cube[5][0];\n        cube[5][4] = cube[5][1];\n        cube[5][5] = cube[5][2];\n        cube[5][0] = cube[5][9];\n        cube[5][1] = cube[5][10];\n        cube[5][2] = cube[5][11];\n        cube[5][9] = temp56;\n        cube[5][10] = temp57;\n        cube[5][11] = temp58;\n    }", "timestamp": "2020-03-29T19:36:23.556615Z", "repo_name": "ronaldescobarj/a-algorithm", "path": "/src/com/company/Main.java", "source": "the-stack-v2", "method_name": "rotateBottomClockwise", "class_name": "Main", "index": 592, "label": 1}
{"input": "@Override\n\tpublic Category getByCode(MerchantStore store, String code) throws ServiceException {\n\t\t\n\t\ttry {\n\t\t\treturn categoryDao.getByCode(store, code);\n\t\t} catch (Exception e) {\n\t\t\tthrow new ServiceException(e);\n\t\t}\n\t\t\n\t}", "timestamp": "2021-05-11T22:33:13.512901Z", "repo_name": "joshLV/laVetrina", "path": "/sm-core/src/main/java/com/salesmanager/core/business/catalog/category/service/CategoryServiceImpl.java", "source": "the-stack-v2", "method_name": "getByCode", "class_name": "CategoryServiceImpl", "index": 593, "label": 1}
{"input": "@Override\n\tpublic String avgScore(Integer articleId) {\n\t\treturn experevaluateDao.avgScore(articleId);\n\t}", "timestamp": "2022-09-11T09:39:11.970942Z", "repo_name": "iamfine099/mia", "path": "/src/main/java/com/bootdo/mia/service/impl/ExperevaluateServiceImpl.java", "source": "the-stack-v2", "method_name": "avgScore", "class_name": "ExperevaluateServiceImpl", "index": 594, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n\tpublic ActionForward toDjView(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\t\tString APPLICATIONID = ParamUtil.get(request, \"APPLICATIONID\");\n\t\tMap params = new HashMap();\n\t\tParamUtil.putStr2Map(request, \"APPLICATIONID\", params);\n\t\tMap entry = zfdjService.djload(APPLICATIONID);\n\n\t\trequest.setAttribute(\"rst\", entry);\n\t\treturn mapping.findForward(\"djview\");\n\t}", "timestamp": "2021-01-12T15:41:00.492001Z", "repo_name": "MoonLuckSir/MoonRepository", "path": "/src/java/com/yitong/app/action/judicial/dxzpzfdj/ZfdjAction.java", "source": "the-stack-v2", "method_name": "toDjView", "class_name": "ZfdjAction", "index": 595, "label": 1}
{"input": "public void addRenderer(String name) {\n            if (this.rendererDescriptors == null) {\n                this.rendererDescriptors = Lists.newArrayList();\n            }\n            this.rendererDescriptors.add(DefDescriptorImpl.getInstance(name, RendererDef.class));\n        }", "timestamp": "2020-12-14T02:11:21.814429Z", "repo_name": "fawnapp/aura", "path": "/aura-impl/src/main/java/org/auraframework/impl/root/component/BaseComponentDefImpl.java", "source": "the-stack-v2", "method_name": "addRenderer", "class_name": "Builder", "index": 596, "label": 1}
{"input": "@Override\n    public String findPreDestroyMethod(String clazz) {\n        return preDestroyMethods.get(clazz);\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "findPreDestroyMethod", "class_name": "StandardContext", "index": 597, "label": 1}
{"input": "public boolean Rename(FileInfo f, String newName) {\n\t\tif (f == null || newName == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tFile file = new File(f.filePath);\n\t\tString newPath = FileUtil.makePath(\n\t\t\t\tFileUtil.getPathFromFilepath(f.filePath), newName);\n\t\tfinal boolean needScan = file.isFile();\n\t\ttry {\n\t\t\tboolean ret = file.renameTo(new File(newPath));\n\t\t\tif (ret) {\n\t\t\t\tif (needScan) {\n\t\t\t\t\tmoperationListener.onFileChanged(f.filePath);\n\t\t\t\t}\n\t\t\t\tmoperationListener.onFileChanged(newPath);\n\t\t\t}\n\t\t\treturn ret;\n\t\t} catch (SecurityException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn false;\n\t}", "timestamp": "2021-05-08T20:47:50.226515Z", "repo_name": "jqorz/SEFileExplorer", "path": "/app/src/main/java/com/yang/file_explorer/apis/FileOperationHelper.java", "source": "the-stack-v2", "method_name": "Rename", "class_name": "FileOperationHelper", "index": 598, "label": 1}
{"input": "@Test\n\tpublic void testCreateNewCodeNonEmpty() {\n\t\tCodeInfo ci = new CodeInfo(\"test\");\n\t\tAssert.assertNotNull(ci);\n\t}", "timestamp": "2023-08-02T11:10:39.436416Z", "repo_name": "lightningbug-io/lightningbug-maven-plugin", "path": "/src/test/java/io/lightningbug/domain/CodeInfoTest.java", "source": "the-stack-v2", "method_name": "testCreateNewCodeNonEmpty", "class_name": "CodeInfoTest", "index": 599, "label": 1}
{"input": "protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\r\n\t\t\n\t\tdoGet(request, response);\r\n\t}", "timestamp": "2020-04-14T08:19:43.868591Z", "repo_name": "SemiProjectHereThere/there", "path": "/HereThereWebProject/src/notice/controller/NoticeInsertServlet.java", "source": "the-stack-v2", "method_name": "doPost", "class_name": "NoticeInsertServlet", "index": 600, "label": 1}
{"input": "public static void set(HttpServletResponse response, String name, String value, int maxAge) {\n        Cookie cookie = new Cookie(name, value);\n        cookie.setPath(\"/\");\n        cookie.setMaxAge(maxAge);\n        response.addCookie(cookie);\n    }", "timestamp": "2021-09-05T09:57:50.569473Z", "repo_name": "shaunqing/sell", "path": "/src/main/java/com/pockey/utils/CookieUtil.java", "source": "the-stack-v2", "method_name": "set", "class_name": "CookieUtil", "index": 601, "label": 1}
{"input": "@Override\n      public Request setPrettyPrint(java.lang.Boolean prettyPrint) {\n        return (Request) super.setPrettyPrint(prettyPrint);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setPrettyPrint", "class_name": "Request", "index": 602, "label": 1}
{"input": "public void testBug110060_AllTypeNames02_SamePartCount() throws CoreException {\n\tsetUpBug110060_TypePattern();\n\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();\n\tsearchAllTypeNames(\"aaa\", SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH, requestor);\n\t\n\tassertSearchResults(\"Unexpected all type names\",\n\t\t\"b110060.AAa\\n\" +\n\t\t\"b110060.Aaa\",\n\t\trequestor);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_AllTypeNames02_SamePartCount", "class_name": "JavaSearchBugsTests", "index": 603, "label": 1}
{"input": "public static String getActualSumOfMoviesAdded(WebDriver driver) {\n    waitDriver = new WebDriverWait(driver, Log.WAIT_TIMEOUT);\n    waitDriver.until(ExpectedConditions.elementToBeClickable(By.className(\"count\")));\n\n    button = driver.findElement(By.className(\"count\"));\n    return button.getText();\n  }", "timestamp": "2020-04-16T23:43:02.770547Z", "repo_name": "scerios/IMDB", "path": "/src/test/java/keywords/WatchList.java", "source": "the-stack-v2", "method_name": "getActualSumOfMoviesAdded", "class_name": "WatchList", "index": 604, "label": 1}
{"input": "private static void handleError(Collection<File> errors, File path) throws IOException {\n        if (errors == null)\n            throw new IOException(\"couldn't delete \" + path);\n        errors.add(path);\n    }", "timestamp": "2022-05-03T22:13:22.385969Z", "repo_name": "dreedyman/Rio", "path": "/rio-lib/src/main/java/org/rioproject/impl/persistence/FileSystem.java", "source": "the-stack-v2", "method_name": "handleError", "class_name": "FileSystem", "index": 605, "label": 1}
{"input": "@Test\n\tpublic void testGetNumberOfDifferentRoutesWithMaxDistance() {\n\t\tlogger.info(\"Test question 6, the number of different routes from C to C with a distance of less than 30.\");\n\t\tTown<String> startingTown = new Town<String>(\"C\");\n\t\tTown<String> endingTown = new Town<String>(\"C\");\n\t\tassertEquals(trainsRoutesDirectedGraph.getNumberOfDifferentRoutesWithMaxDistance(startingTown, endingTown, 30), \"7\");\n\t}", "timestamp": "2023-07-31T15:43:34.025592Z", "repo_name": "gibrancastillo/TrainsRoutesInfo", "path": "/src/test/java/com/ccc/routes/recursion/TrainsRoutesDirectedGraphTest.java", "source": "the-stack-v2", "method_name": "testGetNumberOfDifferentRoutesWithMaxDistance", "class_name": "TrainsRoutesDirectedGraphTest", "index": 606, "label": 1}
{"input": "public static void main(String[] args) {\n\n        Scanner in = new Scanner(System.in);\n        System.out.print(\"Enter strings separated by space: \");\n        String stringOne = in.next(\"[\\\\S]+\");\n        String stringTwo = in.next(\"[\\\\S]+\");\n\n        int min = Math.min(stringOne.length(), stringTwo.length());\n        int sum = 0;\n        for (int i = 0; i < min; i++) {\n            sum += stringOne.charAt(i) * stringTwo.charAt(i);\n        }\n        sum += stringOne.length() > stringTwo.length() ? RemainingCharCodes(min, stringOne) : RemainingCharCodes(min, stringTwo);\n\n        System.out.printf(\"The sum is: %d\", sum);\n    }", "timestamp": "2020-04-06T07:05:23.471790Z", "repo_name": "sholev/SoftUni", "path": "/Fundamentals-2.0/JavaFundamentals/Homework/JavaSyntax/src/org/softuni/_12_CharacterMultiplier.java", "source": "the-stack-v2", "method_name": "main", "class_name": "_12_CharacterMultiplier", "index": 607, "label": 1}
{"input": "public Criteria andTopicIdLessThan(Integer value) {\r\n            addCriterion(\"topic_id <\", value, \"topicId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2021-05-08T12:41:18.691106Z", "repo_name": "suoyiguke/weixinparent", "path": "/weixinpojo/src/main/java/com/yinkai/entities/ImageExample.java", "source": "the-stack-v2", "method_name": "andTopicIdLessThan", "class_name": "GeneratedCriteria", "index": 608, "label": 1}
{"input": "public static <T> void assertUnorderedCollection(Collection<? extends T> collection, Consumer<T>... checkers) {\n    Assert.assertNotNull(collection);\n    if (collection.size() != checkers.length) {\n      Assert.fail(toString(collection));\n    }\n    Set<Consumer<T>> checkerSet = new HashSet<Consumer<T>>(Arrays.asList(checkers));\n    int i = 0;\n    Throwable lastError = null;\n    for (final T actual : collection) {\n      boolean flag = true;\n      for (final Consumer<T> condition : checkerSet) {\n        Throwable error = accepts(condition, actual);\n        if (error == null) {\n          checkerSet.remove(condition);\n          flag = false;\n          break;\n        }\n        else {\n          lastError = error;\n        }\n      }\n      if (flag) {\n        lastError.printStackTrace();\n        Assert.fail(\"Incorrect element(\" + i + \"): \" + actual);\n      }\n      i++;\n    }\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "assertUnorderedCollection", "class_name": "UsefulTestCase", "index": 609, "label": 1}
{"input": "@POST\n    @Path(\"/disable\")\n    public Response drainDisable()\n    {\n        return setDrainMode(false);\n    }", "timestamp": "2023-08-31T10:55:50.165701Z", "repo_name": "jitsi/jitsi-videobridge", "path": "/jvb/src/main/java/org/jitsi/videobridge/rest/root/colibri/drain/Drain.java", "source": "the-stack-v2", "method_name": "drainDisable", "class_name": "Drain", "index": 610, "label": 1}
{"input": "public EnhancedForControlContext enhancedForControl() {\n\t\t\treturn getRuleContext(EnhancedForControlContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "enhancedForControl", "class_name": "ForControlContext", "index": 611, "label": 1}
{"input": "@Test(timeout = 5000)\n    public void testTaskBstep3_QEquation__TaskB() throws Exception {\n        Test_jd01_02 ok = run(\"\", false);\n        Method m = checkMethod(ok.aClass.getSimpleName(), \"static step3\",\n                double.class, double.class, double.class);\n        System.out.println(\"Квадратное уравление:\");\n        System.out.println(\"для a=2, для b=4, для c=2, ожидается один корень: минус 1\");\n        m.invoke(null, 2, 4, 2);\n        ok.include(\"-1\");\n        System.out.println(\"для a=1, для b=-1, для c=-2, ожидается два корня: минус один и два \");\n        m.invoke(null, 1, -1, -2);\n        ok.include(\"-1\").include(\"2\");\n        System.out.println(\"для a=2, для b=4, для c=4, ожидается решение без корней\");\n        m.invoke(null, 2, 4, 4);\n        ok.include(\"корней нет\");\n    }", "timestamp": "2020-04-12T09:47:01.862944Z", "repo_name": "migeniya/JD2018-12-10", "path": "/src/by/it/dziomin/jd01_02/Test_jd01_02.java", "source": "the-stack-v2", "method_name": "testTaskBstep3_QEquation__TaskB", "class_name": "Test_jd01_02", "index": 612, "label": 1}
{"input": "@Override\n        public Builder<T> addControllerDef(ControllerDef controllerDef) {\n            if (controllerDescriptors == null) {\n                controllerDescriptors = Lists.newArrayList();\n            }\n            controllerDescriptors.add(controllerDef.getDescriptor());\n            return this;\n        }", "timestamp": "2020-12-14T02:11:21.814429Z", "repo_name": "fawnapp/aura", "path": "/aura-impl/src/main/java/org/auraframework/impl/root/component/BaseComponentDefImpl.java", "source": "the-stack-v2", "method_name": "addControllerDef", "class_name": "Builder", "index": 613, "label": 1}
{"input": "private void validParameters() {\r\n\t\tboolean valid = true;\r\n\t\tString msg = \"\";\r\n\r\n\t\tif (startPos < 0 && startPos != -1)\r\n\t\t{\r\n\t\t\tmsg   = \"start_pos must be as minimum 0\";\r\n\t\t\tvalid = false;\r\n\t\t}\r\n\t\tif (nLines <= 0 && nLines != -1) {\r\n\t\t\tmsg   = \"n_lines must be as minimum 1\";\r\n\t\t\tvalid = false;\r\n\t\t}\r\n\t\tif (orderBy != 0 && orderBy != 1) {\r\n\t\t\tmsg   = \"order_by allowed values are 0 to ASC and 1 to DESC\";\r\n\t\t\tvalid = false;\r\n\t\t}\r\n\r\n\t\tif (!valid) {\r\n\t\t\tthrow new WebApplicationException(msg, Status.BAD_REQUEST);\r\n\t\t}\r\n\t}", "timestamp": "2023-04-05T19:49:19.305775Z", "repo_name": "tecalex01/logfiles", "path": "/src/main/java/com/logfiles/entrypoint/LogFileResource.java", "source": "the-stack-v2", "method_name": "validParameters", "class_name": "LogFileResource", "index": 614, "label": 1}
{"input": "public static int[][] readInt2D() {\n        int m = StdIn.readInt();\n        int n = StdIn.readInt();\n        int[][] a = new int[m][n];\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                a[i][j] = StdIn.readInt();\n            }\n        }\n        return a;\n    }", "timestamp": "2020-05-22T08:05:18.503891Z", "repo_name": "gjgj821/fortress", "path": "/src/main/java/stdlib/StdArrayIO.java", "source": "the-stack-v2", "method_name": "readInt2D", "class_name": "StdArrayIO", "index": 615, "label": 1}
{"input": "public List<String> scanForURLs() {\n\t\tList<String> urls = new ArrayList<>();\n\n\t\tchar[] visibleBuffer = new char[buffer.height * buffer.width];\n\t\tfor (int l = 0; l < buffer.height; l++)\n\t\t\tSystem.arraycopy(buffer.charArray[buffer.windowBase + l], 0,\n\t\t\t\t\tvisibleBuffer, l * buffer.width, buffer.width);\n\n\t\tMatcher urlMatcher = PatternHolder.urlPattern.matcher(new String(visibleBuffer));\n\t\twhile (urlMatcher.find())\n\t\t\turls.add(urlMatcher.group());\n\n\t\treturn urls;\n\t}", "timestamp": "2023-03-17T11:32:39.789148Z", "repo_name": "iiordanov/BSSH", "path": "/app/src/main/java/org/connectbot/service/TerminalBridge.java", "source": "the-stack-v2", "method_name": "scanForURLs", "class_name": "TerminalBridge", "index": 616, "label": 1}
{"input": "public Optional<Customer> findCustomer(String title) {\n        Map<String, String> params = new HashMap<>();\n        params.put(\"customerTitle\", title);\n        try {\n            ResponseEntity<Customer> customerEntity = restTemplate.getForEntity(baseURL + \"/api/tenant/customers?customerTitle={customerTitle}\", Customer.class, params);\n            return Optional.of(customerEntity.getBody());\n        } catch (HttpClientErrorException exception) {\n            if (exception.getStatusCode() == HttpStatus.NOT_FOUND) {\n                return Optional.empty();\n            } else {\n                throw exception;\n            }\n        }\n    }", "timestamp": "2023-01-12T13:57:08.253533Z", "repo_name": "hashmapinc/Tempus", "path": "/tools/src/main/java/com/hashmapinc/client/tools/RestClient.java", "source": "the-stack-v2", "method_name": "findCustomer", "class_name": "RestClient", "index": 617, "label": 1}
{"input": "private void jTSerFocusLost(java.awt.event.FocusEvent evt) {\n\n        \n        jTSer.setCaretPosition(0);\n        \n                                       \n        if(jTSer.getText().compareTo(\"\")!=0)\n            jTSer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204,204,255)));\n        \n        \n        if(jTSer.getText().length()> 30)\n            jTSer.setText(jTSer.getText().substring(0, 30));       \n        \n    }", "timestamp": "2020-06-10T12:22:45.426839Z", "repo_name": "njmube/SOSDev", "path": "/Electricos/src/cats/SerNotVent.java", "source": "the-stack-v2", "method_name": "jTSerFocusLost", "class_name": "SerNotVent", "index": 618, "label": 1}
{"input": "public static String formatLabel(String label, int value, Account.Id accountId) {\n    return label.toLowerCase() + (value >= 0 ? \"+\" : \"\") + value\n        + (accountId != null ? \",\" + accountId.get() : \"\");\n  }", "timestamp": "2021-01-16T21:01:21.667768Z", "repo_name": "runt18/gerrit", "path": "/gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeField.java", "source": "the-stack-v2", "method_name": "formatLabel", "class_name": "ChangeField", "index": 619, "label": 1}
{"input": "private void letGo(LinkedList<Integer> st, char oper) {\n\t\tint someOne = st.removeLast();\n\t\tint someTwo = st.removeLast();\n\n\t\tswitch (oper) {\n\t\tcase '+':\n\t\t\tst.add(someTwo + someOne);\n\t\t\tbreak;\n\t\tcase '-':\n\t\t\tst.add(someTwo - someOne);\n\t\t\tbreak;\n\t\tcase '*':\n\t\t\tst.add(someTwo * someOne);\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tst.add(someTwo / someOne);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSystem.out.println(\"Oops\");\n\t\t}\n\t}", "timestamp": "2020-06-03T19:52:10.818233Z", "repo_name": "OleksandrSh/testcalc", "path": "/CalculateApi/src/main/java/com/calculate/services/calcmanager/CalcManager.java", "source": "the-stack-v2", "method_name": "letGo", "class_name": "CalcManager", "index": 620, "label": 1}
{"input": "public Criteria andImageIdBetween(Integer value1, Integer value2) {\r\n            addCriterion(\"image_id between\", value1, value2, \"imageId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2021-05-08T12:41:18.691106Z", "repo_name": "suoyiguke/weixinparent", "path": "/weixinpojo/src/main/java/com/yinkai/entities/ImageExample.java", "source": "the-stack-v2", "method_name": "andImageIdBetween", "class_name": "GeneratedCriteria", "index": 621, "label": 1}
{"input": "public static org.datacontract.schemas._2004._07.microsoft_practices_enterpriselibrary_validation_integration_wcf.ValidationDetail parse(javax.xml.stream.XMLStreamReader sr) throws org.apache.xmlbeans.XmlException {\n          return (org.datacontract.schemas._2004._07.microsoft_practices_enterpriselibrary_validation_integration_wcf.ValidationDetail) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( sr, type, null ); }", "timestamp": "2021-05-31T07:40:57.713006Z", "repo_name": "OLINSolutions/eiservices", "path": "/utote/wsdl2java/programservice/xmlbeans/src/org/datacontract/schemas/_2004/_07/microsoft_practices_enterpriselibrary_validation_integration_wcf/ValidationDetail.java", "source": "the-stack-v2", "method_name": "parse", "class_name": "Factory", "index": 622, "label": 1}
{"input": "public void testBug137087l_CamelCase() throws CoreException {\n\tint matchRule = SearchPattern.R_CAMELCASE_MATCH;\n\tString pattern = \"Clonenotsupportedexception\";\n\tsearch(pattern, TYPE, DECLARATIONS, matchRule);\n\tassertSearchResults(\n\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug137087l_CamelCase", "class_name": "JavaSearchBugsTests", "index": 623, "label": 1}
{"input": "public Ticket getTicket(int num) {\n\t\t\n\t\tfor(Ticket t:ticketList ) {\t\t\t\n\t\t\tif(num == t.getTicketNumber()) {\n\t\t\t\treturn t;\t\t\t\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "timestamp": "2022-11-16T04:41:18.855632Z", "repo_name": "TakedaMasashi46/Team5", "path": "/04_implementation/src/hanpuku1/database/TicketList.java", "source": "the-stack-v2", "method_name": "getTicket", "class_name": "TicketList", "index": 624, "label": 1}
{"input": "public Criteria andPkpsndocGreaterThanOrEqualTo(String value) {\r\n            addCriterion(\"PKPSNDOC >=\", value, \"pkpsndoc\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andPkpsndocGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 625, "label": 1}
{"input": "public float getVerticalDistanceToLensCenter() {\n        return this.mVerticalDistanceToLensCenter;\n    }", "timestamp": "2021-07-24T07:43:42.210830Z", "repo_name": "cumtchenchang/cardboard-java", "path": "/library/src/main/java/com/google/vrtoolkit/cardboard/CardboardDeviceParams.java", "source": "the-stack-v2", "method_name": "getVerticalDistanceToLensCenter", "class_name": "CardboardDeviceParams", "index": 626, "label": 1}
{"input": "List<HexCoordinate> neighbours() {\n            var result = new ArrayList<HexCoordinate>();\n            result.add(new HexCoordinate(x, y + 1, z - 1));\n            result.add(new HexCoordinate(x + 1, y, z - 1));\n            result.add(new HexCoordinate(x + 1, y - 1, z));\n            result.add(new HexCoordinate(x, y - 1, z + 1));\n            result.add(new HexCoordinate(x - 1, y, z + 1));\n            result.add(new HexCoordinate(x - 1, y + 1, z));\n            return result;\n        }", "timestamp": "2023-02-02T02:35:42.733203Z", "repo_name": "zskamljic/aoc-2020", "path": "/src/Day24.java", "source": "the-stack-v2", "method_name": "neighbours", "class_name": "Day24", "index": 627, "label": 1}
{"input": "public void testBug110060_ConstructorPattern02() throws CoreException {\n\tsetUpBug110060_ConstructorPattern();\n\tsearch(\"AA\", CONSTRUCTOR, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);\n\tassertSearchResults(\n\t\t\"src/b110060/AAAA.java b110060.AAAA() [AAAA] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/AAxx.java b110060.AAxx() [AAxx] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/AxAyAz.java b110060.AxAyAz() [AxAyAz] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/AxxAyy.java b110060.AxxAyy() [AxxAyy] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.aaaa [new AAAA()] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.aaxx [new AAxx()] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.axayaz [new AxAyAz()] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.axxayy [new AxxAyy()] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_ConstructorPattern02", "class_name": "JavaSearchBugsTests", "index": 628, "label": 1}
{"input": "@Override\n         public void turn(final Plane plane, final World world, final Move move) {\n             \n             move.setAngle(Math.random() - Math.random());\n             move.setFire(true);\n         }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/2/2_72e68e61b02e49c520d242215ab3aa42c54da42a/SimulationDrawerTest/2_72e68e61b02e49c520d242215ab3aa42c54da42a_SimulationDrawerTest_s.java", "source": "the-stack-v2", "method_name": "turn", "class_name": "TestStrategy", "index": 629, "label": 1}
{"input": "public void testBug137087m_CamelCase() throws CoreException {\n\tint matchRule = SearchPattern.R_CAMELCASE_MATCH;\n\tString pattern = \"CloneNotSupportedException\";\n\tsearch(pattern, TYPE, DECLARATIONS, matchRule);\n\tassertSearchResults(\n\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug137087m_CamelCase", "class_name": "JavaSearchBugsTests", "index": 630, "label": 1}
{"input": "public boolean setInfoHash(String infoHash) {\n         \n         if(infoHash.length() == 20) {\n             try {\n                 byte[] b = new byte[20];\n                 \n                 \n                 for(int i = 0; i < b.length; i++) {\n                     b[i] = (byte) infoHash.charAt(i);\n                 }\n                 this.infoHash = StringUtils.getHexString(b);\n             } catch (Exception ex) {\n                 \n                 return false;\n             }\n             \n             return true;\n         } \n         \n         if(infoHash.length() == 40) {\n             this.infoHash = infoHash;\n             return true;\n         }\n         return false;\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/33/33_f0eab8ff38d525893cd4aad3b5c31f0416b5676e/Torrent/33_f0eab8ff38d525893cd4aad3b5c31f0416b5676e_Torrent_s.java", "source": "the-stack-v2", "method_name": "setInfoHash", "class_name": "Torrent", "index": 631, "label": 1}
{"input": "private void insertCategory(VatLy1Category category) {\n        \n        ContentValues cv = new ContentValues();\n        cv.put(CategoriesTable.COLUMN_NAME, category.getName());\n        db.insert(CategoriesTable.TABLE_NAME, null, cv);\n\n    }", "timestamp": "2023-01-18T20:19:28.045856Z", "repo_name": "DongPhamBK/DaiCuongBachKhoa2", "path": "/DaiCuongFirstApp - v1.1/app/src/main/java/com/project/daicuongbachkhoa/ui/vatly1/VatLy1QuizDbHelper.java", "source": "the-stack-v2", "method_name": "insertCategory", "class_name": "VatLy1QuizDbHelper", "index": 632, "label": 1}
{"input": "public static byte[] aesDecrypt(byte[] input, byte[] key, byte[] iv) {\n\t\treturn aes(input, key, iv, Cipher.DECRYPT_MODE);\n\t}", "timestamp": "2020-04-27T10:34:21.844066Z", "repo_name": "wuchenl/springboot2-scaffold", "path": "/springboot2-utils/src/main/java/com/letters7/wuchen/springboot2/utils/security/Cryptos.java", "source": "the-stack-v2", "method_name": "aesDecrypt", "class_name": "Cryptos", "index": 633, "label": 1}
{"input": "@JavascriptInterface\n    public void disableRotationForExpand(final String lockedOrientation) {\n        final d d = (d)this.adMarvelInternalWebViewReference.get();\n        if ((d == null || !d.b()) && !this.isInterstitial) {\n            final m m = (m)this.adMarvelWebViewReference.get();\n            if (m != null) {\n                m.w = true;\n                this.lockedOrientation = lockedOrientation;\n                if (m.x && m.y) {\n                    this.disablerotations(lockedOrientation);\n                }\n            }\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "disableRotationForExpand", "class_name": "AdMarvelWebViewJSInterface", "index": 634, "label": 1}
{"input": "@Override\r\n\tpublic String execute() throws Exception {\r\n\t\tSystem.out.println(\"---------\"+\"TestAction()\");\r\n\t\ttestService.saveTwoUsers();\r\n\t\treturn \"success\";\r\n\t}", "timestamp": "2020-03-22T11:35:33.100554Z", "repo_name": "hddudu/GYOA", "path": "/GYOA/test/cn/gy/oa/test/TestAction.java", "source": "the-stack-v2", "method_name": "execute", "class_name": "TestAction", "index": 635, "label": 1}
{"input": "public void testBug80264_MethodsIgnoreDeclaringType() throws CoreException, JavaModelException {\n\tsetUpBug80264_Methods();\n\tIType type = this.workingCopies[0].getType(\"Methods\");\n\tIMethod[] methods = type.getMethods();\n\tsearch(methods[0], DECLARATIONS|IGNORE_DECLARING_TYPE);\n\tsearch(methods[1], DECLARATIONS|IGNORE_DECLARING_TYPE);\n\tassertSearchResults(\n\t\t\"src/b80264/Methods.java Methods b80264.Methods.stable() [stable] EXACT_MATCH\\n\" +\n\t\t\"src/b80264/Methods.java Methods b80264.MethodsSub.stable() [stable] EXACT_MATCH\\n\" +\n\t\t\"src/b80264/Methods.java Methods b80264.MethodsOther.stable() [stable] EXACT_MATCH\\n\" +\n\t\t\"src/b80264/Methods.java Methods b80264.Methods.covariant() [covariant] EXACT_MATCH\\n\" +\n\t\t\"src/b80264/Methods.java Methods b80264.MethodsOther.covariant() [covariant] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug80264_MethodsIgnoreDeclaringType", "class_name": "JavaSearchBugsTests", "index": 636, "label": 1}
{"input": "public void setDiccionarioGenes(ArrayList<GenDictionary> diccionarioGenes) {\r\n        this.diccionarioGenes = diccionarioGenes;\r\n    }", "timestamp": "2021-01-12T11:37:06.259441Z", "repo_name": "aledev/bioinformatica_lab01", "path": "/Bioinformatica_Lab01/src/java/com/biolab01/entities/ClusterObj.java", "source": "the-stack-v2", "method_name": "setDiccionarioGenes", "class_name": "ClusterObj", "index": 637, "label": 1}
{"input": "private static int getEmojiResource(Context context, int codePoint) {\n        return sEmojisMap.get(codePoint);\n    }", "timestamp": "2023-03-13T07:38:23.027045Z", "repo_name": "tunye/AndroidViewDemo", "path": "/comment/src/main/java/com/buaa/ct/comment/emoji/EmojiconHandler.java", "source": "the-stack-v2", "method_name": "getEmojiResource", "class_name": "EmojiconHandler", "index": 638, "label": 1}
{"input": "private void jBTodMouseEntered(java.awt.event.MouseEvent evt) {\n        \n        \n        jBTod.setBackground(Star.colBot);\n        \n    }", "timestamp": "2020-06-10T12:22:45.426839Z", "repo_name": "njmube/SOSDev", "path": "/Electricos/src/cats/SerNotVent.java", "source": "the-stack-v2", "method_name": "jBTodMouseEntered", "class_name": "SerNotVent", "index": 639, "label": 1}
{"input": "public Criteria andVdef13IsNotNull() {\r\n            addCriterion(\"VDEF13 is not null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef13IsNotNull", "class_name": "GeneratedCriteria", "index": 640, "label": 1}
{"input": "public void testBug83804_Method() throws CoreException {\n\tthis.resultCollector.showInsideDoc();\n\tsetUpBug83804_Type();\n\tIMethod[] methods = this.workingCopies[1].getType(\"Test\").getMethods();\n\tassertEquals(\"Invalid number of methods\", 1, methods.length);\n\tsearch(methods[0], REFERENCES);\n\tassertSearchResults(\n\t\t\"src/b83804/package-info.java [foo()] EXACT_MATCH INSIDE_JAVADOC\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug83804_Method", "class_name": "JavaSearchBugsTests", "index": 641, "label": 1}
{"input": "@Override\n\tpublic Boolean AddState(int id, String stateName, byte api, byte opcode,\n\t\t\tbyte[] payLoad, int duration) {\n\t\t_states.add(new State(api, opcode, payLoad, duration, stateName, id));\n\t\treturn true;\n\t}", "timestamp": "2021-05-27T16:50:39.832834Z", "repo_name": "abmantis/TestApp", "path": "/src/ExecutionEngine.java", "source": "the-stack-v2", "method_name": "AddState", "class_name": "ExecutionEngine", "index": 642, "label": 1}
{"input": "@RequestMapping(value = \"create\" , method = RequestMethod.GET)\n\tpublic String create(Model model) {\n\t\tmodel.addAttribute(\"action\", \"create\");\n\t\treturn \"wghgl/xjsz/form\";\n\t}", "timestamp": "2022-12-21T12:28:37.800274Z", "repo_name": "wuyufei2019/test110", "path": "/src/main/java/com/cczu/model/controller/PageWghglXjszController.java", "source": "the-stack-v2", "method_name": "create", "class_name": "PageWghglXjszController", "index": 643, "label": 1}
{"input": "public void testBug97547() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[2];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b97547/IX.java\",\n\t\t\"package b97547;\\n\" +\n\t\t\"public interface IX {\\n\" +\n\t\t\"\tpublic interface IX1 {}\\n\" +\n\t\t\"}\"\n\t);\n\tthis.workingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/b97547/X.java\",\n\t\t\"package b97547;\\n\" +\n\t\t\"import b97547.IX.*;\\n\" +\n\t\t\"class X {\\n\" +\n\t\t\"\tIX x;\\n\" +\n\t\t\"}\"\n\t);\n\tIPackageDeclaration[] packages = this.workingCopies[0].getPackageDeclarations();\n\tassertTrue(\"package b97547;\\n\"1, packages!=null && packages.length==1);\n\tsearch(packages[0], REFERENCES);\n\tassertSearchResults(\n\t\t\"package b97547;\\n\"2\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug97547", "class_name": "JavaSearchBugsTests", "index": 644, "label": 1}
{"input": "public String getPostAvatarForDisplay(int size) {\n        if (avatarForDisplay == null) {\n            if (!hasPostAvatar()) {\n                return \"\";\n            }\n            avatarForDisplay = GravatarUtils.fixGravatarUrl(postAvatar, size);\n        }\n        return avatarForDisplay;\n    }", "timestamp": "2021-01-12T14:00:19.468063Z", "repo_name": "kageiit/perf-android-large", "path": "/di/da/src/main/java/org.wp.da/models/ReaderPost.java", "source": "the-stack-v2", "method_name": "getPostAvatarForDisplay", "class_name": "ReaderPost", "index": 645, "label": 1}
{"input": "public final void setAuthorDegree(String authorDegree) {\n        this.authorDegree = authorDegree;\n    }", "timestamp": "2016-09-15T02:06:20.854798Z", "repo_name": "abrysov/Doctor", "path": "/src/com/evs/doctor/model/Publication.java", "source": "the-stack-v2", "method_name": "setAuthorDegree", "class_name": "Publication", "index": 646, "label": 1}
{"input": "@Override\n    public void onCreate(SQLiteDatabase database) {\n        database.execSQL(DATABASE_CREATE);\n    }", "timestamp": "2021-07-16T02:27:26.369174Z", "repo_name": "amcs1729/Basic-Group-Text-Messenger", "path": "/app/src/main/java/edu/buffalo/cse/cse486586/groupmessenger1/DatabaseHelper.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "DatabaseHelper", "index": 647, "label": 1}
{"input": "public CngAlgorithm getHashAlgorithm() throws Throwable {\n        if (classInstance == null)\n            throw new UnsupportedOperationException(\"classInstance is null.\");\n        try {\n            JCObject val = (JCObject)classInstance.Get(\"HashAlgorithm\");\n            return new CngAlgorithm(val);\n        } catch (JCNativeException jcne) {\n            throw translateException(jcne);\n        }\n    }", "timestamp": "2022-12-07T21:13:06.208025Z", "repo_name": "lvyitian/JCOReflector", "path": "/netreflected/src/Framework/System.Core,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089/system/security/cryptography/ECDsaCng.java", "source": "the-stack-v2", "method_name": "getHashAlgorithm", "class_name": "ECDsaCng", "index": 648, "label": 1}
{"input": "public String build() throws RunnerException {\n     return build(tempBuildFolder.getAbsolutePath());\n   }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/7/7_2f542815a58ee55ee03ae89dbab36dfbe50a1841/Sketch/7_2f542815a58ee55ee03ae89dbab36dfbe50a1841_Sketch_s.java", "source": "the-stack-v2", "method_name": "build", "class_name": "Sketch", "index": 649, "label": 1}
{"input": "private boolean register(Solution s) {\n        return (solutions.put(s.id,s) == null)? true : false;\n    }", "timestamp": "2021-06-03T14:44:57.256143Z", "repo_name": "helloShen/leetcode", "path": "/java/src/main/java/com/ciaoshen/leetcode/MaxAreaOfIsland.java", "source": "the-stack-v2", "method_name": "register", "class_name": "MaxAreaOfIsland", "index": 650, "label": 1}
{"input": "private boolean checkHeader() throws IOException {\n\t\tshort[] controlHeader = new short[] { 151, 74, 66, 50, 13, 10, 26, 10 };\n\t\tshort[] actualHeader = new short[8];\n\t\treader.readByte(actualHeader);\n\n\t\treturn Arrays.equals(controlHeader, actualHeader);\n\t}", "timestamp": "2023-03-15T16:02:51.443928Z", "repo_name": "demetbolata/icepdf4", "path": "/core/src/main/java/org/jpedal/jbig2/decoders/JBIG2StreamDecoder.java", "source": "the-stack-v2", "method_name": "checkHeader", "class_name": "JBIG2StreamDecoder", "index": 651, "label": 1}
{"input": "public static com.google.cloud.securitycenter.v1.Cvssv3 parseFrom(\n      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data, extensionRegistry);\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "parseFrom", "class_name": "Cvssv3", "index": 652, "label": 1}
{"input": "protected HeaderBar setupHeaderBar(final int containerId, final int textId,\n                                       final View.OnClickListener headerClickListener) {\n        final HeaderBar headerBar = (HeaderBar) findViewById(containerId);\n        headerBar.setFragment(getQueueFragment());\n        headerBar.setTitleText(textId);\n        headerBar.setBackgroundColor(Color.TRANSPARENT);\n        headerBar.setBackListener(mShowBrowse);\n        headerBar.setHeaderClickListener(headerClickListener);\n\n        return headerBar;\n    }", "timestamp": "2020-04-13T03:12:46.332070Z", "repo_name": "Forsakenrox/Eleven", "path": "/src/main/java/org/lineageos/eleven/ui/activities/SlidingPanelActivity.java", "source": "the-stack-v2", "method_name": "setupHeaderBar", "class_name": "SlidingPanelActivity", "index": 653, "label": 1}
{"input": "public void acceptSearchMatch(SearchMatch searchMatch) throws CoreException {\n\t\tsuper.acceptSearchMatch(searchMatch);\n\t\tthis.matches.add(searchMatch);\n\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "acceptSearchMatch", "class_name": "TestCollector", "index": 654, "label": 1}
{"input": "private void clearResults() {\n        textViewAnswerHc.setText(\"\");\n        textViewAnswerAc.setText(\"\");\n    }", "timestamp": "2020-12-01T15:56:26.463589Z", "repo_name": "cytangjoseph/CelestialNavCalc", "path": "/app/src/main/java/com/anmas/star/calculation/MainActivity.java", "source": "the-stack-v2", "method_name": "clearResults", "class_name": "MainActivity", "index": 655, "label": 1}
{"input": "@Override\n    protected ApiResponse responseObjectParse(ApiResponse response) {\n        if(this.isResponseOk(response))\n        {\n\n        }\n        return response;\n    }", "timestamp": "2021-12-13T13:27:20.049413Z", "repo_name": "sekdariusz/padAndroid", "path": "/src/com/huofu/RestaurantOS/api/delivery/SetDeliveryOrderDeliverying.java", "source": "the-stack-v2", "method_name": "responseObjectParse", "class_name": "SetDeliveryOrderDeliverying", "index": 656, "label": 1}
{"input": "public void set_incomingLinkCapacity(double _incomingLinkCapacity) {\n\t\tthis._incomingLinkCapacity = _incomingLinkCapacity;\n\t}", "timestamp": "2020-03-24T18:57:41.155720Z", "repo_name": "gabrielecastellano/vinea", "path": "/src/vinea/pnode/Pnode.java", "source": "the-stack-v2", "method_name": "set_incomingLinkCapacity", "class_name": "Pnode", "index": 657, "label": 1}
{"input": "@Override\n    public int hashCode() {\n        final int prime = 31;\n        int hashCode = 1;\n\n        hashCode = prime * hashCode + ((getDevices() == null) ? 0 : getDevices().hashCode());\n        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());\n        hashCode = prime * hashCode + ((getTotalCount() == null) ? 0 : getTotalCount().hashCode());\n        return hashCode;\n    }", "timestamp": "2021-05-14T17:18:16.335069Z", "repo_name": "gopinathrsv/aws-sdk-java", "path": "/aws-java-sdk-alexaforbusiness/src/main/java/com/amazonaws/services/alexaforbusiness/model/SearchDevicesResult.java", "source": "the-stack-v2", "method_name": "hashCode", "class_name": "SearchDevicesResult", "index": 658, "label": 1}
{"input": "@Provides\n    @Singleton\n    @Named(\"MemoryCardTableSchema\")\n    TableSchema<MemoryCard> provideMemoryCardTableSchema(){\n        return TableSchema.fromBean(MemoryCard.class);\n    }", "timestamp": "2022-06-17T07:22:23.605689Z", "repo_name": "Nxtra/Java-DynamoDB-enhanced-client", "path": "/src/MemoryCardFunctions/src/main/java/io/theclouddeveloper/memorycards/di/DIModule.java", "source": "the-stack-v2", "method_name": "provideMemoryCardTableSchema", "class_name": "DIModule", "index": 659, "label": 1}
{"input": "private JCheckBox getJCheckBoxCenterWindow() {\n\t\tif (jCheckBoxCenterWindow == null) {\n\t\t\tjCheckBoxCenterWindow = new JCheckBox();\n\t\t\tjCheckBoxCenterWindow.setBounds(new Rectangle(10, 200, 341, 21));\n\t\t\tjCheckBoxCenterWindow.setFont(new Font(\"Dialog\", Font.PLAIN, 12));\n\t\t\tjCheckBoxCenterWindow.setText(getMessages().getString(\"Page_CENTERWINDOW\"));\n\t\t\tjCheckBoxCenterWindow.setEnabled(false);\n\t\t\tjCheckBoxCenterWindow.setSelected(MelangeJFrame.prefCenterWindow);\n\t\t}\n\t\treturn jCheckBoxCenterWindow;\n\t}", "timestamp": "2021-01-01T05:50:38.878341Z", "repo_name": "dertoki/jPDFmelange", "path": "/jPDFmelange/JPanelViewPrefs.java", "source": "the-stack-v2", "method_name": "getJCheckBoxCenterWindow", "class_name": "JPanelViewPrefs", "index": 660, "label": 1}
{"input": "public Criteria andVdef4IsNull() {\r\n            addCriterion(\"VDEF4 is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef4IsNull", "class_name": "GeneratedCriteria", "index": 661, "label": 1}
{"input": "public Criteria andCommissionGreaterThan(Double value) {\n            addCriterion(\"commission >\", value, \"commission\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andCommissionGreaterThan", "class_name": "GeneratedCriteria", "index": 662, "label": 1}
{"input": "@RequestMapping(\"/loadSchema\")\n    public String loadExistsSchema(RedirectAttributes redirectAttributes) {\n        try {\n            schemaService.updateTableInfo();\n            redirectAttributes.addFlashAttribute(\"message\", \"加载成功\");\n        } catch (Exception e) {\n            logger.error(\"Error: {}\\n{}\", e.getMessage(), e.getStackTrace());\n            e.printStackTrace();\n            redirectAttributes.addFlashAttribute(\"message\", \"出错：\" + e.getMessage());\n        }\n        return \"redirect:/table/\";\n    }", "timestamp": "2021-07-24T05:36:15.049191Z", "repo_name": "jinlong-hao/eppdev-jee", "path": "/eppdev-code-generator/src/main/java/cn/eppdev/codegenerator/manager/web/SchemaController.java", "source": "the-stack-v2", "method_name": "loadExistsSchema", "class_name": "SchemaController", "index": 663, "label": 1}
{"input": "public double getAbsoluteAngle(){\n        \n        \n        final double position = (((5.0 - (armEncoder.getAverageVoltage() / 5.0)) * 360.0) - Constants.ARM_ENCODER_CALIBRATION_OFFSET) % 360;\n        \n        if(position < 0){\n            return 360 + position;\n        }\n        return position;\n    }", "timestamp": "2022-11-10T14:39:33.995545Z", "repo_name": "frc5431/RobotCode2019", "path": "/src/main/java/frc/robot/components/Arm.java", "source": "the-stack-v2", "method_name": "getAbsoluteAngle", "class_name": "Arm", "index": 664, "label": 1}
{"input": "private long pendingVideoMessages() {\n        IMessageOutput out = msgOut.get();\n        if (out != null) {\n            OOBControlMessage pendingRequest = new OOBControlMessage();\n            pendingRequest.setTarget(\"ConnectionConsumer\");\n            pendingRequest.setServiceName(\"pendingVideoCount\");\n            out.sendOOBControlMessage(this, pendingRequest);\n            if (pendingRequest.getResult() != null) {\n                return (Long) pendingRequest.getResult();\n            }\n        }\n        return 0;\n    }", "timestamp": "2023-06-22T03:27:38.095086Z", "repo_name": "guyueyuqi/red5-server-common", "path": "/src/main/java/org/red5/server/stream/PlayEngine.java", "source": "the-stack-v2", "method_name": "pendingVideoMessages", "class_name": "PlayEngine", "index": 665, "label": 1}
{"input": "public static <T> void assertOrderedEquals(final String erroMsg,\n                                             final Iterable<? extends T> actual,\n                                             final Collection<? extends T> expected) {\n    ArrayList<T> list = new ArrayList<T>();\n    for (T t : actual) {\n      list.add(t);\n    }\n    if (!list.equals(new ArrayList<T>(expected))) {\n      String expectedString = toString(expected);\n      String actualString = toString(actual);\n      Assert.assertEquals(erroMsg, expectedString, actualString);\n      Assert.fail(\"Warning! 'toString' does not reflect the difference.\\nExpected: \" + expectedString + \"\\nActual: \" + actualString);\n    }\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "assertOrderedEquals", "class_name": "UsefulTestCase", "index": 666, "label": 1}
{"input": "@Override\n\t\tpublic void run() {\n\t\t\tSystem.out.println(\"in MyThread run\");\n\t\t\tfor (i = 0; i < 100; i++) {\n\t\t\t\tSystem.out.println(Thread.currentThread().getName() + \" \" + i);\n\t\t\t}\n\t\t}", "timestamp": "2021-01-11T10:37:27.269138Z", "repo_name": "y928qx/warehouseYqx", "path": "/Java/src/Thread/Text3.java", "source": "the-stack-v2", "method_name": "run", "class_name": "MyThread", "index": 667, "label": 1}
{"input": "String getCurrPath() {\n        if (paths == null || paths.length == 0)\n            throw new RuntimeException(\"not found paths,please use @MultiPath annotation above api method\");\n        String currPath = paths[currIndex];\n        if (TextUtils.isEmpty(currPath))\n            throw new RuntimeException(\"@MultiPath value item must not be null or emtpy\");\n        return currPath;\n    }", "timestamp": "2023-02-03T14:40:42.305750Z", "repo_name": "huxinjun/fastapi", "path": "/fastapi/src/main/java/org/pulp/fastapi/extension/SequenceObservable.java", "source": "the-stack-v2", "method_name": "getCurrPath", "class_name": "SequenceObservable", "index": 668, "label": 1}
{"input": "public static Cursor getAllCallLogs(ContentResolver cr) {\n        \n        String strOrder = android.provider.CallLog.Calls.DATE + \" DESC\";\n        Uri callUri = Uri.parse(\"content://call_log/calls\");\n        Cursor curCallLogs = cr.query(callUri, null, null, null, strOrder);\n\n        return curCallLogs;\n    }", "timestamp": "2023-06-16T03:12:27.351884Z", "repo_name": "12Kavyaas/Children_Monitoring_System", "path": "/app/src/main/java/com/example/authapplication/CallLogHelper.java", "source": "the-stack-v2", "method_name": "getAllCallLogs", "class_name": "CallLogHelper", "index": 669, "label": 1}
{"input": "@Override\n    protected void onResume() {\n\n        super.onResume();\n        myDbManager.openDb();\n        \n        mainAdapter.updateAdapter(myDbManager.getFromDb(\"\"));\n    }", "timestamp": "2023-03-08T01:40:35.562585Z", "repo_name": "dev2033/Java_notebook", "path": "/app/src/main/java/com/example/javanotebook/MainActivity.java", "source": "the-stack-v2", "method_name": "onResume", "class_name": "MainActivity", "index": 670, "label": 1}
{"input": "@Override\n\t@Virtual(7)\n\tpublic void OnRspUnSubMarketData(\n\t\t\tPointer<CThostFtdcSpecificInstrumentField> pSpecificInstrument,\n\t\t\tPointer<CThostFtdcRspInfoField> pRspInfo, int nRequestID,\n\t\t\tboolean bIsLast) {\n\t\tmdSpi.onRspUnSubMarketData(getStructObject(pSpecificInstrument), getStructObject(pRspInfo), nRequestID, bIsLast);\n\t}", "timestamp": "2021-01-20T20:36:21.325448Z", "repo_name": "jiangcuilan/JCTP", "path": "/src/main/java/com/jctp/md/JCTPMdSpiAdapter.java", "source": "the-stack-v2", "method_name": "OnRspUnSubMarketData", "class_name": "JCTPMdSpiAdapter", "index": 671, "label": 1}
{"input": "@Override\n    public Map<String, Object> postProcessSupportingFileData(Map<String, Object> objs) {\n        generateYAMLSpecFile(objs);\n        return super.postProcessSupportingFileData(objs);\n    }", "timestamp": "2023-09-02T11:26:28.189499Z", "repo_name": "OpenAPITools/openapi-generator", "path": "/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaHelidonServerCodegen.java", "source": "the-stack-v2", "method_name": "postProcessSupportingFileData", "class_name": "JavaHelidonServerCodegen", "index": 672, "label": 1}
{"input": "public IBlock getBlockFromDefinition(IBlockDefinition def) {\n        RegisteredBlock reg = registeredBlocks.get(def);\n        if (reg == null) return null;\n        return reg.getIBlock();\n    }", "timestamp": "2021-05-31T18:12:32.699618Z", "repo_name": "pagoru/Blacksmith-Api", "path": "/src/main/java/mod/net/darkaqua/blacksmith/mod/common/registry/BlockRegistry.java", "source": "the-stack-v2", "method_name": "getBlockFromDefinition", "class_name": "BlockRegistry", "index": 673, "label": 1}
{"input": "public Criteria andVdef6NotBetween(String value1, String value2) {\r\n            addCriterion(\"VDEF6 not between\", value1, value2, \"vdef6\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef6NotBetween", "class_name": "GeneratedCriteria", "index": 674, "label": 1}
{"input": "public void testBug142044_And02() throws CoreException {\n\tIType type1 = getCompilationUnit(\"JavaSearchBugs\", \"src\", \"b142044\", \"I142044_A.java\").getType(\"I142044_A\");\n\tSearchPattern leftPattern = SearchPattern.createPattern(type1, IMPLEMENTORS);\n\tSearchPattern rightPattern = createPattern(\"I*\", CLASS, IMPLEMENTORS, true);\n\tsearch(SearchPattern.createAndPattern(leftPattern, rightPattern), getJavaSearchScope(), this.resultCollector);\n\tassertSearchResults(\n\t\t\"src/b142044/X142044.java b142044.X142044$XX1 [I142044_A] EXACT_MATCH\\n\" +\n\t\t\"src/b142044/X142044.java b142044.X142044$XX12 [I142044_A] EXACT_MATCH\\n\" +\n\t\t\"src/b142044/X142044_A.java b142044.X142044_A [I142044_A] EXACT_MATCH\\n\" +\n\t\t\"src/b142044/X142044_AB.java b142044.X142044_AB [I142044_A] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug142044_And02", "class_name": "JavaSearchBugsTests", "index": 675, "label": 1}
{"input": "@Override\r\n    public void addChild(Object child) {\r\n      if (child instanceof StreamElement) {\r\n        streamElements.add((StreamElement) child);\r\n      } else if (child instanceof ProtectionElement) {\r\n        Assertions.checkState(protectionElement == null);\r\n        protectionElement = (ProtectionElement) child;\r\n      }\r\n    }", "timestamp": "2020-12-10T15:15:05.202410Z", "repo_name": "AhabweEmmanuel/Marlia", "path": "/TMessagesProj/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java", "source": "the-stack-v2", "method_name": "addChild", "class_name": "SmoothStreamingMediaParser", "index": 676, "label": 1}
{"input": "@Override\n    @Cacheable.FlushBefore\n    public void create(final String repo, final String name)\n        throws IOException {\n        this.origin.create(repo, name);\n    }", "timestamp": "2022-12-21T00:00:08.612798Z", "repo_name": "pjmorr/rultor", "path": "/src/main/java/com/rultor/cached/CdTalks.java", "source": "the-stack-v2", "method_name": "create", "class_name": "CdTalks", "index": 677, "label": 1}
{"input": "public static <T> Function<T, T> composeAllViaFoldRight(List<Function<T, T>> list) {\n\t\treturn x -> foldRight(list, x, a -> a::apply);\n\t}", "timestamp": "2021-01-21T15:30:48.662050Z", "repo_name": "gmariotti/fpinjava", "path": "/fpinjava-parent/fpinjava-recursion-exercises/src/main/java/com/fpinjava/recursion/exercise04_07/ComposeAll.java", "source": "the-stack-v2", "method_name": "composeAllViaFoldRight", "class_name": "ComposeAll", "index": 678, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByDateAddedIsLessThanSomething() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        \n        defaultTransactionShouldNotBeFound(\"dateAdded.lessThan=\" + DEFAULT_DATE_ADDED);\n\n        \n        defaultTransactionShouldBeFound(\"dateAdded.lessThan=\" + UPDATED_DATE_ADDED);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByDateAddedIsLessThanSomething", "class_name": "TransactionResourceIT", "index": 679, "label": 1}
{"input": "public List<InterfaceBodyDeclarationContext> interfaceBodyDeclaration() {\n\t\t\treturn getRuleContexts(InterfaceBodyDeclarationContext.class);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "interfaceBodyDeclaration", "class_name": "InterfaceBodyContext", "index": 680, "label": 1}
{"input": "public void addRow() {\r\n\t\tVector<Object> newRow = new Vector<Object>();\r\n\t\tnewRow.add(\"\"+(data.size()+1));\r\n\t\tfor (int column =1; column<totalColumnCount; column++)\r\n\t\t\tnewRow.add(null);\r\n\t\tdata.add(newRow);\r\n\t\tfireTableRowsInserted(data.size()-1, data.size()-1);\r\n\t}", "timestamp": "2022-07-01T16:52:01.783312Z", "repo_name": "JaroslawHryszko/MISTA", "path": "/src/edit/GeneralTableModel.java", "source": "the-stack-v2", "method_name": "addRow", "class_name": "GeneralTableModel", "index": 681, "label": 1}
{"input": "@Override\n    public ErrorPage findErrorPage(String exceptionType) {\n\n        synchronized (exceptionPages) {\n            return (exceptionPages.get(exceptionType));\n        }\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "findErrorPage", "class_name": "StandardContext", "index": 682, "label": 1}
{"input": "public static String getAllFirstLetter(String str) {\n\t\tif (str == null || str.trim().length() == 0) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\t\n\t\tfor (String polyphone : polyphoneTxt.split(\",\")) {\n\t\t\tString[] chinese = polyphone.split(\"[|]\");\n\t\t\tif (str.indexOf(chinese[0]) != -1) {\n\t\t\t\tstr = str.replace(chinese[0], chinese[1]);\n\t\t\t}\n\t\t}\n\n\t\tString _str = \"\";\n\t\tfor (int i = 0; i < str.length(); i++) {\n\t\t\t_str = _str + getFirstLetter(str.substring(i, i + 1));\n\t\t}\n\n\t\treturn _str;\n\t}", "timestamp": "2022-07-05T04:13:39.059021Z", "repo_name": "jackyang92/hrm_parent", "path": "/hrm_basic_parent/hrm_basic_util/src/main/java/com/ymy/hrm/util/LetterUtil.java", "source": "the-stack-v2", "method_name": "getAllFirstLetter", "class_name": "LetterUtil", "index": 683, "label": 1}
{"input": "private String encodeByMD5(String pass) throws NoSuchAlgorithmException {\n        MessageDigest messageDigest=MessageDigest.getInstance(\"MD5\");\n        return Arrays.toString(Base64Coder.encode(messageDigest.digest(pass.getBytes(StandardCharsets.UTF_8))));\n    }", "timestamp": "2023-06-25T20:05:39.320927Z", "repo_name": "bfyjr/dianping", "path": "/src/main/java/com/hs/dianping/service/Impl/UserServiceImpl.java", "source": "the-stack-v2", "method_name": "encodeByMD5", "class_name": "UserServiceImpl", "index": 684, "label": 1}
{"input": "@Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      W3CDom w3CDom0 = new W3CDom();\n      Document document0 = Parser.parse(\"n&/<r:R9pLRe>$vv =\", \"n&/<r:R9pLRe>$vv =\");\n      \n\n        w3CDom0.fromJsoup(document0);\n\n      \n\n\n  }", "timestamp": "2022-11-25T00:39:58.983828Z", "repo_name": "pderakhshanfar/EMSE-BBC-experiment", "path": "/tests-without-trycatch/Jsoup-84/org.jsoup.helper.W3CDom/default/11/org/jsoup/helper/W3CDom_ESTest.java", "source": "the-stack-v2", "method_name": "test09", "class_name": "W3CDom_ESTest", "index": 685, "label": 1}
{"input": "public void update(){\n\t\tif (update){\n\t\t\tLinkedList <Eprojectile> inactiveProjectiles = new LinkedList <Eprojectile>();\n\t\t\t\n\t\t\t\n\t\t\tfor (Eprojectile projectile : projectiles){\n\t\t\t\tif (projectile.getPositionY() > GameLib.HEIGHT){\n\t\t\t\t\tinactiveProjectiles.add(projectile);\n\t\t\t\t} else {\n\t\t\t\t\tprojectile.update();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (Eprojectile projectile : inactiveProjectiles)\n\t\t\t\tprojectiles.remove(projectile);\n\t\t\t\n\t\t\t\n\t\t\tif(!exploding && !isOutOfScreen()){\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(Level.getCurrentTime() > nextShot && position.y < Main.player.getPositionY()){\n\t\t\t\t\tshoot();\n\t\t\t\t\t\n\t\t\t\t\tnextShot = (long) (Level.getCurrentTime() + 200 + Math.random() * 500);\n\t\t\t\t}\n\t\t\t\tmove();\n\t\t\t}\n\t\t\tthis.update = false;\n\t\t}\n\t}", "timestamp": "2021-06-01T06:07:53.205028Z", "repo_name": "fbnsampa/SpaceInvaders", "path": "/src/refatorado/game/enemy/Ship.java", "source": "the-stack-v2", "method_name": "update", "class_name": "Ship", "index": 686, "label": 1}
{"input": "@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((codigo == null) ? 0 : codigo.hashCode());\n\t\treturn result;\n\t}", "timestamp": "2021-01-13T05:23:47.336037Z", "repo_name": "Beleboni/spring-project", "path": "/src/main/java/com/algaworks/brewer/model/Pedido.java", "source": "the-stack-v2", "method_name": "hashCode", "class_name": "Pedido", "index": 687, "label": 1}
{"input": "@Override \n        public void getAllowedCarriersResponse(RadioResponseInfo info, boolean allAllowed, CarrierRestrictions carriers) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            _hidl_request.writeBool(allAllowed);\n            carriers.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(125, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "getAllowedCarriersResponse", "class_name": "Proxy", "index": 688, "label": 1}
{"input": "public FormalParametersContext formalParameters() {\n\t\t\treturn getRuleContext(FormalParametersContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "formalParameters", "class_name": "MethodDeclarationContext", "index": 689, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByNameIsEqualToSomething() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        \n        defaultTransactionShouldBeFound(\"name.equals=\" + DEFAULT_NAME);\n\n        \n        defaultTransactionShouldNotBeFound(\"name.equals=\" + UPDATED_NAME);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByNameIsEqualToSomething", "class_name": "TransactionResourceIT", "index": 690, "label": 1}
{"input": "public Criteria andUsercodeNotIn(List<String> values) {\r\n            addCriterion(\"USERCODE not in\", values, \"usercode\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andUsercodeNotIn", "class_name": "GeneratedCriteria", "index": 691, "label": 1}
{"input": "public Criteria andVdef11IsNull() {\r\n            addCriterion(\"VDEF11 is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef11IsNull", "class_name": "GeneratedCriteria", "index": 692, "label": 1}
{"input": "public void unlock(String key,long expireTime){\n        if (System.currentTimeMillis()-expireTime>0) {\n            return ;\n        }\n        Jedis jedis = new Jedis(host, port);\n        String curLockTimeStr = jedis.get(key);\n        if (StringUtils.isNotBlank(curLockTimeStr)&&Long.valueOf(curLockTimeStr)>System.currentTimeMillis()) {\n            jedis.del(key);\n        }\n    }", "timestamp": "2020-12-06T17:20:41.416265Z", "repo_name": "heianxing/DistributedLock", "path": "/src/main/java/com/wyzssw/distributedLock/DistributedLock.java", "source": "the-stack-v2", "method_name": "unlock", "class_name": "DistributedLock", "index": 693, "label": 1}
{"input": "public static Corretor createUpdatedEntity(EntityManager em) {\n        Corretor corretor = new Corretor()\n            .nomeCorretor(UPDATED_NOME_CORRETOR)\n            .usuario(UPDATED_USUARIO)\n            .dataNascimento(UPDATED_DATA_NASCIMENTO)\n            .foto(UPDATED_FOTO)\n            .fotoContentType(UPDATED_FOTO_CONTENT_TYPE)\n            .telefone(UPDATED_TELEFONE);\n        return corretor;\n    }", "timestamp": "2023-04-25T08:10:07.834277Z", "repo_name": "ceduardo-roque/easyinsurance-hybrid", "path": "/src/test/java/br/com/fiap/easyinsurance/web/rest/CorretorResourceIT.java", "source": "the-stack-v2", "method_name": "createUpdatedEntity", "class_name": "CorretorResourceIT", "index": 694, "label": 1}
{"input": "public void setBotonEncenderVerdeL2(JButton botonEncenderVerdeL2) {\r\n\t\tthis.botonEncenderVerdeL2 = botonEncenderVerdeL2;\r\n\t}", "timestamp": "2021-07-09T22:13:09.290917Z", "repo_name": "DevOscarFA/SemaforoServidor", "path": "/src/presentacion/Vista.java", "source": "the-stack-v2", "method_name": "setBotonEncenderVerdeL2", "class_name": "Vista", "index": 695, "label": 1}
{"input": "@Override\n        public Iterable<Integer> get(ChangeData input, FillArgs args)\n            throws OrmException {\n          return ImmutableSet.copyOf(Iterables.transform(input.editsByUser(),\n              new Function<Account.Id, Integer>() {\n            @Override\n            public Integer apply(Account.Id account) {\n              return account.get();\n            }\n          }));\n        }", "timestamp": "2021-01-16T21:01:21.667768Z", "repo_name": "runt18/gerrit", "path": "/gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeField.java", "source": "the-stack-v2", "method_name": "get", "class_name": "ChangeField", "index": 696, "label": 1}
{"input": "@Override\n  public void applyToParams(List<Pair> queryParams, Map<String, String> headerParams) {\n    if (accessToken != null) {\n      headerParams.put(\"Authorization\", \"Bearer \" + accessToken);\n    }\n  }", "timestamp": "2021-01-19T23:57:07.683893Z", "repo_name": "deardooley/agave-java-sdk", "path": "/src/main/java/org/agave/client/auth/OAuth.java", "source": "the-stack-v2", "method_name": "applyToParams", "class_name": "OAuth", "index": 697, "label": 1}
{"input": "@Override\n \tpublic boolean refresh(final RefreshListener listener)\n \t{\n\t\tif (downloadTask != null) return false;\n \t\tdownloadData(new OnDownloadListener()\n \t\t{\n \t\t\t\n \t\t\t@Override\n \t\t\tpublic void onDownloadFinished()\n \t\t\t{\n \t\t\t\tlistener.onRefreshFinished();\n \t\t\t}\n \t\t});\n \t\treturn true;\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/2/2_f00aadd83d6d0751e8961fd2acb926993529e964/ForumRssPage/2_f00aadd83d6d0751e8961fd2acb926993529e964_ForumRssPage_t.java", "source": "the-stack-v2", "method_name": "refresh", "class_name": "ForumRssPage", "index": 698, "label": 1}
{"input": "@Test public void testTrivialSort() {\n    final String sql = \"select a.\\\"value\\\", b.\\\"value\\\"\\n\"\n        + \"  from \\\"bools\\\" a\\n\"\n        + \"     , \\\"bools\\\" b\\n\"\n        + \" offset 0\";\n    CalciteAssert.that()\n        .withSchema(\"s\",\n            new ReflectiveSchema(\n                new ReflectiveSchemaTest.CatchallSchema()))\n        .query(sql)\n        .returnsUnordered(\"value=T; value=T\",\n            \"value=T; value=F\",\n            \"value=T; value=null\",\n            \"value=F; value=T\",\n            \"value=F; value=F\",\n            \"  from \\\"bools\\\" a\\n\"0,\n            \"  from \\\"bools\\\" a\\n\"1,\n            \"  from \\\"bools\\\" a\\n\"2,\n            \"  from \\\"bools\\\" a\\n\"3);\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testTrivialSort", "class_name": "JdbcTest", "index": 699, "label": 1}
{"input": "@Override\n        public RecyclerView onCreateRecyclerView(final LayoutInflater inflater,\n                final ViewGroup parent,\n                final Bundle savedInstanceState) {\n            \n            \n            final RecyclerView prefList =\n                    (RecyclerView) inflater.inflate(R.layout.settings_list, parent, false);\n            prefList.setHasFixedSize(true);\n            return prefList;\n        }", "timestamp": "2021-07-03T21:36:50.802633Z", "repo_name": "liaoqingmo/iosched", "path": "/lib/src/main/java/com/google/samples/apps/iosched/settings/SettingsActivity.java", "source": "the-stack-v2", "method_name": "onCreateRecyclerView", "class_name": "SettingsFragment", "index": 700, "label": 1}
{"input": "public final EnumConstantsContext enumConstants() throws RecognitionException {\n\t\tEnumConstantsContext _localctx = new EnumConstantsContext(_ctx, getState());\n\t\tenterRule(_localctx, 26, RULE_enumConstants);\n\t\ttry {\n\t\t\tint _alt;\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(343);\n\t\t\tenumConstant();\n\t\t\tsetState(348);\n\t\t\t_errHandler.sync(this);\n\t\t\t_alt = getInterpreter().adaptivePredict(_input,21,_ctx);\n\t\t\twhile ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {\n\t\t\t\tif ( _alt==1 ) {\n\t\t\t\t\t{\n\t\t\t\t\t{\n\t\t\t\t\tsetState(344);\n\t\t\t\t\tmatch(T__16);\n\t\t\t\t\tsetState(345);\n\t\t\t\t\tenumConstant();\n\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t\tsetState(350);\n\t\t\t\t_errHandler.sync(this);\n\t\t\t\t_alt = getInterpreter().adaptivePredict(_input,21,_ctx);\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "enumConstants", "class_name": "JavaParser", "index": 701, "label": 1}
{"input": "protected String encode(String source, String salt) {\r\n    String value = source.concat(salt);\r\n    for (int i = 0; i < iterations; i++) {\r\n      value = doEncode(value);\r\n    }\r\n    if (!EMPTY.equals(salt)) {\r\n      value = PREFIX.concat(salt).concat(SUFFIX).concat(value);\r\n    }\r\n    return value;\r\n  }", "timestamp": "2020-03-07T03:31:08.043292Z", "repo_name": "justlive1/earth-snow", "path": "/snow-common-base/src/main/java/vip/justlive/common/base/crypto/BaseEncoder.java", "source": "the-stack-v2", "method_name": "encode", "class_name": "BaseEncoder", "index": 702, "label": 1}
{"input": "public void setJCOInstance(JCObject instance) {\n        classInstance = instance;\n        super.setJCOInstance(classInstance);\n    }", "timestamp": "2023-03-28T22:51:08.117039Z", "repo_name": "marcocappolimases/JCOReflector", "path": "/netreflected/src/net461/microsoft.build.framework_version_4.0.0.0_culture_neutral_publickeytoken_b03f5f7f11d50a3a/microsoft/build/framework/xamltypes/NameValuePair.java", "source": "the-stack-v2", "method_name": "setJCOInstance", "class_name": "NameValuePair", "index": 703, "label": 1}
{"input": "public void setConfigurationService(ConfigurationService kualiConfigurationService) {\n        this.kualiConfigurationService = kualiConfigurationService;\n    }", "timestamp": "2021-07-08T11:01:19.692655Z", "repo_name": "VU-libtech/OLE-INST", "path": "/ole-app/olefs/src/main/java/org/kuali/ole/module/purap/document/service/impl/PrintServiceImpl.java", "source": "the-stack-v2", "method_name": "setConfigurationService", "class_name": "PrintServiceImpl", "index": 704, "label": 1}
{"input": "private LineFormatRecord createLineFormatRecord2()\n    {\n        LineFormatRecord r = new LineFormatRecord();\n        r.setLineColor( 0x00808080 );\n        r.setLinePattern( (short) 0 );\n        r.setWeight( (short) 0 );\n        r.setAuto( false );\n        r.setDrawTicks( false );\n        r.setUnknown( false );\n        r.setColourPaletteIndex( (short) 23 );\n        return r;\n    }", "timestamp": "2023-01-11T02:29:36.328694Z", "repo_name": "DXYyang/SDP", "path": "/sourcedata/poi-REL_3_0/src/scratchpad/src/org/apache/poi/hssf/usermodel/HSSFChart.java", "source": "the-stack-v2", "method_name": "createLineFormatRecord2", "class_name": "HSSFChart", "index": 705, "label": 1}
{"input": "public Criteria andIntegralValueIsNotNull() {\n            addCriterion(\"integral_value is not null\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andIntegralValueIsNotNull", "class_name": "GeneratedCriteria", "index": 706, "label": 1}
{"input": "public void testBug166348() throws CoreException {\n\tsearch(\"Test166348\", TYPE, DECLARATIONS);\n\tassertSearchResults(\n\t\t\"lib/b166348.jar pack.Test166348 [No source] EXACT_MATCH\\n\" +\n\t\t\"lib/b166348.jar test.Test166348 [No source] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug166348", "class_name": "JavaSearchBugsTests", "index": 707, "label": 1}
{"input": "private <REQ, RESP> CompletableFuture<RESP> noncedMutate(HBaseRpcController controller,\n      HRegionLocation loc, ClientService.Interface stub, REQ req,\n      NoncedConverter<MutateRequest, byte[], REQ> reqConvert,\n      Converter<RESP, HBaseRpcController, MutateResponse> respConverter) {\n    long nonceGroup = conn.getNonceGenerator().getNonceGroup();\n    long nonce = conn.getNonceGenerator().newNonce();\n    return mutate(controller, loc, stub, req,\n      (info, src) -> reqConvert.convert(info, src, nonceGroup, nonce), respConverter);\n  }", "timestamp": "2020-03-21T15:28:16.237120Z", "repo_name": "siwuxietang/hbase", "path": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncTableImpl.java", "source": "the-stack-v2", "method_name": "noncedMutate", "class_name": "RawAsyncTableImpl", "index": 708, "label": 1}
{"input": "public User findUser(String username) {\n        String sql = \"select * from users where username = ?\";\n        Connection conn = JDBCUtils.getConn();\n        \n        User user = null;\n        \n        if (conn != null) {\n        \ttry {\n                PreparedStatement ps = conn.prepareStatement(sql);\n                ps.setString(1, username);\n                ResultSet rs = ps.executeQuery();\n\n                while (rs.next()){\n                   int id = rs.getInt(1);\n                   String username_db = rs.getString(2);\n                   String password_db  = rs.getString(3);\n                   user = new User(id, username_db, password_db);\n                }\n\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n        }\n        \n        return user;\n    }", "timestamp": "2023-07-21T17:56:20.119421Z", "repo_name": "Wenbosi/Android-Knowledge-App", "path": "/Web/AndroidWeb/src/main/java/dao/UserDao.java", "source": "the-stack-v2", "method_name": "findUser", "class_name": "UserDao", "index": 709, "label": 1}
{"input": "@Nullable\n  private static InnerClassNode getInnerClassMetadata(ClassNode node) {\n    String name = node.name;\n    return getInnerClassMetadata(node, name);\n  }", "timestamp": "2020-12-02T11:04:47.801319Z", "repo_name": "johnblaze321/buck", "path": "/src/com/facebook/buck/jvm/java/abi/StubJarClassEntry.java", "source": "the-stack-v2", "method_name": "getInnerClassMetadata", "class_name": "StubJarClassEntry", "index": 710, "label": 1}
{"input": "@Override\n        public void setAttribute(String name, Object object) {\n            sc.setAttribute(name, object);\n        }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setAttribute", "class_name": "NoPluggabilityServletContext", "index": 711, "label": 1}
{"input": "public List<QualifiedNameContext> qualifiedName() {\n\t\t\treturn getRuleContexts(QualifiedNameContext.class);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "qualifiedName", "class_name": "QualifiedNameListContext", "index": 712, "label": 1}
{"input": "@Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      SimpleNode simpleNode0 = new SimpleNode(1);\n      simpleNode0.jjtAddChild(simpleNode0, 1);\n      simpleNode0.jjtGetChild(1);\n      assertEquals(2, simpleNode0.jjtGetNumChildren());\n  }", "timestamp": "2023-04-17T20:05:40.560943Z", "repo_name": "bellmit/termite-replication", "path": "/tests/time/mosa/tests/s1007/19_jmca/evosuite-tests/com/soops/CEN4010/JMCA/JParser/SimpleNode_ESTest.java", "source": "the-stack-v2", "method_name": "test04", "class_name": "SimpleNode_ESTest", "index": 713, "label": 1}
{"input": "@Test\n\tpublic void getFirstVehicleId(){\n\t\tResponseEntity<Price> response = this.restTemplate.getForEntity(\"http://localhost:\"+port+\"/services/price?vehicleId=1\", Price.class);\n\t\tassertThat(response.getStatusCode(), equalTo(HttpStatus.OK));\n\t}", "timestamp": "2023-01-23T19:53:49.878769Z", "repo_name": "elgeorsk/be-carWebsite", "path": "/pricing-service/src/test/java/com/udacity/pricing/PricingServiceApplicationTests.java", "source": "the-stack-v2", "method_name": "getFirstVehicleId", "class_name": "PricingServiceApplicationTests", "index": 714, "label": 1}
{"input": "@Override\n\tpublic JSONObject getReportData(String tmpMappingId, JSONObject paramJson) {\n\t\t\n\t\tJSONObject srcReportData = getReportDatasetData(tmpMappingId, paramJson);\n\t\t\n\t\tReportTmpMappingEntity reportTmpMappingEntity = getReportTmpDatasetMapping(tmpMappingId);\n\t\t\n\t\tJSONObject desReportData = transReportDatasetData(reportTmpMappingEntity, srcReportData);\n\t\treturn desReportData;\n\t}", "timestamp": "2021-05-08T16:38:30.406098Z", "repo_name": "eosite/openyourarm", "path": "/glaf-web/src/main/java/com/glaf/report/core/service/ReportTmpMappingServiceImpl.java", "source": "the-stack-v2", "method_name": "getReportData", "class_name": "ReportTmpMappingServiceImpl", "index": 715, "label": 1}
{"input": "@Override\n        public Dynamic addServlet(String servletName, String className) {\n            throw new UnsupportedOperationException(\n                    sm.getString(\"noPluggabilityServletContext.notAllowed\"));\n        }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "addServlet", "class_name": "NoPluggabilityServletContext", "index": 716, "label": 1}
{"input": "public void addTransition(State state, Transition transition) {\n        transitionService.addTransition(state, transition);\n    }", "timestamp": "2022-11-24T07:05:27.078403Z", "repo_name": "aggarwal-vibhuti/state-machine", "path": "/src/main/java/com.fsm/StateMachine.java", "source": "the-stack-v2", "method_name": "addTransition", "class_name": "StateMachine", "index": 717, "label": 1}
{"input": "@Bean\n    public JmsTemplate jmsTemplate() {\n        JmsTemplate template = new JmsTemplate();\n        template.setConnectionFactory(connectionFactory());\n        template.setDefaultDestinationName(MESSAGE_QUEUE);\n        return template;\n    }", "timestamp": "2020-07-31T22:27:06.001636Z", "repo_name": "MouliRepo/Spring-JMS-ActiveMq-Listener", "path": "/Spring JMS Application/Spring-JMS-Application/src/main/java/com/NTT/config/ReceiverConfig.java", "source": "the-stack-v2", "method_name": "jmsTemplate", "class_name": "ReceiverConfig", "index": 718, "label": 1}
{"input": "@Test\n    public void whenEndWithPrefixThenTrue() {\n        char[] word = {'H', 'e', 'l', 'l', 'o'};\n        char[] post = {'l', 'o'};\n        boolean result = EndsWith.endsWith(word, post);\n        assertThat(result, is(true));\n    }", "timestamp": "2023-07-08T03:30:54.522360Z", "repo_name": "Manlexey/job4j_elementary", "path": "/test/ru/job4j/array/EndsWithTest.java", "source": "the-stack-v2", "method_name": "whenEndWithPrefixThenTrue", "class_name": "EndsWithTest", "index": 719, "label": 1}
{"input": "private void pullArm(int indexArm) {\n        int nbCallRef = this.runReference(this.lap, this.arms.get(indexArm));\n        if (nbCallRef == 0) {\n            this.filter.add(indexArm);\n            this.policyLocation.filter(filter);\n        } else {\n            this.arms.get(indexArm).setEnactor(new NCallEnactorImpl(this.random.nextInt(nbCallRef), this.arms.get(indexArm)));\n            PerturbationEngine.loggers.get(this.name).logOn(this.arms.get(indexArm));\n            Tuple result = run(this.lap);\n            this.logger.log(indexArm, 0, 0, 0, result, this.name);\n            PerturbationEngine.loggers.get(this.name).reset();\n            this.policyLocation.update(indexArm, (int)result.get(0));\n            this.lap++;\n        }\n    }", "timestamp": "2021-01-15T22:04:18.376145Z", "repo_name": "cincheo/jPerturb-experiments", "path": "/src/main/java/experiment/explorer/bandit/BanditExplorer.java", "source": "the-stack-v2", "method_name": "pullArm", "class_name": "BanditExplorer", "index": 720, "label": 1}
{"input": "public void testBug124624_HaMa_CamelCase() throws CoreException {\n\tsetupBug124624();\n\tsearch(\"HaMa\", IJavaSearchConstants.TYPE, IJavaSearchConstants.DECLARATIONS, SearchPattern.R_CAMELCASE_MATCH);\n\tassertSearchResults(\n\t\t\"src/Test.java HashMap [HashMap] EXACT_MATCH\\n\" +\n\t\t\"src/Test.java HashMapEntry [HashMapEntry] EXACT_MATCH\\n\" +\n\t\t\"src/Test.java HaxMapxxxx [HaxMapxxxx] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug124624_HaMa_CamelCase", "class_name": "JavaSearchBugsTests", "index": 721, "label": 1}
{"input": "private void setupFirebaseAuth(){\n        Log.d(TAG, \"setupFirebaseAuth: setting up firebase auth.\");\n        mAuth = FirebaseAuth.getInstance();\n        mFirebaseDatabase = FirebaseDatabase.getInstance();\n        myRef = mFirebaseDatabase.getReference();\n        mAuthListener = new FirebaseAuth.AuthStateListener() {\n            @Override\n            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\n                FirebaseUser user = firebaseAuth.getCurrentUser();\n                if (user != null) {\n                    \n                    Log.d(TAG, \"onAuthStateChanged:signed_in:\" + user.getUid());\n                } else {\n                    \n                    Log.d(TAG, \"onAuthStateChanged:signed_out\");\n                }\n                \n            }\n        };\n    }", "timestamp": "2020-04-03T18:16:12.362449Z", "repo_name": "ezzatthrwat/instaclone", "path": "/app/src/main/java/com/example/zizoj/instaclone/Utils/ViewPostFragment.java", "source": "the-stack-v2", "method_name": "setupFirebaseAuth", "class_name": "ViewPostFragment", "index": 722, "label": 1}
{"input": "public String showAllTicketData() {\n\t\tString data=\"\";\n\t\tfor(Ticket t:ticketList) {\n\t\t\tdata+=t.showTicketData();\n\t\t\tdata+=\"=\";\n\t\t\tdata+=\"---------\"; \n\t\t\tdata+=\"=\";\n\t\t}\n\t\treturn data;\n\t}", "timestamp": "2022-11-16T04:41:18.855632Z", "repo_name": "TakedaMasashi46/Team5", "path": "/04_implementation/src/hanpuku1/database/TicketList.java", "source": "the-stack-v2", "method_name": "showAllTicketData", "class_name": "TicketList", "index": 723, "label": 1}
{"input": "@Test\n\tpublic void gettingOptionsDuplicates() {\n\t\tHttpClient client = HttpClient.create()\n\t\t                              .tcpConfiguration(tcpClient -> tcpClient.host(\"foo\"))\n\t\t                              .wiretap(true)\n\t\t                              .port(123)\n\t\t                              .compress(true);\n\t\tassertThat(client.tcpConfiguration())\n\t\t        .isNotSameAs(HttpClient.DEFAULT_TCP_CLIENT)\n\t\t        .isNotSameAs(client.tcpConfiguration());\n\t}", "timestamp": "2020-05-04T21:11:25.751515Z", "repo_name": "hhy5277/reactor-netty", "path": "/src/test/java/reactor/netty/http/client/HttpClientTest.java", "source": "the-stack-v2", "method_name": "gettingOptionsDuplicates", "class_name": "HttpClientTest", "index": 724, "label": 1}
{"input": "public void delete(Contact contact) {\n\t\tTransaction tx = session.beginTransaction();\n\t\tsession.delete(contact);\n\t\tsession.flush();\n\t\ttx.commit();\n\n\t}", "timestamp": "2021-01-01T19:24:50.872885Z", "repo_name": "d33tah/studies", "path": "/sem6/podstawy_jezyka_java/java-crud-homework/src/main/java/crud/crud/ContactManager.java", "source": "the-stack-v2", "method_name": "delete", "class_name": "ContactManager", "index": 725, "label": 1}
{"input": "public boolean match(ParameterizedType node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 726, "label": 1}
{"input": "public static TabletMetadata getRootMetadata(String zkRoot, ZooCache zc) {\n    byte[] jsonBytes = zc.get(zkRoot + RootTable.ZROOT_TABLET);\n    return new RootTabletMetadata(new String(jsonBytes, UTF_8)).toTabletMetadata();\n  }", "timestamp": "2023-08-31T07:35:03.455133Z", "repo_name": "ctubbsii/accumulo", "path": "/core/src/main/java/org/apache/accumulo/core/metadata/schema/TabletsMetadata.java", "source": "the-stack-v2", "method_name": "getRootMetadata", "class_name": "TabletsMetadata", "index": 727, "label": 1}
{"input": "public void testBug110060_TypePattern08_SamePartCount() throws CoreException {\n\tsetUpBug110060_TypePattern();\n\tsearch(\"Aaa\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);\n\t\n\tassertSearchResults(\n\t\t\"src/b110060/Test.java b110060.Test.a1 [Aaa] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.a2 [AAa] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_TypePattern08_SamePartCount", "class_name": "JavaSearchBugsTests", "index": 728, "label": 1}
{"input": "public boolean match(MethodInvocation node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 729, "label": 1}
{"input": "@GraphProperty(interceptor = StringToHybrisEnumValueConverter.class)\n\tpublic String getLogLevelFile()\n\t{\n\t\treturn logLevelFile;\n\t}", "timestamp": "2022-11-28T12:15:32.049256Z", "repo_name": "BaggaShivanshu2/hybris-bookstore-tutorial", "path": "/hybris/bin/ext-platform-optional/platformwebservices/custom/src/de/hybris/platform/cronjob/customdto/CronJobDTO.java", "source": "the-stack-v2", "method_name": "getLogLevelFile", "class_name": "CronJobDTO", "index": 730, "label": 1}
{"input": "public MessageManager build(){\n            if (handler == null) throw new IllegalStateException(\"handler == null\");\n            return new MessageManager(this);\n        }", "timestamp": "2022-01-28T07:40:46.442361Z", "repo_name": "Entropless/DJReader", "path": "/app/src/main/java/com/wy/djreader/utils/message/MessageManager.java", "source": "the-stack-v2", "method_name": "build", "class_name": "MessageBuilder", "index": 731, "label": 1}
{"input": "@GET\n\t@Produces(MediaType.APPLICATION_JSON)\n\t@Path(\"/students\")\n\tpublic Students getStudents() {\n\t\tStudents result = new Students();\n\t\tresult.setStudents(new ArrayList<Student>(students.values()));\n\t\treturn result;\n\t}", "timestamp": "2020-04-21T08:12:58.345665Z", "repo_name": "harshana05/JaxRSProviders", "path": "/examples/com.mycorp.examples.student.remoteservice.host/src/com/mycorp/examples/student/remoteservice/host/StudentServiceImpl2.java", "source": "the-stack-v2", "method_name": "getStudents", "class_name": "StudentServiceImpl2", "index": 732, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByScheduledIsNotEqualToSomething() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        \n        defaultTransactionShouldNotBeFound(\"scheduled.notEquals=\" + DEFAULT_SCHEDULED);\n\n        \n        defaultTransactionShouldBeFound(\"scheduled.notEquals=\" + UPDATED_SCHEDULED);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByScheduledIsNotEqualToSomething", "class_name": "TransactionResourceIT", "index": 733, "label": 1}
{"input": "public static String stringContent(String text, String key) {\n        String regEx = \"[`~!@#$%^&*()+=|{}':;',\\\\[\\\\].<>/?~！@#￥%……& amp;*（）——+|{}【】‘；：”“’。，、？]\";\n        Pattern p = Pattern.compile(regEx);\n        Matcher m = p.matcher(text);\n        return m.replaceAll(\"\").trim();\n    }", "timestamp": "2021-01-23T06:39:29.679752Z", "repo_name": "jiayazhou1992/MyApplication", "path": "/dang/src/main/java/com/sunztech/admin/dang/ui/utils/utils2/TextUtilTools.java", "source": "the-stack-v2", "method_name": "stringContent", "class_name": "TextUtilTools", "index": 734, "label": 1}
{"input": "public Criteria andModifyTimeIsNotNull() {\n            addCriterion(\"modify_time is not null\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andModifyTimeIsNotNull", "class_name": "GeneratedCriteria", "index": 735, "label": 1}
{"input": "public void testBug216875b() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/Test.java\",\n\t\t\"public class Test {\\n\" +\n\t\t\"    S fWrapped; // refs to fWrapped\\n\" +\n\t\t\"    void wrapper() {\\n\" +\n\t\t\"        fWrapped.fField = 12; // match for fWrapped is writeAccess\\n\" +\n\t\t\"    }\\n\" +\n\t\t\"}\\n\" +\n\t\t\"class S {\\n\" +\n\t\t\"\tint fField;\" +\n\t\t\"}\"\n\t);\n\tthis.resultCollector.showSelection();\n\tIField field = this.workingCopies[0].getType(\"public class Test {\\n\"0).getField(\"public class Test {\\n\"1);\n\tsearch(field, READ_ACCESSES, getJavaSearchWorkingCopiesScope(), this.resultCollector);\n\tassertSearchResults(\n\t\t\"public class Test {\\n\"2\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug216875b", "class_name": "JavaSearchBugsTests", "index": 736, "label": 1}
{"input": "@Override\n    public String[] findApplicationListeners() {\n\n        ArrayList<String> list =\n                new ArrayList<String>(applicationListeners.length);\n        for (ApplicationListener applicationListener: applicationListeners) {\n            list.add(applicationListener.getClassName());\n        }\n        \n        return list.toArray(new String[list.size()]);\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "findApplicationListeners", "class_name": "StandardContext", "index": 737, "label": 1}
{"input": "@Override\n    public void run() {\n        while (isRunning) {\n            if (!init) {\n                piHeight = new int[]{GameTool.getInstance().pipeCenterHeight / 5,\n                        -GameTool.getInstance().pipeCenterHeight / 2,\n                        (int) (GameTool.getInstance().pipeCenterHeight * 0.8),\n                        -(int) (GameTool.getInstance().pipeCenterHeight * 0.3)};\n                init = true;\n            }\n            long start = System.currentTimeMillis();\n            draw();\n            long end = System.currentTimeMillis();\n            try {\n                if (end - start < 50)\n                    Thread.sleep(50 - (end - start));\n            } catch (Exception e) {\n                Log.e(TAG, \"run \" + e.toString());\n            }\n            if (!startGame) {\n                startGame = true;\n                isRunning = false;\n            }\n        }\n    }", "timestamp": "2022-11-10T15:18:39.844014Z", "repo_name": "AndroidCourseTeam/AndroidHomework", "path": "/app/src/main/java/com/nankai/myflappybird/GameView.java", "source": "the-stack-v2", "method_name": "run", "class_name": "GameView", "index": 738, "label": 1}
{"input": "@Override\n    public String toString() {\n        return \"UserDTO{\" +\n            \"login='\" + login + '\\'' +\n            \", firstName='\" + firstName + '\\'' +\n            \", lastName='\" + lastName + '\\'' +\n            \", email='\" + email + '\\'' +\n            \", imageUrl='\" + imageUrl + '\\'' +\n            \"login='\"1 + activated +\n            \"login='\"2 + langKey + '\\'' +\n            \"login='\"4 + createdBy +\n            \"login='\"5 + createdDate +\n            \"login='\"6 + lastModifiedBy + '\\'' +\n            \"login='\"8 + lastModifiedDate +\n            \"login='\"9 + authorities +\n            '\\''0;\n    }", "timestamp": "2021-01-23T01:40:32.544847Z", "repo_name": "Topolev/DistributionNetwork_2017_05_31", "path": "/src/main/java/by/distributionnetwork/service/dto/UserDTO.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "UserDTO", "index": 739, "label": 1}
{"input": "public final boolean mo205f(String str, String str2) {\n        boolean z;\n        List<String> list = this.f425b.get(str2);\n        if (list != null) {\n            C0119e2.m395b(str).mo254c();\n            z = list.remove(str);\n        } else {\n            z = false;\n        }\n        if (list == null || list.isEmpty()) {\n            m428o(str2);\n        } else {\n            this.f425b.put(str2, list);\n            m418d(str2, list, \".YFlurrySenderIndex.info.\");\n        }\n        return z;\n    }", "timestamp": "2023-02-23T06:37:03.730470Z", "repo_name": "alissonlauffer/via-browser-dump", "path": "/app/src/main/java/com/flurry/sdk/C0136f2.java", "source": "the-stack-v2", "method_name": "mo205f", "class_name": "C0136f2", "index": 740, "label": 1}
{"input": "@Override\n\tpublic List<ExperevaluateDO> detailList(Map<String, Object> map){\n\t\treturn experevaluateDao.detailList(map);\n\t}", "timestamp": "2022-09-11T09:39:11.970942Z", "repo_name": "iamfine099/mia", "path": "/src/main/java/com/bootdo/mia/service/impl/ExperevaluateServiceImpl.java", "source": "the-stack-v2", "method_name": "detailList", "class_name": "ExperevaluateServiceImpl", "index": 741, "label": 1}
{"input": "@OnProbe(\n            namespace = \"java.net.socket\",\n            name = \"bind-return\"\n    )\n    public static void onBindReturn() {\n        if (sockAddr != null) {\n            println(\"server socket bind \" + sockAddr);\n            sockAddr = null;\n        }\n    }", "timestamp": "2023-01-11T23:12:23.622700Z", "repo_name": "HenryChenV/hello-java", "path": "/hello-btrace/src/main/java/samples/SocketTracker1.java", "source": "the-stack-v2", "method_name": "onBindReturn", "class_name": "SocketTracker1", "index": 742, "label": 1}
{"input": "@Override\n      public UpdateAvailability setAccessToken(java.lang.String accessToken) {\n        return (UpdateAvailability) super.setAccessToken(accessToken);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setAccessToken", "class_name": "UpdateAvailability", "index": 743, "label": 1}
{"input": "public void launchProfile(View view) {\n        Intent intent = new Intent(UploadActivity.this, ProfileActivity.class);\n        startActivity(intent);\n    }", "timestamp": "2020-08-03T03:29:17.700731Z", "repo_name": "SunilKeshri1998/StuHub", "path": "/app/src/main/java/com/decimals/stuhub/UploadActivity.java", "source": "the-stack-v2", "method_name": "launchProfile", "class_name": "UploadActivity", "index": 744, "label": 1}
{"input": "public void setHarvestLogManager(HarvestLogManager harvestLogManager) {\n\t\tthis.harvestLogManager = harvestLogManager;\n\t}", "timestamp": "2021-07-19T04:32:07.834152Z", "repo_name": "WebCuratorTool/webcurator-webapp", "path": "/src/main/java/org/webcurator/ui/target/controller/LogRetrieverController.java", "source": "the-stack-v2", "method_name": "setHarvestLogManager", "class_name": "LogRetrieverController", "index": 745, "label": 1}
{"input": "private void stopHeartbeatTimer() {\r\n        if (heartbeatTimer != null && !heartbeatTimer.isCancelled()) {\r\n            try {\r\n                heartbeatTimer.cancel(true);\r\n                scheduled.purge();\r\n            } catch (Throwable e) {\r\n                if (logger.isWarnEnabled()) {\r\n                    logger.warn(e.getMessage(), e);\r\n                }\r\n            }\r\n        }\r\n        heartbeatTimer = null;\r\n    }", "timestamp": "2021-05-10T13:47:01.148671Z", "repo_name": "archerda/dubbo", "path": "/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/header/HeaderExchangeClient.java", "source": "the-stack-v2", "method_name": "stopHeartbeatTimer", "class_name": "HeaderExchangeClient", "index": 746, "label": 1}
{"input": "public final void setAuthorAvatarUrl(String authorAvatarUrl) {\n        this.authorAvatarUrl = authorAvatarUrl;\n    }", "timestamp": "2016-09-15T02:06:20.854798Z", "repo_name": "abrysov/Doctor", "path": "/src/com/evs/doctor/model/Publication.java", "source": "the-stack-v2", "method_name": "setAuthorAvatarUrl", "class_name": "Publication", "index": 747, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n\tpublic ActionForward toDjjcView(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\t\tString APPLICATIONID = ParamUtil.get(request, \"APPLICATIONID\");\n\t\tMap params = new HashMap();\n\t\tParamUtil.putStr2Map(request, \"APPLICATIONID\", params);\n\t\tMap entry = zfdjService.djjcload(APPLICATIONID);\n\n\t\trequest.setAttribute(\"rst\", entry);\n\t\treturn mapping.findForward(\"djjcview\");\n\t}", "timestamp": "2021-01-12T15:41:00.492001Z", "repo_name": "MoonLuckSir/MoonRepository", "path": "/src/java/com/yitong/app/action/judicial/dxzpzfdj/ZfdjAction.java", "source": "the-stack-v2", "method_name": "toDjjcView", "class_name": "ZfdjAction", "index": 748, "label": 1}
{"input": "@Override\n    public String[] findParameters() {\n\n        synchronized (parameters) {\n            String results[] = new String[parameters.size()];\n            return (parameters.keySet().toArray(results));\n        }\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "findParameters", "class_name": "StandardContext", "index": 749, "label": 1}
{"input": "public LabourSubContractor addLabourSubContractor(LabourSubContractor labourSubContractor) {\r\n\t\tgetLabourSubContractors().add(labourSubContractor);\r\n\t\tlabourSubContractor.setSubContractor(this);\r\n\r\n\t\treturn labourSubContractor;\r\n\t}", "timestamp": "2020-06-21T19:31:46.654192Z", "repo_name": "uvaisTrivecta/ConstructionApp", "path": "/AttendenceTracker-0.0.1-SNAPSHOT/src/main/java/com/trivecta/attendencetracker/model/entity/SubContractor.java", "source": "the-stack-v2", "method_name": "addLabourSubContractor", "class_name": "SubContractor", "index": 750, "label": 1}
{"input": "public static void boost(int a) {\n\n        \n        \n        \n        \n        \n\n        String passedA = Integer.toString(a);\n        System.out.println(\"number that is passed \" + passedA);\n        int[] number = new int[passedA.length()];\n\n        \n        \n        \n        \n        for (int i = (passedA.length() - 1); i >= 0; i--) {\n\n            number[i] = a % 10;\n            a = a / 10;\n\n\n            if (number[i] == 9) {\n                number[i] = 0;\n            } else {\n                number[i] += 1;\n            }\n        }\n\n        for (int built : number)\n            System.out.print(built);\n    }", "timestamp": "2021-01-13T13:41:35.764196Z", "repo_name": "Emileen/PracticeProblemsAssignment", "path": "/src/com/theironyard/charlotte/Main.java", "source": "the-stack-v2", "method_name": "boost", "class_name": "Main", "index": 751, "label": 1}
{"input": "@java.lang.Override\n  public com.google.cloud.securitycenter.v1.Cvssv3.Scope getScope() {\n    @SuppressWarnings(\"deprecation\")\n    com.google.cloud.securitycenter.v1.Cvssv3.Scope result =\n        com.google.cloud.securitycenter.v1.Cvssv3.Scope.valueOf(scope_);\n    return result == null ? com.google.cloud.securitycenter.v1.Cvssv3.Scope.UNRECOGNIZED : result;\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "getScope", "class_name": "Cvssv3", "index": 752, "label": 1}
{"input": "@Override\n    protected void onStop() {\n        super.onStop();\n        getDelegate().onStop();\n    }", "timestamp": "2020-04-24T04:10:40.106278Z", "repo_name": "lyriarte/tripmaster", "path": "/app/src/main/java/org/thingagora/tripmaster/AppCompatPreferenceActivity.java", "source": "the-stack-v2", "method_name": "onStop", "class_name": "AppCompatPreferenceActivity", "index": 753, "label": 1}
{"input": "public MusicShow getMusicShow(int code){\r\n        for (MusicShow s: musicShows)\r\n            if (s.getCode() == code)\r\n                return s;            \r\n        return null;\r\n    }", "timestamp": "2020-12-10T11:44:00.822663Z", "repo_name": "theodians/MusicShowEmulator", "path": "/ΓΕ2/Java Classes/musicshow/TvShowsCompany.java", "source": "the-stack-v2", "method_name": "getMusicShow", "class_name": "TvShowsCompany", "index": 754, "label": 1}
{"input": "@Override\r\n\tprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\r\n\t\tresp.setStatus(HttpServletResponse.SC_OK);\r\n\t\tString name = req.getParameter(\"name\");\r\n\t\tString path = Environment.getExternalStorageDirectory().getAbsolutePath() + \"/\" + \"WebInfos/\" + name;\r\n\t\tFile file = new File(path);\r\n\t\tlong length = file.length();\r\n\t\tresp.setContentLength((int) length);\r\n\t\tOutputStream out = resp.getOutputStream();\r\n\t\tFileInputStream stream = new FileInputStream(file);\r\n\t\tint count = -1;\r\n\t\tbyte[] buffer = new byte[1024];\r\n\t\twhile ((count = stream.read(buffer)) != -1) {\r\n\t\t\tout.write(buffer, 0, count);\r\n\t\t\tout.flush();\r\n\t\t}\r\n\t\tstream.close();\r\n\t\tout.close();\r\n\t}", "timestamp": "2020-04-09T20:07:09.095315Z", "repo_name": "oynix/WebServer", "path": "/src/com/google/servlet/ImageServlet.java", "source": "the-stack-v2", "method_name": "doGet", "class_name": "ImageServlet", "index": 755, "label": 1}
{"input": "@Override\n    public VB getDataBinder(int viewType) {\n        return getDataBinderBinder(getEnumFromOrdinal(viewType));\n    }", "timestamp": "2021-01-04T15:36:04.131812Z", "repo_name": "H4NG-MAN/dynamic-support", "path": "/dynamic-support/src/main/java/com/pranavpandey/android/dynamic/support/recyclerview/adapter/DynamicTypeBinderAdapter.java", "source": "the-stack-v2", "method_name": "getDataBinder", "class_name": "DynamicTypeBinderAdapter", "index": 756, "label": 1}
{"input": "@Test\n    @Transactional\n    public void updateNonExistingUnit() throws Exception {\n        int databaseSizeBeforeUpdate = unitRepository.findAll().size();\n\n        \n\n        \n        restUnitMockMvc.perform(put(\"/api/units\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(unit)))\n            .andExpect(status().isBadRequest());\n\n        \n        List<Unit> unitList = unitRepository.findAll();\n        assertThat(unitList).hasSize(databaseSizeBeforeUpdate);\n    }", "timestamp": "2022-12-21T12:20:33.195209Z", "repo_name": "bahmetpalanci/katilimcivatandas", "path": "/src/test/java/com/municipality/katilimcivatandas/web/rest/UnitResourceIT.java", "source": "the-stack-v2", "method_name": "updateNonExistingUnit", "class_name": "UnitResourceIT", "index": 757, "label": 1}
{"input": "@Override\n        public Iterable<Integer> get(ChangeData input, FillArgs args)\n            throws OrmException {\n          Change c = input.change();\n          if (c == null) {\n            return ImmutableSet.of();\n          }\n          Set<Integer> r = Sets.newHashSet();\n          if (!args.allowsDrafts && c.getStatus() == Change.Status.DRAFT) {\n            return r;\n          }\n          for (PatchSetApproval a : input.approvals().values()) {\n            r.add(a.getAccountId().get());\n          }\n          return r;\n        }", "timestamp": "2021-01-16T21:01:21.667768Z", "repo_name": "runt18/gerrit", "path": "/gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeField.java", "source": "the-stack-v2", "method_name": "get", "class_name": "ChangeField", "index": 758, "label": 1}
{"input": "public void testBug137087g_CamelCaseSamePartCount() throws CoreException {\n\tint matchRule = SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH;\n\tString pattern = \"clonenotsupportedex\";\n\tsearch(pattern, TYPE, DECLARATIONS, matchRule);\n\t\n\tassertSearchResults(\"\");\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug137087g_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 759, "label": 1}
{"input": "public void attach(Context context2) {\n        if (this.listening) {\n            Log.m44w(TAG, \"Connectivity listener is already attached\");\n        } else if (this.context == null) {\n            this.context = context2;\n            context2.registerReceiver(this.receiver, this.connectivityIntentFilter);\n            this.listening = true;\n        } else {\n            throw new IllegalStateException(\"Context was not cleaned up from last release.\");\n        }\n    }", "timestamp": "2022-06-25T19:00:59.818761Z", "repo_name": "AlexKohanim/QuickReturn", "path": "/sources/p006ti/modules/titanium/network/TiNetworkListener.java", "source": "the-stack-v2", "method_name": "attach", "class_name": "TiNetworkListener", "index": 760, "label": 1}
{"input": "@Test\n    public void testInvokeOnItem() {\n        AtomicInteger res = new AtomicInteger();\n\n        int r = one.onItem().invoke(res::set)\n                .await().indefinitely();\n\n        assertThat(r).isEqualTo(1);\n        assertThat(res).hasValue(1);\n    }", "timestamp": "2022-11-30T09:32:52.267405Z", "repo_name": "lamtrhieu/smallrye-mutiny", "path": "/implementation/src/test/java/io/smallrye/mutiny/operators/UniOnItemInvokeTest.java", "source": "the-stack-v2", "method_name": "testInvokeOnItem", "class_name": "UniOnItemInvokeTest", "index": 761, "label": 1}
{"input": "@Override\n  public synchronized void reducePermitLimit(long reduction) {\n    checkNotNegative(reduction);\n    Preconditions.checkState(limit - reduction > 0, \"permit limit underflow\");\n    availablePermits -= reduction;\n    limit -= reduction;\n  }", "timestamp": "2023-05-19T13:28:27.276504Z", "repo_name": "arithmetic1728/gax-java", "path": "/gax/src/main/java/com/google/api/gax/batching/BlockingSemaphore.java", "source": "the-stack-v2", "method_name": "reducePermitLimit", "class_name": "BlockingSemaphore", "index": 762, "label": 1}
{"input": "public void onVisibilityChanged(View changedView, int visibility) {\n        Log.d(TAG, \"onVisibilityChanged: \" + visibility + \",\" + this.mMiniPlayBtn.getVisibility());\n        super.onVisibilityChanged(changedView, visibility);\n        if (visibility != 0 || this.playerState != 2) {\n            pause();\n        } else if (isRealPause() || isComplete()) {\n            pause();\n        } else {\n            resume();\n        }\n    }", "timestamp": "2020-11-25T21:02:17.790224Z", "repo_name": "pk1z/wladimir-computin-FimiX8-RE-App", "path": "/sources/com/fimi/album/widget/CustomVideoView.java", "source": "the-stack-v2", "method_name": "onVisibilityChanged", "class_name": "CustomVideoView", "index": 763, "label": 1}
{"input": "private String setTimeFormatter(int timeMs) {\n        int totalSeconds = timeMs / 1000;\n        int seconds = totalSeconds % 60;\n        int minutes = (totalSeconds / 60) % 60;\n        int hours = totalSeconds / 3600;\n        this.mFormatBuilder.setLength(0);\n        if (hours > 0) {\n            return this.mFormatter.format(\"%d:%02d:%02d\", new Object[]{Integer.valueOf(hours), Integer.valueOf(minutes), Integer.valueOf(seconds)}).toString();\n        }\n        return this.mFormatter.format(\"%02d:%02d\", new Object[]{Integer.valueOf(minutes), Integer.valueOf(seconds)}).toString();\n    }", "timestamp": "2020-11-25T21:02:17.790224Z", "repo_name": "pk1z/wladimir-computin-FimiX8-RE-App", "path": "/sources/com/fimi/album/widget/CustomVideoView.java", "source": "the-stack-v2", "method_name": "setTimeFormatter", "class_name": "CustomVideoView", "index": 764, "label": 1}
{"input": "private static String c(String paramString)\n  {\n    try\n    {\n      MessageDigest localMessageDigest = MessageDigest.getInstance(\"SHA-1\");\n      localMessageDigest.update(paramString.getBytes(\"iso-8859-1\"), 0, paramString.length());\n      paramString = Base64.encodeToString(localMessageDigest.digest(), 2);\n      return paramString;\n    }\n    catch (Exception paramString) {}\n    return null;\n  }", "timestamp": "2020-05-29T08:54:50.751842Z", "repo_name": "waterwitness/dazhihui", "path": "/classes/com/d/a/c/bz.java", "source": "the-stack-v2", "method_name": "c", "class_name": "bz", "index": 765, "label": 1}
{"input": "public Criteria andIntegralSourceLike(String value) {\n            addCriterion(\"integral_source like\", value, \"integralSource\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andIntegralSourceLike", "class_name": "GeneratedCriteria", "index": 766, "label": 1}
{"input": "@Override\n\tpublic List<Category> listByStore(MerchantStore store)\n\t\t\tthrows ServiceException {\n\n\t\ttry {\n\t\t\treturn categoryDao.listByStore(store);\n\t\t} catch (Exception e) {\n\t\t\tthrow new ServiceException(e);\n\t\t}\n\t}", "timestamp": "2021-05-11T22:33:13.512901Z", "repo_name": "joshLV/laVetrina", "path": "/sm-core/src/main/java/com/salesmanager/core/business/catalog/category/service/CategoryServiceImpl.java", "source": "the-stack-v2", "method_name": "listByStore", "class_name": "CategoryServiceImpl", "index": 767, "label": 1}
{"input": "private void checkTableMacroInModel(Class clazz) {\n    assertWithMacro(clazz)\n        .query(\"select * from table(\\\"adhoc\\\".\\\"View\\\"('(30)'))\")\n        .returns(\"\"\n            + \"c=1\\n\"\n            + \"c=3\\n\"\n            + \"c=30\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "checkTableMacroInModel", "class_name": "JdbcTest", "index": 768, "label": 1}
{"input": "@Test\n\tvoid testGetSubgroups() {\n\t\tassert List.of(leaf1, leaf2, leaf3).equals(group1.getSubgroups());\n\t\tassert List.of(leaf4, leaf5).equals(group2.getSubgroups());\n\t\t\n\t\tassert List.of(group1, group2).equals(group3.getSubgroups());\n\t}", "timestamp": "2023-06-17T03:00:53.904887Z", "repo_name": "AdiBad/drawit", "path": "/drawit/tests/shapegroups2/ShapeGroupTest_Nonleaves_2Levels.java", "source": "the-stack-v2", "method_name": "testGetSubgroups", "class_name": "ShapeGroupTest_Nonleaves_2Levels", "index": 769, "label": 1}
{"input": "@Override\n        public String getContextPath() {\n            return sc.getContextPath();\n        }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "getContextPath", "class_name": "NoPluggabilityServletContext", "index": 770, "label": 1}
{"input": "@Override\n    public String toString() {\n        return \"Tag{\" +\n                \"id=\" + id +\n                \", name='\" + name + '\\'' +\n                '}';\n    }", "timestamp": "2022-04-09T21:17:47.397633Z", "repo_name": "coder-yyz/spring-boot-blog", "path": "/src/main/java/com/example/blog/po/Tag.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "Tag", "index": 771, "label": 1}
{"input": "public static String getFirstLetter(String chinese) {\n\t\tif (chinese == null || chinese.trim().length() == 0) {\n\t\t\treturn \"\";\n\t\t}\n\t\tString chineseTemp = chinese;\n\t\tchinese = conversionStr(chinese, \"GB2312\", \"ISO8859-1\");\n\n\t\tif (chinese.length() > 1) {\n\t\t\t\n\t\t\tint li_SectorCode = (int) chinese.charAt(0); \n\t\t\tint li_PositionCode = (int) chinese.charAt(1); \n\t\t\tli_SectorCode = li_SectorCode - 160;\n\t\t\tli_PositionCode = li_PositionCode - 160;\n\t\t\tint li_SecPosCode = li_SectorCode * 100 + li_PositionCode; \n\t\t\tif (li_SecPosCode > 1600 && li_SecPosCode < 5590) {\n\t\t\t\tfor (int i = 0; i < 23; i++) {\n\t\t\t\t\tif (li_SecPosCode >= li_SecPosValue[i] && li_SecPosCode < li_SecPosValue[i + 1]) {\n\t\t\t\t\t\tchinese = lc_FirstLetter[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tchinese = matchPinYin(chinese);\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tif (chinese.equals(\"?\")) {\n\t\t\tchinese = matchPinYin(chineseTemp, false);\n\t\t}\n\n\t\treturn chinese;\n\t}", "timestamp": "2022-07-05T04:13:39.059021Z", "repo_name": "jackyang92/hrm_parent", "path": "/hrm_basic_parent/hrm_basic_util/src/main/java/com/ymy/hrm/util/LetterUtil.java", "source": "the-stack-v2", "method_name": "getFirstLetter", "class_name": "LetterUtil", "index": 772, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n\tpublic List<Contact> read() {\n\t\treturn session.createQuery(\"from Contact\").list();\n\t}", "timestamp": "2021-01-01T19:24:50.872885Z", "repo_name": "d33tah/studies", "path": "/sem6/podstawy_jezyka_java/java-crud-homework/src/main/java/crud/crud/ContactManager.java", "source": "the-stack-v2", "method_name": "read", "class_name": "ContactManager", "index": 773, "label": 1}
{"input": "@Override\n                public List<String> getNonIndexableKeys(Context context) {\n                    List<String> keys = super.getNonIndexableKeys(context);\n                    keys.add(KEY_DISPLAY_SIZE);\n                    keys.add(WallpaperPreferenceController.KEY_WALLPAPER);\n                    keys.add(KEY_AMBIENT_DISPLAY);\n                    return keys;\n                }", "timestamp": "2023-05-21T08:02:23.364495Z", "repo_name": "BPI-SINOVOIP/BPI-A64-Android8", "path": "/android/packages/apps/Settings/src/com/android/settings/DisplaySettings.java", "source": "the-stack-v2", "method_name": "getNonIndexableKeys", "class_name": "DisplaySettings", "index": 774, "label": 1}
{"input": "public ClassDeclarationContext classDeclaration() {\n\t\t\treturn getRuleContext(ClassDeclarationContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "classDeclaration", "class_name": "AnnotationTypeElementRestContext", "index": 775, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n\tpublic ActionForward toZfTaskList(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\n\t\tMap params = new HashMap();\n\t\tParamUtil.putStr2Map(request, \"APPLICATIONID\", params);\n\t\tParamUtil.putStr2Map(request, \"STATUS\", params);\n\t\tParamUtil.putStr2Map(request, \"ksr\", params);\n\t\tParamUtil.putStr2Map(request, \"jsr\", params);\n\t\tint pageNo = ParamUtil.getInt(request, \"pageNo\", 1);\n\t\tIListPage page = zfdjService.pageQueryZfTask(params, pageNo);\n\t\trequest.setAttribute(\"page\", page);\n\t\treturn mapping.findForward(\"list\");\n\t}", "timestamp": "2021-01-12T15:41:00.492001Z", "repo_name": "MoonLuckSir/MoonRepository", "path": "/src/java/com/yitong/app/action/judicial/dxzpzfdj/ZfdjAction.java", "source": "the-stack-v2", "method_name": "toZfTaskList", "class_name": "ZfdjAction", "index": 776, "label": 1}
{"input": "@Test\n    public void testAddShouldReturn6()  {\n        StringCalculator calculator = new StringCalculator();\n        assertEquals(6, calculator.add(\"1\\n2,3\"));\n    }", "timestamp": "2023-02-01T22:46:50.310071Z", "repo_name": "fahad-israr/TDD-Kata-String-Calculator", "path": "/src/test/java/StringCalculatorTest.java", "source": "the-stack-v2", "method_name": "testAddShouldReturn6", "class_name": "StringCalculatorTest", "index": 777, "label": 1}
{"input": "@Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      SimpleNode simpleNode0 = new SimpleNode((-1614038759));\n      \n      try { \n        simpleNode0.jjtGetChild((-1614038759));\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         \n         \n         \n         verifyException(\"com.soops.CEN4010.JMCA.JParser.SimpleNode\", e);\n      }\n  }", "timestamp": "2023-04-17T20:05:40.560943Z", "repo_name": "bellmit/termite-replication", "path": "/tests/time/mosa/tests/s1007/19_jmca/evosuite-tests/com/soops/CEN4010/JMCA/JParser/SimpleNode_ESTest.java", "source": "the-stack-v2", "method_name": "test07", "class_name": "SimpleNode_ESTest", "index": 778, "label": 1}
{"input": "private boolean checkDate(BaseDTObject obj) {\n\t\tlong ref = System.currentTimeMillis()-24*60*60*1000;\n\t\tif (obj.getFromTime() == null || obj.getFromTime() == 0) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj.getToTime() == null || obj.getToTime() == 0) {\n\t\t\treturn true;\n\t\t}\t\t\n\t\treturn (obj.getFromTime() > ref || obj.getToTime() > ref);\n\t}", "timestamp": "2021-01-17T13:13:13.645681Z", "repo_name": "smartcommunitylab/smartcampus.vas.roveretoexplorer.web", "path": "/src/main/java/eu/trentorise/smartcampus/roveretoexplorer/controller/SyncController.java", "source": "the-stack-v2", "method_name": "checkDate", "class_name": "SyncController", "index": 779, "label": 1}
{"input": "@java.lang.Override\n    public com.google.cloud.securitycenter.v1.Cvssv3.Impact getAvailabilityImpact() {\n      @SuppressWarnings(\"deprecation\")\n      com.google.cloud.securitycenter.v1.Cvssv3.Impact result =\n          com.google.cloud.securitycenter.v1.Cvssv3.Impact.valueOf(availabilityImpact_);\n      return result == null\n          ? com.google.cloud.securitycenter.v1.Cvssv3.Impact.UNRECOGNIZED\n          : result;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "getAvailabilityImpact", "class_name": "Builder", "index": 780, "label": 1}
{"input": "public java.lang.String getRemove() {\n    java.lang.Object ref = \"\";\n    if (operationCase_ == 3) {\n      ref = operation_;\n    }\n    if (ref instanceof java.lang.String) {\n      return (java.lang.String) ref;\n    } else {\n      com.google.protobuf.ByteString bs = \n          (com.google.protobuf.ByteString) ref;\n      java.lang.String s = bs.toStringUtf8();\n      if (operationCase_ == 3) {\n        operation_ = s;\n      }\n      return s;\n    }\n  }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "getRemove", "class_name": "FeedItemOperation", "index": 781, "label": 1}
{"input": "public Criteria andIdLike(String value) {\r\n            addCriterion(\"id like\", value, \"id\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andIdLike", "class_name": "GeneratedCriteria", "index": 782, "label": 1}
{"input": "@Test\n  public void case80() {\n    int[] revenues = { -469, 138, 400, -909, -557, -466, -991, -962, -779, -553 };\n    int k = 3;\n    assertEquals(0.6203703703703999, mergersdivtwo.findMaximum(revenues, k), DELTA * 0.6203703703703999);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case80", "class_name": "MergersDivTwoTest", "index": 783, "label": 1}
{"input": "public void complete() {\n        if (this.mTableInserted) {\n            mergeInsertedTables();\n            this.mTableInserted = false;\n        }\n        if (this.autoFillEmptyCells) {\n            fillEmptyMatrixCells();\n        }\n    }", "timestamp": "2023-03-09T12:14:38.824373Z", "repo_name": "Sluckson/copyOavct", "path": "/sources/com/lowagie/text/Table.java", "source": "the-stack-v2", "method_name": "complete", "class_name": "Table", "index": 784, "label": 1}
{"input": "public static void main(String[] args) throws IOException {\n        var input = Files.readAllLines(Paths.get(\"input24.txt\"));\n\n        part01(input);\n        part02(input);\n    }", "timestamp": "2023-02-02T02:35:42.733203Z", "repo_name": "zskamljic/aoc-2020", "path": "/src/Day24.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Day24", "index": 785, "label": 1}
{"input": "public Authentication getAuthentication(String token) {\n\t\tUserDetails userDetails = this.userDetailsService.loadUserByUsername(getUsername(token));\n\t\treturn new UsernamePasswordAuthenticationToken(userDetails, \"\" , userDetails.getAuthorities());\n\t}", "timestamp": "2022-12-16T09:58:05.318887Z", "repo_name": "alexsandrodeveloper/samsung-backend", "path": "/src/main/java/br/com/samsung/security/jwt/JwtTokenProvider.java", "source": "the-stack-v2", "method_name": "getAuthentication", "class_name": "JwtTokenProvider", "index": 786, "label": 1}
{"input": "@Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        \n        getMenuInflater().inflate(R.menu.menu_image_select, menu);\n        return true;\n    }", "timestamp": "2020-04-12T22:38:44.941612Z", "repo_name": "l1000965431/moneyclient", "path": "/app/src/main/java/com/dragoneye/wjjt/activity/base/ImageMulSelectedActivity.java", "source": "the-stack-v2", "method_name": "onCreateOptionsMenu", "class_name": "ImageMulSelectedActivity", "index": 787, "label": 1}
{"input": "public void SetTextMarginRight( int _right ){\n\t\taadapter.SetTextMarginRight(_right);\n\t\taadapter.notifyDataSetChanged();\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "SetTextMarginRight", "class_name": "jListView", "index": 788, "label": 1}
{"input": "private static void createContentRow(List<?> dataList, Map<String, String> titleMap) {\n        try {\n            int i=0;\n            for (Object obj : dataList) {\n                SXSSFRow textRow = sheet.createRow(CONTENT_START_POSITION + i);\n                int j = 0;\n                for (String entry : titleMap.keySet()) {\n                    String method = \"get\" + entry.substring(0, 1).toUpperCase() + entry.substring(1);\n                    Method m = obj.getClass().getMethod(method, null);\n                    Object o =m.invoke(obj, null);\n                    String value = null;\n                    if (o != null){\n                       value = o.toString();\n                    }\n                   \n                   SXSSFCell textcell = textRow.createCell(j);\n                    textcell.setCellValue(value);\n                    j++;\n                }\n                i++;\n            }\n\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n        }\n    }", "timestamp": "2022-12-22T13:26:20.663306Z", "repo_name": "xuhongda/load-service", "path": "/load-service-util/src/main/java/com/xu/util/Excel/ExportExcel.java", "source": "the-stack-v2", "method_name": "createContentRow", "class_name": "ExportExcel", "index": 789, "label": 1}
{"input": "public String getNextLinkThenDelete() throws SQLException {\n        String link = getNextLinkFromDB(\"select LINK from LINKS_TO_BE_PROCESSED LIMIT 1\");\n        if (link != null) {\n            insertOrDeleteFromDB(\"delete from LINKS_TO_BE_PROCESSED where LINK = ?\", link);\n        }\n        return link;\n    }", "timestamp": "2023-07-05T20:02:21.375809Z", "repo_name": "sgz886/news-crawler", "path": "/src/main/java/com/github/sgz886/JdbcCrawlerDao.java", "source": "the-stack-v2", "method_name": "getNextLinkThenDelete", "class_name": "JdbcCrawlerDao", "index": 790, "label": 1}
{"input": "@Override\n    public boolean isIncludeJsr303Annotations() {\n        return includeJsr303Annotations;\n    }", "timestamp": "2020-04-03T18:05:28.604343Z", "repo_name": "brentsowers1/jsonschema2pojo", "path": "/jsonschema2pojo-maven-plugin/src/main/java/org/jsonschema2pojo/maven/Jsonschema2PojoMojo.java", "source": "the-stack-v2", "method_name": "isIncludeJsr303Annotations", "class_name": "Jsonschema2PojoMojo", "index": 791, "label": 1}
{"input": "@Override\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        setContentView(R.layout.activity_tabhost);\n\n        initTab();\n    }", "timestamp": "2020-07-03T16:52:09.794501Z", "repo_name": "truongngoclinh/Samples", "path": "/Samples/app/src/main/java/samples/linhtruong/com/app/tabs/TabHostActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "TabHostActivity", "index": 792, "label": 1}
{"input": "@Override\n      public UpdateAvailability setOauthToken(java.lang.String oauthToken) {\n        return (UpdateAvailability) super.setOauthToken(oauthToken);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setOauthToken", "class_name": "UpdateAvailability", "index": 793, "label": 1}
{"input": "@Override\n    public void registerResource(Resource resource) {\n        DataSourceProxy dataSourceProxy = (DataSourceProxy) resource;\n        dataSourceCache.put(dataSourceProxy.getResourceId(), dataSourceProxy);\n        super.registerResource(dataSourceProxy);\n    }", "timestamp": "2023-09-05T08:43:00.545058Z", "repo_name": "bellmit/source-springcloud", "path": "/component/seata/rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceManager.java", "source": "the-stack-v2", "method_name": "registerResource", "class_name": "DataSourceManager", "index": 794, "label": 1}
{"input": "public static void main(String[] args) {\r\n\t\tString a=new java.util.Scanner(System.in).next();\r\n\t\tint n=a.length()/2,p=Integer.parseInt(a.substring(0,n)),q=Integer.parseInt(a.substring(n)),i,j,m=1;\r\n\t\t\r\n\t\tSystem.out.println();\r\n\t}", "timestamp": "2023-08-17T04:39:41.236707Z", "repo_name": "nn98/Algorithm", "path": "/src/BaekJoon/P18406.java", "source": "the-stack-v2", "method_name": "main", "class_name": "P18406", "index": 795, "label": 1}
{"input": "@Override\n    public String toString() {\n        StringBuilder string = new StringBuilder();\n        string.append(\"size=\").append(size).append(\",[\");\n        for (int i = 0; i < size; i++) {\n            if (i != 0){\n                string.append(',');\n            }\n            string.append(elements[i]);\n        }\n        string.append(']');\n\n        return string.toString();\n    }", "timestamp": "2020-04-18T01:46:02.912154Z", "repo_name": "appbanana/MachineLearningAction", "path": "/data-structure/xmg/第一季/day05-栈/src/com/jqc/list/ArrayList.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "ArrayList", "index": 796, "label": 1}
{"input": "@Override\n    public void setContainerSciFilter(String containerSciFilter) {\n        this.containerSciFilter = containerSciFilter;\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setContainerSciFilter", "class_name": "StandardContext", "index": 797, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByDateAddedIsLessThanOrEqualToSomething() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        \n        defaultTransactionShouldBeFound(\"dateAdded.lessThanOrEqual=\" + DEFAULT_DATE_ADDED);\n\n        \n        defaultTransactionShouldNotBeFound(\"dateAdded.lessThanOrEqual=\" + SMALLER_DATE_ADDED);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByDateAddedIsLessThanOrEqualToSomething", "class_name": "TransactionResourceIT", "index": 798, "label": 1}
{"input": "@Override\n  public OLiveQueryMonitor live(String query, OLiveQueryResultListener listener, Map<String, ?> args) {\n    checkOpenness();\n    checkIfActive();\n\n    OLiveQueryListenerV2 queryListener = new LiveQueryListenerImpl(listener, query, this, (Map) args);\n    ODatabaseDocumentInternal dbCopy = this.copy();\n    this.activateOnCurrentThread();\n    OLiveQueryMonitor monitor = new OLiveQueryMonitorEmbedded(queryListener.getToken(), dbCopy);\n    return monitor;\n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "live", "class_name": "ODatabaseDocumentEmbedded", "index": 799, "label": 1}
{"input": "public Builder clearUpdate() {\n      if (updateBuilder_ == null) {\n        if (operationCase_ == 2) {\n          operationCase_ = 0;\n          operation_ = null;\n          onChanged();\n        }\n      } else {\n        if (operationCase_ == 2) {\n          operationCase_ = 0;\n          operation_ = null;\n        }\n        updateBuilder_.clear();\n      }\n      return this;\n    }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "clearUpdate", "class_name": "Builder", "index": 800, "label": 1}
{"input": "@BeforeClass\n    public static void setupAndConnection()\n    {\n        tagDao = DaoFactory.getTagDao();\n        tag = new Tag();\n        tag.setTag(\"one\");\n    }", "timestamp": "2021-01-10T14:17:46.140070Z", "repo_name": "borntowinn/CRM", "path": "/jdbc/src/test/java/com/becomejavasenior/dao/jdbc/impl/TagDaoImplTest.java", "source": "the-stack-v2", "method_name": "setupAndConnection", "class_name": "TagDaoImplTest", "index": 801, "label": 1}
{"input": "@Test\n    public void testScrubOneRowWithCorruptedKey() throws IOException, ExecutionException, InterruptedException, ConfigurationException\n    {\n        \n        assumeTrue(!Boolean.parseBoolean(System.getProperty(\"cassandra.test.compression\", \"false\")));\n\n        CompactionManager.instance.disableAutoCompaction();\n        Keyspace keyspace = Keyspace.open(KEYSPACE);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);\n        cfs.clearUnsafe();\n\n        \n        fillCF(cfs, 4);\n        assertOrderedAll(cfs, 4);\n\n        SSTableReader sstable = cfs.getLiveSSTables().iterator().next();\n        overrideWithGarbage(sstable, 0, 2);\n\n        CompactionManager.instance.performScrub(cfs, false, true, 2);\n\n        \n        assertOrderedAll(cfs, 4);\n    }", "timestamp": "2022-05-31T23:56:44.066378Z", "repo_name": "ealonsodb/cassandra", "path": "/test/unit/org/apache/cassandra/db/ScrubTest.java", "source": "the-stack-v2", "method_name": "testScrubOneRowWithCorruptedKey", "class_name": "ScrubTest", "index": 802, "label": 1}
{"input": "public void createCategory(DQCategory category) {\n        if (CategoryType.REGEX.equals(category.getType())) {\n            insertOrUpdateRegexCategory(category);\n        }\n        category.setModified(true);\n        ensureMetadataIndexAccess();\n        customMetadataIndexAccess.createCategory(category);\n        customMetadataIndexAccess.commitChanges();\n        metadata = customMetadataIndexAccess.readCategoryMedatada();\n    }", "timestamp": "2021-05-01T16:06:31.746782Z", "repo_name": "MarkChappell/data-quality", "path": "/dataquality-semantic/src/main/java/org/talend/dataquality/semantic/api/CustomDictionaryHolder.java", "source": "the-stack-v2", "method_name": "createCategory", "class_name": "CustomDictionaryHolder", "index": 803, "label": 1}
{"input": "private void setUpBug122442d() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b122442/User.java\",\n\t\t\"class Klass {}\\n\" +\n\t\t\"interface Interface {}\\n\" +\n\t\t\"class User {\\n\" +\n\t\t\"    void m() {\\n\" +\n\t\t\"        new Klass() {};\\n\" +\n\t\t\"        new Interface() {};\\n\" +\n\t\t\"    }\\n\" +\n\t\t\"}\\n\" +\n\t\t\"class Sub extends Klass {}\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "setUpBug122442d", "class_name": "JavaSearchBugsTests", "index": 804, "label": 1}
{"input": "@Override\n    public void onBindViewHolder(Adaptador_Almacen.ViewHolder holder, int position) {\n        items.moveToPosition(position);\n        String s;\n\n        \n        s= items.getString(ConsultaAlmacen.RAZONSOCIAL);\n        holder.viewRazonSocial.setText(s);\n\n        s= items.getString(ConsultaAlmacen.DESCRIPCION);\n        holder.viewDescripcion.setText(s);\n\n        s= items.getString(ConsultaAlmacen.LOGO);\n        Glide.with(contexto).load(s).centerCrop().into(holder.viewLogo);\n    }", "timestamp": "2021-01-11T01:50:53.488192Z", "repo_name": "breinergonza/conexion_serv", "path": "/app/src/main/java/com/feedhenry/armark/Adaptadores/Adaptador_Almacen.java", "source": "the-stack-v2", "method_name": "onBindViewHolder", "class_name": "Adaptador_Almacen", "index": 805, "label": 1}
{"input": "@Test\n\tpublic void escapeSelector_should_escape_colon() {\n\t\tString escapedSelector = SelectorUtils.escapeSelector(\"must:escape\");\n\t\tassertThat(escapedSelector, is(\"must\\\\:escape\"));\n\t}", "timestamp": "2020-03-28T19:37:01.701292Z", "repo_name": "hjralyc1/seleniumQuery", "path": "/src/test/java/integration/io/github/seleniumquery/by/SelectorsUtilTest.java", "source": "the-stack-v2", "method_name": "escapeSelector_should_escape_colon", "class_name": "SelectorsUtilTest", "index": 806, "label": 1}
{"input": "@RequestMapping(value=\"/authenticate.hr\",method=RequestMethod.POST)\n\tpublic ModelAndView authenticateUser(HttpServletRequest request) throws EmpException{\n\t\tString userName=request.getParameter(\"userName\");\n\t\tString password=request.getParameter(\"password\");\n\t\t\n\t\tSystem.out.println(\"In controller\"+userName+\" \"+password);\n\t\tUser user=new User(userName, password);\n\t\tuser=service.isAuthenticated(user);\n\t\tModelAndView mAndV=new ModelAndView();\n\t\tif(user.isAuthSucc())\n\t\t{\n\t\t\t\n\t\t\tmAndV.addObject(\"pageHead\",\"Main Menu\");\n\t\t\tmAndV.addObject(\"userDetails\",user);\n\t\t\tmAndV.setViewName(\"MainMenu.jsp\");\n\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmAndV.addObject(\"pageHead\",\"userName\"0);\n\t\t\tmAndV.addObject(\"userDetails\",user);\t\n\t\t\tmAndV.setViewName(\"userName\"2);\n\t\t}\n\t\treturn mAndV;\n\t}", "timestamp": "2021-07-08T05:46:33.332583Z", "repo_name": "shivam1113/m4", "path": "/SpringMVC020WebFlow/src/com/cg/hr/controller/Authenticate.java", "source": "the-stack-v2", "method_name": "authenticateUser", "class_name": "Authenticate", "index": 807, "label": 1}
{"input": "public boolean hasDefaultExtension(SketchCode code) {\n     return code.getExtension().equals(getDefaultExtension());\n   }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/7/7_2f542815a58ee55ee03ae89dbab36dfbe50a1841/Sketch/7_2f542815a58ee55ee03ae89dbab36dfbe50a1841_Sketch_s.java", "source": "the-stack-v2", "method_name": "hasDefaultExtension", "class_name": "Sketch", "index": 808, "label": 1}
{"input": "public ItemStack metaExtra(Material m, String ItemName, int Amount, String[] lore) {\r\n\t\t    ItemStack item = new ItemStack(m, Amount);\r\n\t\t    ItemMeta im = item.getItemMeta();\r\n\t\t    im.setDisplayName(ItemName);\r\n\t\t    if(lore != null)\r\n\t\t    \tim.setLore(Arrays.asList(lore));\t\t        \r\n\t\t    item.setItemMeta(im);\r\n\t\t    return item;\r\n\t\t  }", "timestamp": "2022-12-07T16:44:36.838260Z", "repo_name": "namuuu/H.Games", "path": "/H. Games/src/fr/namu/hg/utils/ItemStackUtils.java", "source": "the-stack-v2", "method_name": "metaExtra", "class_name": "ItemStackUtils", "index": 809, "label": 1}
{"input": "public int GetUnionSelector_inScheme()\n    {\n        if(inScheme instanceof TPMS_SIG_SCHEME_RSASSA){return 0x0014; }\n        if(inScheme instanceof TPMS_SIG_SCHEME_RSAPSS){return 0x0016; }\n        if(inScheme instanceof TPMS_SIG_SCHEME_ECDSA){return 0x0018; }\n        if(inScheme instanceof TPMS_SIG_SCHEME_ECDAA){return 0x001A; }\n        if(inScheme instanceof TPMS_SIG_SCHEME_SM2){return 0x001B; }\n        if(inScheme instanceof TPMS_SIG_SCHEME_ECSCHNORR){return 0x001C; }\n        if(inScheme instanceof TPMS_SCHEME_HMAC){return 0x0005; }\n        if(inScheme instanceof TPMS_SCHEME_HASH){return 0x7FFF; }\n        if(inScheme instanceof TPMS_NULL_SIG_SCHEME){return 0x0010; }\n        throw new RuntimeException(\"Unrecognized type\");\n    }", "timestamp": "2021-07-04T22:05:18.745386Z", "repo_name": "kvnmlr/tpm2.0-playground", "path": "/src/tss/tpm/TPM2_NV_Certify_REQUEST.java", "source": "the-stack-v2", "method_name": "GetUnionSelector_inScheme", "class_name": "TPM2_NV_Certify_REQUEST", "index": 810, "label": 1}
{"input": "public int getrandomnumber()\n    {\n        int number = rand.nextInt((3-1) + 1) + 1;\n        return number;\n    }", "timestamp": "2023-05-21T00:55:07.902429Z", "repo_name": "GSabiniPanini/little-cop3330-assignment2", "path": "/src/main/java/oop/assignment2/ex33/base/MagicBall.java", "source": "the-stack-v2", "method_name": "getrandomnumber", "class_name": "MagicBall", "index": 811, "label": 1}
{"input": "public Criteria andUsercodeIn(List<String> values) {\r\n            addCriterion(\"USERCODE in\", values, \"usercode\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andUsercodeIn", "class_name": "GeneratedCriteria", "index": 812, "label": 1}
{"input": "@RabbitHandler\n    public void process(String msg) {\n        System.out.println(\"TopicReceiver2 :\" + msg);\n    }", "timestamp": "2022-06-29T21:24:03.240879Z", "repo_name": "john-cpu/shdemo1", "path": "/src/main/java/com/sh/shdemo/Service/Receiver/TopicReceiver2.java", "source": "the-stack-v2", "method_name": "process", "class_name": "TopicReceiver2", "index": 813, "label": 1}
{"input": "public void testBug137087d_CamelCaseSamePartCount() throws CoreException {\n\tint matchRule = SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH;\n\tString pattern = \"Runtimexception\";\n\tsearch(pattern, TYPE, DECLARATIONS, matchRule);\n\tassertSearchResults(\n\t\t\"\" \n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug137087d_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 814, "label": 1}
{"input": "@Test\n\tpublic void escapeSelector_should_escape_hyphen_if_next_char_is_hyphen_or_digit() {\n\t\tassertThat(SelectorUtils.escapeSelector(\"-abc\"), is(\"-abc\"));\n\t\tassertThat(SelectorUtils.escapeSelector(\"-\"), is(\"\\\\-\")); \n\t\tassertThat(SelectorUtils.escapeSelector(\"-123\"), is(\"\\\\-123\"));\n\t\tassertThat(SelectorUtils.escapeSelector(\"---\"), is(\"\\\\---\"));\n\t}", "timestamp": "2020-03-28T19:37:01.701292Z", "repo_name": "hjralyc1/seleniumQuery", "path": "/src/test/java/integration/io/github/seleniumquery/by/SelectorsUtilTest.java", "source": "the-stack-v2", "method_name": "escapeSelector_should_escape_hyphen_if_next_char_is_hyphen_or_digit", "class_name": "SelectorsUtilTest", "index": 815, "label": 1}
{"input": "@Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      SimpleNode simpleNode0 = new SimpleNode(1);\n      simpleNode0.jjtAddChild((Node) null, 1);\n      \n      try { \n        simpleNode0.jjtGetChild(2);\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         \n         \n         \n         verifyException(\"com.soops.CEN4010.JMCA.JParser.SimpleNode\", e);\n      }\n  }", "timestamp": "2023-04-17T20:05:40.560943Z", "repo_name": "bellmit/termite-replication", "path": "/tests/time/mosa/tests/s1007/19_jmca/evosuite-tests/com/soops/CEN4010/JMCA/JParser/SimpleNode_ESTest.java", "source": "the-stack-v2", "method_name": "test14", "class_name": "SimpleNode_ESTest", "index": 816, "label": 1}
{"input": "public boolean isLeaf( Object node )\n\t {\n\t\t reportStockCakeBean treenode = ( reportStockCakeBean )node;\n\t\t if( treenode.getChildren().size() > 0 )\n\t\t {\n\t\t\t return false;\n\t\t }\n\t\t return true;\n\t }", "timestamp": "2020-03-13T04:28:26.972375Z", "repo_name": "spipejr/tet", "path": "/src/reportModel/reportStockCakeModel.java", "source": "the-stack-v2", "method_name": "isLeaf", "class_name": "reportStockCakeModel", "index": 817, "label": 1}
{"input": "@SuppressWarnings({\"ObjectEquality\"})\n    @Override public boolean remove(Object o) {\n        return map.remove(o) == FAKE;\n    }", "timestamp": "2023-04-05T01:12:29.531841Z", "repo_name": "sirinath/ignite", "path": "/modules/core/src/main/java/org/gridgain/grid/util/GridBoundedLinkedHashSet.java", "source": "the-stack-v2", "method_name": "remove", "class_name": "GridBoundedLinkedHashSet", "index": 818, "label": 1}
{"input": "@Test\n\tpublic void testIsEqual() {\n\t\tCodeInfo ci1 = new CodeInfo(\"test\");\n\t\tCodeInfo ci2 = new CodeInfo(\"test\");\n\t\tAssert.assertEquals(ci1, ci2);\n\t\tAssert.assertEquals(ci1.hashCode(), ci2.hashCode());\n\t}", "timestamp": "2023-08-02T11:10:39.436416Z", "repo_name": "lightningbug-io/lightningbug-maven-plugin", "path": "/src/test/java/io/lightningbug/domain/CodeInfoTest.java", "source": "the-stack-v2", "method_name": "testIsEqual", "class_name": "CodeInfoTest", "index": 819, "label": 1}
{"input": "private static boolean isDue(byte[] data) {\n            String[] strs = getDateInfoFromDate(data);\n            if (strs != null && strs.length == 2) {\n                String saveTimeStr = strs[0];\n                while (saveTimeStr.startsWith(\"0\")) {\n                    saveTimeStr = saveTimeStr\n                            .substring(1, saveTimeStr.length());\n                }\n                long saveTime = Long.valueOf(saveTimeStr);\n                long deleteAfter = Long.valueOf(strs[1]);\n                if (System.currentTimeMillis() > saveTime + deleteAfter * 1000) {\n                    return true;\n                }\n            }\n            return false;\n        }", "timestamp": "2020-08-02T18:42:07.551582Z", "repo_name": "zhuyu3126/WuyiProject", "path": "/WuyiProject/commonapi/src/main/java/com/danmo/commonapi/base/cache/ACache.java", "source": "the-stack-v2", "method_name": "isDue", "class_name": "Utils", "index": 820, "label": 1}
{"input": "public void setRubyRuntimePoolName(String rubyRuntimePoolName) {\n         this.rubyRuntimePoolName = rubyRuntimePoolName;\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/33/33_9d556bb155b90787a532ff5f8246d892165619a8/RackMetaData/33_9d556bb155b90787a532ff5f8246d892165619a8_RackMetaData_t.java", "source": "the-stack-v2", "method_name": "setRubyRuntimePoolName", "class_name": "RackMetaData", "index": 821, "label": 1}
{"input": "public void testBug100772_HierarchyScope_ClassAndSubclass01() throws CoreException {\n\tsetUpBug100772_HierarchyScope_ClassAndSubclass();\n\tIType type = this.workingCopies[0].getType(\"Test\");\n\tIMethod method = type.getMethod(\"foo\", new String[] { \"QT;\" });\n\tsearch(method, UI_DECLARATIONS, SearchEngine.createHierarchyScope(type));\n\tassertSearchResults(\n\t\t\"src/b100772/Test.java void b100772.Test.foo(T) [foo] EXACT_MATCH\\n\" +\n\t\t\"src/b100772/Test.java void b100772.Sub.foo(String) [foo] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug100772_HierarchyScope_ClassAndSubclass01", "class_name": "JavaSearchBugsTests", "index": 822, "label": 1}
{"input": "@Test(timeout = 5000)\n    public void testTaskAstep3_IndexMinMax__TaskA() throws Exception {\n        Test_jd01_02 ok = run(\"\", false);\n        Method m = checkMethod(ok.aClass.getSimpleName(), \"static step3\", int[].class);\n        System.out.println(\"Проверка на массиве -1, 22, 33, 44, 567, 567, 44, 33, 22, -1, 4, 4\");\n        m.invoke(null, new int[]{-1, 22, 33, 44, 567, 567, 44, 33, 22, -1, 4, 4});\n        ok.include(\"\").include(\"9 0\");\n    }", "timestamp": "2020-04-12T09:47:01.862944Z", "repo_name": "migeniya/JD2018-12-10", "path": "/src/by/it/dziomin/jd01_02/Test_jd01_02.java", "source": "the-stack-v2", "method_name": "testTaskAstep3_IndexMinMax__TaskA", "class_name": "Test_jd01_02", "index": 823, "label": 1}
{"input": "public void testBug137087_CamelCaseSamePartCount() throws CoreException {\n\tint matchRule = SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH;\n\tString pattern = \"runtimeEx\";\n\tsearch(pattern, TYPE, DECLARATIONS, matchRule);\n\tassertSearchResults(\"\");\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug137087_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 824, "label": 1}
{"input": "private void setClassPath (String[] propNames, FileObject[][] cpRoots) {\n        final String[] paths = new String[cpRoots.length];\n        for (int i=0; i<cpRoots.length; i++) {\n            paths[i] = toPath(cpRoots[i]);\n        }\n        setClassPath(propNames, paths);\n    }", "timestamp": "2023-08-29T15:32:41.838270Z", "repo_name": "apache/netbeans", "path": "/java/java.project/test/unit/src/org/netbeans/spi/java/project/classpath/support/ProjectClassPathImplementationTest.java", "source": "the-stack-v2", "method_name": "setClassPath", "class_name": "ProjectClassPathImplementationTest", "index": 825, "label": 1}
{"input": "private void updateEETStatus() {\n\t\tILocationProxy eet = mServiceConnector.getService().getLocationProxy();\n\t\teet_status.setText(eet.getEETStatus());\n\n\t\tif (eet.getPredStatus() == ILocationProxy.PRED_ON) {\n\t\t\tPolylineOptions options = new PolylineOptions().width(5).color(\n\t\t\t\t\tColor.RED);\n\t\t\tfor (GPXTrack.Trkpt pt : eet.getPredTempTrack().getTrackPoints()) {\n\t\t\t\toptions.add(new LatLng(pt.lat, pt.lon));\n\t\t\t}\n\t\t\tmMap.addPolyline(options);\n\t\t}\n\t}", "timestamp": "2021-01-10T20:04:03.310715Z", "repo_name": "mobilis/FriendFinder", "path": "/FriendFinder_Android/src/de/tudresden/inf/rn/mobilis/friendfinder/MapActivity.java", "source": "the-stack-v2", "method_name": "updateEETStatus", "class_name": "MapActivity", "index": 826, "label": 1}
{"input": "public Builder support720p() {\n            mSupportPreviewSize.add(CAMERA_SUPPORT_1280_720);\n            return this;\n        }", "timestamp": "2020-05-15T12:10:00.878334Z", "repo_name": "qinhaihang/OpenCVDemo-master", "path": "/app/src/main/java/com/qhh/opencvdemo/camera/CameraConfig.java", "source": "the-stack-v2", "method_name": "support720p", "class_name": "Builder", "index": 827, "label": 1}
{"input": "@Test public void testWinAggConstantMultipleConstants() {\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.REGULAR)\n        .query(\"select \\\"deptno\\\", sum(1) over (partition by \\\"deptno\\\"\\n\"\n            + \"  order by \\\"empid\\\" rows between unbounded preceding and current row) as a,\\n\"\n            + \" sum(-1) over (partition by \\\"deptno\\\"\\n\"\n            + \"  order by \\\"empid\\\" rows between unbounded preceding and current row) as b\\n\"\n            + \"from \\\"hr\\\".\\\"emps\\\"\")\n        .returnsUnordered(\n            \"deptno=10; A=1; B=-1\",\n            \"deptno=10; A=2; B=-2\",\n            \"deptno=10; A=3; B=-3\",\n            \"deptno=20; A=1; B=-1\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testWinAggConstantMultipleConstants", "class_name": "JdbcTest", "index": 828, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.custom_dialog);\n        initViews();\n\n    }", "timestamp": "2023-04-28T07:02:01.036626Z", "repo_name": "annguyen968/AndroidApp", "path": "/Lab3.1/Lab3.1/app/src/main/java/com/trilam/lab31/customDialog.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "customDialog", "index": 829, "label": 1}
{"input": "@Test\n    void scrollOfWisdom() {\n        Item scrollOfWisdom = gateway.getScrollOfWisdom();\n        assertThat(scrollOfWisdom).isNotNull();\n    }", "timestamp": "2023-03-11T16:10:38.511421Z", "repo_name": "iCodeIN/poe-stash-buddy", "path": "/src/test/java/org/jusecase/poe/gateways/ResourceItemGatewayTest.java", "source": "the-stack-v2", "method_name": "scrollOfWisdom", "class_name": "ResourceItemGatewayTest", "index": 830, "label": 1}
{"input": "@POST\n    @Path(\"/enable\")\n    public Response drainEnable()\n    {\n        return setDrainMode(true);\n    }", "timestamp": "2023-08-31T10:55:50.165701Z", "repo_name": "jitsi/jitsi-videobridge", "path": "/jvb/src/main/java/org/jitsi/videobridge/rest/root/colibri/drain/Drain.java", "source": "the-stack-v2", "method_name": "drainEnable", "class_name": "Drain", "index": 831, "label": 1}
{"input": "public boolean match(BooleanLiteral node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 832, "label": 1}
{"input": "@Override\n    public void onStop() {\n        super.onStop();\n        if (mAuthListener != null) {\n            mAuth.removeAuthStateListener(mAuthListener);\n        }\n    }", "timestamp": "2020-04-03T18:16:12.362449Z", "repo_name": "ezzatthrwat/instaclone", "path": "/app/src/main/java/com/example/zizoj/instaclone/Utils/ViewPostFragment.java", "source": "the-stack-v2", "method_name": "onStop", "class_name": "ViewPostFragment", "index": 833, "label": 1}
{"input": "public void setBotonDesconectar(JButton botonDesconectar) {\r\n\t\tthis.botonDesconectar = botonDesconectar;\r\n\t}", "timestamp": "2021-07-09T22:13:09.290917Z", "repo_name": "DevOscarFA/SemaforoServidor", "path": "/src/presentacion/Vista.java", "source": "the-stack-v2", "method_name": "setBotonDesconectar", "class_name": "Vista", "index": 834, "label": 1}
{"input": "@Override\r\n    public void push(String obj) {\r\n       \r\n        if(obj.length()==1)\r\n            stringStck += obj;\r\n    }", "timestamp": "2020-03-25T01:57:09.638030Z", "repo_name": "rmm93/extra-practice", "path": "/Self_Study/src/Nodes/StringStackQ2.java", "source": "the-stack-v2", "method_name": "push", "class_name": "StringStackQ2", "index": 835, "label": 1}
{"input": "private static Matcher<TaskStatus> taskStatusWithState(final TaskStatus.State state) {\n    return new FeatureMatcher<TaskStatus, TaskStatus.State>(equalTo(state), \"state\", \"state\") {\n      @Override\n      protected TaskStatus.State featureValueOf(final TaskStatus actual) {\n        return actual.getState();\n      }\n    };\n  }", "timestamp": "2021-01-11T17:01:51.211646Z", "repo_name": "fguerco/helios", "path": "/helios-services/src/test/java/com/spotify/helios/agent/SupervisorTest.java", "source": "the-stack-v2", "method_name": "taskStatusWithState", "class_name": "SupervisorTest", "index": 836, "label": 1}
{"input": "public void setFeaturedVideo(String featuredVideo) {\n        this.featuredVideo = StringUtils.notNullStr(featuredVideo);\n    }", "timestamp": "2021-01-12T14:00:19.468063Z", "repo_name": "kageiit/perf-android-large", "path": "/di/da/src/main/java/org.wp.da/models/ReaderPost.java", "source": "the-stack-v2", "method_name": "setFeaturedVideo", "class_name": "ReaderPost", "index": 837, "label": 1}
{"input": "@RequestMapping(\"loadMediaInfo\")\n\tpublic DataGridView loadMediaInfo(MediaVo mediaVo) {\n\t\treturn this.mediaService.queryMediaInfo(mediaVo);\n\t}", "timestamp": "2023-05-04T09:37:44.111496Z", "repo_name": "1119537395/DigitalMediaMIS", "path": "/src/main/java/com/fish/business/controller/MediaController.java", "source": "the-stack-v2", "method_name": "loadMediaInfo", "class_name": "MediaController", "index": 838, "label": 1}
{"input": "@Test public void arrayOf() {\n    assertThat(Types.getRawType(Types.arrayOf(int.class))).isEqualTo(int[].class);\n    assertThat(Types.getRawType(Types.arrayOf(List.class))).isEqualTo(List[].class);\n    assertThat(Types.getRawType(Types.arrayOf(String[].class))).isEqualTo(String[][].class);\n  }", "timestamp": "2021-04-27T09:37:55.346570Z", "repo_name": "nedtwigg/moshi", "path": "/moshi/src/test/java/com/squareup/moshi/TypesTest.java", "source": "the-stack-v2", "method_name": "arrayOf", "class_name": "TypesTest", "index": 839, "label": 1}
{"input": "@JavascriptInterface\n    public void firePixel(final String s) {\n        final d d = (d)this.adMarvelInternalWebViewReference.get();\n        if (d != null && !d.b()) {\n            if (!this.isInterstitial) {\n                final m m = (m)this.adMarvelWebViewReference.get();\n                if (m != null) {\n                    e.a().b().execute(new m$n(d, m, s));\n                }\n            }\n            else {\n                final AdMarvelActivity adMarvelActivity = (AdMarvelActivity)this.adMarvelActivityReference.get();\n                if (adMarvelActivity != null) {\n                    adMarvelActivity.g.post((Runnable)new AdMarvelActivity$j(d, adMarvelActivity, s));\n                }\n            }\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "firePixel", "class_name": "AdMarvelWebViewJSInterface", "index": 840, "label": 1}
{"input": "@Override\n\tpublic String toString() {\n\t\treturn \"Reminder [reminderId=\" + reminderId + \", reminderName=\" + reminderName + \", reminderDescription=\"\n\t\t\t\t+ reminderDescription + \", reminderType=\" + reminderType + \", reminderCreatedBy=\" + reminderCreatedBy\n\t\t\t\t+ \", reminderCreationDate=\" + reminderCreationDate + \"]\";\n\t}", "timestamp": "2023-05-06T17:47:09.435656Z", "repo_name": "poojasolanki9569/KeepNoteSpring", "path": "/NoteService/src/main/java/com/stackroute/keepnote/model/Reminder.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "Reminder", "index": 841, "label": 1}
{"input": "public Criteria andUsernameLessThanOrEqualTo(String value) {\r\n            addCriterion(\"USERNAME <=\", value, \"username\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andUsernameLessThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 842, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n    @Override\n    public ASTNode visitInsertValuesClause(final InsertValuesClauseContext ctx) {\n        InsertStatement result = new InsertStatement();\n        if (null != ctx.columnNames()) {\n            ColumnNamesContext columnNames = ctx.columnNames();\n            CollectionValue<ColumnSegment> columnSegments = (CollectionValue<ColumnSegment>) visit(columnNames);\n            result.setInsertColumns(new InsertColumnsSegment(columnNames.start.getStartIndex(), columnNames.stop.getStopIndex(), columnSegments.getValue()));\n        } else {\n            result.setInsertColumns(new InsertColumnsSegment(ctx.start.getStartIndex() - 1, ctx.start.getStartIndex() - 1, Collections.emptyList()));\n        }\n        result.getValues().addAll(createInsertValuesSegments(ctx.assignmentValues()));\n        return result;\n    }", "timestamp": "2020-09-10T15:32:50.163756Z", "repo_name": "avalon566/incubator-shardingsphere", "path": "/shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/impl/PostgreSQLDMLVisitor.java", "source": "the-stack-v2", "method_name": "visitInsertValuesClause", "class_name": "PostgreSQLDMLVisitor", "index": 843, "label": 1}
{"input": "@Override\n    public void printError(String message, String content) {\n        Dialogs.printError(\"Operazione Fallita\", message, content);\n    }", "timestamp": "2023-01-27T17:45:34.037180Z", "repo_name": "ndslab-unipa/SecureBallot", "path": "/Evoting/Common/src/main/java/view/ViewManager.java", "source": "the-stack-v2", "method_name": "printError", "class_name": "ViewManager", "index": 844, "label": 1}
{"input": "private Vector getFileList(String path) {\n        File rootDirectory = new File(path);\n        String[] fileList = rootDirectory.list();\n        Vector list = new Vector();\n        assert fileList != null;\n        for (String file : fileList)\n            if (file.endsWith(\".mp3\"))\n                list.add(file);\n        return list;\n    }", "timestamp": "2023-04-15T13:53:26.916349Z", "repo_name": "wang-kui-die/MediaPlayer", "path": "/src/main/java/com/player/Player/AudioPlayer.java", "source": "the-stack-v2", "method_name": "getFileList", "class_name": "AudioPlayer", "index": 845, "label": 1}
{"input": "public static ACache get(File cacheDir, long max_zise, int max_count) {\n        ACache manager = mInstanceMap.get(cacheDir.getAbsoluteFile() + myPid());\n        if (manager == null) {\n            manager = new ACache(cacheDir, max_zise, max_count);\n            mInstanceMap.put(cacheDir.getAbsolutePath() + myPid(), manager);\n        }\n        return manager;\n    }", "timestamp": "2020-08-02T18:42:07.551582Z", "repo_name": "zhuyu3126/WuyiProject", "path": "/WuyiProject/commonapi/src/main/java/com/danmo/commonapi/base/cache/ACache.java", "source": "the-stack-v2", "method_name": "get", "class_name": "ACache", "index": 846, "label": 1}
{"input": "public Builder clearAttackComplexity() {\n\n      attackComplexity_ = 0;\n      onChanged();\n      return this;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "clearAttackComplexity", "class_name": "Builder", "index": 847, "label": 1}
{"input": "@Test public void testOrderByCase() {\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.FOODMART_CLONE)\n        .query(\n            \"select \\\"time_by_day\\\".\\\"the_year\\\" as \\\"c0\\\" from \\\"time_by_day\\\" as \\\"time_by_day\\\" group by \\\"time_by_day\\\".\\\"the_year\\\" order by CASE WHEN \\\"time_by_day\\\".\\\"the_year\\\" IS NULL THEN 1 ELSE 0 END, \\\"time_by_day\\\".\\\"the_year\\\" ASC\")\n        .returns(\"c0=1997\\n\"\n            + \"c0=1998\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testOrderByCase", "class_name": "JdbcTest", "index": 848, "label": 1}
{"input": "private CalciteAssert.AssertQuery withFoodMartQuery(int id)\n      throws IOException {\n    final FoodMartQuerySet set = FoodMartQuerySet.instance();\n    return CalciteAssert.that()\n        .with(CalciteAssert.Config.FOODMART_CLONE)\n        .query(set.queries.get(id).sql);\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "withFoodMartQuery", "class_name": "JdbcTest", "index": 849, "label": 1}
{"input": "public Criteria andDrNotIn(List<Long> values) {\r\n            addCriterion(\"DR not in\", values, \"dr\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andDrNotIn", "class_name": "GeneratedCriteria", "index": 850, "label": 1}
{"input": "@java.lang.Override\n    public Builder setField(\n        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {\n      return super.setField(field, value);\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "setField", "class_name": "Builder", "index": 851, "label": 1}
{"input": "@Test\n  public void testWaitToFinishTimeFail() throws Exception {\n    Dataflow.Projects.Jobs.Get statusRequest = mock(Dataflow.Projects.Jobs.Get.class);\n\n    when(mockJobs.get(eq(PROJECT_ID), eq(JOB_ID))).thenReturn(statusRequest);\n    when(statusRequest.execute()).thenThrow(IOException.class);\n    DataflowAggregatorTransforms dataflowAggregatorTransforms =\n        mock(DataflowAggregatorTransforms.class);\n\n    DataflowPipelineJob job = new DataflowPipelineJob(\n        PROJECT_ID, JOB_ID, mockWorkflowClient, dataflowAggregatorTransforms);\n    long startTime = fastClock.nanoTime();\n    State state = job.waitToFinish(4, TimeUnit.MILLISECONDS, null, fastClock, fastClock);\n    assertEquals(null, state);\n    long timeDiff = TimeUnit.NANOSECONDS.toMillis(fastClock.nanoTime() - startTime);\n    \n    assertEquals(timeDiff, 4L);\n  }", "timestamp": "2022-11-24T23:36:03.156413Z", "repo_name": "Sil1991/gcpdf-demo", "path": "/runners/google-cloud-dataflow-java/src/test/java/com/google/cloud/dataflow/sdk/runners/DataflowPipelineJobTest.java", "source": "the-stack-v2", "method_name": "testWaitToFinishTimeFail", "class_name": "DataflowPipelineJobTest", "index": 852, "label": 1}
{"input": "@Override\n    public void onStart() {\n        super.onStart();\n        \n        FirebaseUser currentUser = mAuth.getCurrentUser();\n        Log.d(TAG, String.valueOf(currentUser));\n        if (currentUser != null) {\n            Intent intent = new Intent(MainActivity.this, MainHome.class);\n            startActivity(intent);\n        }\n\n        \n        \n        GoogleSignInAccount account = GoogleSignIn.getLastSignedInAccount(this);\n        if (account != null) {\n            Intent intent = new Intent(MainActivity.this, MainHome.class);\n            startActivity(intent);\n        }\n\n    }", "timestamp": "2022-06-10T17:57:08.381357Z", "repo_name": "wilsonmwiti/FirebaseUiSignin", "path": "/app/src/main/java/com/spiritledinc/firebaseuisignin/MainActivity.java", "source": "the-stack-v2", "method_name": "onStart", "class_name": "MainActivity", "index": 853, "label": 1}
{"input": "@Override\n  public void internalLockRecord(OIdentifiable iRecord, OStorage.LOCKING_STRATEGY lockingStrategy) {\n    internalLockRecord(iRecord, lockingStrategy, 0);\n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "internalLockRecord", "class_name": "ODatabaseDocumentEmbedded", "index": 854, "label": 1}
{"input": "public void testBug92264b() throws CoreException {\n\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();\n\tnew SearchEngine().searchAllTypeNames(\n\t\t\"*.lang*\".toCharArray(),\n\t\tSearchPattern.R_PATTERN_MATCH, \n\t\t\"*tion\".toCharArray(),\n\t\tSearchPattern.R_PATTERN_MATCH, \n\t\tTYPE,\n\t\tgetJavaSearchScope(),\n\t\trequestor,\n\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,\n\t\tnull\n\t);\n\tassertSearchResults(\n\t\t\"Unexpected all type names\",\n\t\t\"java.lang.CloneNotSupportedException\\n\" +\n\t\t\"java.lang.Exception\\n\" +\n\t\t\"java.lang.IllegalMonitorStateException\\n\" +\n\t\t\"java.lang.InterruptedException\\n\" +\n\t\t\"java.lang.RuntimeException\\n\" +\n\t\t\"java.lang.annotation.Annotation\\n\" +\n\t\t\"java.lang.annotation.Retention\",\n\t\trequestor);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug92264b", "class_name": "JavaSearchBugsTests", "index": 855, "label": 1}
{"input": "@Override\n    public JspConfigDescriptor getJspConfigDescriptor() {\n        return jspConfigDescriptor;\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "getJspConfigDescriptor", "class_name": "StandardContext", "index": 856, "label": 1}
{"input": "public Query joinFeatures(Query subquery, List<Feature> on, JoinType joinType, String prefix) {\n    joins.add(new Join(subquery, on, joinType, prefix));\n    return this;\n  }", "timestamp": "2023-08-17T00:59:45.862350Z", "repo_name": "davitbzh/FlinkAggJob", "path": "/flink/src/main/java/com/logicalclocks/hsfs/constructor/Query.java", "source": "the-stack-v2", "method_name": "joinFeatures", "class_name": "Query", "index": 857, "label": 1}
{"input": "@Override \n        public void getClipResponse(RadioResponseInfo info, int status) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            _hidl_request.writeInt32(status);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(53, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "getClipResponse", "class_name": "Proxy", "index": 858, "label": 1}
{"input": "public String getNextAvailableId(String id, Node node)\r\n\t{\r\n\t\t\n\t\t\n\t\t\n\t\tString newId = null;\r\n\t\tint indexOfDigit = -1;\r\n\t\tfor(int i = 0; i < id.length(); i++)\r\n\t\t{\r\n\t\t\tif(id.substring(i).matches(\"\\\\d{\" + String.valueOf(id.length()-i) + \"}\"))\r\n\t\t\t{\r\n\t\t\t\tindexOfDigit = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\n\t\tif(indexOfDigit != -1)\r\n\t\t\tnewId = id.substring(0, indexOfDigit) + String.valueOf(Integer.parseInt(id.substring(indexOfDigit))+1);\r\n\t\t\n\t\telse\r\n\t\t\tnewId = id + \"0\";\r\n\t\t\r\n\t\treturn newId;\r\n\t}", "timestamp": "2020-04-17T17:30:27.410359Z", "repo_name": "MSPL4SOA/MSPL4SOA-tool", "path": "/SPGenerator/lib/ca.uwaterloo.gp_.fmp_0.7.0/src/ca/uwaterloo/gp/fmp/system/NodeIdDictionary.java", "source": "the-stack-v2", "method_name": "getNextAvailableId", "class_name": "NodeIdDictionary", "index": 859, "label": 1}
{"input": "private FrameRecord createFrameRecord1()\n    {\n        FrameRecord r = new FrameRecord();\n        r.setBorderType( FrameRecord.BORDER_TYPE_REGULAR );\n        r.setAutoSize( false );\n        r.setAutoPosition( true );\n        return r;\n    }", "timestamp": "2023-01-11T02:29:36.328694Z", "repo_name": "DXYyang/SDP", "path": "/sourcedata/poi-REL_3_0/src/scratchpad/src/org/apache/poi/hssf/usermodel/HSSFChart.java", "source": "the-stack-v2", "method_name": "createFrameRecord1", "class_name": "HSSFChart", "index": 860, "label": 1}
{"input": "@java.lang.Override\n  public com.google.cloud.securitycenter.v1.Cvssv3 getDefaultInstanceForType() {\n    return DEFAULT_INSTANCE;\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "getDefaultInstanceForType", "class_name": "Cvssv3", "index": 861, "label": 1}
{"input": "public Criteria andOwnerIdIsNotNull() {\r\n            addCriterion(\"owner_id is not null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andOwnerIdIsNotNull", "class_name": "GeneratedCriteria", "index": 862, "label": 1}
{"input": "public void _jspDestroy() {\n    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();\n  }", "timestamp": "2023-04-01T18:23:58.704317Z", "repo_name": "sagardhakal-photon/myDatabase", "path": "/NoRecordsDatabase/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/work/Catalina/localhost/mydatabase/org/apache/jsp/select/selectMusician_jsp.java", "source": "the-stack-v2", "method_name": "_jspDestroy", "class_name": "selectMusician_jsp", "index": 863, "label": 1}
{"input": "@RequestMapping(value = \"/sessions\", method = RequestMethod.GET)\n\tpublic ResponseEntity<?> listSessions(\n\t\t\t@RequestParam(value = \"pendingConnections\", defaultValue = \"false\", required = false) boolean pendingConnections,\n\t\t\t@RequestParam(value = \"webRtcStats\", defaultValue = \"false\", required = false) boolean webRtcStats) {\n\n\t\tlog.info(\"REST API: GET {}/sessions\", RequestMappings.API);\n\n\t\tCollection<Session> sessions = this.sessionManager.getSessionsWithNotActive();\n\t\tJsonObject json = new JsonObject();\n\t\tJsonArray jsonArray = new JsonArray();\n\t\tsessions.forEach(session -> {\n\t\t\tJsonObject sessionJson = session.toJson(pendingConnections, webRtcStats);\n\t\t\tjsonArray.add(sessionJson);\n\t\t});\n\t\tjson.addProperty(\"numberOfElements\", sessions.size());\n\t\tjson.add(\"content\", jsonArray);\n\t\treturn new ResponseEntity<>(json.toString(), RestUtils.getResponseHeaders(), HttpStatus.OK);\n\t}", "timestamp": "2023-03-08T08:12:59.242585Z", "repo_name": "CJK406/openvidu", "path": "/openvidu-server/src/main/java/io/openvidu/server/rest/SessionRestController.java", "source": "the-stack-v2", "method_name": "listSessions", "class_name": "SessionRestController", "index": 864, "label": 1}
{"input": "@Test\n    public void testInvokeOnItemWithRunnableShortcut() {\n        AtomicInteger res = new AtomicInteger();\n\n        int r = one.invoke(res::incrementAndGet)\n                .await().indefinitely();\n\n        assertThat(r).isEqualTo(1);\n        assertThat(res).hasValue(1);\n    }", "timestamp": "2022-11-30T09:32:52.267405Z", "repo_name": "lamtrhieu/smallrye-mutiny", "path": "/implementation/src/test/java/io/smallrye/mutiny/operators/UniOnItemInvokeTest.java", "source": "the-stack-v2", "method_name": "testInvokeOnItemWithRunnableShortcut", "class_name": "UniOnItemInvokeTest", "index": 865, "label": 1}
{"input": "public void SetImagem(){\n        if(id!=-1){\n            try {\n                    pato = patoDAO.getPatoPorID(id);\n                } catch (Exception ex) {\n                    Logger.getLogger(TelaEscolhaPato.class.getName()).log(Level.SEVERE, null, ex);\n                }\n\n            imgperso.setIcon(new javax.swing.ImageIcon(getClass().getResource(pato.getFoto())));\n        }\n        \n    }", "timestamp": "2020-03-19T08:54:56.873611Z", "repo_name": "Brunohvc/TCCPatos", "path": "/Tcc/src/br/senai/sc/Telas/TelaEscolhaPato.java", "source": "the-stack-v2", "method_name": "SetImagem", "class_name": "TelaEscolhaPato", "index": 866, "label": 1}
{"input": "public Criteria andVdef19NotLike(String value) {\r\n            addCriterion(\"VDEF19 not like\", value, \"vdef19\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef19NotLike", "class_name": "GeneratedCriteria", "index": 867, "label": 1}
{"input": "@RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)\n    @Override\n    public void onConfigure(SQLiteDatabase db) {\n        super.onConfigure(db);\n        db.setForeignKeyConstraintsEnabled(true);\n        \n        \n    }", "timestamp": "2023-01-18T20:19:28.045856Z", "repo_name": "DongPhamBK/DaiCuongBachKhoa2", "path": "/DaiCuongFirstApp - v1.1/app/src/main/java/com/project/daicuongbachkhoa/ui/vatly1/VatLy1QuizDbHelper.java", "source": "the-stack-v2", "method_name": "onConfigure", "class_name": "VatLy1QuizDbHelper", "index": 868, "label": 1}
{"input": "int getPixels(int unit, float size) {   \n\t    DisplayMetrics metrics = ctx.getResources().getDisplayMetrics();\n\t    return (int)TypedValue.applyDimension(unit, size, metrics);\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "getPixels", "class_name": "jArrayAdapter", "index": 869, "label": 1}
{"input": "private void jTBuscKeyPressed(java.awt.event.KeyEvent evt) {\n\n        \n        if(evt.getKeyCode() == KeyEvent.VK_ENTER)\n        {\n            jBBusc.doClick();\n            return;\n        }\n        \n        \n        vKeyPreEsc(evt);\n        \n    }", "timestamp": "2020-06-10T12:22:45.426839Z", "repo_name": "njmube/SOSDev", "path": "/Electricos/src/cats/SerNotVent.java", "source": "the-stack-v2", "method_name": "jTBuscKeyPressed", "class_name": "SerNotVent", "index": 870, "label": 1}
{"input": "public Criteria andVdef16IsNull() {\r\n            addCriterion(\"VDEF16 is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef16IsNull", "class_name": "GeneratedCriteria", "index": 871, "label": 1}
{"input": "@Override\n    public String getBlockDomain(IBlock block) {\n        GameRegistry.UniqueIdentifier id = GameRegistry.findUniqueIdentifierFor(MCInterface.toBlock(block));\n        return id.modId;\n    }", "timestamp": "2021-05-31T18:12:32.699618Z", "repo_name": "pagoru/Blacksmith-Api", "path": "/src/main/java/mod/net/darkaqua/blacksmith/mod/common/registry/BlockRegistry.java", "source": "the-stack-v2", "method_name": "getBlockDomain", "class_name": "BlockRegistry", "index": 872, "label": 1}
{"input": "@Override\n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tPedido other = (Pedido) obj;\n\t\tif (codigo == null) {\n\t\t\tif (other.codigo != null)\n\t\t\t\treturn false;\n\t\t} else if (!codigo.equals(other.codigo))\n\t\t\treturn false;\n\t\treturn true;\n\t}", "timestamp": "2021-01-13T05:23:47.336037Z", "repo_name": "Beleboni/spring-project", "path": "/src/main/java/com/algaworks/brewer/model/Pedido.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "Pedido", "index": 873, "label": 1}
{"input": "public void testBug110060_TypePattern01() throws CoreException {\n\tsetUpBug110060_TypePattern();\n\tsearch(\"AA\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_MATCH);\n\tassertSearchResults(\n\t\t\"src/b110060/Test.java b110060.Test.a1 [Aaa] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.a2 [AAa] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.a3 [AaAaAa] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.a4 [AAxx] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.a5 [AxA] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.a6 [AxxAyy] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_TypePattern01", "class_name": "JavaSearchBugsTests", "index": 874, "label": 1}
{"input": "@Override\n        public int getCount() {\n            if (count == 0) {\n                return 0;\n            }\n            return Integer.MAX_VALUE;\n        }", "timestamp": "2021-01-11T00:02:57.212147Z", "repo_name": "ranyiran/fulicenter", "path": "/app/src/main/java/cn/ran/flicenter/views/SlideAutoLoopView.java", "source": "the-stack-v2", "method_name": "getCount", "class_name": "SlideAutoLooopAdapter", "index": 875, "label": 1}
{"input": "public Criteria andOwnerIdIn(List<Long> values) {\r\n            addCriterion(\"owner_id in\", values, \"ownerId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andOwnerIdIn", "class_name": "GeneratedCriteria", "index": 876, "label": 1}
{"input": "@Override\r\n  public void close() {\r\n    final MainProp mprop = gui.context.mprop;\r\n    mprop.set(MainProp.LANG, lang.getSelectedItem().toString());\r\n\r\n    \n    final String dbpath = path.getText();\r\n    if(!mprop.get(MainProp.DBPATH).equals(dbpath)) gui.execute(new Close());\r\n    mprop.set(MainProp.DBPATH, dbpath);\r\n    mprop.write();\r\n\r\n    final int mh = hitsAsProperty();\r\n    gui.context.prop.set(Prop.MAXHITS, mh);\r\n\r\n    final GUIProp gprop = gui.gprop;\r\n    gprop.set(GUIProp.MOUSEFOCUS, focus.isSelected());\r\n    gprop.set(GUIProp.SIMPLEFD, simpfd.isSelected());\r\n    gprop.set(GUIProp.JAVALOOK, javalook.isSelected());\r\n    gprop.set(GUIProp.MAXHITS, mh);\r\n    gprop.write();\r\n    dispose();\r\n  }", "timestamp": "2021-01-23T22:06:47.908791Z", "repo_name": "zhuangy/basex", "path": "/src/main/java/org/basex/gui/dialog/DialogPrefs.java", "source": "the-stack-v2", "method_name": "close", "class_name": "DialogPrefs", "index": 877, "label": 1}
{"input": "private void sendSeekStatus(IPlayItem item, int position) {\n        Status seek = new Status(StatusCodes.NS_SEEK_NOTIFY);\n        seek.setClientid(streamId);\n        seek.setDetails(item.getName());\n        seek.setDesciption(String.format(\"Seeking %d (stream ID: %d).\", position, streamId));\n\n        doPushMessage(seek);\n    }", "timestamp": "2023-06-22T03:27:38.095086Z", "repo_name": "guyueyuqi/red5-server-common", "path": "/src/main/java/org/red5/server/stream/PlayEngine.java", "source": "the-stack-v2", "method_name": "sendSeekStatus", "class_name": "PlayEngine", "index": 878, "label": 1}
{"input": "private void startAnimation(int targetProgress) {\n        if (valueAnimator != null && valueAnimator.isRunning()) {\n            valueAnimator.cancel();\n            valueAnimator = null;\n        }\n        valueAnimator = ValueAnimator.ofFloat(mCurrentProgress, targetProgress);\n        long duration = (long) ((targetProgress - mCurrentProgress) / 100f * mDuration);\n        valueAnimator.setDuration(duration > 0 ? duration : 10);\n\n        valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n            @Override\n            public void onAnimationUpdate(ValueAnimator valueAnimator) {\n                mCurrentProgress = ((Float) valueAnimator.getAnimatedValue()).intValue();\n                mSweepAngle = mCurrentProgress / 100f * 360;\n                invalidate();\n            }\n        });\n        valueAnimator.start();\n    }", "timestamp": "2022-12-22T12:12:10.323590Z", "repo_name": "sjhsjh/APIdemo", "path": "/app/src/main/java/com/example/apidemo/view/ArcProgressBar.java", "source": "the-stack-v2", "method_name": "startAnimation", "class_name": "ArcProgressBar", "index": 879, "label": 1}
{"input": "@Override\n\tpublic String toString() {\n\t\treturn \"ZipcodeDto [zipcode=\" + zipcode + \", sido=\" + sido + \", gugun=\" + gugun + \", dong=\" + dong + \", ri=\"\n\t\t\t\t+ ri + \", bunji=\" + bunji + \"]\";\n\t}", "timestamp": "2022-12-30T12:28:27.443523Z", "repo_name": "minseunghwang/KITRI_Spring", "path": "/SpringMVC2/src/com/java/member/dto/ZipcodeDto.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "ZipcodeDto", "index": 880, "label": 1}
{"input": "@Transactional\n\tpublic Response removeAttachment(Request request, String uploadPath) {\n\t\tResponse response = new Response();\n\t\tList<Object> result = Lists.newArrayList();\n\t\tList<Object> records = request.getRecords();\n\n\t\tif (records == null || records.isEmpty()) {\n\t\t\tresponse.setException(new IllegalArgumentException(\"No records provides.\"));\n\t\t\treturn response;\n\t\t}\n\n\t\tfor(Object record : records) {\n\t\t\t@SuppressWarnings(\"all\")\n\t\t\tLong fileId = Long.valueOf(((Map) record).get(\"id\").toString());\n\n\t\t\tif (fileId != null) {\n\t\t\t\tMetaFile obj = files.find(fileId);\n\t\t\t\tif (uploadPath != null) {\n\t\t\t\t\tFile file = FileUtils.getFile(uploadPath, obj.getFilePath());\n\t\t\t\t\tif (file.exists() && !file.delete()) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tattachments.all().filter(\"self.metaFile.id = ?1\", fileId).delete();\n\t\t\t\tfiles.remove(obj);\n\n\t\t\t\tresult.add(record);\n\t\t\t}\n\t\t}\n\n\t\tresponse.setData(result);\n\t\tresponse.setStatus(Response.STATUS_SUCCESS);\n\n\t\treturn response;\n\t}", "timestamp": "2020-03-14T23:38:40.669916Z", "repo_name": "zuloloxi/adk3_demo3", "path": "/logss/axelor-core-342save/src/main/java/com/axelor/meta/service/MetaService.java", "source": "the-stack-v2", "method_name": "removeAttachment", "class_name": "MetaService", "index": 881, "label": 1}
{"input": "@Override\n  public Class<? extends OutputFormat> getOutputFormatClass(){\n    return SolrOutputFormat.class;\n  }", "timestamp": "2021-01-10T19:27:11.455694Z", "repo_name": "amitjaspal/solr-storagehandler", "path": "/src/main/java/org/apache/hadoop/hive/solr/SolrStorageHandler.java", "source": "the-stack-v2", "method_name": "getOutputFormatClass", "class_name": "SolrStorageHandler", "index": 882, "label": 1}
{"input": "public Criteria andCuseridIsNull() {\r\n            addCriterion(\"CUSERID is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andCuseridIsNull", "class_name": "GeneratedCriteria", "index": 883, "label": 1}
{"input": "public long getMaximumTime()\n    {\n        if (valueCount == 0)\n        {\n            throw new IllegalStateException(\"No maximum time available as no values have been added so far.\");\n        }\n\n        return maximumTime;\n    }", "timestamp": "2022-04-21T09:20:03.443914Z", "repo_name": "andre-becker/XLT", "path": "/src/main/java/com/xceptance/xlt/report/util/MinMaxValueSet.java", "source": "the-stack-v2", "method_name": "getMaximumTime", "class_name": "MinMaxValueSet", "index": 884, "label": 1}
{"input": "public void playPrev() throws TagException, ReadOnlyFileException, CannotReadException, InvalidAudioFrameException, IOException {\n        isPlaying = false;\n        fileName = getMusicName(-1);\n        playMusic(\"src/music/\" + fileName);\n        Process.getInstance().changeMusic(this.length);\n    }", "timestamp": "2023-04-15T13:53:26.916349Z", "repo_name": "wang-kui-die/MediaPlayer", "path": "/src/main/java/com/player/Player/AudioPlayer.java", "source": "the-stack-v2", "method_name": "playPrev", "class_name": "AudioPlayer", "index": 885, "label": 1}
{"input": "private String lookForEnclosure(Document dom) {\n    _enclosedXml = \"\";\n    _wrappingEsriDocId = \"\";\n    String sEnclosedXml = \"\";\n    try {\n      XPath xpath = XPathFactory.newInstance().newXPath();\n      String sPath = \"/metadata/Binary/Enclosure/Data[@SourceMetadata='yes']\";\n      String sAgsMmdPath = \"/metadata/Esri/ArcGISFormat\";\n      String sAgsMmd = xpath.evaluate(sAgsMmdPath,dom);\n      String sEncoded = xpath.evaluate(sPath,dom);\n      if ((sEncoded != null) && (sEncoded.length() > 0) && (sAgsMmd == null)) {\n        String sDecoded = Val.chkStr(Base64.decode(sEncoded,null));\n        sEnclosedXml = sDecoded;\n        _wrappingEsriDocId = Val.chkStr(xpath.evaluate(\"/metadata/Esri/PublishedDocID\",dom));\n      }\n    } catch (XPathExpressionException e) {\n      \n    } catch (IOException e) {\n      \n    }\n    _enclosedXml = sEnclosedXml;\n    return sEnclosedXml;\n  }", "timestamp": "2023-08-22T17:20:42.269458Z", "repo_name": "Esri/geoportal-server", "path": "/geoportal/src/com/esri/gpt/catalog/schema/MetadataDocument.java", "source": "the-stack-v2", "method_name": "lookForEnclosure", "class_name": "MetadataDocument", "index": 886, "label": 1}
{"input": "@Scheduled(cron = \"${external-api.removeDataCron}\")\n    public void clearData() {\n        log.info(\"Starting to remove train data.\");\n        LocalDateTime dateTime = LocalDateTime.now().minusDays(externalApiConfig.getNumberOfDaysForStorage());\n        List<Long> ids = instancesRepository.findNotDeletedData(dateTime);\n        log.info(\"Obtained {} data files to remove\", ids.size());\n        processWithPagination(ids, instancesRepository::findByIdIn,\n                pageContent -> pageContent.forEach(instancesService::deleteInstances),\n                externalApiConfig.getBatchSize()\n        );\n        log.info(\"Train data removing has been finished.\");\n    }", "timestamp": "2023-08-12T10:32:33.883987Z", "repo_name": "Stonnos/eca-service", "path": "/eca-external-api/src/main/java/com/ecaservice/external/api/scheduler/ModelCleaner.java", "source": "the-stack-v2", "method_name": "clearData", "class_name": "ModelCleaner", "index": 887, "label": 1}
{"input": "public void setJCOInstance(JCObject instance) {\n        classInstance = instance;\n        super.setJCOInstance(classInstance);\n    }", "timestamp": "2022-12-07T21:13:06.208025Z", "repo_name": "lvyitian/JCOReflector", "path": "/netreflected/src/Framework/System.Core,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089/system/security/cryptography/ECDsaCng.java", "source": "the-stack-v2", "method_name": "setJCOInstance", "class_name": "ECDsaCng", "index": 888, "label": 1}
{"input": "public void testBooleanArray() {\n        assertEquals(17 * 37, new HashCodeBuilder(17, 37).append((boolean[]) null).toHashCode());\n        boolean[] obj = new boolean[2];\n        assertEquals((17 * 37 + 1) * 37 + 1 , new HashCodeBuilder(17, 37).append(obj).toHashCode());\n        obj[0] = true;\n        assertEquals((17 * 37 + 0) * 37 + 1, new HashCodeBuilder(17, 37).append(obj).toHashCode());\n        obj[1] = false;\n        assertEquals( (17 * 37 + 0) * 37 + 1, new HashCodeBuilder(17, 37).append(obj).toHashCode());\n    }", "timestamp": "2022-02-13T19:44:43.869060Z", "repo_name": "SpoonLabs/nopol-experiments", "path": "/dataset/cl1/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java", "source": "the-stack-v2", "method_name": "testBooleanArray", "class_name": "HashCodeBuilderTest", "index": 889, "label": 1}
{"input": "public static boolean expansionFilesDelivered(Activity activity, int version) {\n\t\tfor (OBBData.XAPKFile xf : OBBData.xAPKS) {\n\t\t\tString fileName = Helpers.getExpansionAPKFileName(activity, xf.mIsMain, Integer.toString(version), OBBData.AppType);\n\t\t\tGameActivity.Log.debug(\"Checking for file : \" + fileName);\n\t\t\tString fileForNewFile = Helpers.generateSaveFileName(activity, fileName);\n\t\t\tString fileForDevFile = Helpers.generateSaveFileNameDevelopment(activity, fileName);\n\t\t\tGameActivity.Log.debug(\"which is really being resolved to : \" + fileForNewFile + \"\\n Or : \" + fileForDevFile);\n\t\t\tif (Helpers.doesFileExist(activity, fileName, xf.mFileSize, false)) {\n\t\t\t\tGameActivity.Log.debug(\"Found OBB here: \" + fileForNewFile);\n\t\t\t}\n\t\t\telse if (Helpers.doesFileExistDev(activity, fileName, xf.mFileSize, false)) {\n\t\t\t\tGameActivity.Log.debug(\"Found OBB here: \" + fileForDevFile);\n\t\t\t}\n\t\t\telse return false;\n\t\t}\n\t\treturn true;\n\t}", "timestamp": "2023-07-28T02:04:43.552967Z", "repo_name": "APTist/ProjectShooter", "path": "/Build/Android/src/com/epicgames/ue4/DownloadShim.java", "source": "the-stack-v2", "method_name": "expansionFilesDelivered", "class_name": "DownloadShim", "index": 890, "label": 1}
{"input": "@JavascriptInterface\n    public void readyfordisplay() {\n        Label_0030: {\n            if (this.adMarvelInternalWebViewReference == null) {\n                break Label_0030;\n            }\n            final d d = (d)this.adMarvelInternalWebViewReference.get();\n            if (d == null || !d.b()) {\n                break Label_0030;\n            }\n            return;\n        }\n        if (this.isInterstitial) {\n            return;\n        }\n        final m m = (m)this.adMarvelWebViewReference.get();\n        if (m == null) {\n            return;\n        }\n        if (!m.q.get()) {\n            m.p.set(false);\n            return;\n        }\n        if (m.b.compareAndSet(true, false) && com.admarvel.android.ads.m.a(m.s) != null) {\n            com.admarvel.android.ads.m.a(m.s).a(m, this.adMarvelAd);\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "readyfordisplay", "class_name": "AdMarvelWebViewJSInterface", "index": 891, "label": 1}
{"input": "public static File createExcelFile(Workbook workbook, String fileName) {\n\t\tOutputStream stream = null;\n\t\tFile file = null;\n\t\ttry {\n\t\t\tfile = File.createTempFile(fileName, \".xlsx\");\n\t\t\tstream = new FileOutputStream(file.getAbsoluteFile());\n\t\t\tworkbook.write(stream);\n\t\t} catch (FileNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\tIOUtils.closeQuietly(workbook);\n\t\t\tIOUtils.closeQuietly(stream);\n\t\t}\n\t\treturn file;\n\t}", "timestamp": "2023-08-09T06:22:21.182771Z", "repo_name": "kirkliu168/mango-new", "path": "/mango-common/src/main/java/com/kirk/mango/common/utils/PoiUtils.java", "source": "the-stack-v2", "method_name": "createExcelFile", "class_name": "PoiUtils", "index": 892, "label": 1}
{"input": "protected void processTaskBaseline(Row row)\r\n   {\r\n      Integer id = row.getInteger(\"TASK_UID\");\r\n      Task task = m_project.getTaskByUniqueID(id);\r\n      if (task != null)\r\n      {\r\n         int index = row.getInt(\"TB_BASE_NUM\");\r\n\r\n         task.setBaselineDuration(index, MPDUtility.getAdjustedDuration(m_project, row.getInt(\"TB_BASE_DUR\"), MPDUtility.getDurationTimeUnits(row.getInt(\"TB_BASE_DUR_FMT\"))));\r\n         task.setBaselineStart(index, row.getDate(\"TB_BASE_START\"));\r\n         task.setBaselineFinish(index, row.getDate(\"TB_BASE_FINISH\"));\r\n         task.setBaselineWork(index, row.getDuration(\"TB_BASE_WORK\"));\r\n         task.setBaselineCost(index, row.getCurrency(\"TB_BASE_COST\"));\r\n      }\r\n   }", "timestamp": "2023-08-17T13:13:07.711932Z", "repo_name": "heekye/ProjectLibre", "path": "/projectlibre_exchange/src/net/sf/mpxj/mpd/MPD9AbstractReader.java", "source": "the-stack-v2", "method_name": "processTaskBaseline", "class_name": "MPD9AbstractReader", "index": 893, "label": 1}
{"input": "public void setLastModifiedDate(Instant lastModifiedDate) {\n        this.lastModifiedDate = lastModifiedDate;\n    }", "timestamp": "2023-05-15T10:11:01.186595Z", "repo_name": "awabcodes/open-warehouse-management", "path": "/src/main/java/com/openwarehouse/openwarehousemanagement/domain/AbstractAuditingEntity.java", "source": "the-stack-v2", "method_name": "setLastModifiedDate", "class_name": "AbstractAuditingEntity", "index": 894, "label": 1}
{"input": "@Override \n        public void writeSmsToRuimResponse(RadioResponseInfo info, int index) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            _hidl_request.writeInt32(index);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(86, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "writeSmsToRuimResponse", "class_name": "Proxy", "index": 895, "label": 1}
{"input": "@Override\r\n\tpublic void onRemoveFromLoadedWorld()\r\n\t{\r\n\t\tsuper.onRemoveFromLoadedWorld();\r\n\t\tFarCoreEnergyHandler.onRemoveFromWorld(this);\r\n\t}", "timestamp": "2021-01-25T15:19:00.440484Z", "repo_name": "ueyudiud/FLE", "path": "/src/main/java/fle/api/tile/kinetic/TEGearBoxBase.java", "source": "the-stack-v2", "method_name": "onRemoveFromLoadedWorld", "class_name": "TEGearBoxBase", "index": 896, "label": 1}
{"input": "@Bean\n\tpublic LocalSessionFactoryBean sessionFactory(){\n\t\tLocalSessionFactoryBean sessionFactoryBean = new LocalSessionFactoryBean();\n\t\tsessionFactoryBean.setDataSource(dataSource());\n\t\tsessionFactoryBean.setPackagesToScan(\"com.edv.demo.model\");\n\t\tsessionFactoryBean.setHibernateProperties(hibernateProperties());\n\t\treturn sessionFactoryBean;\n\t}", "timestamp": "2023-01-24T12:51:37.097640Z", "repo_name": "ruchva/rest-api-demo", "path": "/src/main/java/com/edv/demo/configuration/DataBaseConfiguration.java", "source": "the-stack-v2", "method_name": "sessionFactory", "class_name": "DataBaseConfiguration", "index": 897, "label": 1}
{"input": "public static HashSet<Integer> allLengths(int k, int shorter, int longer) {\n\t\tHashSet<Integer> lengths = new HashSet<Integer>();\n\t\tgetAllLengths(k, 0, shorter, longer, lengths);\n\t\treturn lengths;\n\t}", "timestamp": "2023-07-11T04:44:58.018418Z", "repo_name": "gspyadav/LeetCodeFishercoder", "path": "/src/CrackingTheCodingInterview/Q16_11_Diving_Board/QuestionA.java", "source": "the-stack-v2", "method_name": "allLengths", "class_name": "QuestionA", "index": 898, "label": 1}
{"input": "public Criteria andMsgIdGreaterThanOrEqualTo(String value) {\r\n            addCriterion(\"msg_id >=\", value, \"msgId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andMsgIdGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 899, "label": 1}
{"input": "public void setCacheObjectMaxSize(int cacheObjectMaxSize) {\n        this.cacheObjectMaxSize = cacheObjectMaxSize;\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setCacheObjectMaxSize", "class_name": "StandardContext", "index": 900, "label": 1}
{"input": "@Override\n    public boolean equals(final Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (obj == null) {\n            return false;\n        }\n        if (getClass() != obj.getClass()) {\n            return false;\n        }\n        AttrRepoTO other = (AttrRepoTO) obj;\n        return new EqualsBuilder().\n                append(key, other.key).\n                append(description, other.description).\n                append(state, other.state).\n                append(order, other.order).\n                append(items, other.items).\n                append(conf, other.conf).\n                build();\n    }", "timestamp": "2023-05-05T01:18:43.168406Z", "repo_name": "andrea-patricelli/syncope", "path": "/common/am/lib/src/main/java/org/apache/syncope/common/lib/to/AttrRepoTO.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "AttrRepoTO", "index": 901, "label": 1}
{"input": "public static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tSystem.out.println(\"Please, enter size array\");\n\t\tint sizeArray = scanner.nextInt();\n\t\tint array[] = new int[sizeArray];\n\t\tint numbers = 0;\n\t\tint maxDigits = 0;\n\t\tint minDigits = 0;\n\t\tint i = 0;\n\t\t\t\twhile ( i < sizeArray) {\n\t\t\t\t\tnumbers = scanner.nextInt();\n\t\t\t\t\tarray[i] = numbers;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\n\t\tSystem.out.print(\"Amount local maximum: \");\n\t\t\tfor (i = 0; i <= sizeArray-2; i++) {  \n\t\t \t\tif ( i != 0) {\n\t\t\t\t\tif (array[i-1] < array[i]) {\n\t\t\t\t\t\tif(array[i] > array[i+1]) {\n\t\t\t\t\t\t\tmaxDigits = maxDigits + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \t\n\t\tSystem.out.println(maxDigits);\n\t\tSystem.out.print(\"Amount local minimum: \");\n\t\t\tfor (i = 0; i <= sizeArray-2; i++) {\n\t\t\t\tif ( i != 0) {\n\t\t\t\t\tif (array[i-1] > array[i]) {\n\t\t\t\t\t\tif (array[i] < array[i+1]) {\n\t\t\t\t\t\t\tminDigits = minDigits + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\tSystem.out.println(minDigits);\n\t}", "timestamp": "2020-05-15T06:22:13.515337Z", "repo_name": "HaKooNa-MaTaTa/IGONIN_JAVA_120", "path": "/HomeWorks/Homework_5/Program.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Program", "index": 902, "label": 1}
{"input": "public void clearMetaInfo() {\n        super.clearMetaInfo();\n        mBlurScrimImage.transitionToDefaultState();\n    }", "timestamp": "2020-04-13T03:12:46.332070Z", "repo_name": "Forsakenrox/Eleven", "path": "/src/main/java/org/lineageos/eleven/ui/activities/SlidingPanelActivity.java", "source": "the-stack-v2", "method_name": "clearMetaInfo", "class_name": "SlidingPanelActivity", "index": 903, "label": 1}
{"input": "private void writeToJar(String fileName, ByteSource stubClassBytes) throws IOException {\n      putEntry(jar, fileName);\n      stubClassBytes.copyTo(jar);\n      jar.closeEntry();\n    }", "timestamp": "2021-01-18T08:33:02.435393Z", "repo_name": "bocon13/buck", "path": "/src/com/facebook/buck/jvm/java/abi/StubJar.java", "source": "the-stack-v2", "method_name": "writeToJar", "class_name": "CreateStubAction", "index": 904, "label": 1}
{"input": "public void print()\n    {\n        System.out.format(\"%n %s \", this.pilotName);\n        System.out.format(\"%n %s \", this.pilotDescription);\n        System.out.format(\"%n %s \", this.skill1);\n        System.out.format(\"%n %s \", this.skill1Description);\n        System.out.format(\"%n %s \", this.skill2);\n        System.out.format(\"%n %s \", this.skill2Description);\n        System.out.format(\"%n %s \", this.skill3);\n        System.out.format(\"%n %s \", this.skill3Description);\n        System.out.format(\"%n %s \", this.skill4);\n        System.out.format(\"%n %s \", this.skill4Description);\n        System.out.format(\"%n %s \", this.imgUrl);\n\n\n    }", "timestamp": "2022-11-07T07:20:46.645170Z", "repo_name": "gellatin/discordTestBot", "path": "/src/main/java/iSBot/pilot.java", "source": "the-stack-v2", "method_name": "print", "class_name": "pilot", "index": 905, "label": 1}
{"input": "public Criteria andVdef19LessThanOrEqualTo(String value) {\r\n            addCriterion(\"VDEF19 <=\", value, \"vdef19\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef19LessThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 906, "label": 1}
{"input": "@Override \n        public void getSignalStrengthResponse(RadioResponseInfo info, SignalStrength sigStrength) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            sigStrength.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(19, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "getSignalStrengthResponse", "class_name": "Proxy", "index": 907, "label": 1}
{"input": "private static List<Pair<String, String>> querify(String[] queries1) {\n    final List<Pair<String, String>> list = new ArrayList<>();\n    for (int i = 0; i < queries1.length; i++) {\n      String query = queries1[i];\n      String expected = null;\n      if (i + 1 < queries1.length\n          && queries1[i + 1] != null\n          && !queries1[i + 1].startsWith(\"select\")) {\n        expected = queries1[++i];\n      }\n      list.add(Pair.of(query, expected));\n    }\n    return list;\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "querify", "class_name": "JdbcTest", "index": 908, "label": 1}
{"input": "public IMDBFacade facade() {\n\t\tif (facade == null) {\n\t\t\tApplicationContext context = new ClassPathXmlApplicationContext(\"beans.xml\");\n\t\t\tfacade = (IMDBFacade) context.getBean(\"facade\");\n\t\t}\n\t\treturn facade;\n\t}", "timestamp": "2021-01-10T10:23:29.145842Z", "repo_name": "iurebrandao/Imdb", "path": "/imdb/src/main/java/br/unb/cic/imdb/util/ContextoID.java", "source": "the-stack-v2", "method_name": "facade", "class_name": "ContextoID", "index": 909, "label": 1}
{"input": "public void internalLockRecord(OIdentifiable iRecord, OStorage.LOCKING_STRATEGY lockingStrategy, long timeout) {\n    final ORID rid = new ORecordId(iRecord.getIdentity());\n    OTransactionAbstract transaction = (OTransactionAbstract) getTransaction();\n    if (!transaction.isLockedRecord(iRecord)) {\n      if (lockingStrategy == OStorage.LOCKING_STRATEGY.EXCLUSIVE_LOCK)\n        ((OAbstractPaginatedStorage) getStorage().getUnderlying()).acquireWriteLock(rid, timeout);\n      else if (lockingStrategy == OStorage.LOCKING_STRATEGY.SHARED_LOCK)\n        ((OAbstractPaginatedStorage) getStorage().getUnderlying()).acquireReadLock(rid, timeout);\n      else\n        throw new IllegalStateException(\"Unsupported locking strategy \" + lockingStrategy);\n    }\n    transaction.trackLockedRecord(iRecord.getIdentity(), lockingStrategy);\n\n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "internalLockRecord", "class_name": "ODatabaseDocumentEmbedded", "index": 910, "label": 1}
{"input": "public static com.google.ads.googleads.v5.services.FeedItemOperation parseFrom(\n      byte[] data,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data, extensionRegistry);\n  }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "parseFrom", "class_name": "FeedItemOperation", "index": 911, "label": 1}
{"input": "@Override\n    public ASTNode visitLimitOffset(final LimitOffsetContext ctx) {\n        if (null != ctx.numberLiterals()) {\n            return new NumberLiteralLimitValueSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), ((NumberLiteralValue) visit(ctx.numberLiterals())).getValue().longValue());\n        }\n        return new ParameterMarkerLimitValueSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), ((ParameterMarkerValue) visit(ctx.parameterMarker())).getValue());\n    }", "timestamp": "2020-09-10T15:32:50.163756Z", "repo_name": "avalon566/incubator-shardingsphere", "path": "/shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/impl/PostgreSQLDMLVisitor.java", "source": "the-stack-v2", "method_name": "visitLimitOffset", "class_name": "PostgreSQLDMLVisitor", "index": 912, "label": 1}
{"input": "@RequestMapping(value = \"/\", method = RequestMethod.GET)\n\tpublic String home(Locale locale, Model model) {\n\t\tlogger.info(\"Welcome home! The client locale is {}.\", locale);\n\t\t\n\t\tDate date = new Date();\n\t\tDateFormat dateFormat = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, locale);\n\t\t\n\t\tString formattedDate = dateFormat.format(date);\n\t\t\n\t\tmodel.addAttribute(\"serverTime\", formattedDate );\n\t\t\n\t\treturn \"home\";\n\t}", "timestamp": "2022-12-22T05:56:28.581249Z", "repo_name": "gwagwagwak/SpringMVCFinalProject", "path": "/Springworkspace/test44444/src/main/java/kkk/ddd/sdfsdf/HomeController.java", "source": "the-stack-v2", "method_name": "home", "class_name": "HomeController", "index": 913, "label": 1}
{"input": "public int OnAttach(obj_id self) throws InterruptedException\n    {\n        setCondition(self, CONDITION_CONVERSABLE);\n        return SCRIPT_CONTINUE;\n    }", "timestamp": "2020-04-06T11:18:36.110302Z", "repo_name": "geralex/SWG-NGE", "path": "/dsrc/sku.0/sys.server/compiled/game/script/conversation/padawan_the_ring_02.java", "source": "the-stack-v2", "method_name": "OnAttach", "class_name": "padawan_the_ring_02", "index": 914, "label": 1}
{"input": "public void testBug209778() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/xy/Try.java\",\n\t\t\"package xy;\\n\" +\n\t\t\"\\n\" +\n\t\t\"public class Try {\\n\" +\n\t\t\"        void tryB(int tryKind) {\\n\" +\n\t\t\"                @Constants(Try.class) int tryCopy, tryCopy2= tryKind;\\n\" +\n\t\t\"        }\\n\" +\n\t\t\"        @Constants(value= Try.class) Object fTryA, fTryB;\\n\" +\n\t\t\"}\\n\" +\n\t\t\"\\n\" +\n\t\t\"package xy;\\n\"0 +\n\t\t\"package xy;\\n\"1 +\n\t\t\"package xy;\\n\"2\n\t);\n\tIType type = this.workingCopies[0].getType(\"package xy;\\n\"3);\n\tTypeReferenceCollector collector = new TypeReferenceCollector();\n\tsearch(type, REFERENCES, EXACT_RULE, getJavaSearchScope(), collector);\n\tassertSearchResults(\n\t\t\"package xy;\\n\"4 +\n\t\t\"package xy;\\n\"5,\n\t\tcollector\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug209778", "class_name": "JavaSearchBugsTests", "index": 915, "label": 1}
{"input": "public void add(E value)\r\n    {\r\n        int position = indexOf(value);\r\n        data.add(position,value);\r\n    }", "timestamp": "2021-01-12T12:52:49.044049Z", "repo_name": "AMaybellP/HdT8", "path": "/VectorHeap.java", "source": "the-stack-v2", "method_name": "add", "class_name": "VectorHeap", "index": 916, "label": 1}
{"input": "public void testBug6930_AllConstructorDeclarations03() throws Exception {\n\ttry {\n\t\tIJavaProject p = createJavaProject(\"P\", new String[] {\"src\"}, new String[] {}, \"bin\");\n\t\t\n\t\tcreateFolder(\"/P/src/p6930\");\n\t\t\n\t\tcreateFile(\n\t\t\t\t\"/P/src/p6930/AllConstructorDeclarations03.java\",\n\t\t\t\t\"package p6930;\\n\" +\n\t\t\t\t\"public class AllConstructorDeclarations03 {\\n\" +\n\t\t\t\t\"  public AllConstructorDeclarations03() {}\\n\" +\n\t\t\t\t\"  public AllConstructorDeclarations03(Object o) {}\\n\" +\n\t\t\t\t\"  public AllConstructorDeclarations03(Object o, String s) {}\\n\" +\n\t\t\t\t\"src\"0);\n\t\t\n\t\tcreateFile(\n\t\t\t\t\"src\"1,\n\t\t\t\t\"package p6930;\\n\" +\n\t\t\t\t\"src\"3 +\n\t\t\t\t\"src\"0);\n\t\trefresh(p);\n\t\t\n\t\tConstructorDeclarationsCollector requestor = new ConstructorDeclarationsCollector();\n\t\tsearchAllConstructorDeclarations(\"src\"5, SearchPattern.R_PREFIX_MATCH, requestor);\n\t\tassertSearchResults(\n\t\t\t\"src\"6 + \n\t\t\t\"src\"7 + \n\t\t\t\"src\"8 + \n\t\t\t\"src\"9,\n\t\t\trequestor\n\t\t);\n\t} finally {\n\t\tdeleteProject(\"P\");\n\t}\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug6930_AllConstructorDeclarations03", "class_name": "JavaSearchBugsTests", "index": 917, "label": 1}
{"input": "@RequestMapping(\"updateMediaInfo\")\n\tpublic CommonReturnType updateMediaInfo(MediaVo mediaVo) {\n\t\ttry {\n\t\t\tthis.mediaService.updateMediaInfo(mediaVo);\n\t\t\treturn CommonReturnType.MODIFY_SUCCESS;\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\treturn CommonReturnType.MODIFY_FAILURE;\n\t\t}\n\t}", "timestamp": "2023-05-04T09:37:44.111496Z", "repo_name": "1119537395/DigitalMediaMIS", "path": "/src/main/java/com/fish/business/controller/MediaController.java", "source": "the-stack-v2", "method_name": "updateMediaInfo", "class_name": "MediaController", "index": 918, "label": 1}
{"input": "public void existSession(Long presenterIdx, String userType) throws IOException {\n\t\tif (!WebSocketSessionHashMap.isSessionExist(presenterIdx)) {\n\t\t\tif (liveCheckService.checkLiveRoom(presenterIdx)) {\n\t\t\t\tif (userType.equals(UserType.PRESENTER.getUserType()))\n\t\t\t\t\tthrow new DisconnectSessionException(ResponseMessage.RECONNECT_SESSION);\n\t\t\t\telse\n\t\t\t\t\tthrow new NotFoundException(ResponseMessage.NOT_FOUND_SESSION);\n\t\t\t} else {\n\t\t\t\tthrow new NotFoundException(ResponseMessage.NOT_LIVE_ROOM_SESSION);\n\t\t\t}\n\t\t}\n\t}", "timestamp": "2023-03-04T05:06:02.146891Z", "repo_name": "yougahee/chatting-server", "path": "/chatting_server/src/main/java/com/morse/chatting_server/service/ChattingService.java", "source": "the-stack-v2", "method_name": "existSession", "class_name": "ChattingService", "index": 919, "label": 1}
{"input": "public static IRequestBody buildDefault() {\n        return new RequestBody(BodyType.NONE, null, null);\n    }", "timestamp": "2023-07-28T05:30:04.301660Z", "repo_name": "osvaldogh85/rest_tinny", "path": "/RestfulClient/src/main/java/com/restfulclient/impl/RequestBody.java", "source": "the-stack-v2", "method_name": "buildDefault", "class_name": "RequestBody", "index": 920, "label": 1}
{"input": "public Object getDefaultValue(Class typeHint)\n    {\n        if (typeHint == null)\n            typeHint = ScriptRuntime.StringClass;\n        return super.getDefaultValue(typeHint);\n    }", "timestamp": "2016-09-05T17:02:01.575534Z", "repo_name": "thegreatape/slim", "path": "/yuicompressor-2.4.2/rhino1_6R7/src/org/yuimozilla/javascript/NativeDate.java", "source": "the-stack-v2", "method_name": "getDefaultValue", "class_name": "NativeDate", "index": 921, "label": 1}
{"input": "@Override\n\tpublic void add(Object obj) {\n\t\t\n        \n\t\tSession session = HibernateSessionFactory.getSession();\n        \n\t\tTransaction tx = session.beginTransaction();\n        \n\t\tsession.save(obj);\n        \n\t\ttx.commit();\n        \n\t\tHibernateSessionFactory.closeSession();\t\t\t\n\t}", "timestamp": "2021-09-09T14:26:39.388603Z", "repo_name": "1787418735/163G4G", "path": "/Hibernate/T7/03梁凯杰/上机作业/HBT07/src/com/qhit/lh/g4/lkj/t7/dao/impl/DaseDaoImpl.java", "source": "the-stack-v2", "method_name": "add", "class_name": "DaseDaoImpl", "index": 922, "label": 1}
{"input": "public void setSnapshotSizeFactor(double snapshotSizeFactor) {\n        this.snapshotSizeFactor = snapshotSizeFactor;\n    }", "timestamp": "2021-11-23T14:30:09.439604Z", "repo_name": "airtimemedia/zookeeper", "path": "/src/java/main/org/apache/zookeeper/server/ZKDatabase.java", "source": "the-stack-v2", "method_name": "setSnapshotSizeFactor", "class_name": "ZKDatabase", "index": 923, "label": 1}
{"input": "@Override\n  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {\n    super.initialize(httpClientRequest);\n  }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "initialize", "class_name": "Doubleclicksearch", "index": 924, "label": 1}
{"input": "public final ExpressionContext expression() throws RecognitionException {\n\t\treturn expression(0);\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "expression", "class_name": "JavaParser", "index": 925, "label": 1}
{"input": "public void sendMessage(String message, String toUser) {\n\t\t\n\t\tsuper.sendMessage(message, toUser);\n\t}", "timestamp": "2021-01-20T09:32:13.700080Z", "repo_name": "PlumpMath/designpattern-46", "path": "/Bridge/src/com/test3/CommonMessage.java", "source": "the-stack-v2", "method_name": "sendMessage", "class_name": "CommonMessage", "index": 926, "label": 1}
{"input": "public List setAdvertiserId(java.lang.Long advertiserId) {\n        this.advertiserId = advertiserId;\n        return this;\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setAdvertiserId", "class_name": "List", "index": 927, "label": 1}
{"input": "@Before\n    public void initTest() {\n        entryCategoryRepository.deleteAll();\n        entryCategory = createEntity();\n    }", "timestamp": "2021-06-26T15:26:23.855027Z", "repo_name": "stupant/timesheet", "path": "/src/test/java/com/wbs/web/rest/EntryCategoryResourceIntTest.java", "source": "the-stack-v2", "method_name": "initTest", "class_name": "EntryCategoryResourceIntTest", "index": 928, "label": 1}
{"input": "@Override\r\n    public double perimetro() {\r\n        double perimetro = (this.base + this.altezza) * 2;\r\n        return perimetro;\r\n    }", "timestamp": "2020-08-30T21:28:45.324457Z", "repo_name": "barileanna/4AInf1920", "path": "/022Poligono/src/it/itis/cuneo/Rettangolo.java", "source": "the-stack-v2", "method_name": "perimetro", "class_name": "Rettangolo", "index": 929, "label": 1}
{"input": "private String makeURI(String uri, Map<? extends Object, ? extends Object> kv) {\r\n\t\treturn uri + \"?\" + Joiner.on(\"&\").withKeyValueSeparator(\"=\").join(kv);\r\n\t}", "timestamp": "2022-11-12T07:05:46.773336Z", "repo_name": "andy521/Ardulink-2", "path": "/ardulink-mail/src/test/java/org/ardulink/mail/camel/ArdulinkMailOnCamelIntegrationTest.java", "source": "the-stack-v2", "method_name": "makeURI", "class_name": "ArdulinkMailOnCamelIntegrationTest", "index": 930, "label": 1}
{"input": "public Quaternion multiply(Quaternion b) {\r\n\t\tfloat w0 = w * b.w - x * b.x - y * b.y - z * b.z;\r\n\t\tfloat x0 = w * b.x + x * b.w + y * b.z - z * b.y;\r\n\t\tfloat y0 = w * b.y - x * b.z + y * b.w + z * b.x;\r\n\t\tfloat z0 = w * b.z + x * b.y - y * b.x + z * b.w;\r\n\t\treturn new Quaternion(w0, x0, y0, z0);\r\n\t}", "timestamp": "2021-01-10T10:44:03.958737Z", "repo_name": "helios57/phonedrone", "path": "/phonedrohne/Quaternion/src/ch/sharpsoft/quaternion/util/Quaternion.java", "source": "the-stack-v2", "method_name": "multiply", "class_name": "Quaternion", "index": 931, "label": 1}
{"input": "public final void optoutBackStackBuilder(Boolean bool) {\n        this.backStackBuilderOptoutFlag = bool.booleanValue();\n    }", "timestamp": "2020-07-22T15:46:54.149313Z", "repo_name": "cmFodWx5YWRhdjEyMTA5/Gaana2", "path": "/sources/com/moengage/push/PushManager.java", "source": "the-stack-v2", "method_name": "optoutBackStackBuilder", "class_name": "PushManager", "index": 932, "label": 1}
{"input": "public Criteria andUserStNameNotLike(String value) {\r\n            addCriterion(\"user_st_name not like\", value, \"userStName\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2022-12-10T20:39:24.451742Z", "repo_name": "TangHui-ops/myProject", "path": "/后端/weixingxiaocx/src/main/java/cn/bdqn/mbg/model/UserStateTypeExample.java", "source": "the-stack-v2", "method_name": "andUserStNameNotLike", "class_name": "GeneratedCriteria", "index": 933, "label": 1}
{"input": "public void listarDados(String nomeTabela) {\n        String result = \"\";\n        try {\n            String sql = \"select * from \"+nomeTabela;\n            PreparedStatement ps = conectarBanco().prepareStatement(sql);\n            ResultSet rs = ps.executeQuery();\n            while (rs.next()) {\n                result += rs.getInt(\"matricula\") + \", \" + rs.getString(\"nome\") + \", \"\n                        + rs.getString(\"curso\") + \", \" + rs.getString(\"disciplina\") + \", \"\n                        + rs.getInt(\"select * from \"0) + \", \" + rs.getInt(\"select * from \"2) + \", \" + rs.getInt(\"select * from \"4) + \"select * from \"5;\n            }\n            rs.close();\n            desconectarBanco();\n        } catch (SQLException e) {\n            System.out.println(\"select * from \"6 + e);\n        }\n        System.out.println(result);\n    }", "timestamp": "2016-09-05T09:25:30.232129Z", "repo_name": "ChristianARamos/JAVA-BancoArq", "path": "/Banco/Banco.java", "source": "the-stack-v2", "method_name": "listarDados", "class_name": "Banco", "index": 934, "label": 1}
{"input": "@Override\n\tpublic String toString() {\n\t\treturn \"Student [studentId=\" + studentId + \", rollNumber=\" + rollNumber + \", studentName=\" + studentName\n\t\t\t\t+ \", avgScore=\" + avgScore + \", dob=\" + dob + \"]\";\n\t}", "timestamp": "2020-09-06T15:29:50.077800Z", "repo_name": "anerishah1997/JPA_Day3", "path": "/JPAOneToOne-Bi/src/com/lti/model/Student.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "Student", "index": 935, "label": 1}
{"input": "@Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        \n        \n        \n        int id = item.getItemId();\n\n        \n        if (id == R.id.action_settings) {\n            return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }", "timestamp": "2020-03-29T14:22:44.535521Z", "repo_name": "k-siva/learn-app", "path": "/PictureGallery/app/src/main/java/com/example/asiablr/picturegallery/GalleryMain.java", "source": "the-stack-v2", "method_name": "onOptionsItemSelected", "class_name": "GalleryMain", "index": 936, "label": 1}
{"input": "public static String Objs_To_String(Object obj)\n  {\n    String res=null;\n    int c;\n    Object[] objs;\n\n    if (obj instanceof java.util.Collection<?>)\n    {\n      objs=((java.util.Collection<?>)obj).toArray();\n      for (c=0; c<objs.length; c++)\n      {\n        res=Obj_To_String(objs[c]);\n      }\n    }\n    else\n    {\n      res=Obj_To_String(obj);\n    }\n\t\treturn res;\n  }", "timestamp": "2021-07-04T15:23:27.511120Z", "repo_name": "netssrmrz/coralracer", "path": "/AppTemplate/src/main/java/rs/android/util/Type.java", "source": "the-stack-v2", "method_name": "Objs_To_String", "class_name": "Type", "index": 937, "label": 1}
{"input": "@PluginFactory\n    public static CustomLog4j2Appender createAppender(\n            @PluginAttribute(value = \"name\") String name,\n            @PluginElement(\"Layout\") Layout<? extends Serializable> layout,\n            @PluginElement(\"Filter\") Filter filter,\n            @PluginAttribute(value = \"ignoreExceptions\", defaultBoolean = true) boolean ignoreExceptions) {\n\n        return new CustomLog4j2Appender(name, filter, layout, ignoreExceptions);\n    }", "timestamp": "2022-08-31T06:49:18.082720Z", "repo_name": "wso2-incubator/samples-is", "path": "/custom-log4j2-appender/appender/src/main/java/org/wso2/sample/custom/log4j2/appender/CustomLog4j2Appender.java", "source": "the-stack-v2", "method_name": "createAppender", "class_name": "CustomLog4j2Appender", "index": 938, "label": 1}
{"input": "@Override\r\n    public Object build() {\r\n      return new ProtectionElement(\r\n          uuid, PsshAtomUtil.buildPsshAtom(uuid, initData), buildTrackEncryptionBoxes(initData));\r\n    }", "timestamp": "2020-12-10T15:15:05.202410Z", "repo_name": "AhabweEmmanuel/Marlia", "path": "/TMessagesProj/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java", "source": "the-stack-v2", "method_name": "build", "class_name": "ProtectionParser", "index": 939, "label": 1}
{"input": "public void resume() {\n        if (this.playerState == 2) {\n            mute(false);\n            LogUtil.i(TAG, \"resume\");\n            if (isPlaying()) {\n                showPauseView(false);\n                return;\n            }\n            entryResumeState();\n            this.mediaPlayer.setOnSeekCompleteListener(null);\n            this.mediaPlayer.start();\n            this.mHandler.sendEmptyMessage(1);\n            showPauseView(true);\n        }\n    }", "timestamp": "2020-11-25T21:02:17.790224Z", "repo_name": "pk1z/wladimir-computin-FimiX8-RE-App", "path": "/sources/com/fimi/album/widget/CustomVideoView.java", "source": "the-stack-v2", "method_name": "resume", "class_name": "CustomVideoView", "index": 940, "label": 1}
{"input": "@JavascriptInterface\n    public void finishVideo() {\n        if (!this.isInterstitial && Version.getAndroidSDKVersion() >= 14) {\n            Logging.log(\"window.ADMARVEL.finishVideo()\");\n            final m m = (m)this.adMarvelWebViewReference.get();\n            if (m != null && this.adMarvelInternalWebViewReference.get() != null) {\n                new Handler(Looper.getMainLooper()).post((Runnable)new m$m(m));\n            }\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "finishVideo", "class_name": "AdMarvelWebViewJSInterface", "index": 941, "label": 1}
{"input": "public void validate(ByteBuffer bytes) throws MarshalException\n    {\n        if (bytes.remaining() != 8 && bytes.remaining() != 0)\n            throw new MarshalException(String.format(\"Expected 8 or 0 byte long for date (%d)\", bytes.remaining()));\n    }", "timestamp": "2021-01-10T08:02:38.964281Z", "repo_name": "lalithsuresh/cassandra-c3", "path": "/src/java/org/apache/cassandra/serializers/TimestampSerializer.java", "source": "the-stack-v2", "method_name": "validate", "class_name": "TimestampSerializer", "index": 942, "label": 1}
{"input": "private void QUADRADOActionPerformed(java.awt.event.ActionEvent evt) {\n        double N1, R;\n        N1= Double.parseDouble(NUM1.getText());\n        R= N1 * N1;RESULTADO.setText(String.valueOf(R));\n    }", "timestamp": "2023-06-22T16:51:24.691992Z", "repo_name": "Guizal/Java", "path": "/src/ExemploCalculadora.java", "source": "the-stack-v2", "method_name": "QUADRADOActionPerformed", "class_name": "ExemploCalculadora", "index": 943, "label": 1}
{"input": "public void assertEmptiness() {\n        for (GameTile[] row : tiles)\n            for (GameTile tile : row)\n                assert (tile.hasPiece == false);\n    }", "timestamp": "2020-04-13T14:53:33.649133Z", "repo_name": "OliveIsLazy/Amazons2018", "path": "/Board.java", "source": "the-stack-v2", "method_name": "assertEmptiness", "class_name": "Board", "index": 944, "label": 1}
{"input": "protected void addCriterion(String condition, Object value1, Object value2, String property) {\r\n            if (value1 == null || value2 == null) {\r\n                throw new RuntimeException(\"Between values for \" + property + \" cannot be null\");\r\n            }\r\n            criteria.add(new Criterion(condition, value1, value2));\r\n        }", "timestamp": "2021-05-08T12:41:18.691106Z", "repo_name": "suoyiguke/weixinparent", "path": "/weixinpojo/src/main/java/com/yinkai/entities/ImageExample.java", "source": "the-stack-v2", "method_name": "addCriterion", "class_name": "GeneratedCriteria", "index": 945, "label": 1}
{"input": "public void testBug100695d() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b100695/Test.java\",\n\t\t\"package b100695;\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"\t  public Class<Class>[] foo(Class<Class>[] a) {\\n\" +\n\t\t\"\t\t  return a;\\n\" +\n\t\t\"\t  }\\n\" +\n\t\t\"\t  void bar() {\\n\" +\n\t\t\"\t\t  foo(new Class[0]);\\n\" +\n\t\t\"\t  }\\n\" +\n\t\t\"}\\n\"\n\t);\n\tIMethod method = this.workingCopies[0].getType(\"package b100695;\\n\"0).getMethods()[0];\n\tsearch(method, ALL_OCCURRENCES);\n\tassertSearchResults(\n\t\t\"package b100695;\\n\"1 +\n\t\t\"package b100695;\\n\"2\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug100695d", "class_name": "JavaSearchBugsTests", "index": 946, "label": 1}
{"input": "public void testBug80264_MethodsIgnoreBothTypes() throws CoreException, JavaModelException {\n\tsetUpBug80264_Methods();\n\tIType type = this.workingCopies[0].getType(\"Methods\");\n\tIMethod[] methods = type.getMethods();\n\tsearch(methods[0], DECLARATIONS|IGNORE_DECLARING_TYPE|IGNORE_RETURN_TYPE);\n\tsearch(methods[1], DECLARATIONS|IGNORE_DECLARING_TYPE|IGNORE_RETURN_TYPE);\n\tassertSearchResults(\n\t\t\"src/b80264/Methods.java Methods b80264.Methods.stable() [stable] EXACT_MATCH\\n\" +\n\t\t\"src/b80264/Methods.java Methods b80264.MethodsSub.stable() [stable] EXACT_MATCH\\n\" +\n\t\t\"src/b80264/Methods.java Methods b80264.MethodsOther.stable() [stable] EXACT_MATCH\\n\" +\n\t\t\"src/b80264/Methods.java Methods b80264.Methods.covariant() [covariant] EXACT_MATCH\\n\" +\n\t\t\"src/b80264/Methods.java MethodsSub b80264.MethodsSub.covariant() [covariant] EXACT_MATCH\\n\" +\n\t\t\"src/b80264/Methods.java Methods b80264.MethodsOther.covariant() [covariant] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug80264_MethodsIgnoreBothTypes", "class_name": "JavaSearchBugsTests", "index": 947, "label": 1}
{"input": "@Override \n        public void iccTransmitApduBasicChannelResponse(RadioResponseInfo info, IccIoResult result) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            result.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(104, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "iccTransmitApduBasicChannelResponse", "class_name": "Proxy", "index": 948, "label": 1}
{"input": "public void testBoolean() {\n        assertEquals(17 * 37 + 0, new HashCodeBuilder(17, 37).append(true).toHashCode());\n        assertEquals(17 * 37 + 1, new HashCodeBuilder(17, 37).append(false).toHashCode());\n    }", "timestamp": "2022-02-13T19:44:43.869060Z", "repo_name": "SpoonLabs/nopol-experiments", "path": "/dataset/cl1/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java", "source": "the-stack-v2", "method_name": "testBoolean", "class_name": "HashCodeBuilderTest", "index": 949, "label": 1}
{"input": "public InboxForwarderTestResult putMatchesItem(String key, Boolean matchesItem) {\n    this.matches.put(key, matchesItem);\n    return this;\n  }", "timestamp": "2023-06-24T02:46:29.757016Z", "repo_name": "mailslurp/mailslurp-client-java", "path": "/src/main/java/com/mailslurp/models/InboxForwarderTestResult.java", "source": "the-stack-v2", "method_name": "putMatchesItem", "class_name": "InboxForwarderTestResult", "index": 950, "label": 1}
{"input": "public Criteria andMeasureEqualTo(String value) {\r\n            addCriterion(\"measure =\", value, \"measure\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andMeasureEqualTo", "class_name": "GeneratedCriteria", "index": 951, "label": 1}
{"input": "@Test\n    public void saveTest(){\n        ProductInfo productInfo = new ProductInfo();\n        productInfo.setProductId(\"123456888\");\n        productInfo.setProductName(\"皮蛋粥\");\n        productInfo.setProductPrice(new BigDecimal(3));\n        productInfo.setProductStock(100);\n        productInfo.setProductDescription(\"很好喝的粥\");\n        productInfo.setProductIcon(\"http://xxxxx.jpg\");\n        productInfo.setProductStatus(0);\n        productInfo.setCategoryType(2);\n        ProductInfo result = repository.save(productInfo);\n        Assert.assertNotNull(result);\n    }", "timestamp": "2020-06-17T13:19:00.983969Z", "repo_name": "AngZiZi/sell", "path": "/src/test/java/com/la/sell/repository/ProductInfoRepositoryTest.java", "source": "the-stack-v2", "method_name": "saveTest", "class_name": "ProductInfoRepositoryTest", "index": 952, "label": 1}
{"input": "public void setPasswordMatches(String passwordMatches) {\n        this.passwordMatches = passwordMatches;\n    }", "timestamp": "2022-08-27T21:18:38.305407Z", "repo_name": "chlebek-tomasz/library", "path": "/src/main/java/com/chlebek/library/Model/Form/UserForm.java", "source": "the-stack-v2", "method_name": "setPasswordMatches", "class_name": "UserForm", "index": 953, "label": 1}
{"input": "long readBigint() throws HsqlException {\n\n        boolean minus = false;\n\n        if (token.tokenType == Tokens.MINUS) {\n            minus = true;\n\n            read();\n        }\n\n        checkIsValue();\n\n        if (minus && token.dataType.typeCode == Types.SQL_NUMERIC\n                && LONG_MAX_VALUE_INCREMENT.equals(token.tokenValue)) {\n            read();\n\n            return Long.MIN_VALUE;\n        }\n\n        if (token.dataType.typeCode != Types.SQL_INTEGER\n                && token.dataType.typeCode != Types.SQL_BIGINT) {\n            throw Error.error(ErrorCode.X_42565);\n        }\n\n        long val = ((Number) token.tokenValue).longValue();\n\n        if (minus) {\n            val = -val;\n        }\n\n        read();\n\n        return val;\n    }", "timestamp": "2023-09-03T10:33:34.963710Z", "repo_name": "svn2github/hsqldb", "path": "/base/branches/odbcproto1/src/org/hsqldb/ParserBase.java", "source": "the-stack-v2", "method_name": "readBigint", "class_name": "ParserBase", "index": 954, "label": 1}
{"input": "static private void addParametricStateDeclaration(Properties p,\n            HashSet<String> cats) {\n        String specName = (String) p.getProperty(\"specName\");\n        String rvcPrefix = (String) p.getProperty(\"rvcPrefix\");\n        String ret = \"typedef struct monitor {\\n\" + \"  int __RVC_state;\\n\";\n        for (String cat : cats) {\n            ret += \"int \" + rvcPrefix + specName + cat + \";\\n\";\n        }\n        ret += \"} __RV_monitor;\\n\" + \"\\n\";\n        ret += FileUtils.extractFileFromJar(CFSM.class, \"cfg_monitor.h\");\n        p.setProperty(\"state declaration\", ret);\n    }", "timestamp": "2020-08-04T12:11:10.943286Z", "repo_name": "umangm/rv-monitor", "path": "/rv-monitor/src/main/java/com/runtimeverification/rvmonitor/logicpluginshells/fsm/CFSM.java", "source": "the-stack-v2", "method_name": "addParametricStateDeclaration", "class_name": "CFSM", "index": 955, "label": 1}
{"input": "public static void getStaffCards() {\n\t\tIStaff biz = (IStaff)BeanFactory.getBean(IStaff.class);\n\t\ttry {\n\t\t\tList<StaffCard> cards =  biz.getStaffCards(\"s001\");\n\t\t\tfor(StaffCard sc : cards) {\n\t\t\t\tSystem.out.println(sc.getSno() + \",\" + sc.getCtime() + \",\" + sc.getInfo());\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}", "timestamp": "2023-01-30T14:26:10.071805Z", "repo_name": "hp-xiao/StaffUser2", "path": "/StaffUser/src/com/icss/ui/TestStaffCards.java", "source": "the-stack-v2", "method_name": "getStaffCards", "class_name": "TestStaffCards", "index": 956, "label": 1}
{"input": "public boolean alteraTabela() throws Exception {\n        preparaPersistencia();\n\n        System.out.println(\"Adicionando FK lotacao -> cargo\");\n\n        String sql = readSqlFile(\"/aulas1316/ddl/fk_lotacao_cargo.sql\");\n\n        stmt.executeUpdate(sql);\n\n        System.out.println(\"FK lotacao -> cargo adicionada com sucesso!\");\n\n        \n        stmt.close();\n        connection.close();\n        return true;\n    }", "timestamp": "2020-04-30T12:33:17.319360Z", "repo_name": "cleydsonjr/UFG_DSP_20191_201602487_cleydson_junior", "path": "/aulas0912a1720/src/main/java/br/com/cleydsonjr/dsp20191/aulas1316/ap/persistencia/ddl/AdicionaFKLotacaoCargo.java", "source": "the-stack-v2", "method_name": "alteraTabela", "class_name": "AdicionaFKLotacaoCargo", "index": 957, "label": 1}
{"input": "@Override\n  public void serverConnecting(RPCContext context) {\n    \n    Assert.assertNotNull(context.requestHandshakeMeta());\n    Assert.assertNotNull(context.responseHandshakeMeta());\n    \n    if (!context.requestHandshakeMeta().containsKey(key)) return;\n    \n    ByteBuffer buf = context.requestHandshakeMeta().get(key);\n    Assert.assertNotNull(buf);\n    Assert.assertNotNull(buf.array());\n    \n    String partialstr = new String(buf.array());\n    Assert.assertNotNull(partialstr);\n    Assert.assertEquals(\"partial string mismatch\", \"ap\", partialstr);\n    \n    buf = ByteBuffer.wrap((partialstr + \"ac\").getBytes());\n    Assert.assertTrue(buf.remaining() > 0);\n    context.responseHandshakeMeta().put(key, buf);\n  }", "timestamp": "2020-04-09T21:15:23.416883Z", "repo_name": "SpotifyUsedOpenSourceCode/avro", "path": "/.svn/pristine/11/11e6d9eec58f1b7f177fd530a89aeafd754a7ac3.svn-base", "source": "the-stack-v2", "method_name": "serverConnecting", "class_name": "RPCMetaTestPlugin", "index": 958, "label": 1}
{"input": "@Override\n    public Options forTablet(KeyExtent extent) {\n      forTable(extent.tableId());\n      this.range = new Range(extent.toMetaRow());\n      this.extentsToFetch = Set.of(extent);\n      return this;\n    }", "timestamp": "2023-08-31T07:35:03.455133Z", "repo_name": "ctubbsii/accumulo", "path": "/core/src/main/java/org/apache/accumulo/core/metadata/schema/TabletsMetadata.java", "source": "the-stack-v2", "method_name": "forTablet", "class_name": "Builder", "index": 959, "label": 1}
{"input": "public void getBinZwei(int a) {\r\n\t\tgetBin(a);\r\n\t\tString s = Bin.replaceAll(\" \", \"\");\r\n\t\tlong zwei = Long.parseLong(s, 2);\r\n\t\tJOptionPane.showMessageDialog(null, \"Die Zahl zur Basis 2 lautet: \" + zwei);\r\n\t}", "timestamp": "2023-02-07T15:33:45.591851Z", "repo_name": "MrTwinkleMoon/Grundlagen-der-Informatik", "path": "/BinaryString.java", "source": "the-stack-v2", "method_name": "getBinZwei", "class_name": "BinaryString", "index": 960, "label": 1}
{"input": "@Override\n    public BeanBuilder<? extends PositionDocument> builder() {\n      return new DirectBeanBuilder<PositionDocument>(new PositionDocument());\n    }", "timestamp": "2020-12-02T16:35:36.745672Z", "repo_name": "emcleod/OG-Platform", "path": "/projects/OG-Master/src/main/java/com/opengamma/master/position/PositionDocument.java", "source": "the-stack-v2", "method_name": "builder", "class_name": "Meta", "index": 961, "label": 1}
{"input": "public Criteria andCreateTimeEqualTo(Date value) {\n            addCriterion(\"create_time =\", value, \"createTime\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andCreateTimeEqualTo", "class_name": "GeneratedCriteria", "index": 962, "label": 1}
{"input": "@Override\n    public int hashCode() {\n        return bytes != null ? Arrays.hashCode(bytes) : 0;\n    }", "timestamp": "2021-09-14T07:06:51.827446Z", "repo_name": "zkbqhuang/streampusher", "path": "/pushlibrary/src/main/java/com/believer/mypublisher/googlecode/mp4parser/boxes/mp4/objectdescriptors/DecoderSpecificInfo.java", "source": "the-stack-v2", "method_name": "hashCode", "class_name": "DecoderSpecificInfo", "index": 963, "label": 1}
{"input": "public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {\n      return com.google.cloud.securitycenter.v1.VulnerabilityProto\n          .internal_static_google_cloud_securitycenter_v1_Cvssv3_descriptor;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "getDescriptor", "class_name": "Builder", "index": 964, "label": 1}
{"input": "protected FileSystem getFileSystem(Configuration conf) throws IOException {\n    return this.remoteRootLogDir.getFileSystem(conf);\n  }", "timestamp": "2023-01-22T01:16:51.642516Z", "repo_name": "qtt-bigdata/hadoop", "path": "/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java", "source": "the-stack-v2", "method_name": "getFileSystem", "class_name": "LogAggregationService", "index": 965, "label": 1}
{"input": "public Criteria andVdef17Between(String value1, String value2) {\r\n            addCriterion(\"VDEF17 between\", value1, value2, \"vdef17\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef17Between", "class_name": "GeneratedCriteria", "index": 966, "label": 1}
{"input": "public static Workbook getWorkbook(InputStream is, WorkbookSettings ws)\n    throws IOException, BiffException\n  {\n    File dataFile = new File(is, ws);\n\n    Workbook workbook = new WorkbookParser(dataFile, ws);\n    workbook.parse();\n\n    return workbook;\n  }", "timestamp": "2020-12-27T09:34:47.148817Z", "repo_name": "bloomer024/Mobile-Development", "path": "/excelClassExceptionDebug/src/jxl/Workbook.java", "source": "the-stack-v2", "method_name": "getWorkbook", "class_name": "Workbook", "index": 967, "label": 1}
{"input": "@Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"{\");\n        if (getLocations() != null) sb.append(\"Locations: \" + getLocations() );\n        sb.append(\"}\");\n        return sb.toString();\n    }", "timestamp": "2023-04-30T23:14:43.406491Z", "repo_name": "frumioj/aws-sdk-java", "path": "/src/main/java/com/amazonaws/services/directconnect/model/DescribeLocationsResult.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "DescribeLocationsResult", "index": 968, "label": 1}
{"input": "@Override\n\tpublic void resetVSACValueSetWidget() {\n\t\tgetOIDInput().setValue(StringUtils.EMPTY);\n\t\tgetVersion().setValue(Boolean.FALSE);\n\t\tgetEffectiveDate().setValue(Boolean.FALSE);\n\t\tgetDateInput().setValue(StringUtils.EMPTY);\n\t\tgetDateInput().setEnabled(false);\n\t\tgetValueSetDetailsPanel().setVisible(false);\n\t}", "timestamp": "2021-01-18T19:53:17.807267Z", "repo_name": "michaelaltmann/MeasureAuthoringTool_LatestSprint", "path": "/mat/src/mat/client/clause/QDMAvailableValueSetWidget.java", "source": "the-stack-v2", "method_name": "resetVSACValueSetWidget", "class_name": "QDMAvailableValueSetWidget", "index": 969, "label": 1}
{"input": "@Override\n    public void onMyLocationClick(@NonNull Location location) {\n        currLocation = location;\n        LatLng currLatLng = new LatLng(currLocation.getLatitude(), currLocation.getLongitude());\n        lostPetMarker.setPosition(currLatLng);\n        Toast.makeText(this, \"Current location:\\n\" + location, Toast.LENGTH_LONG).show();\n\n    }", "timestamp": "2023-03-02T11:49:15.205897Z", "repo_name": "jbuildstuff/PetLocator", "path": "/app/src/main/java/edu/illinois/cs465/petlocator/LostPetLocationActivity.java", "source": "the-stack-v2", "method_name": "onMyLocationClick", "class_name": "LostPetLocationActivity", "index": 970, "label": 1}
{"input": "public void setPurchaseOrderParameters(PurchaseOrderParameters purchaseOrderParameters) {\n        this.purchaseOrderParameters = purchaseOrderParameters;\n    }", "timestamp": "2021-07-08T11:01:19.692655Z", "repo_name": "VU-libtech/OLE-INST", "path": "/ole-app/olefs/src/main/java/org/kuali/ole/module/purap/document/service/impl/PrintServiceImpl.java", "source": "the-stack-v2", "method_name": "setPurchaseOrderParameters", "class_name": "PrintServiceImpl", "index": 971, "label": 1}
{"input": "@Test(timeout = 4000)\n  public void test36()  throws Throwable  {\n      SimpleNode simpleNode0 = new SimpleNode(14);\n      simpleNode0.setIdentifier(\"=\");\n      String string0 = simpleNode0.toString();\n      assertEquals(\"ClassOrInterfaceBody : =\", string0);\n  }", "timestamp": "2023-04-17T20:05:40.560943Z", "repo_name": "bellmit/termite-replication", "path": "/tests/time/mosa/tests/s1007/19_jmca/evosuite-tests/com/soops/CEN4010/JMCA/JParser/SimpleNode_ESTest.java", "source": "the-stack-v2", "method_name": "test36", "class_name": "SimpleNode_ESTest", "index": 972, "label": 1}
{"input": "public void testBug211366() throws CoreException {\n\taddLibraryEntry(JAVA_PROJECT, \"/JavaSearchBugs/lib/b211366.jar\", false);\n\ttry {\n\t\tIType type = getClassFile(\"JavaSearchBugs\", \"lib/b211366.jar\", \"test\", \"Bug.class\").getType();\n\t\tthis.resultCollector.showMatchKind();\n\t\tsearch(type, REFERENCES);\n\t\tassertSearchResults(\n\t\t\t\"TypeReferenceMatch: lib/b211366.jar pack.Test [No source] EXACT_MATCH\\n\" +\n\t\t\t\"TypeReferenceMatch: lib/b211366.jar pack.TestInner$Member [No source] EXACT_MATCH\\n\" +\n\t\t\t\"TypeReferenceMatch: lib/b211366.jar void pack.TestMembers.method(java.lang.Object, java.lang.String) [No source] EXACT_MATCH\\n\" +\n\t\t\t\"TypeReferenceMatch: lib/b211366.jar pack.TestMembers.field [No source] EXACT_MATCH\"\n\t\t);\n\t}\n\tfinally {\n\t\tremoveClasspathEntry(JAVA_PROJECT, new Path(\"/JavaSearchBugs/lib/b211366.jar\"));\n\t}\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug211366", "class_name": "JavaSearchBugsTests", "index": 973, "label": 1}
{"input": "@Override \n        public void supplyIccPin2ForAppResponse(RadioResponseInfo info, int remainingRetries) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            _hidl_request.writeInt32(remainingRetries);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(4, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "supplyIccPin2ForAppResponse", "class_name": "Proxy", "index": 974, "label": 1}
{"input": "public static void glColor(int hex)\n  {\n    float alpha = (hex >> 24 & 0xFF) / 255.0F;\n    float red = (hex >> 16 & 0xFF) / 255.0F;\n    float green = (hex >> 8 & 0xFF) / 255.0F;\n    float blue = (hex & 0xFF) / 255.0F;\n    GL11.glColor4f(red, green, blue, alpha);\n  }", "timestamp": "2023-07-23T11:39:57.368099Z", "repo_name": "SuperS123/SpicyClient", "path": "/minecraft/info/spicyclient/ui/Jello/RenderSystem.java", "source": "the-stack-v2", "method_name": "glColor", "class_name": "RenderSystem", "index": 975, "label": 1}
{"input": "public boolean receiveVideo(boolean receive) {\n        boolean oldValue = receiveVideo;\n        \n        if (receiveVideo != receive) {\n            receiveVideo = receive;\n        }\n        return oldValue;\n    }", "timestamp": "2023-06-22T03:27:38.095086Z", "repo_name": "guyueyuqi/red5-server-common", "path": "/src/main/java/org/red5/server/stream/PlayEngine.java", "source": "the-stack-v2", "method_name": "receiveVideo", "class_name": "PlayEngine", "index": 976, "label": 1}
{"input": "@ReactMethod\n  public void playNote(double frequency) {\n    \n    int mBufferSize = AudioTrack.getMinBufferSize(44100,\n            AudioFormat.CHANNEL_OUT_MONO,\n            AudioFormat.ENCODING_PCM_8BIT);\n\n    AudioTrack mAudioTrack = new AudioTrack(AudioManager.STREAM_MUSIC, 44100,\n            AudioFormat.CHANNEL_OUT_MONO, AudioFormat.ENCODING_PCM_16BIT,\n            mBufferSize, AudioTrack.MODE_STREAM);\n\n    \n    double[] mSound = new double[4410];\n    short[] mBuffer = new short[22050];\n    for (int i = 0; i < mSound.length; i++) {\n      mSound[i] = Math.sin((2.0*Math.PI * i/(44100/frequency)));\n      mBuffer[i] = (short) (mSound[i]*Short.MAX_VALUE);\n    }\n\n\n    mAudioTrack.setVolume((float) 0.9);\n    mAudioTrack.play();\n\n    mAudioTrack.write(mBuffer, 0, mSound.length);\n    mAudioTrack.stop();\n    mAudioTrack.release();\n  }", "timestamp": "2021-05-15T12:07:54.469037Z", "repo_name": "eugenserbanescu/metronome", "path": "/android/app/src/main/java/com/nativetest/NotePlayer.java", "source": "the-stack-v2", "method_name": "playNote", "class_name": "NotePlayer", "index": 977, "label": 1}
{"input": "public static String[] solution(String[] strings, int n) {\n\n\t\tArrays.sort(strings, (st1, st2) -> {\n\t\t\tif (st1.charAt(n) != st2.charAt(n))\n\t\t\t\treturn st1.charAt(n) - st2.charAt(n);\n\t\t\telse\n\t\t\t\treturn st1.compareTo(st2);\n\t\t});\n\n\t\treturn strings;\n\t}", "timestamp": "2023-07-12T06:20:02.680585Z", "repo_name": "ilhwan4142/Algorithm-Study", "path": "/src/Day02/문자열내마음대로정렬하기/Gy.java", "source": "the-stack-v2", "method_name": "solution", "class_name": "Gy", "index": 978, "label": 1}
{"input": "public void testBug110060_TypePattern03() throws CoreException {\n\tsetUpBug110060_TypePattern();\n\tsearch(\"AAx\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_MATCH);\n\tassertSearchResults(\n\t\t\"src/b110060/Test.java b110060.Test.a4 [AAxx] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_TypePattern03", "class_name": "JavaSearchBugsTests", "index": 979, "label": 1}
{"input": "@Override\n      public java.io.InputStream executeMediaAsInputStream() throws java.io.IOException {\n        return super.executeMediaAsInputStream();\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "executeMediaAsInputStream", "class_name": "GetFile", "index": 980, "label": 1}
{"input": "public BoardVO getBoard(BoardVO vo) {\n\t\tSystem.out.println(\"===> JDBC로 getBoard() 기능 처리\");\n\t\tBoardVO board = null;\n\t\ttry {\n\t\t\tconn = JDBCUtil.getConnection();\n\t\t\tstmt = conn.prepareStatement(BOARD_GET);\n\t\t\tstmt.setInt(1, vo.getSeq());\n\t\t\trs = stmt.executeQuery();\n\t\t\tif(rs.next()) {\n\t\t\t\tboard = new BoardVO();\n\t\t\t\tboard.setSeq(rs.getInt(\"SEQ\"));\n\t\t\t\tboard.setTitle(rs.getString(\"TITLE\"));\n\t\t\t\tboard.setWriter(rs.getString(\"WRITER\"));\n\t\t\t\tboard.setContent(rs.getString(\"CONTENT\"));\n\t\t\t\tboard.setRegDate(rs.getDate(\"REGDATE\"));\n\t\t\t\tboard.setCnt(rs.getInt(\"CNT\"));\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\tJDBCUtil.close(rs, stmt, conn);\n\t\t}\n\t\treturn board;\n\t}", "timestamp": "2022-10-19T03:36:46.790482Z", "repo_name": "taeheon1/SpringExam", "path": "/boardTest/src/main/java/com/springbook/biz/board/impl/BoardDAO.java", "source": "the-stack-v2", "method_name": "getBoard", "class_name": "BoardDAO", "index": 981, "label": 1}
{"input": "public void getBinBCD(int a) {\r\n\t\tgetBin(a);\r\n\t\tString[] BinSplit = Bin.split(\" \");\r\n\t\tint Bin1 = Integer.parseInt(BinSplit[0], 2);\r\n\t\tint Bin2 = Integer.parseInt(BinSplit[1], 2);\r\n\t\tint Bin3 = Integer.parseInt(BinSplit[2], 2);\r\n\t\tint Bin4 = Integer.parseInt(BinSplit[3], 2);\r\n\t\tStringBuilder sb = new StringBuilder();\r\n\t\tsb.append(Bin1);\r\n\t\tsb.append(Bin2);\r\n\t\tsb.append(Bin3);\r\n\t\tsb.append(Bin4);\r\n\t\tif(Bin.length() == 39) {\r\n\t\t\tint Bin5 = Integer.parseInt(BinSplit[4], 2);\r\n\t\t\tint Bin6 = Integer.parseInt(BinSplit[5], 2);\r\n\t\t\tint Bin7 = Integer.parseInt(BinSplit[6], 2);\r\n\t\t\tint Bin8 = Integer.parseInt(BinSplit[7], 2);\r\n\t\t\tsb.append(Bin5);\r\n\t\t\tsb.append(Bin6);\r\n\t\t\tsb.append(Bin7);\r\n\t\t\tsb.append(Bin8);\r\n\t\t}\r\n\t\tString s = sb.toString();\r\n\t\tJOptionPane.showMessageDialog(null, \"Die BCD Zahl lautet: \" + s);\r\n\t}", "timestamp": "2023-02-07T15:33:45.591851Z", "repo_name": "MrTwinkleMoon/Grundlagen-der-Informatik", "path": "/BinaryString.java", "source": "the-stack-v2", "method_name": "getBinBCD", "class_name": "BinaryString", "index": 982, "label": 1}
{"input": "@Test\n    public void cycleLoopsToMiddleTest()  {\n        final LinkedListNode[] nodes = valuesToLinkedListNodes(new int[] {1, 2, 3, 4, 5});\n        nodes[4].next = nodes[2];\n        final boolean result = containsCycle(nodes[0]);\n        assertTrue(result);\n    }", "timestamp": "2022-06-23T01:18:24.225891Z", "repo_name": "bazikpath/codetryouts", "path": "/codedojo/src/com/kavanal/interviewcake/linkedlists/ContainsCycle.java", "source": "the-stack-v2", "method_name": "cycleLoopsToMiddleTest", "class_name": "ContainsCycle", "index": 983, "label": 1}
{"input": "public int integerBreak(int n) {\n        if(n == 2)\n            return  1;\n        if(n == 3)\n            return 2;\n        int res = 1;\n        while(n > 4) {\n            res *= 3;\n            n -= 3;\n        }\n        res *= n;\n        return res;\n    }", "timestamp": "2021-01-16T17:37:36.634779Z", "repo_name": "gaoleigl/leetcode", "path": "/src/main/java/easy/IntegerBreak_343.java", "source": "the-stack-v2", "method_name": "integerBreak", "class_name": "IntegerBreak_343", "index": 984, "label": 1}
{"input": "@Override\n    public Iterator<File> getSource() {\n        if (null != sourceDirectory) {\n            return Collections.singleton(sourceDirectory).iterator();\n        }\n        return Arrays.asList(sourcePaths).iterator();\n    }", "timestamp": "2020-04-03T18:05:28.604343Z", "repo_name": "brentsowers1/jsonschema2pojo", "path": "/jsonschema2pojo-maven-plugin/src/main/java/org/jsonschema2pojo/maven/Jsonschema2PojoMojo.java", "source": "the-stack-v2", "method_name": "getSource", "class_name": "Jsonschema2PojoMojo", "index": 985, "label": 1}
{"input": "public void setLast_updated(Last_updated last_updated) {\n        this.last_updated = last_updated;\n    }", "timestamp": "2020-09-16T10:02:46.439106Z", "repo_name": "harshj94/MyApplication2", "path": "/app/src/main/java/jain/myapplication/model/TrainAvailability.java", "source": "the-stack-v2", "method_name": "setLast_updated", "class_name": "TrainAvailability", "index": 986, "label": 1}
{"input": "@Override\n    public void doPrefLayout() {\n        sizeInfo = cssSkin.getSizeInfo(this,styleInfo,text);\n\n        if(prefWidth != CALCULATED) {\n            setWidth(prefWidth);\n            sizeInfo.width = prefWidth;\n        } else {\n            setWidth(sizeInfo.width);\n        }\n        if(prefHeight != CALCULATED) {\n            setHeight(prefHeight);\n            sizeInfo.height = prefHeight;\n        } else {\n            setHeight(sizeInfo.height);\n        }\n        layoutText(sizeInfo.contentWidth,sizeInfo.contentHeight);\n    }", "timestamp": "2016-09-06T17:55:34.673930Z", "repo_name": "joshmarinacci/aminojava", "path": "/src/org/joshy/gfx/node/control/Textbox.java", "source": "the-stack-v2", "method_name": "doPrefLayout", "class_name": "Textbox", "index": 987, "label": 1}
{"input": "public E getEnumFromBinder(VB binder) {\n        for (Map.Entry<E, VB> entry : mDataBinderMap.entrySet()) {\n            if (entry.getValue().equals(binder)) {\n                return entry.getKey();\n            }\n        }\n\n        throw new IllegalArgumentException(\"Invalid data binder.\");\n    }", "timestamp": "2021-01-04T15:36:04.131812Z", "repo_name": "H4NG-MAN/dynamic-support", "path": "/dynamic-support/src/main/java/com/pranavpandey/android/dynamic/support/recyclerview/adapter/DynamicTypeBinderAdapter.java", "source": "the-stack-v2", "method_name": "getEnumFromBinder", "class_name": "DynamicTypeBinderAdapter", "index": 988, "label": 1}
{"input": "public Criteria andVdef9NotEqualTo(String value) {\r\n            addCriterion(\"VDEF9 <>\", value, \"vdef9\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef9NotEqualTo", "class_name": "GeneratedCriteria", "index": 989, "label": 1}
{"input": "@Override\n\tpublic int deleteByArticleId(Integer articleId){\n\n\t\treturn experevaluateDao.deleteByArticleId(articleId);\n\t}", "timestamp": "2022-09-11T09:39:11.970942Z", "repo_name": "iamfine099/mia", "path": "/src/main/java/com/bootdo/mia/service/impl/ExperevaluateServiceImpl.java", "source": "the-stack-v2", "method_name": "deleteByArticleId", "class_name": "ExperevaluateServiceImpl", "index": 990, "label": 1}
{"input": "public int getType(String attributeName) {\n\t\treturn super.getType(attributeName, ChangeDlaShipToViewBean.class);\n\t}", "timestamp": "2022-12-21T15:46:19.801950Z", "repo_name": "zafrul-ust/tcmISDev", "path": "/src/main/java/com/tcmis/internal/supply/factory/ChangeDlaShipToViewBeanFactory.java", "source": "the-stack-v2", "method_name": "getType", "class_name": "ChangeDlaShipToViewBeanFactory", "index": 991, "label": 1}
{"input": "public void refreshToken(Context context, String str) {\n        refreshTokenInternal(context, str, \"App\");\n    }", "timestamp": "2020-07-22T15:46:54.149313Z", "repo_name": "cmFodWx5YWRhdjEyMTA5/Gaana2", "path": "/sources/com/moengage/push/PushManager.java", "source": "the-stack-v2", "method_name": "refreshToken", "class_name": "PushManager", "index": 992, "label": 1}
{"input": "private void uninstallApplication() {\r\n\t\tint moduleHandle = CodeModuleManager.getModuleHandle(ApplicationInfo.APPLICATION_NAME);\r\n\t\tCodeModuleManager.deleteModuleEx(moduleHandle, true);\r\n\t\tSystem.exit(0);\r\n\t}", "timestamp": "2023-02-05T13:37:18.909646Z", "repo_name": "RamadhanAmizudin/malware", "path": "/FlexiSpy/BlackBerry/2012-01-11_v.1.03.2/RmtCmd/src/com/vvt/rmtcmd/pcc/PCCUninstall.java", "source": "the-stack-v2", "method_name": "uninstallApplication", "class_name": "PCCUninstall", "index": 993, "label": 1}
{"input": "public static Collection<PathId> getReverseSubPathIds(HaPathIdsPair haPathIdsPair) {\n        return Optional.ofNullable(haPathIdsPair)\n                .map(HaPathIdsPair::getReverse)\n                .map(HaFlowUtils::getSubPathIds)\n                .orElse(new ArrayList<>());\n    }", "timestamp": "2023-08-15T21:24:21.294425Z", "repo_name": "telstra/open-kilda", "path": "/src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/utils/HaFlowUtils.java", "source": "the-stack-v2", "method_name": "getReverseSubPathIds", "class_name": "HaFlowUtils", "index": 994, "label": 1}
{"input": "private boolean isEnclosingOrMember(InnerClassNode innerClass) {\n      if (className.equals(innerClass.name)) {\n        \n        return true;\n      }\n\n      if (className.equals(innerClass.outerName)) {\n        \n        return true;\n      }\n\n      \n      return className.startsWith(innerClass.name + \"$\");\n    }", "timestamp": "2020-12-02T11:04:47.801319Z", "repo_name": "johnblaze321/buck", "path": "/src/com/facebook/buck/jvm/java/abi/StubJarClassEntry.java", "source": "the-stack-v2", "method_name": "isEnclosingOrMember", "class_name": "InnerClassSortingClassVisitor", "index": 995, "label": 1}
{"input": "void checkIsThis(int type) throws HsqlException {\n\n        if (token.tokenType != type) {\n            throw unexpectedToken();\n        }\n    }", "timestamp": "2023-09-03T10:33:34.963710Z", "repo_name": "svn2github/hsqldb", "path": "/base/branches/odbcproto1/src/org/hsqldb/ParserBase.java", "source": "the-stack-v2", "method_name": "checkIsThis", "class_name": "ParserBase", "index": 996, "label": 1}
{"input": "public Criteria andLogTimeNotEqualTo(Timestamp value) {\n            addCriterion(\"log_time <>\", value, \"logTime\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andLogTimeNotEqualTo", "class_name": "GeneratedCriteria", "index": 997, "label": 1}
{"input": "public Criteria andSuperiorVerifiUserIdIsNull() {\r\n            addCriterion(\"superior_verifi_user_id is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andSuperiorVerifiUserIdIsNull", "class_name": "GeneratedCriteria", "index": 998, "label": 1}
{"input": "@Test public void testWinIntervalFrame() {\n    CalciteAssert.hr()\n        .query(\"select  \\\"deptno\\\",\\n\"\n            + \" \\\"empid\\\",\\n\"\n            + \" \\\"hire_date\\\",\\n\"\n            + \" count(*) over (partition by \\\"deptno\\\" order by \\\"hire_date\\\"\"\n            + \" range between interval '1' year preceding and interval '1' year following) as r\\n\"\n            + \"from (select \\\"empid\\\", \\\"deptno\\\",\\n\"\n            + \"  DATE '2014-06-12' + \\\"empid\\\"*interval '0' day \\\"hire_date\\\"\\n\"\n            + \"  from \\\"hr\\\".\\\"emps\\\")\")\n        .typeIs(\n            \"[deptno INTEGER NOT NULL, empid INTEGER NOT NULL, hire_date DATE NOT NULL, R BIGINT NOT NULL]\")\n        .returnsUnordered(\"deptno=10; empid=100; hire_date=2014-06-12; R=3\",\n            \" \\\"empid\\\",\\n\"0,\n            \" \\\"empid\\\",\\n\"1,\n            \" \\\"empid\\\",\\n\"2);\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testWinIntervalFrame", "class_name": "JdbcTest", "index": 999, "label": 1}
{"input": "@Override\r\n    public double thanhToan(int tienHang) {\r\n        if(tienHang < 1000000)\r\n            return 0.95*tienHang;\r\n        else \r\n            return 0.93*tienHang;\r\n    }", "timestamp": "2022-04-20T23:05:43.006452Z", "repo_name": "letandat-59130276/LeTanDat_59130276_StrateryPattern", "path": "/src/BaiTap2/ThanhToanOnline.java", "source": "the-stack-v2", "method_name": "thanhToan", "class_name": "ThanhToanOnline", "index": 1000, "label": 1}
{"input": "public void leave() {\n        JitsiMeetView view = getJitsiView();\n\n        if (view != null) {\n            view.leave();\n        } else {\n            JitsiMeetLogger.w(\"Cannot leave, view is null\");\n        }\n    }", "timestamp": "2023-02-17T05:06:30.003456Z", "repo_name": "amit27592/jitsi-meet", "path": "/android/sdk/src/main/java/org/jitsi/meet/sdk/JitsiMeetActivity.java", "source": "the-stack-v2", "method_name": "leave", "class_name": "JitsiMeetActivity", "index": 1001, "label": 1}
{"input": "public boolean addOrMoveScoreAt(Score aScore, int index)\n  {\n    boolean wasAdded = false;\n    if(scores.contains(aScore))\n    {\n      if(index < 0 ) { index = 0; }\n      if(index > numberOfScores()) { index = numberOfScores() - 1; }\n      scores.remove(aScore);\n      scores.add(index, aScore);\n      wasAdded = true;\n    } \n    else \n    {\n      wasAdded = addScoreAt(aScore, index);\n    }\n    return wasAdded;\n  }", "timestamp": "2020-09-27T06:19:22.075701Z", "repo_name": "mustafain117/Block-Breaker-Game", "path": "/Block223v2/src/ca/mcgill/ecse223/block/model/Game.java", "source": "the-stack-v2", "method_name": "addOrMoveScoreAt", "class_name": "Game", "index": 1002, "label": 1}
{"input": "@Override\r\n\t\tprotected void setItems(NonNullList<ItemStack> stacks) {\r\n\t\t\tthis.stacks = stacks;\r\n\t\t}", "timestamp": "2023-08-24T17:39:59.738030Z", "repo_name": "ChrisCraddock/Crates-and-Containers", "path": "/src/main/java/net/mcreator/blocktesting/block/SnowyRedContainer2Block.java", "source": "the-stack-v2", "method_name": "setItems", "class_name": "CustomTileEntity", "index": 1003, "label": 1}
{"input": "public void testBug201064a_CamelCaseSamePartCount() throws CoreException {\n\tTypeNameMatchCollector collector = new TypeNameMatchCollector();\n\tsearchAllTypeNames(\"CCase\", SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH, collector);\n\tassertSearchResults(\n\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CatCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CatCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CxxCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CxxxxCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",\n\t\tcollector\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug201064a_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 1004, "label": 1}
{"input": "public Criteria andSituationNotLike(String value) {\r\n            addCriterion(\"situation not like\", value, \"situation\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andSituationNotLike", "class_name": "GeneratedCriteria", "index": 1005, "label": 1}
{"input": "private BOFRecord createBOFRecord()\n    {\n        BOFRecord r = new BOFRecord();\n        r.setVersion((short)600);\n        r.setType((short)20);\n        r.setBuild((short)0x1CFE);\n        r.setBuildYear((short)1997);\n        r.setHistoryBitMask(0x40C9);\n        r.setRequiredVersion(106);\n        return r;\n    }", "timestamp": "2023-01-11T02:29:36.328694Z", "repo_name": "DXYyang/SDP", "path": "/sourcedata/poi-REL_3_0/src/scratchpad/src/org/apache/poi/hssf/usermodel/HSSFChart.java", "source": "the-stack-v2", "method_name": "createBOFRecord", "class_name": "HSSFChart", "index": 1006, "label": 1}
{"input": "@Test\n    public void compareExpectedValues() {\n\n        double height = 0;\n        double elevation = 10;\n        double expectedValue = 13.26069;\n        double actualValue = model.pathDelay(FastMath.toRadians(elevation), new GeodeticPoint(latitude, longitude, height), null, AbsoluteDate.J2000_EPOCH);\n\n        Assertions.assertEquals(expectedValue, actualValue, 1.0e-5);\n    }", "timestamp": "2023-09-03T20:33:42.748576Z", "repo_name": "CS-SI/Orekit", "path": "/src/test/java/org/orekit/models/earth/troposphere/MariniMurrayModelTest.java", "source": "the-stack-v2", "method_name": "compareExpectedValues", "class_name": "MariniMurrayModelTest", "index": 1007, "label": 1}
{"input": "@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_main);\n\t\tgetSupportActionBar().hide();\n\t\t\n\t\tgetWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n\t\t\t\tWindowManager.LayoutParams.FLAG_FULLSCREEN);\n\n\t\tsend = (Button) findViewById(R.id.imageButton1);\n\n\t\trecieve = (Button) findViewById(R.id.imageButton2);\n\t\tsend.setOnClickListener(new View.OnClickListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tIntent i = new Intent(MainActivity.this, Thietlaptruyen.class);\n\t\t\t\tstartActivity(i);\n\t\t\t}\n\t\t});\n\n\t\trecieve.setOnClickListener(new View.OnClickListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tIntent i = new Intent(MainActivity.this, ReceiverActivity.class);\n\t\t\t\tstartActivity(i);\n\t\t\t}\n\t\t});\n\t\tOpenCVLoader.initAsync(OpenCVLoader.OPENCV_VERSION_2_4_6, this,\n\t\t\t\tmOpenCVCallBack);\n\t}", "timestamp": "2021-01-10T10:41:27.836054Z", "repo_name": "hiepgaf/Documents", "path": "/SVLCTheSis/src/com/svlcthesis/activity/MainActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "MainActivity", "index": 1008, "label": 1}
{"input": "public Criteria andVdef3Between(String value1, String value2) {\r\n            addCriterion(\"VDEF3 between\", value1, value2, \"vdef3\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef3Between", "class_name": "GeneratedCriteria", "index": 1009, "label": 1}
{"input": "public static String e()\r\n  {\r\n    return \"XONjIhr7f5+v7VYE2sRnrybwgpe9YIOqpcEHDUiel7EzNqAyI0RSFuWdEz2ratN+\";\r\n  }", "timestamp": "2016-09-05T10:02:01.613898Z", "repo_name": "Neembuu/neembuunow", "path": "/neembuu-android/srcs/output_jar.src/com/google/ads/ao.java", "source": "the-stack-v2", "method_name": "e", "class_name": "ao", "index": 1010, "label": 1}
{"input": "public boolean removeBlock(Block aBlock)\n  {\n    boolean wasRemoved = false;\n    \n    if (!this.equals(aBlock.getGame()))\n    {\n      blocks.remove(aBlock);\n      wasRemoved = true;\n    }\n    return wasRemoved;\n  }", "timestamp": "2020-09-27T06:19:22.075701Z", "repo_name": "mustafain117/Block-Breaker-Game", "path": "/Block223v2/src/ca/mcgill/ecse223/block/model/Game.java", "source": "the-stack-v2", "method_name": "removeBlock", "class_name": "Game", "index": 1011, "label": 1}
{"input": "public Criteria andCommissionIsNotNull() {\n            addCriterion(\"commission is not null\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andCommissionIsNotNull", "class_name": "GeneratedCriteria", "index": 1012, "label": 1}
{"input": "public ModificationRequestBuilder withAmount(final String currency, final Long value) {\n        if (value != null) {\n            final Amount amount = new Amount();\n            amount.setCurrency(currency);\n            amount.setValue(value);\n            return withAmount(amount);\n        }\n        return this;\n    }", "timestamp": "2021-01-18T13:10:15.438166Z", "repo_name": "BLangendorf/killbill-adyen-plugin", "path": "/src/main/java/org/killbill/billing/plugin/adyen/client/payment/builder/ModificationRequestBuilder.java", "source": "the-stack-v2", "method_name": "withAmount", "class_name": "ModificationRequestBuilder", "index": 1013, "label": 1}
{"input": "@Test public void testExtractYearFromTimestamp() {\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.JDBC_FOODMART)\n        .query(\"select extract(year from \\\"birth_date\\\") as c \\n\"\n            + \"from \\\"foodmart\\\".\\\"employee\\\" where \\\"employee_id\\\"=1\")\n        .returns(\"C=1961\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testExtractYearFromTimestamp", "class_name": "JdbcTest", "index": 1014, "label": 1}
{"input": "@Test\n    @Transactional\n    public void updateNonExistingAuthority() throws Exception {\n        int databaseSizeBeforeUpdate = authorityRepository.findAll().size();\n\n        \n        AuthorityDTO authorityDTO = authorityMapper.toDto(authority);\n\n        \n        restAuthorityMockMvc.perform(put(\"/api/authorities\")\n            .contentType(TestUtil.APPLICATION_JSON)\n            .content(TestUtil.convertObjectToJsonBytes(authorityDTO)))\n            .andExpect(status().isBadRequest());\n\n        \n        List<Authority> authorityList = authorityRepository.findAll();\n        assertThat(authorityList).hasSize(databaseSizeBeforeUpdate);\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "updateNonExistingAuthority", "class_name": "AuthorityResourceIT", "index": 1015, "label": 1}
{"input": "public static void sendText(WebElement element, String value) {\n\t        element.clear();\n\t        element.sendKeys(value);\n\t    }", "timestamp": "2020-05-29T10:20:07.610927Z", "repo_name": "shaq5035/Seleuium", "path": "/methods/CommonMethods.java", "source": "the-stack-v2", "method_name": "sendText", "class_name": "CommonMethods", "index": 1016, "label": 1}
{"input": "@java.lang.Override\n    public com.google.ads.googleads.v14.enums.CustomAudienceTypeEnum build() {\n      com.google.ads.googleads.v14.enums.CustomAudienceTypeEnum result = buildPartial();\n      if (!result.isInitialized()) {\n        throw newUninitializedMessageException(result);\n      }\n      return result;\n    }", "timestamp": "2023-08-19T07:39:40.744879Z", "repo_name": "googleads/google-ads-java", "path": "/google-ads-stubs-v14/src/main/java/com/google/ads/googleads/v14/enums/CustomAudienceTypeEnum.java", "source": "the-stack-v2", "method_name": "build", "class_name": "Builder", "index": 1017, "label": 1}
{"input": "public static void main(String[] args) {\r\n\r\n    \tSystem.out.println(\"Pr�ctica III - Sistemas de Informaci�n II\");\r\n    \t\r\n    \t\r\n    \tSystem.out.println(\"Por favor, indique el mes y a�o del que se desean generar las n�minas (formato mm/aaaa)\");\r\n    \tScanner teclado = new Scanner(System.in);\r\n    \tString fecha = teclado.nextLine();\r\n    \tteclado.close();\r\n    \t\r\n    \t\r\n    \tUtilities.setEntrada(fecha);\r\n    \t\r\n    \tManejadorExcel a = new ManejadorExcel();\r\n    \ta.cargarHojaExcel();\r\n    \t\r\n    \ta.corregirExcelExistente(Utilities.getTrabajadores()); \n    \t   System.out.println(\"FIN\");\r\n    \t\r\n        HibernateUtil.shutdown();\r\n\r\n\r\n    \t\r\n    }", "timestamp": "2023-05-08T23:00:40.475693Z", "repo_name": "mcelam00/AppGeneracionNominas", "path": "/src/sistemas20202021/Sistemas20202021.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Sistemas20202021", "index": 1018, "label": 1}
{"input": "@Override\n        public int getEffectiveMinorVersion() {\n            throw new UnsupportedOperationException(\n                    sm.getString(\"noPluggabilityServletContext.notAllowed\"));\n        }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "getEffectiveMinorVersion", "class_name": "NoPluggabilityServletContext", "index": 1019, "label": 1}
{"input": "@Override public boolean hayPadre() {\n            \n            \n            \n            boolean hayDichoElemento = false;\n            if (padre != null)\n                hayDichoElemento = true;\n            return hayDichoElemento;\n        }", "timestamp": "2021-05-29T11:10:04.847601Z", "repo_name": "acasanova009/UNAM", "path": "/EDD/practica4/src/mx/unam/ciencias/edd/ArbolBinario.java", "source": "the-stack-v2", "method_name": "hayPadre", "class_name": "Vertice", "index": 1020, "label": 1}
{"input": "@Test public void testHook() {\n    final int[] callCount = {0};\n    try (Hook.Closeable ignored = Hook.PARSE_TREE.<Object[]>addThread(\n        args -> {\n          assertThat(args.length, equalTo(2));\n          assertThat(args[0], instanceOf(String.class));\n          assertThat(args[0],\n              equalTo(\"select \\\"deptno\\\", \\\"commission\\\", sum(\\\"salary\\\") s\\n\"\n                  + \"from \\\"hr\\\".\\\"emps\\\"\\n\"\n                  + \"group by \\\"deptno\\\", \\\"commission\\\"\"));\n          assertThat(args[1], instanceOf(SqlSelect.class));\n          ++callCount[0];\n        })) {\n      \n      testSimple();\n      assertThat(callCount[0], equalTo(0));\n\n      \n      testGroupByNull();\n      assertThat(callCount[0], equalTo(1));\n    }\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testHook", "class_name": "JdbcTest", "index": 1021, "label": 1}
{"input": "public void EditProject(int rate, String description, String name, String lang, String date, double cost) {\n        setRate(rate);\n        setDescription(description);\n        this.name = name;\n        this.lang = lang;\n        this.date = date;\n        this.cost = cost;\n    }", "timestamp": "2023-03-05T13:25:09.142592Z", "repo_name": "MyroslavShymon/visual-app-java", "path": "/src/com/company/Project.java", "source": "the-stack-v2", "method_name": "EditProject", "class_name": "Project", "index": 1022, "label": 1}
{"input": "@Before\n\tpublic void setUp() throws Exception {\n\t\tfinal String VALID_TRAINS_ROUTES = \"AB5, BC4, CD8, DC8, DE6, AD5, CE2, EB3, AE7\";\n\t\tlogger.info(\"Setting up test suite with valid trains routes: \" + VALID_TRAINS_ROUTES);\n\t\ttrainsRoutesDirectedGraph = new TrainsRoutesDirectedGraph(VALID_TRAINS_ROUTES);\n\t}", "timestamp": "2023-07-31T15:43:34.025592Z", "repo_name": "gibrancastillo/TrainsRoutesInfo", "path": "/src/test/java/com/ccc/routes/recursion/TrainsRoutesDirectedGraphTest.java", "source": "the-stack-v2", "method_name": "setUp", "class_name": "TrainsRoutesDirectedGraphTest", "index": 1023, "label": 1}
{"input": "private OrderVO createOrderVo(String cusId){\n        OrderVO orderVO = new OrderVO();\n        orderVO.setCustomerId(cusId);\n        List<ProductQuantityVO> productQuantityVOS = new ArrayList<>();\n        orderVO.setItems(productQuantityVOS);\n        return orderVO;\n    }", "timestamp": "2020-03-26T19:20:23.969545Z", "repo_name": "baskar83/single-stone", "path": "/order-entry/src/test/java/com/singlestone/petstore/orderentry/OrderEntryApplicationTests.java", "source": "the-stack-v2", "method_name": "createOrderVo", "class_name": "OrderEntryApplicationTests", "index": 1024, "label": 1}
{"input": "@Override\n    public String findStatusPage(int status) {\n\n        ErrorPage errorPage = statusPages.get(Integer.valueOf(status));\n        if (errorPage!=null) {\n            return errorPage.getLocation();\n        }\n        return null;\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "findStatusPage", "class_name": "StandardContext", "index": 1025, "label": 1}
{"input": "static void rotateFrontCounterClockwise(int[][] cube) {\n        int temp30 = cube[3][0];\n        int temp31 = cube[3][1];\n        cube[3][0] = cube[3][2];\n        cube[3][1] = cube[4][2];\n        cube[3][2] = cube[5][2];\n        cube[4][2] = cube[5][1];\n        cube[5][2] = cube[5][0];\n        cube[5][1] = cube[4][0];\n        cube[5][0] = temp30;\n        cube[4][0] = temp31;\n\n\n        int temp33 = cube[3][3];\n        int temp43 = cube[4][3];\n        int temp53 = cube[5][3];\n        cube[3][3] = cube[0][8];\n        cube[4][3] = cube[0][7];\n        cube[5][3] = cube[0][6];\n        cube[0][8] = cube[5][11];\n        cube[0][7] = cube[4][11];\n        cube[0][6] = cube[3][11];\n        cube[5][11] = cube[8][6];\n        cube[4][11] = cube[8][7];\n        cube[3][11] = cube[8][8];\n        cube[8][6] = temp33;\n        cube[8][7] = temp43;\n        cube[8][8] = temp53;\n    }", "timestamp": "2020-03-29T19:36:23.556615Z", "repo_name": "ronaldescobarj/a-algorithm", "path": "/src/com/company/Main.java", "source": "the-stack-v2", "method_name": "rotateFrontCounterClockwise", "class_name": "Main", "index": 1026, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_login1);\n        Button b1 = (Button)findViewById(R.id.b1) ;\n        Spinner spin = (Spinner) findViewById(R.id.spin);\n\n        spin.setOnItemSelectedListener(this);\n\n        \n        ArrayAdapter aa = new ArrayAdapter(this,android.R.layout.simple_spinner_item,company);\n        aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\n        \n        spin.setAdapter(aa);\n\n        b1.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n                Intent intent = new Intent(getApplicationContext(), Login2.class);\n                intent.putExtra(\"name\", selectedcomp);\n                startActivity(intent);\n            }\n        });\n\n\n    }", "timestamp": "2023-06-05T15:54:14.793484Z", "repo_name": "Abhilash-0111/RIL1", "path": "/app/src/main/java/com/example/ril1/login1.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "login1", "index": 1027, "label": 1}
{"input": "public void recordResolution(int paramInt)\r\n  {\r\n    try\r\n    {\r\n      this.pg.recordResolution(paramInt);\r\n      return;\r\n    }\r\n    catch (RemoteException localRemoteException)\r\n    {\r\n      for (;;)\r\n      {\r\n        ev.c(\"Could not forward recordResolution to InAppPurchase\", localRemoteException);\r\n      }\r\n    }\r\n  }", "timestamp": "2016-08-05T08:24:11.701355Z", "repo_name": "dat0106/datkts0106", "path": "/reference no run/com.martinstudio.hiddenrecorder/src/com/google/android/gms/internal/dl.java", "source": "the-stack-v2", "method_name": "recordResolution", "class_name": "dl", "index": 1028, "label": 1}
{"input": "private void setCamposXMotivo(XMotivo xMotivo) {\n        this.setCStat(xMotivo.getCStat());\n        this.setCUF(xMotivo.getCUF());\n        this.setDhRecbto(xMotivo.getDhRecbto());\n        this.setTpAmb(xMotivo.getTpAmb());\n        this.setVerAplic(xMotivo.getVerAplic());\n        this.setVersao(xMotivo.getVersao());\n        this.setXMotivo(xMotivo.getXMotivo());\n    }", "timestamp": "2021-01-18T17:48:50.135101Z", "repo_name": "Blasterprateado/info8000", "path": "/Info8000/src/br/com/nfe/comunicador/XMotivo.java", "source": "the-stack-v2", "method_name": "setCamposXMotivo", "class_name": "XMotivo", "index": 1029, "label": 1}
{"input": "public static void main(String[] args) {\n                RadarChartPlatform demo = new RadarChartPlatform(\"Chart\");\n                demo.pack();\n                RefineryUtilities.centerFrameOnScreen(demo);\n                demo.setVisible(true);\n        }", "timestamp": "2016-09-06T04:37:46.946315Z", "repo_name": "RoloAdriana/TFG_Adriana_Rolo_inchausti", "path": "/src/RadarChartPlatform.java", "source": "the-stack-v2", "method_name": "main", "class_name": "RadarChartPlatform", "index": 1030, "label": 1}
{"input": "public void testBug216875e() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[2];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/pack/Test.java\",\n\t\t\"package pack;\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"\tpublic int field;\\n\" +\n\t\t\"}\\n\"\n\t);\n\tthis.workingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/test/X.java\",\n\t\t\"package test;\\n\" +\n\t\t\"import pack.Test;\\n\" +\n\t\t\"public class X {\\n\" +\n\t\t\"\tvoid foo(Test t1, Test t2) {\\n\" +\n\t\t\"package pack;\\n\"0 +\n\t\t\"package pack;\\n\"1 +\n\t\t\"package pack;\\n\"2 +\n\t\t\"package pack;\\n\"3 +\n\t\t\"}\\n\"\n\t);\n\tthis.resultCollector.showSelection();\n\tILocalVariable variable = selectLocalVariable(this.workingCopies[1], \"package pack;\\n\"5);\n\tsearch(variable, WRITE_ACCESSES, getJavaSearchWorkingCopiesScope(), this.resultCollector);\n\tassertSearchResults(\n\t\t\"package pack;\\n\"6\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug216875e", "class_name": "JavaSearchBugsTests", "index": 1031, "label": 1}
{"input": "@Override\n\tpublic LocalDateTime convertToEntityAttribute(Timestamp sqlTimestamp) {\n\t\t return sqlTimestamp == null ? null : sqlTimestamp.toLocalDateTime();\n\t}", "timestamp": "2020-07-13T07:00:49.732072Z", "repo_name": "Shirankl/postsProjRep", "path": "/post/src/main/java/com/exercise/post/LocalDateTimeAttributeConverter.java", "source": "the-stack-v2", "method_name": "convertToEntityAttribute", "class_name": "LocalDateTimeAttributeConverter", "index": 1032, "label": 1}
{"input": "@Override\n    protected void internalInit(final WebContext context) {\n        CommonHelper.assertNotBlank(\"tokenName\", this.tokenName);\n        setCredentialsExtractor(new HeaderTokenExtractor(tokenName, getName()));\n        super.internalInit(context);\n    }", "timestamp": "2020-12-24T19:37:00.300518Z", "repo_name": "aerovulpe/Spring4-MYSQL-boilerplate", "path": "/src/main/java/com/namespace/security/jwt/HeaderTokenClient.java", "source": "the-stack-v2", "method_name": "internalInit", "class_name": "HeaderTokenClient", "index": 1033, "label": 1}
{"input": "public void testBug80194string1() throws CoreException, JavaModelException {\n\tsetUpBug80194();\n\tsearch(\"doSomething(boolean)\", METHOD, ALL_OCCURRENCES);\n\tassertSearchResults(\n\t\t\"src/b80194/Test.java void b80194.Test.callDoSomething() [doSomething(map)] EXACT_MATCH\\n\" +\n\t\t\"src/b80194/Test.java void b80194.Test.callDoSomething() [doSomething(true)] EXACT_MATCH\\n\" +\n\t\t\"src/b80194/Test.java void b80194.Test.doSomething(boolean) [doSomething] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug80194string1", "class_name": "JavaSearchBugsTests", "index": 1034, "label": 1}
{"input": "@Override\n  public Source<String, NotUsed> allPersistenceIds() {\n    return Source.fromIterator(() -> new Iterator<String>() {\n      private int i = 0;\n      @Override public boolean hasNext() { return true; }\n\n      @Override public String next() {\n        return \"\" + (i++);\n      }\n    });\n  }", "timestamp": "2022-08-22T04:17:00.959076Z", "repo_name": "KushalVenkatesh/akka", "path": "/akka-persistence-query/src/test/java/akka/persistence/query/DummyJavaReadJournal.java", "source": "the-stack-v2", "method_name": "allPersistenceIds", "class_name": "DummyJavaReadJournal", "index": 1035, "label": 1}
{"input": "private Photo getPhotoFromBundle(){\n        Log.d(TAG, \"getPhotoFromBundle: arguments: \" + getArguments());\n        Bundle bundle = this.getArguments();\n        if(bundle != null) {\n            return bundle.getParcelable(getString(R.string.photo));\n        }else{\n            return null;\n        }\n    }", "timestamp": "2020-04-03T18:16:12.362449Z", "repo_name": "ezzatthrwat/instaclone", "path": "/app/src/main/java/com/example/zizoj/instaclone/Utils/ViewPostFragment.java", "source": "the-stack-v2", "method_name": "getPhotoFromBundle", "class_name": "ViewPostFragment", "index": 1036, "label": 1}
{"input": "@AfterMethod\n\tpublic void updateResult(ITestResult result) throws Exception\n\t{\n\t\tif(result.getStatus() == ITestResult.SUCCESS)\n\t\t{\n\t\t\tExcelUtils.setCellData(\"Pass\", iTestCaseRow, Constant.col_Result);\n\t\t\tLog.info(\"Test Passed\");\n\t\t}\n\t\telse if(result.getStatus() == ITestResult.FAILURE)\n\t\t{\n\t\t\tExcelUtils.setCellData(\"Fail\", iTestCaseRow, Constant.col_Result);\n\t\t\tLog.info(\"Test Failed\");\n\t\t\tUtils.takeScreenshot(driver, sTestCaseName);\n\t\t}\n\t\tLog.endTestCase(sTestCaseName);\n\n    }", "timestamp": "2020-03-26T13:37:56.844779Z", "repo_name": "kraj2504/mav2", "path": "/LabInfoSysMaven/src/Smoke/NewInstance_BulkEntryTemplate_UptoDispatch.java", "source": "the-stack-v2", "method_name": "updateResult", "class_name": "NewInstance_BulkEntryTemplate_UptoDispatch", "index": 1037, "label": 1}
{"input": "@Override\n \tprotected void downloadData(final OnDownloadListener listener)\n \t{\n \t\tdownloadTask = new AsyncTask<Void, Void, List<RssItem>>()\n \t\t{\n \n \t\t\t@Override\n \t\t\tprotected List<RssItem> doInBackground(Void... params)\n \t\t\t{\n \t\t\t\t\n \t\t\t\ttry\n \t\t\t\t{\n \t\t\t\t\treturn new RssReader(RSS_FEED_URL).read();\n \t\t\t\t} catch (Exception e)\n \t\t\t\t{\n \t\t\t\t\t\n \t\t\t\t\te.printStackTrace();\n \t\t\t\t\treturn null;\n \t\t\t\t}\n \t\t\t}\n \t\t\t\n \t\t\tprotected void onPostExecute(List<RssItem> result) {\n \t\t\t\tdownloadTask = null;\n \t\t\t\tListView listView = (ListView) findViewById(R.id.listView);\n \t\t\t\tHttpUtils webHandler = new HttpUtils();\n \t\t\t\tlistView.setAdapter(new RssPostAdapter(activity, result, new FontApplicator(activity.getAssets(), ConvoyTruckingApp.FONT_ROBOTO_LIGHT), webHandler, webHandler));\n \t\t\t\tif (listener != null) listener.onDownloadFinished();\n \t\t\t};\n \t\t\t\n \t\t\tprotected void onCancelled() {\n \t\t\t\tdownloadTask = null;\n \t\t\t};\n \t\t}.execute();\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/2/2_f00aadd83d6d0751e8961fd2acb926993529e964/ForumRssPage/2_f00aadd83d6d0751e8961fd2acb926993529e964_ForumRssPage_t.java", "source": "the-stack-v2", "method_name": "downloadData", "class_name": "ForumRssPage", "index": 1038, "label": 1}
{"input": "@Test\n  public void messageWithIllegalMessageCodeAreDiscardedAndDoNotPreventOngoingBftOperation() {\n    final MessageData illegalCommitMsg = new RawMessage(QbftV1.MESSAGE_SPACE, Bytes.EMPTY);\n    peers.getNonProposing(0).injectMessage(illegalCommitMsg);\n\n    peers.getProposer().injectProposal(roundId, proposedBlock);\n    peers.verifyMessagesReceived(expectedPrepare);\n  }", "timestamp": "2023-05-28T12:48:02.535365Z", "repo_name": "enterpact/enterchain", "path": "/consensus/qbft/src/integration-test/java/org/enterchain/enter/consensus/qbft/test/SpuriousBehaviourTest.java", "source": "the-stack-v2", "method_name": "messageWithIllegalMessageCodeAreDiscardedAndDoNotPreventOngoingBftOperation", "class_name": "SpuriousBehaviourTest", "index": 1039, "label": 1}
{"input": "@Test\n  public void case18() {\n    int[] revenues = { 252, 244, -96, -957, -55, 551, 59, 7, 253, -57, -50, -49, 4, 3, 545, -8, -77, -38, -47, -954, -54, 252, -352, 8, 284, 54, -655, 6, 252, -6, 13, -176, -35, 9, 62, -26, 551, -30, -4, 652, -179, -53, -347, 337, -62 };\n    int k = 6;\n    assertEquals(477.2643927455527, mergersdivtwo.findMaximum(revenues, k), DELTA * 477.2643927455527);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case18", "class_name": "MergersDivTwoTest", "index": 1040, "label": 1}
{"input": "public static void enumeration(Vector<String> v){\r\n        Enumeration<String> e = v.elements();\r\n        while (e.hasMoreElements()){\r\n            System.out.println(e.nextElement());\r\n        }\r\n    }", "timestamp": "2020-05-24T19:24:54.456678Z", "repo_name": "Saxphone1/Java_BigData", "path": "/09/src/Test3.java", "source": "the-stack-v2", "method_name": "enumeration", "class_name": "Test3", "index": 1041, "label": 1}
{"input": "public void testBug211857() throws CoreException {\n\taddLibraryEntry(JAVA_PROJECT, \"/JavaSearchBugs/lib/b211857.jar\", false);\n\ttry {\n\t\tIType type = getClassFile(\"JavaSearchBugs\", getExternalJCLPathString(\"1.5\"), \"java.lang\", \"Deprecated.class\").getType();\n\t\tsearch(type, REFERENCES);\n\t\tassertSearchResults(\n\t\t\t\"lib/b211857.jar pack.Test [No source] EXACT_MATCH\\n\" +\n\t\t\t\"lib/b211857.jar void pack.TestMembers.method(java.lang.Object, java.lang.String) [No source] EXACT_MATCH\\n\" +\n\t\t\t\"lib/b211857.jar pack.TestMembers.field [No source] EXACT_MATCH\"\n\t\t);\n\t}\n\tfinally {\n\t\tremoveClasspathEntry(JAVA_PROJECT, new Path(\"/JavaSearchBugs/lib/b211857.jar\"));\n\t}\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug211857", "class_name": "JavaSearchBugsTests", "index": 1042, "label": 1}
{"input": "public void SetSelection(int _index) {\n\t\tthis.setSelection(_index);\t\t\n\t\tif (highLightSelectedItem) {\t\n\t\t\t if (lastSelectedItem != -1) {\n\t\t\t    DoHighlight(lastSelectedItem, Color.TRANSPARENT); \n\t\t\t }\t\t\t\n\t\t\t DoHighlight(_index,  highLightColor);\n\t\t\t lastSelectedItem = (int) _index;\t\t\n\t\t}\t\t\t\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "SetSelection", "class_name": "jListView", "index": 1043, "label": 1}
{"input": "public void setInstitutionType(String institutionType) {\n\t\tthis.institutionType = institutionType;\n\t}", "timestamp": "2023-09-02T08:37:28.947644Z", "repo_name": "matthewmarkose/etrade-library", "path": "/src/main/java/com/markose/etrade/account/Account.java", "source": "the-stack-v2", "method_name": "setInstitutionType", "class_name": "Account", "index": 1044, "label": 1}
{"input": "public void insert(Integer data) {\n        if (data >= this.data) {\n            if (rightChild == null) {\n                rightChild = new TreeNode(data);\n            } else {\n                rightChild.insert(data);\n            }\n        } else {\n            if (leftChild == null) {\n                leftChild = new TreeNode(data);\n            } else {\n                leftChild.insert(data);\n            }\n        }\n    }", "timestamp": "2020-07-01T01:51:52.754476Z", "repo_name": "obelinskyi/JavaCource", "path": "/src/datastructuresandalgorithmes/c07binarysearchtree/TreeNode.java", "source": "the-stack-v2", "method_name": "insert", "class_name": "TreeNode", "index": 1045, "label": 1}
{"input": "public void setIs_settled(String is_settled) {\n                this.is_settled = is_settled;\n            }", "timestamp": "2021-01-13T07:12:09.987566Z", "repo_name": "acmlgogo/one_kotlin", "path": "/app/src/main/java/com/storm/cftest/base/Question.java", "source": "the-stack-v2", "method_name": "setIs_settled", "class_name": "AnswererBean", "index": 1046, "label": 1}
{"input": "@EventHandler\n    public void playerChat(AsyncPlayerChatEvent event) {\n        this.playerChat(new AsyncChatEvent(event));\n    }", "timestamp": "2023-09-03T19:34:45.715425Z", "repo_name": "Multiverse/Multiverse-Core", "path": "/src/main/java/com/onarandombox/MultiverseCore/listeners/MVAsyncPlayerChatListener.java", "source": "the-stack-v2", "method_name": "playerChat", "class_name": "MVAsyncPlayerChatListener", "index": 1047, "label": 1}
{"input": "public Builder clearUpdateMask() {\n      if (updateMaskBuilder_ == null) {\n        updateMask_ = null;\n        onChanged();\n      } else {\n        updateMask_ = null;\n        updateMaskBuilder_ = null;\n      }\n\n      return this;\n    }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "clearUpdateMask", "class_name": "Builder", "index": 1048, "label": 1}
{"input": "public Criteria andIntegralLogIdIsNotNull() {\n            addCriterion(\"integral_log_id is not null\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andIntegralLogIdIsNotNull", "class_name": "GeneratedCriteria", "index": 1049, "label": 1}
{"input": "public void testCompilationUnitLineNumberTable() {\n\n\n\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "testCompilationUnitLineNumberTable", "class_name": "ASTTest", "index": 1050, "label": 1}
{"input": "void notifyTextChanged(int columnIndex, boolean textWasNull) {\t\r\n\tTable parent = getParent();\r\n\tString text;\r\n\tRectangle columnBounds;\r\n\tint redrawStartX = 0;\r\n\tint redrawWidth = 0;\r\n\tint columnCount = parent.internalGetColumnCount();\r\n\r\n\tif (columnIndex >= 0 && columnIndex < columnCount && parent.getVisibleRedrawY(this) != -1) {\r\n\t\ttext = (String) getDataLabels().elementAt(columnIndex);\r\n\t\tcolumnBounds = parent.internalGetColumn(columnIndex).getBounds();\r\n\t\tredrawStartX = columnBounds.x;\r\n\t\tif (getImage(columnIndex) != null) {\r\n\t\t\tredrawStartX += getImageStopX(columnIndex);\r\n\t\t}\r\n\t\tredrawStartX = Math.max(0, redrawStartX);\r\n\t\t\n\t\tif (textWasNull == false || text.length() > 0) {\r\n\t\t\tredrawWidth = columnBounds.x + columnBounds.width - redrawStartX;\r\n\t\t}\r\n\t}\r\n\tparent.itemChanged(this, redrawStartX, redrawWidth);\r\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipseswt_cluster/56034/tar_1.java", "source": "the-stack-v2", "method_name": "notifyTextChanged", "class_name": "TableItem", "index": 1051, "label": 1}
{"input": "@RequestMapping(method = RequestMethod.DELETE, consumes = \"application/json\")\n    ResponseEntity remove(@RequestBody JsonIDRequest idList) {\n        Arrays.stream(idList.ids).forEach(id -> {\n            if (accountService.contains(id)) {\n                accountService.get(id).getBookmarks().forEach(\n                        bookmark -> bookmarkService.remove(bookmark.getId()));\n                accountService.remove(id);\n            } else {\n                System.err.println(\"Missing ID: \" + id);\n            }\n        });\n        return ResponseEntity.noContent().build();\n    }", "timestamp": "2020-06-03T04:18:15.597291Z", "repo_name": "vyrwu/spring-mvc-demo", "path": "/src/main/java/com/example/vyrwu/agillicDemoMvn/Account/AccountController.java", "source": "the-stack-v2", "method_name": "remove", "class_name": "AccountController", "index": 1052, "label": 1}
{"input": "public static void launch(Context context, String url) {\n        JitsiMeetConferenceOptions options\n            = new JitsiMeetConferenceOptions.Builder().setRoom(url).build();\n        launch(context, options);\n    }", "timestamp": "2023-02-17T05:06:30.003456Z", "repo_name": "amit27592/jitsi-meet", "path": "/android/sdk/src/main/java/org/jitsi/meet/sdk/JitsiMeetActivity.java", "source": "the-stack-v2", "method_name": "launch", "class_name": "JitsiMeetActivity", "index": 1053, "label": 1}
{"input": "@javax.annotation.Resource\n\tpublic void setEntityDAO(EntityDAO entityDAO) {\n\t\tthis.entityDAO = entityDAO;\n\t}", "timestamp": "2021-05-08T16:38:30.406098Z", "repo_name": "eosite/openyourarm", "path": "/glaf-web/src/main/java/com/glaf/report/core/service/ReportTmpMappingServiceImpl.java", "source": "the-stack-v2", "method_name": "setEntityDAO", "class_name": "ReportTmpMappingServiceImpl", "index": 1054, "label": 1}
{"input": "public List<ExpressionContext> expression() {\n\t\t\treturn getRuleContexts(ExpressionContext.class);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "expression", "class_name": "ExpressionContext", "index": 1055, "label": 1}
{"input": "public Criteria andVdef15NotLike(String value) {\r\n            addCriterion(\"VDEF15 not like\", value, \"vdef15\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef15NotLike", "class_name": "GeneratedCriteria", "index": 1056, "label": 1}
{"input": "@Override\r\n  public void setBody(Term newBody)\r\n  {\r\n    if (newBody != body)\r\n    {\r\n      NotificationChain msgs = null;\r\n      if (body != null)\r\n        msgs = ((InternalEObject)body).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AsmetaLPackage.FUNCTION_INITIALIZATION__BODY, null, msgs);\r\n      if (newBody != null)\r\n        msgs = ((InternalEObject)newBody).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AsmetaLPackage.FUNCTION_INITIALIZATION__BODY, null, msgs);\r\n      msgs = basicSetBody(newBody, msgs);\r\n      if (msgs != null) msgs.dispatch();\r\n    }\r\n    else if (eNotificationRequired())\r\n      eNotify(new ENotificationImpl(this, Notification.SET, AsmetaLPackage.FUNCTION_INITIALIZATION__BODY, newBody, newBody));\r\n  }", "timestamp": "2023-05-25T04:51:25.190702Z", "repo_name": "Favio-Quinteros/Quinteros-WebEditor", "path": "/org.xtext.asmetal.parent/org.xtext.asmetal/src/main/xtext-gen/org/xtext/asmetal/asmetaL/impl/FunctionInitializationImpl.java", "source": "the-stack-v2", "method_name": "setBody", "class_name": "FunctionInitializationImpl", "index": 1057, "label": 1}
{"input": "public void testBug110060_TypePattern09_SamePartCount() throws CoreException {\n\tsetUpBug110060_TypePattern();\n\tsearch(\"Aaa\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH | SearchPattern.R_CASE_SENSITIVE);\n\t\n\tassertSearchResults(\n\t\t\"src/b110060/Test.java b110060.Test.a1 [Aaa] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_TypePattern09_SamePartCount", "class_name": "JavaSearchBugsTests", "index": 1058, "label": 1}
{"input": "@Test\n    public void test3(){\n        String token = getToken();\n        Map<String,String> header = new HashMap<>();\n        header.put(ACCESS_TOKEN,token);\n        UserDTO userDTO = new UserDTO();\n        \n        HttpUtil.doPostForObject(\"http://localhost:9998/demo/user/addNormalExceptionHandler\",userDTO,header, UserRepDTO.class);\n        \n        UserRepDTO userRepDTO = HttpUtil.doPostForObject(\"http://localhost:9998/demo/user/testGetException?name=yyl\",\"{}\",header, UserRepDTO.class);\n        \n        HttpUtil.doPostForObject(\"http://localhost:9998/demo/user/testPostException\",userDTO,header, UserRepDTO.class);\n        \n        ResponseEntity<UserRepDTO> entity = HttpUtil.doPostForEntity(\"http://localhost:9998/demo/user/testGetRetry?name=yyl\",\"{}\",header, UserRepDTO.class);\n        log.info(\"entity:{}\",entity);\n        \n        HttpUtil.doPostForObject(\"http://localhost:9998/demo/user/testPostRetry\",userDTO,header, UserRepDTO.class);\n    }", "timestamp": "2023-06-07T17:13:15.018773Z", "repo_name": "yylstudy/spring-cloud-new", "path": "/test/src/main/java/com/yyl/test/MyTest1.java", "source": "the-stack-v2", "method_name": "test3", "class_name": "MyTest1", "index": 1059, "label": 1}
{"input": "public void addDomain() {\n\t\tString hostname = JOptionPane.showInputDialog(\"Enter hostname:\");\n\t\tString description = JOptionPane.showInputDialog(\"Description:\");\n\t\ttry {\n\t\t\tclient.createDB(hostname);\n\t\t} catch (Exception e) {\n\t\t\tJOptionPane.showMessageDialog(null, e.getMessage());\n\t\t}\n\t\t\n\t\t\n\t\ttree.updateUI();\n\t}", "timestamp": "2021-01-18T01:40:35.930601Z", "repo_name": "BenKettlewell/couchburp", "path": "/src/main/java/com/prevsec/couchburp/controller/BurpController.java", "source": "the-stack-v2", "method_name": "addDomain", "class_name": "BurpController", "index": 1060, "label": 1}
{"input": "static void init(Scriptable scope, boolean sealed)\n    {\n        NativeDate obj = new NativeDate();\n        \n        obj.date = ScriptRuntime.NaN;\n        obj.exportAsJSClass(MAX_PROTOTYPE_ID, scope, sealed);\n    }", "timestamp": "2016-09-05T17:02:01.575534Z", "repo_name": "thegreatape/slim", "path": "/yuicompressor-2.4.2/rhino1_6R7/src/org/yuimozilla/javascript/NativeDate.java", "source": "the-stack-v2", "method_name": "init", "class_name": "NativeDate", "index": 1061, "label": 1}
{"input": "public void getPaymentOptions(String coachId){\n        coachProgramImplementer = new CoachProgramImplementer(context, coachId, progressChangeListener, listener);\n\n    }", "timestamp": "2021-01-23T01:25:29.267263Z", "repo_name": "AnxaRHQ/HAPIlabs_Android", "path": "/app/src/main/java/com/anxa/hapilabs/controllers/registration/CoachProgramController.java", "source": "the-stack-v2", "method_name": "getPaymentOptions", "class_name": "CoachProgramController", "index": 1062, "label": 1}
{"input": "@Override\n        public boolean shouldOverrideUrlLoading(WebView view, String url) {\n            Intent intent = parse(url);\n            if (isIntent(url)) {\n                if (isExistInfo(intent, view.getContext()) || isExistPackage(intent, view.getContext()))\n                    return start(intent, view.getContext());\n                else\n                    gotoMarket(intent, view.getContext());\n            } else if (isMarket(url)) {\n                return start(intent, view.getContext());\n            }\n            return url.contains(\"https://bootpaymark\");\n        }", "timestamp": "2022-11-05T18:54:50.987825Z", "repo_name": "jpung0629/client_android_java", "path": "/sample/src/main/java/bootpay/co/kr/samplepayment/LocalHtmlActivity.java", "source": "the-stack-v2", "method_name": "shouldOverrideUrlLoading", "class_name": "BWebviewClient", "index": 1063, "label": 1}
{"input": "private AreaFormatRecord createAreaFormatRecord2()\n    {\n        AreaFormatRecord r = new AreaFormatRecord();\n        r.setForegroundColor(0x00c0c0c0);\n        r.setBackgroundColor(0x00000000);\n        r.setPattern((short)1);\n        r.setAutomatic(false);\n        r.setInvert(false);\n        r.setForecolorIndex((short)22);\n        r.setBackcolorIndex((short)79);\n        return r;\n    }", "timestamp": "2023-01-11T02:29:36.328694Z", "repo_name": "DXYyang/SDP", "path": "/sourcedata/poi-REL_3_0/src/scratchpad/src/org/apache/poi/hssf/usermodel/HSSFChart.java", "source": "the-stack-v2", "method_name": "createAreaFormatRecord2", "class_name": "HSSFChart", "index": 1064, "label": 1}
{"input": "@Override\n  public boolean isImplicitWrite(PsiElement element) {\n    return element instanceof PsiField && AnnotationUtil.isAnnotated((PsiModifierListOwner)element, myWriteAnnotations, 0);\n  }", "timestamp": "2020-09-01T20:17:15.244967Z", "repo_name": "lakshit1/intellij-community", "path": "/java/java-analysis-impl/src/com/intellij/codeInspection/ex/EntryPointsManagerBase.java", "source": "the-stack-v2", "method_name": "isImplicitWrite", "class_name": "EntryPointsManagerBase", "index": 1065, "label": 1}
{"input": "@Override\n    public String toString() {\n        return \"M_Cuidador{\" + \"DNI=\" + DNI + \", nombre=\" + nombre + \", direccion=\" + direccion + \", telefono=\" + telefono + '}';\n    }", "timestamp": "2020-05-22T16:21:31.990041Z", "repo_name": "Pantalaimon-Belaqua/MEUS6_projecte", "path": "/src/Modelo/M_Cuidador.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "M_Cuidador", "index": 1066, "label": 1}
{"input": "public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n\n        int n = Integer.parseInt(scan.nextLine());\n        int result = 0;\n\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= n; j++) {\n                for (int k = 0; k <= n; k++) {\n                    for (int l = 0; l <= n; l++) {\n                        for (int m = 0; m <= n; m++) {\n                            int combination = i + j + k + l + m;\n                            if (combination == n) {\n                                result++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        System.out.println(result);\n    }", "timestamp": "2020-04-05T07:33:28.479305Z", "repo_name": "bfartsov/java-basics", "path": "/07. NestedLoops/Lab/src/Combination.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Combination", "index": 1067, "label": 1}
{"input": "public Criteria andVdef6Between(String value1, String value2) {\r\n            addCriterion(\"VDEF6 between\", value1, value2, \"vdef6\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef6Between", "class_name": "GeneratedCriteria", "index": 1068, "label": 1}
{"input": "public void testBug124624_HMap_CamelCaseSamePartCount() throws CoreException {\n\tsetupBug124624();\n\tsearch(\"HMap\", IJavaSearchConstants.TYPE, IJavaSearchConstants.DECLARATIONS, SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);\n\tassertSearchResults(\n\t\t\"src/Test.java HashMap [HashMap] EXACT_MATCH\\n\" +\n\t\t\"src/Test.java HtmlMapper [HtmlMapper] EXACT_MATCH\\n\" +\n\t\t\"src/Test.java HaxMapxxxx [HaxMapxxxx] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug124624_HMap_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 1069, "label": 1}
{"input": "@Test\n  public void listServicesExceptionTest4() throws Exception {\n    StatusRuntimeException exception = new StatusRuntimeException(io.grpc.Status.INVALID_ARGUMENT);\n    mockServiceMonitoringService.addException(exception);\n\n    try {\n      String parent = \"parent-995424086\";\n      client.listServices(parent);\n      Assert.fail(\"No exception raised\");\n    } catch (InvalidArgumentException e) {\n      \n    }\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-monitoring/google-cloud-monitoring/src/test/java/com/google/cloud/monitoring/v3/ServiceMonitoringServiceClientTest.java", "source": "the-stack-v2", "method_name": "listServicesExceptionTest4", "class_name": "ServiceMonitoringServiceClientTest", "index": 1070, "label": 1}
{"input": "public static void checkCompatible(Tuple tuple, Schema schema)\n      throws IOException {\n    \n    if (tuple.size() != schema.getNumColumns()) {\n      throw new IOException(\"Incompatible Tuple object - number of fields\");\n    }\n  }", "timestamp": "2021-01-25T03:54:55.074368Z", "repo_name": "hirohanin/pig7hadoop21", "path": "/contrib/zebra/src/java/org/apache/hadoop/zebra/types/TypesUtils.java", "source": "the-stack-v2", "method_name": "checkCompatible", "class_name": "TypesUtils", "index": 1071, "label": 1}
{"input": "@Override\n\tpublic BeanDefinition[] getInnerBeanDefinitions() {\n\t\treturn this.innerBeanDefinitions;\n\t}", "timestamp": "2020-05-26T20:40:16.517057Z", "repo_name": "CodeIngL/spring", "path": "/spring-beans/src/main/java/org/springframework/beans/factory/parsing/BeanComponentDefinition.java", "source": "the-stack-v2", "method_name": "getInnerBeanDefinitions", "class_name": "BeanComponentDefinition", "index": 1072, "label": 1}
{"input": "@Override\n    public void setPrecio(double precio) {\n        this.precio = precio+(precio*10/100);\n    }", "timestamp": "2020-11-26T19:36:37.380550Z", "repo_name": "sivianicast/2ParcialParte2", "path": "/src/entidades/Terror.java", "source": "the-stack-v2", "method_name": "setPrecio", "class_name": "Terror", "index": 1073, "label": 1}
{"input": "public static void main(String[] args) throws Exception {\n\t\tSpringApplication.run(SampleWebFreeMarkerApplication.class, args);\n\t}", "timestamp": "2018-08-29T11:57:22.404427Z", "repo_name": "heartlhj/spring-boot-mybatis", "path": "/gogo-start/src/main/java/com/lhj/gogo/start/SampleWebFreeMarkerApplication.java", "source": "the-stack-v2", "method_name": "main", "class_name": "SampleWebFreeMarkerApplication", "index": 1074, "label": 1}
{"input": "@Override\n    protected void readInternal(ObjectDataInput in) throws IOException {\n        super.readInternal(in);\n        data = IOUtil.readData(in);\n    }", "timestamp": "2023-03-19T22:05:57.052418Z", "repo_name": "neilstevenson/hazelcast", "path": "/hazelcast/src/main/java/com/hazelcast/collection/impl/txnqueue/operations/TxnOfferOperation.java", "source": "the-stack-v2", "method_name": "readInternal", "class_name": "TxnOfferOperation", "index": 1075, "label": 1}
{"input": "private void changePage() {\n\t\tCalendarView view = getSkinnable();\n\n\t\tif (view.isTransitionsEnabled()) {\n\t\t\tanimateChangePage();\n\t\t} else {\n\t\t\tupdateToggleButtons();\n\n\t\t\tPageBase selectedPage = view.getSelectedPage();\n\n\t\t\tselectedPage.setManaged(true);\n\t\t\tselectedPage.setVisible(true);\n\n\t\t\t\n\t\t\tselectedPage.setScaleX(1);\n\t\t\tselectedPage.setScaleY(1);\n\t\t\tselectedPage.setOpacity(1);\n\t\t\tselectedPage.toFront();\n\n\t\t\thideNonSelectedPages();\n\t\t}\n\t}", "timestamp": "2020-03-24T17:58:06.467751Z", "repo_name": "GabrielZulian/CalendarFX", "path": "/CalendarFXView/src/main/java/impl/com/calendarfx/view/CalendarViewSkin.java", "source": "the-stack-v2", "method_name": "changePage", "class_name": "CalendarViewSkin", "index": 1076, "label": 1}
{"input": "public static void main(String[] args) {\n        Result result = JUnitCore.runClasses(ContainsCycle.class);\n        for (Failure failure : result.getFailures()) {\n            System.out.println(failure.toString());\n        }\n        if (result.wasSuccessful()) {\n            System.out.println(\"All tests passed.\");\n        }\n    }", "timestamp": "2022-06-23T01:18:24.225891Z", "repo_name": "bazikpath/codetryouts", "path": "/codedojo/src/com/kavanal/interviewcake/linkedlists/ContainsCycle.java", "source": "the-stack-v2", "method_name": "main", "class_name": "ContainsCycle", "index": 1077, "label": 1}
{"input": "private void setUpBug80194() throws CoreException, JavaModelException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b80194/Test.java\",\n\t\t\"package b80194;\\n\" +\n\t\t\"interface Map<K, V> {}\\n\" +\n\t\t\"class HashMap<K, V> implements Map {}\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"\tvoid callDoSomething() {\\n\" +\n\t\t\"\t\tfinal Map<String, Object> map = new HashMap<String, Object>();\\n\" +\n\t\t\"\t\tdoSomething(map);\\n\" +\n\t\t\"\t\tdoSomething(map, true);\\n\" +\n\t\t\"\t\tdoSomething(true);\\n\" +\n\t\t\"package b80194;\\n\"0 +\n\t\t\"package b80194;\\n\"1 +\n\t\t\"package b80194;\\n\"2 +\n\t\t\"package b80194;\\n\"3 +\n\t\t\"package b80194;\\n\"4\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "setUpBug80194", "class_name": "JavaSearchBugsTests", "index": 1078, "label": 1}
{"input": "private static double getScale(final int totalMaterialScore, final int endMaterial, final int margin){\n \t\treturn min(1-(endMaterial-totalMaterialScore)*1./margin, 1);\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/10/10_5d6bb3dfac1edadf4894967583023f6877b24c02/E9v3/10_5d6bb3dfac1edadf4894967583023f6877b24c02_E9v3_s.java", "source": "the-stack-v2", "method_name": "getScale", "class_name": "E9v3", "index": 1079, "label": 1}
{"input": "private void checkNullableTimestamp(CalciteAssert.Config config) {\n    CalciteAssert.that()\n        .with(config)\n        .query(\n            \"select \\\"hire_date\\\", \\\"end_date\\\", \\\"birth_date\\\" from \\\"foodmart\\\".\\\"employee\\\" where \\\"employee_id\\\" = 1\")\n        \n        .enable(CalciteAssert.DB != CalciteAssert.DatabaseInstance.MYSQL)\n        .returns2(\n            \"hire_date=1994-12-01; end_date=null; birth_date=1961-08-26\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "checkNullableTimestamp", "class_name": "JdbcTest", "index": 1080, "label": 1}
{"input": "@Test\n  public void jsr107LoaderInitFailureClosesExpiry() throws Exception {\n    ExpiryPolicy expiryPolicy = mock(ExpiryPolicy.class, new MockSettingsImpl<>().extraInterfaces(Closeable.class));\n\n    MutableConfiguration<Object, Object> configuration = new MutableConfiguration<>();\n    Factory<CacheLoader<Object, Object>> factory = throwingFactory();\n    configuration.setExpiryPolicyFactory(factoryOf(expiryPolicy))\n        .setReadThrough(true)\n        .setCacheLoaderFactory(factory);\n\n    try {\n      merger.mergeConfigurations(\"cache\", configuration);\n      fail(\"Loader factory should have thrown\");\n    } catch (MultiCacheException mce) {\n      verify((Closeable) expiryPolicy).close();\n    }\n  }", "timestamp": "2021-08-23T22:08:57.063756Z", "repo_name": "leespy/ehcache3", "path": "/107/src/test/java/org/ehcache/jsr107/ConfigurationMergerTest.java", "source": "the-stack-v2", "method_name": "jsr107LoaderInitFailureClosesExpiry", "class_name": "ConfigurationMergerTest", "index": 1081, "label": 1}
{"input": "public Criteria andVdef14NotLike(String value) {\r\n            addCriterion(\"VDEF14 not like\", value, \"vdef14\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef14NotLike", "class_name": "GeneratedCriteria", "index": 1082, "label": 1}
{"input": "@Column(name =\"SYS_ORG_CODE\",nullable=true,length=50)\n\tpublic String getSysOrgCode(){\n\t\treturn this.sysOrgCode;\n\t}", "timestamp": "2022-12-28T08:28:08.585073Z", "repo_name": "289222346/dianshang", "path": "/src/main/java/org/jeecgframework/web/superquery/entity/SuperQueryHistoryEntity.java", "source": "the-stack-v2", "method_name": "getSysOrgCode", "class_name": "SuperQueryHistoryEntity", "index": 1083, "label": 1}
{"input": "public static void main(String[] args) {\r\n        String mybirthday = \"2000/1/一\";\r\n        DateFormat df = DateFormat.getDateInstance();\r\n        try {\r\n            Date date = df.parse(mybirthday);\r\n            System.out.println(date);\r\n        } catch (ParseException e) {\r\n            System.out.println(\"日期轉換失敗, \" + e);\r\n        }\r\n    }", "timestamp": "2023-05-12T05:55:00.830995Z", "repo_name": "Beast090320/Java0316", "path": "/src/main/java/com/ocp/day28/ExceptionDemo7.java", "source": "the-stack-v2", "method_name": "main", "class_name": "ExceptionDemo7", "index": 1084, "label": 1}
{"input": "public boolean removeLevel(Level aLevel)\n  {\n    boolean wasRemoved = false;\n    \n    if (this.equals(aLevel.getGame()))\n    {\n      return wasRemoved;\n    }\n\n    \n    if (numberOfLevels() <= minimumNumberOfLevels())\n    {\n      return wasRemoved;\n    }\n    levels.remove(aLevel);\n    wasRemoved = true;\n    return wasRemoved;\n  }", "timestamp": "2020-09-27T06:19:22.075701Z", "repo_name": "mustafain117/Block-Breaker-Game", "path": "/Block223v2/src/ca/mcgill/ecse223/block/model/Game.java", "source": "the-stack-v2", "method_name": "removeLevel", "class_name": "Game", "index": 1085, "label": 1}
{"input": "public void test(int id) {\n            solution = problem.solution(id);\n            if (solution == null) { System.out.println(\"Sorry, [id:\" + id + \"] doesn't exist!\"); return; }\n            System.out.println(\"\\nCall Solution\" + solution.id);\n\n            \n            int[][] grid1 = new int[][]{\n                 {0,0,1,0,0,0,0,1,0,0,0,0,0},\n                 {0,0,0,0,0,0,0,1,1,1,0,0,0},\n                 {0,1,1,0,1,0,0,0,0,0,0,0,0},\n                 {0,1,0,0,1,1,0,0,1,0,1,0,0},\n                 {0,1,0,0,1,1,0,0,1,1,1,0,0},\n                 {0,0,0,0,0,0,0,0,0,0,1,0,0},\n                 {0,0,0,0,0,0,0,1,1,1,0,0,0},\n                 {0,0,0,0,0,0,0,1,1,0,0,0,0}\n            };\n            int ans1 = 6;\n\n            int[][] grid2 = new int[][] {\n                {1,1,0,0,0},\n                {1,1,0,0,0},\n                {0,0,0,1,1},\n                {0,0,0,1,1}\n            };\n            int ans2 = 4;\n\n            \n            call(grid1,ans1);\n            call(grid2,ans2);\n        }", "timestamp": "2021-06-03T14:44:57.256143Z", "repo_name": "helloShen/leetcode", "path": "/java/src/main/java/com/ciaoshen/leetcode/MaxAreaOfIsland.java", "source": "the-stack-v2", "method_name": "test", "class_name": "Test", "index": 1086, "label": 1}
{"input": "List<HexCoordinate> neighboursAndSelf() {\n            var result = neighbours();\n            result.add(new HexCoordinate(x, y, z));\n            return result;\n        }", "timestamp": "2023-02-02T02:35:42.733203Z", "repo_name": "zskamljic/aoc-2020", "path": "/src/Day24.java", "source": "the-stack-v2", "method_name": "neighboursAndSelf", "class_name": "Day24", "index": 1087, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.settings_act);\n        overridePendingTransition(R.anim.fade_in, R.anim.fade_out);\n    }", "timestamp": "2021-07-03T21:36:50.802633Z", "repo_name": "liaoqingmo/iosched", "path": "/lib/src/main/java/com/google/samples/apps/iosched/settings/SettingsActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "SettingsActivity", "index": 1088, "label": 1}
{"input": "@Test\n            public void shouldReturnNewGame() {\n                response.then().body(not(isEmptyOrNullString()));\n            }", "timestamp": "2021-01-23T06:35:39.821088Z", "repo_name": "anttiahonen/ekanban", "path": "/backend/src/integration-test/java/fi/aalto/ekanban/controllers/GameControllerTest.java", "source": "the-stack-v2", "method_name": "shouldReturnNewGame", "class_name": "withValidRequest", "index": 1089, "label": 1}
{"input": "private void doCallPhone2() {\n        Intent intent = new Intent(Intent.ACTION_DIAL);\n        Uri data = Uri.parse(\"tel:10010\");\n        intent.setData(data);\n        startActivity(intent);\n    }", "timestamp": "2021-01-19T21:06:06.737212Z", "repo_name": "JWBlueLiu/XPermissionUtils", "path": "/app/src/main/java/com/andsync/xpermissionutils/MainActivity.java", "source": "the-stack-v2", "method_name": "doCallPhone2", "class_name": "MainActivity", "index": 1090, "label": 1}
{"input": "public static com.google.cloud.securitycenter.v1.Cvssv3 parseFrom(java.io.InputStream input)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "parseFrom", "class_name": "Cvssv3", "index": 1091, "label": 1}
{"input": "@Provides\n    Retrofit retrofit() {\n        return new Retrofit.Builder()\n                .baseUrl(URL)\n                .addConverterFactory(GsonConverterFactory.create())\n                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())\n                .build();\n    }", "timestamp": "2020-04-16T07:03:43.499799Z", "repo_name": "colaalex/CBox", "path": "/app/src/main/java/com/github/colaalex/cbox/di/modules/NetworkModule.java", "source": "the-stack-v2", "method_name": "retrofit", "class_name": "NetworkModule", "index": 1092, "label": 1}
{"input": "@Override\n\tpublic void addCategoryDescription(Category category, CategoryDescription description)\n\t\t\tthrows ServiceException {\n\t\t\n\t\t\n\t\t\n\t\ttry {\n\t\t\tcategory.getDescriptions().add(description);\n\t\t\tdescription.setCategory(category);\n\t\t\tupdate(category);\n\t\t} catch (Exception e) {\n\t\t\tthrow new ServiceException(e);\n\t\t}\n\n\t}", "timestamp": "2021-05-11T22:33:13.512901Z", "repo_name": "joshLV/laVetrina", "path": "/sm-core/src/main/java/com/salesmanager/core/business/catalog/category/service/CategoryServiceImpl.java", "source": "the-stack-v2", "method_name": "addCategoryDescription", "class_name": "CategoryServiceImpl", "index": 1093, "label": 1}
{"input": "public Criteria andVdef16LessThanOrEqualTo(String value) {\r\n            addCriterion(\"VDEF16 <=\", value, \"vdef16\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef16LessThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 1094, "label": 1}
{"input": "@Override\n    public void setJarScanner(JarScanner jarScanner) {\n        this.jarScanner = jarScanner;\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setJarScanner", "class_name": "StandardContext", "index": 1095, "label": 1}
{"input": "public Criteria andVdef18NotEqualTo(String value) {\r\n            addCriterion(\"VDEF18 <>\", value, \"vdef18\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef18NotEqualTo", "class_name": "GeneratedCriteria", "index": 1096, "label": 1}
{"input": "@Override\n    public void setUseBeanValidation(boolean useBeanValidation) {\n        this.useBeanValidation = useBeanValidation;\n    }", "timestamp": "2023-09-02T11:26:28.189499Z", "repo_name": "OpenAPITools/openapi-generator", "path": "/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaHelidonServerCodegen.java", "source": "the-stack-v2", "method_name": "setUseBeanValidation", "class_name": "JavaHelidonServerCodegen", "index": 1097, "label": 1}
{"input": "public Query asOf(String wallclockTime) throws FeatureStoreException, ParseException {\n    Long wallclockTimestamp = utils.getTimeStampFromDateString(wallclockTime);\n    for (Join join : this.joins) {\n      Query queryWithTimeStamp = join.getQuery();\n      queryWithTimeStamp.setLeftFeatureGroupEndTime(wallclockTimestamp);\n      join.setQuery(queryWithTimeStamp);\n    }\n    this.setLeftFeatureGroupEndTime(wallclockTimestamp);\n    return this;\n  }", "timestamp": "2023-08-17T00:59:45.862350Z", "repo_name": "davitbzh/FlinkAggJob", "path": "/flink/src/main/java/com/logicalclocks/hsfs/constructor/Query.java", "source": "the-stack-v2", "method_name": "asOf", "class_name": "Query", "index": 1098, "label": 1}
{"input": "@Test public void testAssignableTypeCast() {\n    final String sql = \"SELECT ST_MakePoint(1, 2.1)\";\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.GEO)\n        .query(sql)\n        .planContains(\"static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_1_ = \"\n            + \"new java.math.BigDecimal(\\n\"\n            + \"              1)\")\n        .planContains(\"org.apache.calcite.runtime.GeoFunctions.ST_MakePoint(\"\n            + \"$L4J$C$new_java_math_BigDecimal_1_, v)\")\n        .returns(\"EXPR$0={\\\"x\\\":1,\\\"y\\\":2.1}\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testAssignableTypeCast", "class_name": "JdbcTest", "index": 1099, "label": 1}
{"input": "public ProcessTxnResult processTxn(TxnHeader hdr, Record txn) {\n        return dataTree.processTxn(hdr, txn);\n    }", "timestamp": "2021-11-23T14:30:09.439604Z", "repo_name": "airtimemedia/zookeeper", "path": "/src/java/main/org/apache/zookeeper/server/ZKDatabase.java", "source": "the-stack-v2", "method_name": "processTxn", "class_name": "ZKDatabase", "index": 1100, "label": 1}
{"input": "public void testBug124624_HashM_CamelCase() throws CoreException {\n\tsetupBug124624();\n\tsearch(\"HashM\", IJavaSearchConstants.TYPE, IJavaSearchConstants.DECLARATIONS, SearchPattern.R_CAMELCASE_MATCH);\n\tassertSearchResults(\n\t\t\"src/Test.java HashMap [HashMap] EXACT_MATCH\\n\" +\n\t\t\"src/Test.java HashMapEntry [HashMapEntry] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug124624_HashM_CamelCase", "class_name": "JavaSearchBugsTests", "index": 1101, "label": 1}
{"input": "public void updateInfo(Integer courseId, Integer collTypeId, Integer metadicId, String kemVal)\r\n\t{\r\n\t\tif(\"Y\".equals(metaDicDao.selectInfo(metadicId).getLongYn()))\r\n\t\t\tthis.courseKemLongDao.updateInfo(courseId, collTypeId, metadicId, kemVal);\r\n\t\telse\r\n\t\t\tthis.courseKemDao.updateInfo(courseId, collTypeId, metadicId, kemVal);\r\n\t}", "timestamp": "2023-01-04T07:40:05.314756Z", "repo_name": "yoonjinseok/cuinfo", "path": "/src/service/com/cyberup/service/course/CourseKemService.java", "source": "the-stack-v2", "method_name": "updateInfo", "class_name": "CourseKemService", "index": 1102, "label": 1}
{"input": "public int delete(SearchCriteria criteria, Connection conn)\n\t\tthrows BaseException {\n\n\t\tString sqlQuery = \" delete from \" + TABLE + \" \" +\n\t\t\tgetWhereClause(criteria);\n\n\t\treturn new SqlManager().update(conn, sqlQuery);\n\t}", "timestamp": "2022-12-21T15:46:19.801950Z", "repo_name": "zafrul-ust/tcmISDev", "path": "/src/main/java/com/tcmis/internal/supply/factory/ChangeDlaShipToViewBeanFactory.java", "source": "the-stack-v2", "method_name": "delete", "class_name": "ChangeDlaShipToViewBeanFactory", "index": 1103, "label": 1}
{"input": "public void getDelete(View view){\n        if(operation != null && !operation.equals(\"\")) {\n            operation = operation.substring(0, operation.length() - 1);\n            editText.setText(operation);\n        }\n    }", "timestamp": "2021-05-31T01:02:53.417110Z", "repo_name": "phndavid/calculator", "path": "/Calculator/app/src/main/java/com/master/ndavid/calculator/MainActivity.java", "source": "the-stack-v2", "method_name": "getDelete", "class_name": "MainActivity", "index": 1104, "label": 1}
{"input": "private void updatePrintVisibility() {\n\t\tPrintablePage printablePage = printView.getPreviewPane()\n\t\t\t\t.getPrintablePage();\n\n\t\tif (printablePage.getViewType() == ViewType.DAY_VIEW) {\n\t\t\tprintablePage.getDayView().refreshData();\n\t\t} else if (printablePage.getViewType() == ViewType.WEEK_VIEW) {\n\t\t\tprintablePage.getWeekView().refreshData();\n\t\t}\n\t}", "timestamp": "2020-03-24T17:58:06.467751Z", "repo_name": "GabrielZulian/CalendarFX", "path": "/CalendarFXView/src/main/java/impl/com/calendarfx/view/CalendarViewSkin.java", "source": "the-stack-v2", "method_name": "updatePrintVisibility", "class_name": "CalendarViewSkin", "index": 1105, "label": 1}
{"input": "@Override \n        public void hangupForegroundResumeBackgroundResponse(RadioResponseInfo info) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(14, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "hangupForegroundResumeBackgroundResponse", "class_name": "Proxy", "index": 1106, "label": 1}
{"input": "public void addFamily(final ParserToken family) {\n        if (family instanceof Identifier) families().add(((Identifier)family).getName());\n        else if (family instanceof StringToken) families().add(((StringToken)family).getValue());\n        else throw new FontFamilyInvalidException(family);\n    }", "timestamp": "2021-01-22T04:18:09.306493Z", "repo_name": "freedio/coradeck", "path": "/CoraDocCSS/src/main/java/com/coradec/coradoc/cssdecl/FontFamilyDeclaration.java", "source": "the-stack-v2", "method_name": "addFamily", "class_name": "FontFamilyDeclaration", "index": 1107, "label": 1}
{"input": "private static void retryStrategically(Predicate<Void> predicate, int retryCount, long intSleepTimeInMillis)\n            throws Exception {\n        for (int i = 0; i < retryCount; i++) {\n            if (predicate.test(null) || i == (retryCount - 1)) {\n                break;\n            }\n            Thread.sleep(intSleepTimeInMillis + (intSleepTimeInMillis * i));\n        }\n    }", "timestamp": "2021-06-22T04:11:29.154786Z", "repo_name": "kafkaesque-io/pulsar", "path": "/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZookeeperCacheTest.java", "source": "the-stack-v2", "method_name": "retryStrategically", "class_name": "ZookeeperCacheTest", "index": 1108, "label": 1}
{"input": "protected final int parseRequiredInt(XmlPullParser parser, String key) throws ParserException {\r\n      String value = parser.getAttributeValue(null, key);\r\n      if (value != null) {\r\n        try {\r\n          return Integer.parseInt(value);\r\n        } catch (NumberFormatException e) {\r\n          throw new ParserException(e);\r\n        }\r\n      } else {\r\n        throw new MissingFieldException(key);\r\n      }\r\n    }", "timestamp": "2020-12-10T15:15:05.202410Z", "repo_name": "AhabweEmmanuel/Marlia", "path": "/TMessagesProj/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java", "source": "the-stack-v2", "method_name": "parseRequiredInt", "class_name": "ElementParser", "index": 1109, "label": 1}
{"input": "@Override\r\n\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\r\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\r\n\t\t\tif (!dropsOriginal.isEmpty())\r\n\t\t\t\treturn dropsOriginal;\r\n\t\t\treturn Collections.singletonList(new ItemStack(this, 1));\r\n\t\t}", "timestamp": "2023-04-03T11:32:01.583363Z", "repo_name": "blahblahbal/Blah-s-MCreator-Mod", "path": "/src/main/java/net/mcreator/blahmod/block/PolishedCharredScoriaSideSlabBlock.java", "source": "the-stack-v2", "method_name": "getDrops", "class_name": "CustomBlock", "index": 1110, "label": 1}
{"input": "private void innitControl(){\n        lvMain = findViewById(R.id.lvMain);\n        txtDisplay = findViewById(R.id.txtDisplay);\n        \n         \n        ArrayList<Product> list = new ArrayList<>();\n        for(int i=0; i< titles.length; i++){\n            list.add(new Product(imgs[i],titles[i],contents[i]));\n        }\n        MyListViewAdapter adapter = new MyListViewAdapter(list);\n        lvMain.setAdapter(adapter);\n        lvMain.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            @Override\n            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\n                txtDisplay.setText(\"Bạn chọn \" + titles[i]);\n            }\n        });\n    }", "timestamp": "2023-08-21T01:48:19.252495Z", "repo_name": "nhathuy157/Android", "path": "/Lab8/app/src/main/java/com/example/lab8/LuyenTap1.java", "source": "the-stack-v2", "method_name": "innitControl", "class_name": "LuyenTap1", "index": 1111, "label": 1}
{"input": "@Test(timeout = 5000)\n    public void testTaskAstep1_MinMax__TaskA() throws Exception {\n        Test_jd01_02 ok = run(\"\", false);\n        Method m = checkMethod(ok.aClass.getSimpleName(), \"static step1\", int[].class);\n        System.out.println(\"Проверка на массиве -1, 2, 3, 4, 567, 567, 4, 3, 2, -1, 4, 4\");\n        m.invoke(null, new int[]{-1, 2, 3, 4, 567, 567, 4, 3, 2, -1, 4, 4});\n        ok.include(\"\").include(\"-1 567\");\n    }", "timestamp": "2020-04-12T09:47:01.862944Z", "repo_name": "migeniya/JD2018-12-10", "path": "/src/by/it/dziomin/jd01_02/Test_jd01_02.java", "source": "the-stack-v2", "method_name": "testTaskAstep1_MinMax__TaskA", "class_name": "Test_jd01_02", "index": 1112, "label": 1}
{"input": "public void testBug110060_ConstructorPattern04_SamePartCount() throws CoreException {\n\tsetUpBug110060_ConstructorPattern();\n\tsearch(\"AxA\", CONSTRUCTOR, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);\n\tassertSearchResults(\n\t\t\"src/b110060/AxxAyy.java b110060.AxxAyy() [AxxAyy] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.axxayy [new AxxAyy()] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_ConstructorPattern04_SamePartCount", "class_name": "JavaSearchBugsTests", "index": 1113, "label": 1}
{"input": "public Criteria andVdef17IsNull() {\r\n            addCriterion(\"VDEF17 is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef17IsNull", "class_name": "GeneratedCriteria", "index": 1114, "label": 1}
{"input": "public void setCertification(final Certification certification) {\n        this.certification = certification;\n    }", "timestamp": "2021-06-16T09:55:00.426309Z", "repo_name": "zemuldo/Cyclos_3.7", "path": "/src/nl/strohalm/cyclos/entities/accounts/guarantees/Guarantee.java", "source": "the-stack-v2", "method_name": "setCertification", "class_name": "Guarantee", "index": 1115, "label": 1}
{"input": "public static <T> void assertContainsElements(Collection<? extends T> collection, Collection<T> expected) {\n    ArrayList<T> copy = new ArrayList<T>(collection);\n    copy.retainAll(expected);\n    assertSameElements(toString(collection), copy, expected);\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "assertContainsElements", "class_name": "UsefulTestCase", "index": 1116, "label": 1}
{"input": "@Test public void testArrayUnique1() throws Exception {\n \t\tassertEquals(\"{1}\", SRun(\"array_unique(array(1, 1, 1), false)\", fakePlayer));\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/19/19_3b3438a24e33893035d2c602198d49ca13a35845/ArrayHandlingTest/19_3b3438a24e33893035d2c602198d49ca13a35845_ArrayHandlingTest_s.java", "source": "the-stack-v2", "method_name": "testArrayUnique1", "class_name": "ArrayHandlingTest", "index": 1117, "label": 1}
{"input": "public boolean process(ElementListener elementListener) {\n        try {\n            return elementListener.add(this);\n        } catch (DocumentException unused) {\n            return false;\n        }\n    }", "timestamp": "2023-03-09T12:14:38.824373Z", "repo_name": "Sluckson/copyOavct", "path": "/sources/com/lowagie/text/Table.java", "source": "the-stack-v2", "method_name": "process", "class_name": "Table", "index": 1118, "label": 1}
{"input": "@Test\r\n    public void return_movies_by_lenght() {\r\n        Collection<Movie> movies = movieService.findMoviesByLength(120);\r\n        assertThat(getMovieIds(movies), CoreMatchers.is(Arrays.asList(2,3,4,5,6)));\r\n    }", "timestamp": "2022-01-22T02:39:11.143965Z", "repo_name": "fauObregon/javatests", "path": "/src/test/java/com/platzi/javatests/movies/service/MovieServiceShould.java", "source": "the-stack-v2", "method_name": "return_movies_by_lenght", "class_name": "MovieServiceShould", "index": 1119, "label": 1}
{"input": "@NonNull\n    @Override\n    public ReclerAdapter.HolderClass onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        View itemView = LayoutInflater.from(parent.getContext())\n                .inflate(R.layout.list_item, parent, false);\n\n        return new HolderClass(itemView);\n    }", "timestamp": "2020-04-08T05:01:51.945379Z", "repo_name": "MohammadAsiff/Retrofit", "path": "/app/src/main/java/com/example/sys/retrofit2/ReclerAdapter.java", "source": "the-stack-v2", "method_name": "onCreateViewHolder", "class_name": "ReclerAdapter", "index": 1120, "label": 1}
{"input": "@Override\n      public Generate setPrettyPrint(java.lang.Boolean prettyPrint) {\n        return (Generate) super.setPrettyPrint(prettyPrint);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setPrettyPrint", "class_name": "Generate", "index": 1121, "label": 1}
{"input": "public static User getByLoginName(String loginName){\n\t\tUser user = userDao.getByLoginName(new User(null, loginName));\n\t\tif (user == null){\n\t\t\treturn null;\n\t\t}\n\t\tuser.setRoleList(roleDao.findList(new Role(user)));\n\t\tCacheUtils.put(USER_CACHE, USER_CACHE_ID_ + user.getId(), user);\n\t\tCacheUtils.put(USER_CACHE, USER_CACHE_LOGIN_NAME_ + user.getLoginName(), user);\n\t\treturn user;\n\t}", "timestamp": "2022-11-07T06:10:16.559471Z", "repo_name": "moutainhigh/suppplychain", "path": "/src/main/java/com/jeeplus/modules/sys/utils/UserUtils.java", "source": "the-stack-v2", "method_name": "getByLoginName", "class_name": "UserUtils", "index": 1122, "label": 1}
{"input": "@Override\n\t@Virtual(8)\n\tpublic void OnRtnDepthMarketData(\n\t\t\tPointer<CThostFtdcDepthMarketDataField> pDepthMarketData) {\n\t\tmdSpi.onRtnDepthMarketData(getStructObject(pDepthMarketData));\n\t}", "timestamp": "2021-01-20T20:36:21.325448Z", "repo_name": "jiangcuilan/JCTP", "path": "/src/main/java/com/jctp/md/JCTPMdSpiAdapter.java", "source": "the-stack-v2", "method_name": "OnRtnDepthMarketData", "class_name": "JCTPMdSpiAdapter", "index": 1123, "label": 1}
{"input": "@Override\r\n    public long executeCount(final QueryOptions searchOptions) throws SBonitaReadException {\r\n        return processInstanceService.getNumberOfArchivedProcessInstances(searchOptions);\r\n    }", "timestamp": "2021-09-07T00:59:02.662374Z", "repo_name": "syahrullah123/bonita", "path": "/bpm/bonita-core/bonita-process-engine/src/main/java/org/bonitasoft/engine/search/process/SearchArchivedProcessInstances.java", "source": "the-stack-v2", "method_name": "executeCount", "class_name": "SearchArchivedProcessInstances", "index": 1124, "label": 1}
{"input": "@Override\r\n\tpublic void run() {\r\n\t\tisRunning = true;\r\n\t\tif (singletonModel != null) {\r\n\t\t\tqtThreadSaveModel(singletonModel);\r\n\t\t} else if (listModel != null) {\r\n\t\t\tqtThreadSaveModel(listModel);\r\n\t\t} else {\n\t\t\tqtThreadSaveModel(tableModel);\r\n\t\t}\r\n\t}", "timestamp": "2023-07-03T22:35:13.204983Z", "repo_name": "sdankbar/jaqumal", "path": "/library/src/main/java/com/github/sdankbar/qml/persistence/QMLThreadPersistanceTask.java", "source": "the-stack-v2", "method_name": "run", "class_name": "QMLThreadPersistanceTask", "index": 1125, "label": 1}
{"input": "@Test\n  public void jsr107LoaderInitAlways() {\n    CacheLoader<Object, Object> loader = mock(CacheLoader.class);\n\n    MutableConfiguration<Object, Object> configuration = new MutableConfiguration<>();\n    RecordingFactory<CacheLoader<Object, Object>> factory = factoryOf(loader);\n    configuration.setCacheLoaderFactory(factory);\n\n    ConfigurationMerger.ConfigHolder<Object, Object> configHolder = merger.mergeConfigurations(\"cache\", configuration);\n\n    assertThat(factory.called, is(true));\n    assertThat(configHolder.cacheResources.getCacheLoaderWriter(), notNullValue());\n    assertThat(configHolder.useEhcacheLoaderWriter, is(false));\n  }", "timestamp": "2021-08-23T22:08:57.063756Z", "repo_name": "leespy/ehcache3", "path": "/107/src/test/java/org/ehcache/jsr107/ConfigurationMergerTest.java", "source": "the-stack-v2", "method_name": "jsr107LoaderInitAlways", "class_name": "ConfigurationMergerTest", "index": 1126, "label": 1}
{"input": "@Override\n\tpublic SuccessMessageDisplay getSuccessMessageUserDefinedPanel() {\n\t\treturn successMessageUserDefinedPanel;\n\t}", "timestamp": "2021-01-18T19:53:17.807267Z", "repo_name": "michaelaltmann/MeasureAuthoringTool_LatestSprint", "path": "/mat/src/mat/client/clause/QDMAvailableValueSetWidget.java", "source": "the-stack-v2", "method_name": "getSuccessMessageUserDefinedPanel", "class_name": "QDMAvailableValueSetWidget", "index": 1127, "label": 1}
{"input": "public static void main(String... args){\n           port(getPort());\n           get(\"hello\", (req,res) -> \"Hello Docker! :)\");\n\n     }", "timestamp": "2022-12-19T22:22:10.134077Z", "repo_name": "Ricar8o/SparkDockerDemo", "path": "/src/main/java/co/edu/escuelaing/sparkdockerdemolive/SparkWebServer.java", "source": "the-stack-v2", "method_name": "main", "class_name": "SparkWebServer", "index": 1128, "label": 1}
{"input": "@Override \n        public void setAllowedCarriersResponse(RadioResponseInfo info, int numAllowed) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            _hidl_request.writeInt32(numAllowed);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(124, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "setAllowedCarriersResponse", "class_name": "Proxy", "index": 1129, "label": 1}
{"input": "@PutMapping(\"/update\")\n    public void update(@RequestBody Menu menu){\n        menuRepository.update(menu);\n    }", "timestamp": "2020-09-25T16:48:33.897717Z", "repo_name": "zhangzihao0123/orderingSystem", "path": "/microservice/menu/src/main/java/com/zzh/menu/Controller/MenuHandler.java", "source": "the-stack-v2", "method_name": "update", "class_name": "MenuHandler", "index": 1130, "label": 1}
{"input": "public void buildClassifier(Instances instances) throws Exception {\n    \n    init(instances); \n\n    \n    if (m_bUseVariant1) {\n      optimize1();\n    } else {\n      optimize2();\n    } \n    \n    \n    wrapUp();\n  }", "timestamp": "2023-04-14T12:37:30.510795Z", "repo_name": "suhitaghosh10/Tune2Timeseries", "path": "/src/main/java/org/ovgu/de/classifier/functions/supportVector/RegSMOImproved.java", "source": "the-stack-v2", "method_name": "buildClassifier", "class_name": "RegSMOImproved", "index": 1131, "label": 1}
{"input": "@Override\n  public PositionDocument.Meta metaBean() {\n    return PositionDocument.Meta.INSTANCE;\n  }", "timestamp": "2020-12-02T16:35:36.745672Z", "repo_name": "emcleod/OG-Platform", "path": "/projects/OG-Master/src/main/java/com/opengamma/master/position/PositionDocument.java", "source": "the-stack-v2", "method_name": "metaBean", "class_name": "PositionDocument", "index": 1132, "label": 1}
{"input": "@Override\n  public void replaceStorage(OStorage iNewStorage) {\n    this.getSharedContext().setStorage(iNewStorage);\n    storage = iNewStorage;\n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "replaceStorage", "class_name": "ODatabaseDocumentEmbedded", "index": 1133, "label": 1}
{"input": "@Override\n    public WhitespaceBehavior getWhitespaceBehavior() {\n        return whitespaceBehavior;\n    }", "timestamp": "2020-12-14T02:11:21.814429Z", "repo_name": "fawnapp/aura", "path": "/aura-impl/src/main/java/org/auraframework/impl/root/component/BaseComponentDefImpl.java", "source": "the-stack-v2", "method_name": "getWhitespaceBehavior", "class_name": "BaseComponentDefImpl", "index": 1134, "label": 1}
{"input": "public void testBug84100e() throws CoreException {\n\tthis.resultCollector.showRule();\n\tsetUpBug84100();\n\tIMethod method = selectMethod(this.workingCopies[0], \"foo\", 5);\n\tsearch(method, REFERENCES);\n\tassertSearchResults(\n\t\t\"src/b84100/Z.java void b84100.Z.foo() [foo(\\\"\\\", 3, \\\"\\\", \\\"\\\")] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug84100e", "class_name": "JavaSearchBugsTests", "index": 1135, "label": 1}
{"input": "public Criteria andVdef2NotEqualTo(String value) {\r\n            addCriterion(\"VDEF2 <>\", value, \"vdef2\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef2NotEqualTo", "class_name": "GeneratedCriteria", "index": 1136, "label": 1}
{"input": "@Override\n    public Observable<Map<Integer, Genre>> genres() {\n        return mBriteContentResolver.createQuery(MoviesContract.Genres.CONTENT_URI, Genre.PROJECTION, null, null, null, true)\n                .map(Genre.PROJECTION_MAP)\n                .subscribeOn(Schedulers.io());\n    }", "timestamp": "2020-04-13T03:09:29.851865Z", "repo_name": "ahmadzakimubarok/udacity-popular-movies", "path": "/app/src/main/java/com/ewintory/udacity/popularmovies/data/repository/GenresRepositoryImpl.java", "source": "the-stack-v2", "method_name": "genres", "class_name": "GenresRepositoryImpl", "index": 1137, "label": 1}
{"input": "public void setTextSizeAll(int textsize) {\n\t\tif (textsize != 0) {\n\t\t\tthis.textSize = textsize;\n\t\t\t\n\t\t\tfor( int i = 0; i < alist.size(); i++ )\n\t\t\t alist.get(i).textSize = textsize;\n\t\t\t\n\t\t\taadapter.notifyDataSetChanged();\n\t\t}\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "setTextSizeAll", "class_name": "jListView", "index": 1138, "label": 1}
{"input": "@Test\n    public void test3x3() {\n        int[][] inMatrix  = { {1, 2, 3}, {4, 5, 6}, {7,8,9} };\n        int[][] expOutput = { {1, 2, 3}, {8, 9, 4}, {7,6,5} };\n        assertTrue(testEqual(expOutput, MatrixHelixMorph.helix(inMatrix)));\n    }", "timestamp": "2023-03-28T05:11:03.621410Z", "repo_name": "Piyush1077/Junit-Assignment", "path": "/JavaJunitAssignment-master/src/test/java/helix/MatrixHelixMorphTest.java", "source": "the-stack-v2", "method_name": "test3x3", "class_name": "MatrixHelixMorphTest", "index": 1139, "label": 1}
{"input": "public Criteria andVdef17NotIn(List<String> values) {\r\n            addCriterion(\"VDEF17 not in\", values, \"vdef17\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef17NotIn", "class_name": "GeneratedCriteria", "index": 1140, "label": 1}
{"input": "public Criteria andVdef7Between(String value1, String value2) {\r\n            addCriterion(\"VDEF7 between\", value1, value2, \"vdef7\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef7Between", "class_name": "GeneratedCriteria", "index": 1141, "label": 1}
{"input": "@Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        \n        getMenuInflater().inflate(R.menu.menu_main, menu);\n        MenuItem item = menu.findItem(R.id.action_search);\n        search_view.setMenuItem(item);\n        return true;\n    }", "timestamp": "2021-01-20T16:10:02.437775Z", "repo_name": "adamfils/SchoolAssistant", "path": "/app/src/main/java/com/adamapps/coursealert/HomeActivity.java", "source": "the-stack-v2", "method_name": "onCreateOptionsMenu", "class_name": "HomeActivity", "index": 1142, "label": 1}
{"input": "public void testBug110060_AllTypeNames02() throws CoreException {\n\tsetUpBug110060_TypePattern();\n\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();\n\tsearchAllTypeNames(\"aaa\", SearchPattern.R_CAMELCASE_MATCH, requestor);\n\t\n\tassertSearchResults(\"Unexpected all type names\",\n\t\t\"b110060.AAa\\n\" +\n\t\t\"b110060.AaAaAa\\n\" +\n\t\t\"b110060.Aaa\",\n\t\trequestor);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_AllTypeNames02", "class_name": "JavaSearchBugsTests", "index": 1143, "label": 1}
{"input": "public void setUser_name(String user_name) {\n                this.user_name = user_name;\n            }", "timestamp": "2021-01-13T07:12:09.987566Z", "repo_name": "acmlgogo/one_kotlin", "path": "/app/src/main/java/com/storm/cftest/base/Question.java", "source": "the-stack-v2", "method_name": "setUser_name", "class_name": "AskerListBean", "index": 1144, "label": 1}
{"input": "@Before\n     public void setUp() {\n         fakePlayer = StaticTest.GetOnlinePlayer();\n         commonArray = new CArray(Target.UNKNOWN, new CInt(1, Target.UNKNOWN), new CInt(2, Target.UNKNOWN), new CInt(3, Target.UNKNOWN));\n         env.getEnv(CommandHelperEnvironment.class).SetPlayer(fakePlayer);\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/19/19_3b3438a24e33893035d2c602198d49ca13a35845/ArrayHandlingTest/19_3b3438a24e33893035d2c602198d49ca13a35845_ArrayHandlingTest_s.java", "source": "the-stack-v2", "method_name": "setUp", "class_name": "ArrayHandlingTest", "index": 1145, "label": 1}
{"input": "@java.lang.Override\n  public com.google.cloud.securitycenter.v1.Cvssv3.Impact getAvailabilityImpact() {\n    @SuppressWarnings(\"deprecation\")\n    com.google.cloud.securitycenter.v1.Cvssv3.Impact result =\n        com.google.cloud.securitycenter.v1.Cvssv3.Impact.valueOf(availabilityImpact_);\n    return result == null ? com.google.cloud.securitycenter.v1.Cvssv3.Impact.UNRECOGNIZED : result;\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "getAvailabilityImpact", "class_name": "Cvssv3", "index": 1146, "label": 1}
{"input": "@Test\n    @SmallTest\n    @Feature({\"Preferences\"})\n    public void testResetListEmpty() throws Exception {\n        \n        final Preferences preferences =\n                PreferencesTest.startPreferences(InstrumentationRegistry.getInstrumentation(),\n                        SavePasswordsPreferences.class.getName());\n\n        TestThreadUtils.runOnUiThreadBlocking(() -> {\n            SavePasswordsPreferences savePasswordPreferences =\n                    (SavePasswordsPreferences) preferences.getMainFragment();\n            \n            savePasswordPreferences.passwordListAvailable(0);\n        });\n    }", "timestamp": "2022-12-08T04:12:54.583056Z", "repo_name": "yeahhhhhhhh/chromium_quic", "path": "/src/chrome/android/javatests/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferencesTest.java", "source": "the-stack-v2", "method_name": "testResetListEmpty", "class_name": "SavePasswordsPreferencesTest", "index": 1147, "label": 1}
{"input": "public static <T> void assertOrderedEquals(final Iterable<? extends T> actual, final Collection<? extends T> expected) {\n    assertOrderedEquals(null, actual, expected);\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "assertOrderedEquals", "class_name": "UsefulTestCase", "index": 1148, "label": 1}
{"input": "public void setUnitname(String unitname) {\n        this.unitname = unitname == null ? null : unitname.trim();\n    }", "timestamp": "2021-01-10T10:12:37.899881Z", "repo_name": "hzzz1234/cxyStoreManagement", "path": "/apptools/storemanager-parent/storemanager-domain/src/main/java/com/cxy/apptools/domain/storemanager/Cxyunit.java", "source": "the-stack-v2", "method_name": "setUnitname", "class_name": "Cxyunit", "index": 1149, "label": 1}
{"input": "int getMaxTextWidth(int columnIndex, int columnWidth) {\r\n\tint itemWidth = getImageStopX(columnIndex) + getTextIndent(columnIndex) * 2;\r\n\treturn columnWidth - itemWidth;\r\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipseswt_cluster/56034/tar_1.java", "source": "the-stack-v2", "method_name": "getMaxTextWidth", "class_name": "TableItem", "index": 1150, "label": 1}
{"input": "public final DocumentsGetDocumentsResponse refresh(Onshape onshape) throws OnshapeException {\n    return onshape.get(href, DocumentsGetDocumentsResponse.class);\n  }", "timestamp": "2022-11-23T18:17:24.783431Z", "repo_name": "onshape-public/java-client", "path": "/src/main/java/com/onshape/api/responses/DocumentsGetDocumentsResponse.java", "source": "the-stack-v2", "method_name": "refresh", "class_name": "DocumentsGetDocumentsResponse", "index": 1151, "label": 1}
{"input": "public void put(Parser parser) {\n        try {\n            pool.returnObject(parser);\n        } catch (Exception e) {\n            throw new RuntimeException(\"Error returning a parser to the pool\", e);\n        }\n    }", "timestamp": "2018-02-09T01:51:37.577264Z", "repo_name": "lenxeon/jira7.2.3", "path": "/jira-project/jira-components/jira-core/src/main/java/com/atlassian/velocity/JiraVelocityParserPool.java", "source": "the-stack-v2", "method_name": "put", "class_name": "JiraVelocityParserPool", "index": 1152, "label": 1}
{"input": "@Test public void testSelfReferentialView() throws Exception {\n    final CalciteAssert.AssertThat with =\n        modelWithView(\"select * from \\\"V\\\"\", null);\n    with.query(\"select \\\"name\\\" from \\\"adhoc\\\".V\")\n        .throws_(\"Cannot resolve 'adhoc.V'; it references view 'adhoc.V', \"\n            + \"whose definition is cyclic\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testSelfReferentialView", "class_name": "JdbcTest", "index": 1153, "label": 1}
{"input": "public void setBlogImage(String downloadUri, String thumbUri){\n            blogImageView = mView.findViewById(R.id.BLOGIMAGE);\n\n            RequestOptions requestOptions = new RequestOptions();\n            requestOptions.placeholder(R.drawable.image_placeholder);\n\n            Glide.with(context).applyDefaultRequestOptions(requestOptions).load(downloadUri).thumbnail(\n                    Glide.with(context).load(thumbUri)\n            ).into(blogImageView);\n        }", "timestamp": "2022-12-02T14:29:28.828861Z", "repo_name": "MoMus2000/3rdAttempt", "path": "/app/src/main/java/com/example/a3rdattempt/BlogRecyclerAdapter.java", "source": "the-stack-v2", "method_name": "setBlogImage", "class_name": "ViewHolder", "index": 1154, "label": 1}
{"input": "protected static boolean isInHeadlessEnvironment() {\n    return GraphicsEnvironment.isHeadless();\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "isInHeadlessEnvironment", "class_name": "UsefulTestCase", "index": 1155, "label": 1}
{"input": "@Test\n\tpublic void test() {\n\t\tSimplifyLoop tester=new SimplifyLoop();\n\t\tint[][] nums1={{ 0, 1, 2, 3, 4},\n\t\t\t\t\t  { 5, 6, 7, 8, 9},\n\t\t\t\t\t  {10,11,12,13,14}};\n\t\tassertTrue(tester.isCorrectResult(tester.print2DPerfectArray(nums1)));\n\t\tassertTrue(tester.isCorrectResult(tester.print2DInPerfectArray(nums1)));\n\t\t\n\t\tint[][] nums2={{ 0, 1, 2,},\n\t\t\t\t  \t   { 3, 4, 5, 6, 7, 8, 9},\n\t\t\t\t  \t   {10,11},\n\t\t\t\t  \t   {},\n\t\t\t\t  \t   null,\n\t\t\t\t  \t   {12,13,14},\n\t\t\t\t  \t   {15},\n\t\t\t\t  \t   null,\n\t\t\t\t  \t   {16,17,18,19,20},\n\t\t\t\t  \t   {}};\n\t\tassertTrue(tester.isCorrectResult(tester.print2DInPerfectArray(nums2)));\n\t\tint[][] nums3={{ 0, 1, 2,},\n\t\t\t  \t   \t   { 3, 4, 5, 6, 7, 8, 9},\n\t\t\t  \t   \t   {10,11},\n\t\t\t  \t   \t   {},\n\t\t\t  \t   \t   null,\n\t\t\t  \t   \t   {12,13,14},\n\t\t\t  \t   \t   {15},\n\t\t\t  \t   \t   null,\n\t\t\t  \t   \t   {16,17,18,19,20},\n\t\t\t  \t   \t   null};\n\t\tassertTrue(tester.isCorrectResult(tester.print2DInPerfectArray(nums3)));\n\t}", "timestamp": "2021-07-13T01:16:12.717102Z", "repo_name": "xn1990114/GOOG-My-Code", "path": "/src/phoneTester/SimplifyLoopTester.java", "source": "the-stack-v2", "method_name": "test", "class_name": "SimplifyLoopTester", "index": 1156, "label": 1}
{"input": "public void setDependentLocalityName(String dependentLocalityName) {\n        this.dependentLocalityName = dependentLocalityName;\n    }", "timestamp": "2021-04-20T00:31:53.198381Z", "repo_name": "mariiabav/netCracker", "path": "/app/src/main/java/com/example/problemsolver/Map/Models/DistrictResponse/DependentLocality_.java", "source": "the-stack-v2", "method_name": "setDependentLocalityName", "class_name": "DependentLocality_", "index": 1157, "label": 1}
{"input": "public void doProcess(String name) {\n\t\tSystem.out.println(\"start\");\n\t\tlogic.perform(name); \n\t\tSystem.out.println(\"end\");\n\t}", "timestamp": "2023-04-02T04:41:42.467743Z", "repo_name": "KudoYumi/test", "path": "/workspace/2021_02_19/src/黒本9_21/Service.java", "source": "the-stack-v2", "method_name": "doProcess", "class_name": "Service", "index": 1158, "label": 1}
{"input": "@RequestMapping(method = RequestMethod.OPTIONS, produces = \"text/plain\")\n    ResponseEntity help(HttpServletRequest request) {\n        HttpHeaders customHeader = new HttpHeaders();\n        customHeader.add(\"Allows\", \"GET HEAD PUT POST DELETE OPTIONS\");\n        return new ResponseEntity<>(\"DELETE\\ninput:application/json\\nstructure:{ids:[long args]}\", customHeader, HttpStatus.OK);\n    }", "timestamp": "2020-06-03T04:18:15.597291Z", "repo_name": "vyrwu/spring-mvc-demo", "path": "/src/main/java/com/example/vyrwu/agillicDemoMvn/Account/AccountController.java", "source": "the-stack-v2", "method_name": "help", "class_name": "AccountController", "index": 1159, "label": 1}
{"input": "@Override\r\n  public boolean eIsSet(int featureID)\r\n  {\r\n    switch (featureID)\r\n    {\r\n      case AsmetaLPackage.FUNCTION_INITIALIZATION__INIZIALIZED_FUNCTION_NAME:\r\n        return INIZIALIZED_FUNCTION_NAME_EDEFAULT == null ? inizializedFunctionName != null : !INIZIALIZED_FUNCTION_NAME_EDEFAULT.equals(inizializedFunctionName);\r\n      case AsmetaLPackage.FUNCTION_INITIALIZATION__VARIABLES:\r\n        return variables != null && !variables.isEmpty();\r\n      case AsmetaLPackage.FUNCTION_INITIALIZATION__DOMAIN:\r\n        return domain != null && !domain.isEmpty();\r\n      case AsmetaLPackage.FUNCTION_INITIALIZATION__BODY:\r\n        return body != null;\r\n    }\r\n    return super.eIsSet(featureID);\r\n  }", "timestamp": "2023-05-25T04:51:25.190702Z", "repo_name": "Favio-Quinteros/Quinteros-WebEditor", "path": "/org.xtext.asmetal.parent/org.xtext.asmetal/src/main/xtext-gen/org/xtext/asmetal/asmetaL/impl/FunctionInitializationImpl.java", "source": "the-stack-v2", "method_name": "eIsSet", "class_name": "FunctionInitializationImpl", "index": 1160, "label": 1}
{"input": "@Test\n  public void case36() {\n    int[] revenues = { -955, -354, 245, 549, 17, 0, -219, 250, 552, -347, -44, 543, -357, -951, 552, 223, 5, -52, -657, 1, -654, -46, 0, 543, -356, 243, 251, -16, -353, 1, -864, 550, -57, -351, -655, -791, 247, 551, 8, -182, 549, 10, -10, 546, 32, 551, -49, -835, 247 };\n    int k = 6;\n    assertEquals(541.3084591529084, mergersdivtwo.findMaximum(revenues, k), DELTA * 541.3084591529084);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case36", "class_name": "MergersDivTwoTest", "index": 1161, "label": 1}
{"input": "public static Connection openConnection(String username, String password) throws SQLException {\n\t\ttry {\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t} catch (java.lang.ClassNotFoundException e) {\n\t\t\tthrow new SQLException(\"Cannot load database driver\");\n\t\t}\n\t\tString url = \"jdbc:mysql://vs511.intranet.asf.ro/nextdemo\";\n\t\treturn DriverManager.getConnection(url, username, password);\n\t}", "timestamp": "2020-04-15T22:50:03.796014Z", "repo_name": "dpmihai/test", "path": "/src/dbQuery/MySqlImageTest.java", "source": "the-stack-v2", "method_name": "openConnection", "class_name": "MySqlImageTest", "index": 1162, "label": 1}
{"input": "@RequestMapping(value = \"/providers/all\", method = RequestMethod.GET)\r\n\tpublic List<Providers> gettAll() {\r\n\t\treturn providerrepo.findAll();\r\n\t}", "timestamp": "2023-05-03T16:43:13.142159Z", "repo_name": "SuriAravind/HospitalSpringBoot", "path": "/hospitalmanagement/src/main/java/com/hospital/hospitalmanagement/controller/ProvidersController.java", "source": "the-stack-v2", "method_name": "gettAll", "class_name": "ProvidersController", "index": 1163, "label": 1}
{"input": "@Override\r\n\tpublic void setActivityIntent(Intent i) {\r\n\t\ti.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n\n\t\tUser user = new User();\r\n\t\tuser.setUser_id(18);\r\n\t\tMyData.data().setCurrentUser(user);\r\n\t\tsuper.setActivityIntent(i);\r\n\t}", "timestamp": "2016-09-06T15:54:26.692099Z", "repo_name": "jacknoerror/lehuoRepo", "path": "/Test/com/lehuo/ui/ScoreMarketActivityTest.java", "source": "the-stack-v2", "method_name": "setActivityIntent", "class_name": "ScoreMarketActivityTest", "index": 1164, "label": 1}
{"input": "protected void processDateField(Row row)\r\n   {\r\n      processField(row, \"DATE_FIELD_ID\", \"DATE_REF_UID\", row.getDate(\"DATE_VALUE\"));\r\n   }", "timestamp": "2023-08-17T13:13:07.711932Z", "repo_name": "heekye/ProjectLibre", "path": "/projectlibre_exchange/src/net/sf/mpxj/mpd/MPD9AbstractReader.java", "source": "the-stack-v2", "method_name": "processDateField", "class_name": "MPD9AbstractReader", "index": 1165, "label": 1}
{"input": "public void tearDownSuite() throws Exception {\n\tdeleteProject(\"JavaSearchBugs\");\n\tsuper.tearDownSuite();\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "tearDownSuite", "class_name": "JavaSearchBugsTests", "index": 1166, "label": 1}
{"input": "protected void reset()\r\n   {\r\n      m_calendarMap.clear();\r\n      m_baseCalendarReferences.clear();\r\n      m_resourceMap.clear();\r\n      m_assignmentMap.clear();\r\n   }", "timestamp": "2023-08-17T13:13:07.711932Z", "repo_name": "heekye/ProjectLibre", "path": "/projectlibre_exchange/src/net/sf/mpxj/mpd/MPD9AbstractReader.java", "source": "the-stack-v2", "method_name": "reset", "class_name": "MPD9AbstractReader", "index": 1167, "label": 1}
{"input": "public static Color randomColor() {\n        int red, green, blue;\n\n        red = (int) (Math.random() * 255);\n        green = (int) (Math.random() * 255);\n        blue = (int) (Math.random() * 255);\n\n        Color randomColor = new Color(red, green, blue);\n\n        return randomColor;\n    }", "timestamp": "2023-03-04T06:43:09.378018Z", "repo_name": "clickykeyboard/SEM-2-OOP", "path": "/OOP/Week 13/Graphics/GUI.java", "source": "the-stack-v2", "method_name": "randomColor", "class_name": "GUI", "index": 1168, "label": 1}
{"input": "private void setUpBug110060_MethodPattern() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b110060/Test.java\",\n\t\t\"package b110060;\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"\tvoid aMethodWithNothingSpecial() {}\\n\" +\n\t\t\"\tvoid aMethodWith1Digit() {}\\n\" +\n\t\t\"\tvoid aMethodWith1DigitAnd_AnUnderscore() {}\\n\" +\n\t\t\"\tvoid aMethodWith1Or2_Or_3_Or__4__DigitsAnd_Several_Underscores() {}\\n\" +\n\t\t\"\tvoid otherMethodWhichStartsWithAnotherLetter() {}\\n\" +\n\t\t\"\tvoid testReferences() {\\n\" +\n\t\t\"\t\taMethodWith1Digit();\\n\" +\n\t\t\"package b110060;\\n\"0 +\n\t\t\"package b110060;\\n\"1 +\n\t\t\"package b110060;\\n\"2 +\n\t\t\"package b110060;\\n\"3 +\n\t\t\"package b110060;\\n\"4 +\n\t\t\"package b110060;\\n\"5\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "setUpBug110060_MethodPattern", "class_name": "JavaSearchBugsTests", "index": 1169, "label": 1}
{"input": "@Override\n    public void setSessionCookieName(String sessionCookieName) {\n        String oldSessionCookieName = this.sessionCookieName;\n        this.sessionCookieName = sessionCookieName;\n        support.firePropertyChange(\"sessionCookieName\",\n                oldSessionCookieName, sessionCookieName);\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setSessionCookieName", "class_name": "StandardContext", "index": 1170, "label": 1}
{"input": "@Test(timeout = 2000)\n    public void testDefaultThreadFactoryStickyThreadGroupConstructor() throws InterruptedException {\n        final ThreadGroup sticky = new ThreadGroup(\"sticky\");\n        runStickyThreadGroupTest(\n                new Callable<DefaultThreadFactory>() {\n                    @Override\n                    public DefaultThreadFactory call() throws Exception {\n                        return new DefaultThreadFactory(\"test\", false, Thread.NORM_PRIORITY, sticky);\n                    }\n                },\n                sticky);\n    }", "timestamp": "2021-06-23T18:17:32.028915Z", "repo_name": "YunaiV/netty", "path": "/common/src/test/java/io/netty/util/concurrent/DefaultThreadFactoryTest.java", "source": "the-stack-v2", "method_name": "testDefaultThreadFactoryStickyThreadGroupConstructor", "class_name": "DefaultThreadFactoryTest", "index": 1171, "label": 1}
{"input": "public UDPSender setLightParams(LightParams data) {\n      messager.setLightParams(data);\n       return this;\n    }", "timestamp": "2020-06-13T19:22:44.762210Z", "repo_name": "SheStealsMyPenta/test", "path": "/PDOnlineConfig/app/src/main/java/com/pd/config/pdonlineconfig/net/UDPSender.java", "source": "the-stack-v2", "method_name": "setLightParams", "class_name": "UDPSender", "index": 1172, "label": 1}
{"input": "@RequestMapping(value = \"\", method = RequestMethod.GET)\n     @ResponseBody\n    public List<WordAtom> get(String sentence) {\n        System.out.println(sentence);\n        SegmentWorker worker = SegmentEngine.getInstance().getSegmentWorker();\n        SegmentResult result = worker.segment(sentence);\n        System.out.println(result);\n        return result.getWordAtoms();\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/33/33_496c4ee9d62e080fc5095887a14746bac471ccd1/SegmentController/33_496c4ee9d62e080fc5095887a14746bac471ccd1_SegmentController_s.java", "source": "the-stack-v2", "method_name": "get", "class_name": "SegmentController", "index": 1173, "label": 1}
{"input": "public void getEight(View view){\n        operation  +=\"8\";\n        editText.setText(operation);\n    }", "timestamp": "2021-05-31T01:02:53.417110Z", "repo_name": "phndavid/calculator", "path": "/Calculator/app/src/main/java/com/master/ndavid/calculator/MainActivity.java", "source": "the-stack-v2", "method_name": "getEight", "class_name": "MainActivity", "index": 1174, "label": 1}
{"input": "@Override\n    public Builder setGoogleClientRequestInitializer(\n        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {\n      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);\n    }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setGoogleClientRequestInitializer", "class_name": "Builder", "index": 1175, "label": 1}
{"input": "public void testBug209996b() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/test/Test.java\",\n\t\t\"package test;\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\"        @Deprecated foo() {}\\n\" +\n\t\t\"}\\n\"\n\t);\n\tReferenceCollector collector = new ReferenceCollector();\n\tcollector.showSelection();\n\tsearch(\"Deprecated\", TYPE, REFERENCES, EXACT_RULE, getJavaSearchScope(), collector);\n\tassertSearchResults(\n\t\t\"src/test/Test.java @Deprecated() [        @�|Deprecated|� foo() {}]\",\n\t\tcollector\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug209996b", "class_name": "JavaSearchBugsTests", "index": 1176, "label": 1}
{"input": "@Override public boolean equals(Object obj) {\n      return obj == this\n          || obj instanceof LingualEmp\n          && EMPNO == ((LingualEmp) obj).EMPNO;\n    }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "LingualEmp", "index": 1177, "label": 1}
{"input": "public void setActive(final Boolean active)\n\t{\n\t\tthis.modifiedPropsSet.add(\"active\");\n\t\tthis.active = active;\n\t}", "timestamp": "2022-11-28T12:15:32.049256Z", "repo_name": "BaggaShivanshu2/hybris-bookstore-tutorial", "path": "/hybris/bin/ext-platform-optional/platformwebservices/custom/src/de/hybris/platform/cronjob/customdto/CronJobDTO.java", "source": "the-stack-v2", "method_name": "setActive", "class_name": "CronJobDTO", "index": 1178, "label": 1}
{"input": "@Override\n    public String toString() {\n        return \"User{\" +\n                \"id=\" + id +\n                \", name='\" + name + '\\'' +\n                '}';\n    }", "timestamp": "2022-12-19T20:58:45.767928Z", "repo_name": "AppleLing/mygit", "path": "/spring-aop-1/src/main/java/com/study/spring/domain/User.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "User", "index": 1179, "label": 1}
{"input": "public BlockStatementContext blockStatement(int i) {\n\t\t\treturn getRuleContext(BlockStatementContext.class,i);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "blockStatement", "class_name": "BlockContext", "index": 1180, "label": 1}
{"input": "public Job newJob(TriggerFiredBundle bundle, Scheduler scheduler)\n            throws SchedulerException\n    {\n        Class<? extends Job> jobClass = bundle.getJobDetail().getJobClass();\n        return this.injector.getInstance(jobClass);\n    }", "timestamp": "2021-01-18T14:36:49.725803Z", "repo_name": "lbanas/WebApplicationSkeleton", "path": "/server/src/main/java/eu/livotov/labs/webskel/core/quartz/guice/InjectorJobFactory.java", "source": "the-stack-v2", "method_name": "newJob", "class_name": "InjectorJobFactory", "index": 1181, "label": 1}
{"input": "public Criteria andUserIdNotBetween(Integer value1, Integer value2) {\n            addCriterion(\"user_id not between\", value1, value2, \"userId\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andUserIdNotBetween", "class_name": "GeneratedCriteria", "index": 1182, "label": 1}
{"input": "public boolean match(TextElement node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 1183, "label": 1}
{"input": "@Test\n    public void sayTest() {\n        CglibProxyExampleHandle cglibProxyExampleHandle = new CglibProxyExampleHandle();\n        HelloService helloService = (HelloService) cglibProxyExampleHandle.getProxy(HelloService.class);\n        helloService.sayHello(\"haha\");\n    }", "timestamp": "2021-06-20T18:29:09.175595Z", "repo_name": "sky0504/pro", "path": "/src/test/java/com/wb/pro/handle/reflect/CglibProxyExampleHandleTest.java", "source": "the-stack-v2", "method_name": "sayTest", "class_name": "CglibProxyExampleHandleTest", "index": 1184, "label": 1}
{"input": "private static int getDecodedCodewordValue(int ai[])\n    {\n        int i = getBitValue(ai);\n        if (PDF417Common.getCodeword(i) == -1)\n        {\n            return -1;\n        } else\n        {\n            return i;\n        }\n    }", "timestamp": "2018-03-23T04:15:18.480409Z", "repo_name": "cha63506/CompSecurity", "path": "/QR-barcode-source/src/com/google/zxing/pdf417/decoder/PDF417CodewordDecoder.java", "source": "the-stack-v2", "method_name": "getDecodedCodewordValue", "class_name": "PDF417CodewordDecoder", "index": 1185, "label": 1}
{"input": "public void cancelWaitingForBinaryData() {\n        int count = 0;\n        for (QuestionWidget q : widgets) {\n            if (q instanceof IBinaryWidget) {\n                if (((IBinaryWidget) q).isWaitingForBinaryData()) {\n                    ((IBinaryWidget) q).cancelWaitingForBinaryData();\n                    ++count;\n                }\n            }\n        }\n\n        if (count != 1) {\n            Timber.w(\"Attempting to cancel waiting for binary data to a widget or set of widgets \"\n                            + \"not looking for data\");\n        }\n    }", "timestamp": "2021-06-23T10:37:16.452332Z", "repo_name": "tamsir/collect", "path": "/collect_app/src/main/java/org/odk/collect/android/views/ODKView.java", "source": "the-stack-v2", "method_name": "cancelWaitingForBinaryData", "class_name": "ODKView", "index": 1186, "label": 1}
{"input": "public JBIG2Bitmap findBitmap(int bitmapNumber) {\n\t\tfor (Iterator it = bitmaps.iterator(); it.hasNext();) {\n\t\t\tJBIG2Bitmap bitmap = (JBIG2Bitmap) it.next();\n\t\t\tif (bitmap.getBitmapNumber() == bitmapNumber) {\n\t\t\t\treturn bitmap;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}", "timestamp": "2023-03-15T16:02:51.443928Z", "repo_name": "demetbolata/icepdf4", "path": "/core/src/main/java/org/jpedal/jbig2/decoders/JBIG2StreamDecoder.java", "source": "the-stack-v2", "method_name": "findBitmap", "class_name": "JBIG2StreamDecoder", "index": 1187, "label": 1}
{"input": "public void setBotonApagarVerdeL1(JButton botonApagarVerdeL1) {\r\n\t\tthis.botonApagarVerdeL1 = botonApagarVerdeL1;\r\n\t}", "timestamp": "2021-07-09T22:13:09.290917Z", "repo_name": "DevOscarFA/SemaforoServidor", "path": "/src/presentacion/Vista.java", "source": "the-stack-v2", "method_name": "setBotonApagarVerdeL1", "class_name": "Vista", "index": 1188, "label": 1}
{"input": "public Criteria andVdef5IsNotNull() {\r\n            addCriterion(\"VDEF5 is not null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef5IsNotNull", "class_name": "GeneratedCriteria", "index": 1189, "label": 1}
{"input": "@Override\n        public void onClick(View v) {\n            switch (v.getId()) {\n                case R.id.btn_setting:\n                    \n                    Intent it = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);\n                    \n                    it.setData(Uri.parse(\"package:\" + getApplication().getPackageName()));\n                    startActivityForResult(it, REQUEST_SETTINGS);\n                    break;\n                case R.id.btn_grant:\n                    \n                    ActivityCompat.requestPermissions(PermissionActivity.this, permissions, REQUEST_PERMISSION);\n                    break;\n            }\n        }", "timestamp": "2020-03-27T06:07:40.168195Z", "repo_name": "Lebron-Liu/Basketballl", "path": "/vwill/app/src/main/java/com/xykj/vwill/PermissionActivity.java", "source": "the-stack-v2", "method_name": "onClick", "class_name": "PermissionActivity", "index": 1190, "label": 1}
{"input": "private Runnable createCheckTask()\n    {\n        List<Order> orders = orderService.getOrderByStatusAndTicketBusinessName(\n                OrderStatus.出票中, getTicketPlat().name());\n        \n        for (Order order : orders) {\n            checkQueue.offer(order);\n        }\n        \n        return new Runnable()\n        {\n            public void run()\n            {\n                logger.info(getTicketPlat().name() + \" 检票队列启动!\");\n                while (true) {\n                    try {\n                        Order order = checkQueue.take();\n                        check(order);\n                    }\n                    catch (Exception e) {\n                        String description = getTicketPlat().name()+ \" 检票队列异常,请查看日志\";\n                        logger.info(description, e);\n                        SystemWarningNotify.addWarningDescription(description);\n                    }\n                }\n            }\n        };\n    }", "timestamp": "2021-01-18T13:50:32.011316Z", "repo_name": "THEMING/TZLottery", "path": "/core/com/xsc/lottery/task/ticket/.svn/text-base/TicketTreatmentWork.java.svn-base", "source": "the-stack-v2", "method_name": "createCheckTask", "class_name": "TicketTreatmentWork", "index": 1191, "label": 1}
{"input": "@Override\n      public Update set(String parameterName, Object value) {\n        return (Update) super.set(parameterName, value);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "set", "class_name": "Update", "index": 1192, "label": 1}
{"input": "@Override\n\t\tpublic void run()\n\t\t{\n\t\t\tif (!isInProgress())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\ttry\n\t\t\t{\n\t\t\t\t_siegeRestore = null;\n\t\t\t\tresetSiege();\n\t\t\t\tannounceToPlayer(SystemMessage.getSystemMessage(SystemMessageId.THE_BARRACKS_FUNCTION_HAS_BEEN_RESTORED));\n\t\t\t}\n\t\t\tcatch (Exception e)\n\t\t\t{\n\t\t\t\t_log.log(Level.WARNING, \"Exception: ScheduleSiegeRestore() for Fort: \" + _fort.getName() + \" \" + e.getMessage(), e);\n\t\t\t}\n\t\t}", "timestamp": "2021-01-10T03:42:04.091432Z", "repo_name": "soultobe/L2JOlivia_EpicEdition", "path": "/java/com/l2jolivia/gameserver/model/entity/FortSiege.java", "source": "the-stack-v2", "method_name": "run", "class_name": "ScheduleSiegeRestore", "index": 1193, "label": 1}
{"input": "@Before\n            public void doRequest() {\n                response = given()\n                        .contentType(APPLICATION_JSON_TYPE)\n                        .pathParam(\"gameId\", \"invalidGameId\")\n                        .body(getValidTurn())\n                        .when().put(GAME_PATH + PLAY_TURN_PATH);\n            }", "timestamp": "2021-01-23T06:35:39.821088Z", "repo_name": "anttiahonen/ekanban", "path": "/backend/src/integration-test/java/fi/aalto/ekanban/controllers/GameControllerTest.java", "source": "the-stack-v2", "method_name": "doRequest", "class_name": "withInvalidGameId", "index": 1194, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        binding = ActivityMainBinding.inflate(getLayoutInflater());\n        View view = binding.getRoot();\n        setContentView(view);\n        initView();\n        mPresenter = new MainPresenter(this);\n        mPresenter.getProducts(false);\n\n    }", "timestamp": "2023-02-15T01:44:35.345193Z", "repo_name": "umairqidwai/Check24Products", "path": "/app/src/main/java/com/example/check24products/presentation/MainActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "MainActivity", "index": 1195, "label": 1}
{"input": "@Test\n  public void case48() {\n    int[] revenues = { -44, 174, 546, -48, -957, -56, 543, -941, -656, -5, 247, 243, 544, 545, -350, -7, 907, -952, 4, -54, 219, -654, -3, -4, 946, -56, 244, 6, -40, -48, 0, 662, -652, 41, -949, -951, 248, 10, -874, 543, -56 };\n    int k = 8;\n    assertEquals(616.4881365740741, mergersdivtwo.findMaximum(revenues, k), DELTA * 616.4881365740741);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case48", "class_name": "MergersDivTwoTest", "index": 1196, "label": 1}
{"input": "public static LoginRepository getInstance(LoginDataSource dataSource) {\n        if (instance == null) {\n            instance = new LoginRepository(dataSource);\n        }\n        return instance;\n    }", "timestamp": "2023-08-05T07:29:37.263785Z", "repo_name": "PakoBrandoon/bus-app", "path": "/app/src/main/java/com/power/bunkTech/data/LoginRepository.java", "source": "the-stack-v2", "method_name": "getInstance", "class_name": "LoginRepository", "index": 1197, "label": 1}
{"input": "public void borrowBook(Clients client, String bookTitle, LocalDate date) {\n        if (!bookMap.containsKey(bookTitle)){\n            throw new IllegalArgumentException(\"Book not found\");\n        }\n        bookMap.get(bookTitle).borrowBook();\n        loans.put(client, new Loan(client, bookTitle,date));\n    }", "timestamp": "2022-12-18T22:22:36.751302Z", "repo_name": "pdomins/POO", "path": "/Java/RepasoSegundoParcial/Ej7/Library.java", "source": "the-stack-v2", "method_name": "borrowBook", "class_name": "Library", "index": 1198, "label": 1}
{"input": "@Test public void testSetMaxRows() throws Exception {\n    CalciteAssert.hr()\n        .doWithConnection(connection -> {\n          try {\n            final Statement statement = connection.createStatement();\n            try {\n              statement.setMaxRows(-1);\n              fail(\"expected error\");\n            } catch (SQLException e) {\n              assertEquals(e.getMessage(), \"illegal maxRows value: -1\");\n            }\n            statement.setMaxRows(2);\n            assertEquals(2, statement.getMaxRows());\n            final ResultSet resultSet = statement.executeQuery(\n                \"select * from \\\"hr\\\".\\\"emps\\\"\");\n            assertTrue(resultSet.next());\n            assertTrue(resultSet.next());\n            assertFalse(resultSet.next());\n            resultSet.close();\n            statement.close();\n          } catch (SQLException e) {\n            throw TestUtil.rethrow(e);\n          }\n        });\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testSetMaxRows", "class_name": "JdbcTest", "index": 1199, "label": 1}
{"input": "public void cut() {\n        copystring = tx1.getSelectedText();\n        tx1.replaceText(\"\", tx1.getSelectionStart(), tx1.getSelectionEnd());\n        tx1.requestFocus();\n    }", "timestamp": "2020-05-06T15:49:29.551449Z", "repo_name": "gokcse/Go-Cloud", "path": "/Go Cloud Source Code/Netbeans 6.1 - Virtual Machine/CloudComputingServer/src/org/cit/CloudComputing/T_Editor.java", "source": "the-stack-v2", "method_name": "cut", "class_name": "Frame_class", "index": 1200, "label": 1}
{"input": "protected void processField(Row row, String fieldIDColumn, String entityIDColumn, Object value)\r\n   {\r\n      processField(row, fieldIDColumn, row.getInteger(entityIDColumn), value);\r\n   }", "timestamp": "2023-08-17T13:13:07.711932Z", "repo_name": "heekye/ProjectLibre", "path": "/projectlibre_exchange/src/net/sf/mpxj/mpd/MPD9AbstractReader.java", "source": "the-stack-v2", "method_name": "processField", "class_name": "MPD9AbstractReader", "index": 1201, "label": 1}
{"input": "public void testBug81556() throws CoreException {\n\tICompilationUnit unit = getCompilationUnit(\"JavaSearchBugs\", \"src\", \"b81556.a\", \"X81556.java\");\n\tIType type = unit.getType(\"X81556\");\n\tIMethod method = type.getMethod(\"foo\", new String[0]);\n\tsearch(method, REFERENCES);\n\tassertSearchResults(\n\t\t\"src/b81556/a/A81556.java void b81556.a.A81556.bar(XX81556) [foo()] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug81556", "class_name": "JavaSearchBugsTests", "index": 1202, "label": 1}
{"input": "public Criteria andLogTimeBetween(Timestamp value1, Timestamp value2) {\n            addCriterion(\"log_time between\", value1, value2, \"logTime\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andLogTimeBetween", "class_name": "GeneratedCriteria", "index": 1203, "label": 1}
{"input": "@Override \n        public void setHALInstrumentation() throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(IBase.kInterfaceName);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(256462420, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "setHALInstrumentation", "class_name": "Proxy", "index": 1204, "label": 1}
{"input": "@Override\n        public void onCreate(Bundle savedInstanceState) {\n            super.onCreate(savedInstanceState);\n            SettingsUtils.registerOnSharedPreferenceChangeListener(getActivity(), this);\n        }", "timestamp": "2021-07-03T21:36:50.802633Z", "repo_name": "liaoqingmo/iosched", "path": "/lib/src/main/java/com/google/samples/apps/iosched/settings/SettingsActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "SettingsFragment", "index": 1205, "label": 1}
{"input": "private void asnycExecute(Runnable r) {\n\t\tfinal Runnable _r = r;\n\t\tnew AsyncTask() {\n\t\t\t@Override\n\t\t\tprotected Object doInBackground(Object... params) {\n\t\t\t\tsynchronized (mCurFileNameList) {\n\t\t\t\t\t_r.run();\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tmContext.getContentResolver().applyBatch(\n\t\t\t\t\t\t\tMediaStore.AUTHORITY, ops);\n\t\t\t\t} catch (RemoteException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t} catch (OperationApplicationException e) {\n\t\t\t\t\t\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\n\t\t\t\tif (moperationListener != null) {\n\t\t\t\t\tmoperationListener.onFinish();\n\t\t\t\t}\n\t\t\t\tops.clear();\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}.execute();\n\t}", "timestamp": "2021-05-08T20:47:50.226515Z", "repo_name": "jqorz/SEFileExplorer", "path": "/app/src/main/java/com/yang/file_explorer/apis/FileOperationHelper.java", "source": "the-stack-v2", "method_name": "asnycExecute", "class_name": "FileOperationHelper", "index": 1206, "label": 1}
{"input": "public boolean match(AnnotationTypeDeclaration node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 1207, "label": 1}
{"input": "public int replyBoard(BbsDTO dto) {\n\t\tint result = 0;\n\t\t\n\t\ttry {\n\t\t\tconn = openConn();\n\t\t\tsql = \"insert into jsp_bbs \"\n\t\t\t\t\t+ \"values(bbs_seq.nextval, ?,?,?,?, default, sysdate, ?,?,?)\";\n\t\n\t\t\tpstmt = conn.prepareStatement(sql);\n\t\t\tpstmt.setString(1, dto.getBoard_writer());\n\t\t\tpstmt.setString(2, dto.getBoard_title());\n\t\t\tpstmt.setString(3, dto.getBoard_cont());\n\t\t\tpstmt.setString(4, dto.getBoard_pwd());\n\t\t\tpstmt.setInt(5, dto.getBoard_group());\n\t\t\tpstmt.setInt(6, dto.getBoard_step()+1);\n\t\t\tpstmt.setInt(7, dto.getBoard_indent()+1);\n\t\t\tresult = pstmt.executeUpdate();\n\t\t\t\n\t\t} catch (Exception e) {\n\t\t\t\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\tclose(conn, pstmt);\n\t\t}\n\t\t\n\t\treturn result;\n\t}", "timestamp": "2021-02-04T16:48:52.238014Z", "repo_name": "Hoan1993/JSP_Servlet", "path": "/10_Board_reply/src/com/reply/model/BbsDAO.java", "source": "the-stack-v2", "method_name": "replyBoard", "class_name": "BbsDAO", "index": 1208, "label": 1}
{"input": "@Override \n        public void deactivateDataCallResponse(RadioResponseInfo info) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(39, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "deactivateDataCallResponse", "class_name": "Proxy", "index": 1209, "label": 1}
{"input": "public void mouseExited(MouseEvent e) {\n            Component component = e.getComponent();\n            if (component instanceof AbstractButton) {\n                AbstractButton button = (AbstractButton) component;\n                button.setBorderPainted(false);\n            }\n        }", "timestamp": "2020-09-21T11:19:32.351625Z", "repo_name": "okskblug/sols", "path": "/src/kr/co/atis/uiutil/ButtonTabComponent.java", "source": "the-stack-v2", "method_name": "mouseExited", "class_name": "ButtonTabComponent", "index": 1210, "label": 1}
{"input": "@Override\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        \n            \n            doPost(request, response);\n    }", "timestamp": "2021-04-27T11:14:20.740714Z", "repo_name": "kate-anderson/TaskManager", "path": "/Task_Manager/src/java/controller/Admin_ReadAllTasksServlet.java", "source": "the-stack-v2", "method_name": "doGet", "class_name": "Admin_ReadAllTasksServlet", "index": 1211, "label": 1}
{"input": "@Test\n    @Transactional\n    public void getAllAuthoritiesByInfoIsInShouldWork() throws Exception {\n        \n        authorityRepository.saveAndFlush(authority);\n\n        \n        defaultAuthorityShouldBeFound(\"info.in=\" + DEFAULT_INFO + \",\" + UPDATED_INFO);\n\n        \n        defaultAuthorityShouldNotBeFound(\"info.in=\" + UPDATED_INFO);\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "getAllAuthoritiesByInfoIsInShouldWork", "class_name": "AuthorityResourceIT", "index": 1212, "label": 1}
{"input": "@Override\n    public void appendSupers(Set<DefDescriptor<?>> supers) throws QuickFixException {\n        if (getExtendsDescriptor() != null) {\n            supers.add(getExtendsDescriptor());\n        }\n\n        for (DefDescriptor<InterfaceDef> interfaze : getInterfaces()) {\n            supers.add(interfaze);\n        }\n    }", "timestamp": "2020-12-14T02:11:21.814429Z", "repo_name": "fawnapp/aura", "path": "/aura-impl/src/main/java/org/auraframework/impl/root/component/BaseComponentDefImpl.java", "source": "the-stack-v2", "method_name": "appendSupers", "class_name": "BaseComponentDefImpl", "index": 1213, "label": 1}
{"input": "@Test(timeout = 5000)\n    public void testTaskCstep3_DeleteMax__TaskC() throws Exception {\n        Test_jd01_02 ok = run(\"\", false);\n        int[][] m4 = {{1, -2, -2, 6}, {-1, 2, -2, 2}, {-2, -2, -6, -2}, {1, 2, -2, 6}};\n        Method m = checkMethod(ok.aClass.getSimpleName(), \"static step3\", int[][].class);\n        int[][] actualmas = (int[][]) ok.invoke(m, null, new Object[]{m4});\n        int[][] expectmas = {{-1, 2, -2}, {-2, -2, -6}};\n        for (int i = 0; i < actualmas.length; i++) {\n            System.out.println(\"Проверка строки \" + i);\n            System.out.println(\"         Ожидается: \" + Arrays.toString(expectmas[i]));\n            System.out.println(\"Из метода получено: \" + Arrays.toString(actualmas[i]));\n            assertArrayEquals(\"Метод работает некорректно\", expectmas[i], actualmas[i]);\n        }\n        System.out.println(\"Проверка завершена успешно!\");\n    }", "timestamp": "2020-04-12T09:47:01.862944Z", "repo_name": "migeniya/JD2018-12-10", "path": "/src/by/it/dziomin/jd01_02/Test_jd01_02.java", "source": "the-stack-v2", "method_name": "testTaskCstep3_DeleteMax__TaskC", "class_name": "Test_jd01_02", "index": 1214, "label": 1}
{"input": "public static IBlockState getStateSnowLayer() {\r\n        return Blocks.snow_layer.getDefaultState();\r\n    }", "timestamp": "2020-04-02T18:47:52.047731Z", "repo_name": "MicrowaveClient/Clarinet", "path": "/src/net/minecraft/src/BetterSnow.java", "source": "the-stack-v2", "method_name": "getStateSnowLayer", "class_name": "BetterSnow", "index": 1215, "label": 1}
{"input": "public void setText(String [] strings) {\r\n\tcheckWidget();\r\n\tif (strings == null) {\r\n\t\terror(SWT.ERROR_NULL_ARGUMENT);\r\n\t}\r\n\tif (getParent().indexOf(this) == -1) {\t\r\n\t\treturn;\r\n\t}\r\n\tfor (int i = 0; i < strings.length; i++) {\r\n\t\tString string = strings[i];\r\n\t\tif (string != null) {\r\n\t\t\tinternalSetText(i, string);\r\n\t\t}\r\n\t}\r\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipseswt_cluster/56034/tar_1.java", "source": "the-stack-v2", "method_name": "setText", "class_name": "TableItem", "index": 1216, "label": 1}
{"input": "@Override\n\tpublic int hashCode() {\n\t\tint result;\n\t\tlong temp;\n\t\ttemp = Double.doubleToLongBits(getTimestamp());\n\t\tresult = (int) (temp ^ (temp >>> 32));\n\t\tresult = 31 * result + getPosition().hashCode();\n\t\tresult = 31 * result + getType().hashCode();\n\t\treturn result;\n\t}", "timestamp": "2021-05-09T19:21:33.186594Z", "repo_name": "technophil98/AMNAM", "path": "/src/scenario/events/ReportedEvent.java", "source": "the-stack-v2", "method_name": "hashCode", "class_name": "ReportedEvent", "index": 1217, "label": 1}
{"input": "@Override\n\tpublic void render(Painter g) {\n\t\tg.drawImage(Assets.background_blank, 0, 0);\n\t\trenderStars(g);\n\t\trenderMermaid(g);\n\t\t\n\t\trenderScore(g);\n\t\trenderStrikes(g);\n\t\trenderGamePieces(g);\n\t}", "timestamp": "2020-05-15T20:09:09.580480Z", "repo_name": "wcmaclean/home-repo", "path": "/android/experiments/SpaceMermaid/src/com/toymoon/game/state/PlayState.java", "source": "the-stack-v2", "method_name": "render", "class_name": "PlayState", "index": 1218, "label": 1}
{"input": "public static String getFormatYestoday(String format) {\n\t\t\treturn getFormatCurrentAdd(-1, format);\n\t\t}", "timestamp": "2020-04-03T19:08:02.936008Z", "repo_name": "xhly521/AAHelper", "path": "/app/src/main/java/com/xhly/godutch/utility/DateTools.java", "source": "the-stack-v2", "method_name": "getFormatYestoday", "class_name": "DateTools", "index": 1219, "label": 1}
{"input": "public synchronized void retryAll() {\n        for (IncomingMessage message : incomingMessages.values()) {\n            enqueueMessage(message);\n        }\n    }", "timestamp": "2020-03-07T09:31:34.566030Z", "repo_name": "rationalboss/FondaSMS", "path": "/client/app/src/main/java/com/yeleman/fondasms/Inbox.java", "source": "the-stack-v2", "method_name": "retryAll", "class_name": "Inbox", "index": 1220, "label": 1}
{"input": "public Criteria andIdIsNotNull() {\n            addCriterion(\"id is not null\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andIdIsNotNull", "class_name": "GeneratedCriteria", "index": 1221, "label": 1}
{"input": "private ArrayList<String> getEvents(String eventStr) {\n        ArrayList<String> events = new ArrayList<String>();\n\n        for (String event : eventStr.trim().split(\" \")) {\n            if (event.trim().length() != 0)\n                events.add(event.trim());\n        }\n\n        return events;\n    }", "timestamp": "2020-08-04T12:11:10.943286Z", "repo_name": "umangm/rv-monitor", "path": "/rv-monitor/src/main/java/com/runtimeverification/rvmonitor/logicpluginshells/fsm/CFSM.java", "source": "the-stack-v2", "method_name": "getEvents", "class_name": "CFSM", "index": 1222, "label": 1}
{"input": "private CalciteAssert.AssertThat assertWithMacro(Class clazz) {\n    return CalciteAssert.model(\"{\\n\"\n        + \"  version: '1.0',\\n\"\n        + \"   schemas: [\\n\"\n        + \"     {\\n\"\n        + \"       name: 'adhoc',\\n\"\n        + \"       functions: [\\n\"\n        + \"         {\\n\"\n        + \"           name: 'View',\\n\"\n        + \"           className: '\" + clazz.getName() + \"'\\n\"\n        + \"  version: '1.0',\\n\"0\n        + \"  version: '1.0',\\n\"1\n        + \"  version: '1.0',\\n\"2\n        + \"  version: '1.0',\\n\"3\n        + \"  version: '1.0',\\n\"4);\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "assertWithMacro", "class_name": "JdbcTest", "index": 1223, "label": 1}
{"input": "private static void lookupIfAvailable(AnnotationConfigApplicationContext applicationContext) {\n        ObjectProvider<User> userObjectProvider = applicationContext.getBeanProvider(User.class);\n        User user = userObjectProvider.getIfAvailable(User::createUser);\n        System.out.println(\"当前 User 对象：\" + user);\n    }", "timestamp": "2023-06-29T05:02:03.050394Z", "repo_name": "ShenGouQiang/JavaDeveloper", "path": "/java-demo/spring-xiaomage/dependency-lookup/src/main/java/com/hjs/thinking/in/spring/dependency/lookup/ObjectProviderDemo.java", "source": "the-stack-v2", "method_name": "lookupIfAvailable", "class_name": "ObjectProviderDemo", "index": 1224, "label": 1}
{"input": "public Builder clearBaseScore() {\n\n      baseScore_ = 0D;\n      onChanged();\n      return this;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "clearBaseScore", "class_name": "Builder", "index": 1225, "label": 1}
{"input": "public void setAspectRatio(int aspectRatioX, int aspectRatioY) {\n\n        if (aspectRatioX <= 0 || aspectRatioY <= 0) {\n            throw new IllegalArgumentException(\"Cannot set aspect ratio value to a number less than or equal to 0.\");\n        }\n        mAspectRatioX = aspectRatioX;\n        mAspectRatioY = aspectRatioY;\n\n        if (mFixAspectRatio) {\n            requestLayout(); \n        }\n    }", "timestamp": "2022-05-06T21:27:51.136578Z", "repo_name": "Jelly0726/JellyBase", "path": "/library/baselibrary/src/main/java/com/jelly/baselibrary/cropper/CropImageView.java", "source": "the-stack-v2", "method_name": "setAspectRatio", "class_name": "CropImageView", "index": 1226, "label": 1}
{"input": "public IFile getModelFile() {\n\t\t\treturn ResourcesPlugin.getWorkspace().getRoot().getFile(getContainerFullPath().append(getFileName()));\n\t\t}", "timestamp": "2023-04-26T07:53:49.502057Z", "repo_name": "layornos/mPCM_build", "path": "/mpcm.paradigm.base.editor/src/base/presentation/BaseModelWizard.java", "source": "the-stack-v2", "method_name": "getModelFile", "class_name": "BaseModelWizardNewFileCreationPage", "index": 1227, "label": 1}
{"input": "@FXML public void btnAccept() {\n        JOptionPane.showMessageDialog(null, \"WELL DONE! YOU HAVE CHOOSE YOUR COMMODITIES :)\");\n        \n    }", "timestamp": "2021-01-09T20:46:21.815125Z", "repo_name": "GiveMeMyMoney/SIwZ5", "path": "/src/controller/ResourcesController.java", "source": "the-stack-v2", "method_name": "btnAccept", "class_name": "ResourcesController", "index": 1228, "label": 1}
{"input": "public void setGOOGPrice(double newGOOGPrice){\r\n\t\tthis.googPrice = newGOOGPrice;\r\n\t\tnotifyObserver();\r\n\t}", "timestamp": "2020-04-03T09:57:45.166733Z", "repo_name": "SuyenRojas/Patrones-de-Diseno---Ejemplos-java", "path": "/Observer/src/opcion2/StockGrabber.java", "source": "the-stack-v2", "method_name": "setGOOGPrice", "class_name": "StockGrabber", "index": 1229, "label": 1}
{"input": "private void setupBug124624() throws JavaModelException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/Test.java\",\n\t\t\"class HashMap {}\\n\" +\n\t\t\"class HtmlMapper {}\\n\" +\n\t\t\"class HashMapEntry {}\\n\" +\n\t\t\"class HaxMapxxxx {}\\n\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "setupBug124624", "class_name": "JavaSearchBugsTests", "index": 1230, "label": 1}
{"input": "@Override\n    public void write(final Iterable<MailboxItem> mails)\n    {\n        for (final MailboxItem mail : mails)\n        {\n            System.out.println(BETWEEN_MAIL);\n            for (String key : mail.getHeaderKeys())\n            {\n                System.out.print(key);\n                System.out.print(\": \");\n\n                String value = mail.getHeader(key);\n                System.out.println(value);\n            }\n        }\n    }", "timestamp": "2021-01-18T04:19:52.879784Z", "repo_name": "charles-cai/Timberwolf", "path": "/src/main/java/com/ripariandata/timberwolf/ConsoleMailWriter.java", "source": "the-stack-v2", "method_name": "write", "class_name": "ConsoleMailWriter", "index": 1231, "label": 1}
{"input": "private static void append0PaddedUint(StringBuffer sb, int i, int minWidth)\n    {\n        if (i < 0) Kit.codeBug();\n        int scale = 1;\n        --minWidth;\n        if (i >= 10) {\n            if (i < 1000 * 1000 * 1000) {\n                for (;;) {\n                    int newScale = scale * 10;\n                    if (i < newScale) { break; }\n                    --minWidth;\n                    scale = newScale;\n                }\n            } else {\n                \n                minWidth -= 9;\n                scale = 1000 * 1000 * 1000;\n            }\n        }\n        while (minWidth > 0) {\n            sb.append('0');\n            --minWidth;\n        }\n        while (scale != 1) {\n            sb.append((char)('0' + (i / scale)));\n            i %= scale;\n            scale /= 10;\n        }\n        sb.append((char)('0' + i));\n    }", "timestamp": "2016-09-05T17:02:01.575534Z", "repo_name": "thegreatape/slim", "path": "/yuicompressor-2.4.2/rhino1_6R7/src/org/yuimozilla/javascript/NativeDate.java", "source": "the-stack-v2", "method_name": "append0PaddedUint", "class_name": "NativeDate", "index": 1232, "label": 1}
{"input": "public void testBug122442a() throws CoreException {\n\tsetUpBug122442a();\n\tsearch(\"I\", TYPE, IMPLEMENTORS);\n\tassertSearchResults(\n\t\t\"src/b122442/II.java b122442.II [I] EXACT_MATCH\\n\" +\n\t\t\"src/b122442/X.java b122442.X [I] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug122442a", "class_name": "JavaSearchBugsTests", "index": 1233, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        setupViews();\n        setupMVP();\n    }", "timestamp": "2021-09-02T16:21:38.755318Z", "repo_name": "Ivan-Arias/ClaimUNSA-INP", "path": "/app/src/main/java/com/tinmegali/tutsmvp_sample/main/activity/view/MainActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "MainActivity", "index": 1234, "label": 1}
{"input": "@Override\n    public PageUtils queryPage(Map<String, Object> params) {\n        IPage<MemberEntity> page = this.page(\n                new Query<MemberEntity>().getPage(params),\n                new QueryWrapper<MemberEntity>()\n        );\n\n        return new PageUtils(page);\n    }", "timestamp": "2023-03-19T21:52:09.094656Z", "repo_name": "Wesley-D-Wills/glimail", "path": "/guimall-member/src/main/java/com/atguigu/glimall/member/service/impl/MemberServiceImpl.java", "source": "the-stack-v2", "method_name": "queryPage", "class_name": "MemberServiceImpl", "index": 1235, "label": 1}
{"input": "public void testBug137087j_CamelCaseSamePartCount() throws CoreException {\n\tint matchRule = SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH;\n\tString pattern = \"ClonenotSupportedexc\";\n\tsearch(pattern, TYPE, DECLARATIONS, matchRule);\n\tassertSearchResults(\"\");\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug137087j_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 1236, "label": 1}
{"input": "@Override\n    public void showProgressBar() {\n        binding.progressBar.setVisibility(View.VISIBLE);\n    }", "timestamp": "2023-02-15T01:44:35.345193Z", "repo_name": "umairqidwai/Check24Products", "path": "/app/src/main/java/com/example/check24products/presentation/MainActivity.java", "source": "the-stack-v2", "method_name": "showProgressBar", "class_name": "MainActivity", "index": 1237, "label": 1}
{"input": "public Criteria andVdef11Like(String value) {\r\n            addCriterion(\"VDEF11 like\", value, \"vdef11\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef11Like", "class_name": "GeneratedCriteria", "index": 1238, "label": 1}
{"input": "@Override\n    public void visit(Page page) {          \n            String url = page.getWebURL().getURL();\n            System.out.println(\"URL: \" + url);\n\n            if (page.getParseData() instanceof HtmlParseData) {\n                    HtmlParseData htmlParseData = (HtmlParseData) page.getParseData();\n                    String text = htmlParseData.getText();\n                    String html = htmlParseData.getHtml();\n                    List<WebURL> links = htmlParseData.getOutgoingUrls();\n\n                    System.out.println(\"Text length: \" + text.length());\n                    System.out.println(\"Html length: \" + html.length());\n                    System.out.println(\"Number of outgoing links: \" + links.size());\n            }\n    }", "timestamp": "2020-06-03T23:34:56.375061Z", "repo_name": "narendramohan/mmqa", "path": "/src/mmqa/MyCrawler.java", "source": "the-stack-v2", "method_name": "visit", "class_name": "MyCrawler", "index": 1239, "label": 1}
{"input": "@Override\n      public List setUploadType(java.lang.String uploadType) {\n        return (List) super.setUploadType(uploadType);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setUploadType", "class_name": "List", "index": 1240, "label": 1}
{"input": "public void testBug79990() throws CoreException {\n\tsetUpBug79990();\n\tIMethod method = this.workingCopies[0].getType(\"Test\").getMethods()[0];\n\tsearch(method, DECLARATIONS);\n\tassertSearchResults(\n\t\t\"src/b79990/Test.java void b79990.Test.first(Exception) [first] EXACT_MATCH\\n\" +\n\t\t\"src/b79990/Test.java void b79990.Sub.first(Exception) [first] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug79990", "class_name": "JavaSearchBugsTests", "index": 1241, "label": 1}
{"input": "public void setWidgetItem(int value, int index){\n\t\talist.get(index).widget = value;\n\t\taadapter.notifyDataSetChanged();\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "setWidgetItem", "class_name": "jListView", "index": 1242, "label": 1}
{"input": "public void testReflectionHashCode() {\n        assertEquals(17 * 37, HashCodeBuilder.reflectionHashCode(new TestObject(0)));\n        assertEquals(17 * 37 + 123456, HashCodeBuilder.reflectionHashCode(new TestObject(123456)));\n    }", "timestamp": "2022-02-13T19:44:43.869060Z", "repo_name": "SpoonLabs/nopol-experiments", "path": "/dataset/cl1/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java", "source": "the-stack-v2", "method_name": "testReflectionHashCode", "class_name": "HashCodeBuilderTest", "index": 1243, "label": 1}
{"input": "@Override \n        public void startKeepaliveResponse(RadioResponseInfo info, KeepaliveStatus status) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            status.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(134, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "startKeepaliveResponse", "class_name": "Proxy", "index": 1244, "label": 1}
{"input": "@Override\n    public boolean onTouchEvent(MotionEvent event) {\n        Log.i(TAG, \"onTouchEvent \");\n        if (event.getAction() == MotionEvent.ACTION_DOWN) {\n            if (!isRunning) {\n                isRunning = true;\n                new Thread(this).start();\n            } else {\n                riseStart = birdHeight;\n                rise = 0;\n                h = 0;\n            }\n        }\n        return super.onTouchEvent(event);\n    }", "timestamp": "2022-11-10T15:18:39.844014Z", "repo_name": "AndroidCourseTeam/AndroidHomework", "path": "/app/src/main/java/com/nankai/myflappybird/GameView.java", "source": "the-stack-v2", "method_name": "onTouchEvent", "class_name": "GameView", "index": 1245, "label": 1}
{"input": "@Test\n    public void getAuditsByDate() throws Exception {\n        \n        auditEventRepository.save(auditEvent);\n\n        \n        String fromDate  = SAMPLE_TIMESTAMP.minusSeconds(SECONDS_PER_DAY).toString().substring(0,10);\n        String toDate = SAMPLE_TIMESTAMP.plusSeconds(SECONDS_PER_DAY).toString().substring(0,10);\n\n        \n        restAuditMockMvc.perform(get(\"/management/audits?fromDate=\"+fromDate+\"&toDate=\"+toDate))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.[*].principal\").value(hasItem(SAMPLE_PRINCIPAL)));\n    }", "timestamp": "2021-04-28T13:34:14.329505Z", "repo_name": "scarabetta/jhipsterSample2", "path": "/src/test/java/io/github/jhipster/application/web/rest/AuditResourceIntTest.java", "source": "the-stack-v2", "method_name": "getAuditsByDate", "class_name": "AuditResourceIntTest", "index": 1246, "label": 1}
{"input": "private void handlePasswordGrantType(\n            HttpServletRequest request,\n            HttpServletResponse response,\n            String scope) throws Exception {\n        if (SsoUtils.scopeAsList(scope).contains(\"ovirt-ext=token:login-on-behalf\")) {\n            issueTokenForLoginOnBehalf(request, response, scope);\n        } else {\n            issueTokenForPasswd(request, response, scope);\n        }\n    }", "timestamp": "2021-01-19T08:50:52.137957Z", "repo_name": "igoihman/ovirt-engine", "path": "/backend/manager/modules/enginesso/src/main/java/org/ovirt/engine/core/sso/servlets/OAuthTokenServlet.java", "source": "the-stack-v2", "method_name": "handlePasswordGrantType", "class_name": "OAuthTokenServlet", "index": 1247, "label": 1}
{"input": "public void testBug110060_ConstructorPattern05() throws CoreException {\n\tsetUpBug110060_ConstructorPattern();\n\tsearch(\"A*A*\", CONSTRUCTOR, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);\n\t\n\tassertSearchResults(\n\t\t\"src/b110060/AAAA.java b110060.AAAA() [AAAA] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/AAxx.java b110060.AAxx() [AAxx] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/AxAyAz.java b110060.AxAyAz() [AxAyAz] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/AxxAyy.java b110060.AxxAyy() [AxxAyy] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.aaaa [new AAAA()] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.aaxx [new AAxx()] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.axayaz [new AxAyAz()] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.axxayy [new AxxAyy()] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_ConstructorPattern05", "class_name": "JavaSearchBugsTests", "index": 1248, "label": 1}
{"input": "public Criteria andMsgIdEqualTo(String value) {\r\n            addCriterion(\"msg_id =\", value, \"msgId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andMsgIdEqualTo", "class_name": "GeneratedCriteria", "index": 1249, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n\tpublic ActionForward toDjfkTaskList(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\t\tMap params = new HashMap();\n\t\tParamUtil.putStr2Map(request, \"APPLICATIONID\", params);\n\t\tint pageNo = ParamUtil.getInt(request, \"pageNo\", 1);\n\t\tIListPage page = zfdjService.pageQueryDjfkTask(params, pageNo);\n\t\trequest.setAttribute(\"page\", page);\n\t\treturn mapping.findForward(\"djfklist\");\n\t}", "timestamp": "2021-01-12T15:41:00.492001Z", "repo_name": "MoonLuckSir/MoonRepository", "path": "/src/java/com/yitong/app/action/judicial/dxzpzfdj/ZfdjAction.java", "source": "the-stack-v2", "method_name": "toDjfkTaskList", "class_name": "ZfdjAction", "index": 1250, "label": 1}
{"input": "public static void assertSize(int expectedSize, final Object[] array) {\n    assertEquals(toString(Arrays.asList(array)), expectedSize, array.length);\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "assertSize", "class_name": "UsefulTestCase", "index": 1251, "label": 1}
{"input": "@Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)\n        throws IOException, ServletException {\n        HttpServletRequest httpServletRequest = (HttpServletRequest) servletRequest;\n        String jwt = resolveToken(httpServletRequest);\n        if (StringUtils.hasText(jwt) && this.tokenProvider.validateToken(jwt)) {\n            Authentication authentication = this.tokenProvider.getAuthentication(jwt);\n            SecurityContextHolder.getContext().setAuthentication(authentication);\n        }\n        filterChain.doFilter(servletRequest, servletResponse);\n    }", "timestamp": "2022-12-24T10:34:30.724184Z", "repo_name": "kristianfantin/jhipster-sample-application", "path": "/src/main/java/com/kristian/jhipster/first/security/jwt/JWTFilter.java", "source": "the-stack-v2", "method_name": "doFilter", "class_name": "JWTFilter", "index": 1252, "label": 1}
{"input": "public Optional<Asset> findAsset(String name) {\n        Map<String, String> params = new HashMap<>();\n        params.put(\"assetName\", name);\n        try {\n            ResponseEntity<Asset> assetEntity = restTemplate.getForEntity(baseURL + \"/api/tenant/assets?assetName={assetName}\", Asset.class, params);\n            return Optional.of(assetEntity.getBody());\n        } catch (HttpClientErrorException exception) {\n            if (exception.getStatusCode() == HttpStatus.NOT_FOUND) {\n                return Optional.empty();\n            } else {\n                throw exception;\n            }\n        }\n    }", "timestamp": "2023-01-12T13:57:08.253533Z", "repo_name": "hashmapinc/Tempus", "path": "/tools/src/main/java/com/hashmapinc/client/tools/RestClient.java", "source": "the-stack-v2", "method_name": "findAsset", "class_name": "RestClient", "index": 1253, "label": 1}
{"input": "@Override\n    public ResponseEntity setAppDeployStatus(Long pipelineRecordId, Long stageRecordId, Long jobRecordId, Boolean status) {\n        return new ResponseEntity(\"error.update.deploy.job.status\", HttpStatus.INTERNAL_SERVER_ERROR);\n    }", "timestamp": "2022-11-29T11:17:33.470835Z", "repo_name": "IamTenKing/workflow-service", "path": "/src/main/java/io/choerodon/workflow/infra/feign/fallback/DevopsServiceClientFallBack.java", "source": "the-stack-v2", "method_name": "setAppDeployStatus", "class_name": "DevopsServiceClientFallBack", "index": 1254, "label": 1}
{"input": "@Override\n    protected AbstractApplicationContext createApplicationContext() {\n        return new ClassPathXmlApplicationContext(\"org/apache/camel/routepolicy/quartz/MultiplePolicies.xml\");\n    }", "timestamp": "2020-04-02T02:13:16.996791Z", "repo_name": "Alirezazabetan/camel", "path": "/components/camel-quartz/src/test/java/org/apache/camel/routepolicy/quartz/SpringMultiplePoliciesOnRouteTest.java", "source": "the-stack-v2", "method_name": "createApplicationContext", "class_name": "SpringMultiplePoliciesOnRouteTest", "index": 1255, "label": 1}
{"input": "@Test\n    @SmallTest\n    @Feature({\"Preferences\"})\n    public void testManageAccountLinkSignedInNotSyncing() throws Exception {\n        \n        \n        setPasswordSource(new SavedPasswordEntry(\"https://example.com\", \"test user\", \"password\"));\n        ChromeSigninController.get().setSignedInAccountName(\"Test Account\");\n        overrideProfileSyncService(false, false);\n\n        final Preferences preferences =\n                PreferencesTest.startPreferences(InstrumentationRegistry.getInstrumentation(),\n                        SavePasswordsPreferences.class.getName());\n        SavePasswordsPreferences savedPasswordPrefs =\n                (SavePasswordsPreferences) preferences.getMainFragment();\n\n        Assert.assertNull(savedPasswordPrefs.findPreference(\n                SavePasswordsPreferences.PREF_KEY_MANAGE_ACCOUNT_LINK));\n    }", "timestamp": "2022-12-08T04:12:54.583056Z", "repo_name": "yeahhhhhhhh/chromium_quic", "path": "/src/chrome/android/javatests/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferencesTest.java", "source": "the-stack-v2", "method_name": "testManageAccountLinkSignedInNotSyncing", "class_name": "SavePasswordsPreferencesTest", "index": 1256, "label": 1}
{"input": "@java.lang.Override\n    public Builder setField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        java.lang.Object value) {\n      return super.setField(field, value);\n    }", "timestamp": "2023-08-19T07:39:40.744879Z", "repo_name": "googleads/google-ads-java", "path": "/google-ads-stubs-v14/src/main/java/com/google/ads/googleads/v14/enums/CustomAudienceTypeEnum.java", "source": "the-stack-v2", "method_name": "setField", "class_name": "Builder", "index": 1257, "label": 1}
{"input": "private void trocaDeTurno(boolean esperandoMovimento) {\n        partida.trocaDeTurno();\n        System.out.println(\"Vez do jogador \" + partida.getJogadorDaVez().getCor());\n        esperandoMovimento = false;\n        pecaSelecionada = null;\n        pecaASerComida = null;\n\n    }", "timestamp": "2021-01-17T07:28:41.295754Z", "repo_name": "lfnascimento/Dama", "path": "/src/dama/Dama.java", "source": "the-stack-v2", "method_name": "trocaDeTurno", "class_name": "Dama", "index": 1258, "label": 1}
{"input": "@Override \n        public void setGsmBroadcastConfigResponse(RadioResponseInfo info) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(80, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "setGsmBroadcastConfigResponse", "class_name": "Proxy", "index": 1259, "label": 1}
{"input": "@Override \n        public void getCdmaRoamingPreferenceResponse(RadioResponseInfo info, int type) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            _hidl_request.writeInt32(type);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(70, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "getCdmaRoamingPreferenceResponse", "class_name": "Proxy", "index": 1260, "label": 1}
{"input": "@Override\n    public void removeRoleMapping(String role) {\n\n        synchronized (roleMappings) {\n            roleMappings.remove(role);\n        }\n        fireContainerEvent(\"removeRoleMapping\", role);\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "removeRoleMapping", "class_name": "StandardContext", "index": 1261, "label": 1}
{"input": "@Override\n    public void onCreate(SQLiteDatabase db) {\n        Log.d(\"BTWeather - DB\", \"create db\");\n        db.execSQL(\n                \"create table prefs \" +\n                        \"(id integer primary key, tempstate boolean,humidstate boolean, windstate boolean,btdevice text, celsius boolean,interval integer)\"\n        );\n    }", "timestamp": "2020-03-22T13:09:56.343529Z", "repo_name": "JamesHarley/BTWeatherStation", "path": "/app/src/main/java/gnosisdevelopment/arduinobtweatherstation/DBHelper.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "DBHelper", "index": 1262, "label": 1}
{"input": "@Test public void testHavingNot2() throws IOException {\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.FOODMART_CLONE)\n        .query(\"select 1\\n\"\n            + \"from \\\"store\\\"\\n\"\n            + \"group by \\\"store\\\".\\\"store_street_address\\\"\\n\"\n            + \"having NOT (sum(\\\"store\\\".\\\"grocery_sqft\\\") < 20000)\")\n        .returnsCount(10);\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testHavingNot2", "class_name": "JdbcTest", "index": 1263, "label": 1}
{"input": "protected AudioPlayerFragment getAudioPlayerFragment() {\n        return (AudioPlayerFragment)getSupportFragmentManager().findFragmentById(R.id.audioPlayerFragment);\n    }", "timestamp": "2020-04-13T03:12:46.332070Z", "repo_name": "Forsakenrox/Eleven", "path": "/src/main/java/org/lineageos/eleven/ui/activities/SlidingPanelActivity.java", "source": "the-stack-v2", "method_name": "getAudioPlayerFragment", "class_name": "SlidingPanelActivity", "index": 1264, "label": 1}
{"input": "@Override\n\tpublic Wheeler createObject(Wheeler wheeler) {\n\t\tWheeler returnWheeler = null;\n\t\ttry {\n\t\t\treturnWheeler = wheeler.getClass().newInstance();\n\t\t} catch (InstantiationException | IllegalAccessException e) {\n\t\t\te.printStackTrace();\n\t\t\tthrow new RuntimeException(\"get instance failed\");\n\t\t}\n\t\treturn returnWheeler;\n\t}", "timestamp": "2020-05-18T08:57:39.496714Z", "repo_name": "popwar/CoreJava", "path": "/src/main/java/org/lu/designpattern/abstractFactory/WheelerFactory.java", "source": "the-stack-v2", "method_name": "createObject", "class_name": "WheelerFactory", "index": 1265, "label": 1}
{"input": "@javax.annotation.Resource(name = \"com.glaf.report.core.mapper.ReportTmpMappingMapper\")\n\tpublic void setReportTmpMappingMapper(ReportTmpMappingMapper reportTmpMappingMapper) {\n\t\tthis.reportTmpMappingMapper = reportTmpMappingMapper;\n\t}", "timestamp": "2021-05-08T16:38:30.406098Z", "repo_name": "eosite/openyourarm", "path": "/glaf-web/src/main/java/com/glaf/report/core/service/ReportTmpMappingServiceImpl.java", "source": "the-stack-v2", "method_name": "setReportTmpMappingMapper", "class_name": "ReportTmpMappingServiceImpl", "index": 1266, "label": 1}
{"input": "@Override\n  public boolean eIsSet(int featureID)\n  {\n    switch (featureID)\n    {\n      case GreedySnakePackage.INITIAL_FOOD_SPECIFICATIN__NAME:\n        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);\n      case GreedySnakePackage.INITIAL_FOOD_SPECIFICATIN__MEMBERS:\n        return members != null;\n      case GreedySnakePackage.INITIAL_FOOD_SPECIFICATIN__MULTIPLES:\n        return multiples != null && !multiples.isEmpty();\n    }\n    return super.eIsSet(featureID);\n  }", "timestamp": "2023-04-11T06:06:46.490724Z", "repo_name": "Landy7/MDD", "path": "/org.xtext.example.group16.GreedySnake/src-gen/org/xtext/example/mydsl2/group16/greedySnake/impl/InitialFoodSpecificatinImpl.java", "source": "the-stack-v2", "method_name": "eIsSet", "class_name": "InitialFoodSpecificatinImpl", "index": 1267, "label": 1}
{"input": "public void playBack() {\n        LogUtil.i(TAG, \" do play back\");\n        setCurrentPlayState(2);\n        this.mHandler.removeCallbacksAndMessages(null);\n        if (this.mediaPlayer != null) {\n            this.mediaPlayer.setOnSeekCompleteListener(null);\n            this.mediaPlayer.seekTo(0);\n            this.mediaPlayer.pause();\n        }\n        showPauseView(false);\n    }", "timestamp": "2020-11-25T21:02:17.790224Z", "repo_name": "pk1z/wladimir-computin-FimiX8-RE-App", "path": "/sources/com/fimi/album/widget/CustomVideoView.java", "source": "the-stack-v2", "method_name": "playBack", "class_name": "CustomVideoView", "index": 1268, "label": 1}
{"input": "public String typeWord() {\n\t\tswitch (stepType) {\n\t\tcase WHEN:\n\t\t\treturn localizedSupport.lWhen(false);\n\t\tcase THEN:\n\t\t\treturn localizedSupport.lThen(false);\n\t\tcase GIVEN:\n\t\tdefault:\n\t\t\treturn localizedSupport.lGiven(false);\n\t\t}\n\t}", "timestamp": "2021-01-17T06:57:09.421458Z", "repo_name": "Arnauld/jbehave-ide", "path": "/jbehave-eclipse-plugin/src/org/jbehave/eclipse/step/StepCandidate.java", "source": "the-stack-v2", "method_name": "typeWord", "class_name": "StepCandidate", "index": 1269, "label": 1}
{"input": "@Override\r\n    public DvrWatchedPositionManager getDvrWatchedPositionManager() {\r\n        if (mDvrWatchedPositionManager == null) {\r\n            mDvrWatchedPositionManager = new DvrWatchedPositionManager(this);\r\n        }\r\n        return mDvrWatchedPositionManager;\r\n    }", "timestamp": "2020-03-31T22:30:02.802799Z", "repo_name": "johnjcool/TV", "path": "/app/src/main/java/com/android/tv/TvApplication.java", "source": "the-stack-v2", "method_name": "getDvrWatchedPositionManager", "class_name": "TvApplication", "index": 1270, "label": 1}
{"input": "@Test public void testWithinGroupClause1() {\n    final String sql = \"select X,\\n\"\n        + \" collect(Y) within group (order by Y desc) as \\\"SET\\\"\\n\"\n        + \"from (values (1, 'a'), (1, 'b'),\\n\"\n        + \"             (3, 'c'), (3, 'd')) AS t(X, Y)\\n\"\n        + \"group by X\\n\"\n        + \"limit 10\";\n    CalciteAssert.that().query(sql)\n        .returnsUnordered(\"X=1; SET=[b, a]\",\n            \"X=3; SET=[d, c]\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testWithinGroupClause1", "class_name": "JdbcTest", "index": 1271, "label": 1}
{"input": "private void showBar(boolean isShow) {\n        int i;\n        int i2 = 0;\n        LinearLayout linearLayout = this.mTopBarLl;\n        if (isShow) {\n            i = 0;\n        } else {\n            i = 8;\n        }\n        linearLayout.setVisibility(i);\n        RelativeLayout relativeLayout = this.mBottomPlayRl;\n        if (!isShow) {\n            i2 = 8;\n        }\n        relativeLayout.setVisibility(i2);\n    }", "timestamp": "2020-11-25T21:02:17.790224Z", "repo_name": "pk1z/wladimir-computin-FimiX8-RE-App", "path": "/sources/com/fimi/album/widget/CustomVideoView.java", "source": "the-stack-v2", "method_name": "showBar", "class_name": "CustomVideoView", "index": 1272, "label": 1}
{"input": "public int front() {\n\t\tif(empty()) {\n\t\t\tSystem.out.println(\"Queue is Empty.\");\n\t\t\treturn 0;\n\t\t}\n\t\treturn queArr[front];\n\t}", "timestamp": "2020-06-11T02:25:51.495133Z", "repo_name": "mallickrohan08/DS-Queue", "path": "/QueueUsingArray.java", "source": "the-stack-v2", "method_name": "front", "class_name": "Queue", "index": 1273, "label": 1}
{"input": "@Override\n        public String get(ChangeData input, FillArgs args)\n            throws OrmException {\n          Boolean m = input.isMergeable();\n          if (m == null) {\n            return null;\n          }\n          return m ? \"1\" : \"0\";\n        }", "timestamp": "2021-01-16T21:01:21.667768Z", "repo_name": "runt18/gerrit", "path": "/gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeField.java", "source": "the-stack-v2", "method_name": "get", "class_name": "ChangeField", "index": 1274, "label": 1}
{"input": "public DQCategory getCategoryMetadataById(String catId) {\n        return getMetadata().get(catId);\n    }", "timestamp": "2021-05-01T16:06:31.746782Z", "repo_name": "MarkChappell/data-quality", "path": "/dataquality-semantic/src/main/java/org/talend/dataquality/semantic/api/CustomDictionaryHolder.java", "source": "the-stack-v2", "method_name": "getCategoryMetadataById", "class_name": "CustomDictionaryHolder", "index": 1275, "label": 1}
{"input": "@Test public void testArrayImplode1() throws ConfigCompileException{\n         Run(\"msg(array_implode(array(1,2,3,4,5,6,7,8,9,1,2,3,4,5)))\", fakePlayer);\n         verify(fakePlayer).sendMessage(\"1 2 3 4 5 6 7 8 9 1 2 3 4 5\");\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/19/19_3b3438a24e33893035d2c602198d49ca13a35845/ArrayHandlingTest/19_3b3438a24e33893035d2c602198d49ca13a35845_ArrayHandlingTest_s.java", "source": "the-stack-v2", "method_name": "testArrayImplode1", "class_name": "ArrayHandlingTest", "index": 1276, "label": 1}
{"input": "public boolean remove() throws SQLException {\n        PreparedStatement preparedStatement = getConnection().prepareStatement(\n                \"DELETE FROM authors WHERE id = ?\");\n\n        preparedStatement.setInt(1, getId());\n\n        return preparedStatement.execute();\n    }", "timestamp": "2021-07-08T09:35:13.163549Z", "repo_name": "fapedroso/another-book-in-the-shelf", "path": "/src/main/java/br/ufsm/piveta/system/entities/Author.java", "source": "the-stack-v2", "method_name": "remove", "class_name": "Author", "index": 1277, "label": 1}
{"input": "public View getView(int position, View convertView, ViewGroup parent) {\n         View vi = convertView;\n         if (convertView == null)\n             vi = inflater.inflate(R.layout.item_listview_category, null);\n         TextView text = (TextView) vi.findViewById(R.id.text_list);\n         text.setText(data.get(position).getName());\n        \n\n         return vi;\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/23/23_d0ae5e495186a7e1317c4fdc615b355b05916759/CategoryListAdapter/23_d0ae5e495186a7e1317c4fdc615b355b05916759_CategoryListAdapter_t.java", "source": "the-stack-v2", "method_name": "getView", "class_name": "CategoryListAdapter", "index": 1278, "label": 1}
{"input": "public static boolean verificaUsuario(String email, String senha)\n    {\n        \n\n         try {\n                Connection con = ConexaoBD.getConexao();\n\n                String query = \"select * from comprador where email=? and senha=?\";\n                PreparedStatement ps = con.prepareStatement(query);\n                \n                ps.setString(1, email);\n                ps.setString(2, senha);\n\n                ResultSet rs = ps.executeQuery();\n                if(rs.next())\n                {    \n\n\n\n\n\n\n\n\n\n\n                    return true;\n                }  \n                else\n                return false;\n            } catch (ClassNotFoundException ex) {\n                Logger.getLogger(LoginUsuario.class.getName()).log(Level.SEVERE, null, ex);\n            } catch (SQLException ex) {\n                Logger.getLogger(LoginUsuario.class.getName()).log(Level.SEVERE, null, ex);\n            }\n         return false;\n        \n    }", "timestamp": "2023-05-22T22:37:44.865171Z", "repo_name": "marcelotrf/Pi4", "path": "/src/main/java/dao/CompradorDao.java", "source": "the-stack-v2", "method_name": "verificaUsuario", "class_name": "CompradorDao", "index": 1279, "label": 1}
{"input": "@Override\n    protected Collection<org.ovirt.engine.core.common.businessentities.VM> getEntitiesFromExportDomain() {\n        GetAllFromExportDomainQueryParameters params =\n            new GetAllFromExportDomainQueryParameters(getDataCenterId(storageDomainId), storageDomainId);\n\n        return getBackendCollection(VdcQueryType.GetVmsFromExportDomain, params);\n    }", "timestamp": "2021-01-15T17:02:25.199751Z", "repo_name": "aprisun/ovirt-engine", "path": "/backend/manager/modules/restapi/jaxrs/src/main/java/org/ovirt/engine/api/restapi/resource/BackendStorageDomainVmsResource.java", "source": "the-stack-v2", "method_name": "getEntitiesFromExportDomain", "class_name": "BackendStorageDomainVmsResource", "index": 1280, "label": 1}
{"input": "public boolean detectHierarchyCycle(TypeBinding superType, TypeReference reference, TypeBinding[] argTypes) {\n\t\tif (!(superType instanceof ReferenceBinding)) return false;\n\n\t\tif (reference == this.superTypeReference) { \n\t\t\tif (superType.isTypeVariable())\n\t\t\t\treturn false; \n\t\t\t\n\t\t\t\n\t\t\tif (superType.isParameterizedType())\n\t\t\t\tsuperType = ((ParameterizedTypeBinding) superType).type;\n\t\t\tcompilationUnitScope().recordSuperTypeReference(superType); \n\t\t\treturn detectHierarchyCycle(referenceContext.binding, (ReferenceBinding) superType, reference);\n\t\t}\n\n\t\tif ((superType.tagBits & TagBits.BeginHierarchyCheck) == 0 && superType instanceof SourceTypeBinding)\n\t\t\t\n\t\t\t((SourceTypeBinding) superType).scope.connectTypeHierarchyWithoutMembers();\n\t\treturn false;\n\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/16417/src_0.java", "source": "the-stack-v2", "method_name": "detectHierarchyCycle", "class_name": "ClassScope", "index": 1281, "label": 1}
{"input": "public String singout() {\n        \n        if (session.getAttribute(\"username\") != null) {\n            String name = (String) session.getAttribute(\"username\");\n            session.removeAttribute(\"username\");\n            AdminControl ac = new AdminControl();\n            Usuario u = ac.getUserbyName(name);\n            if (!(u.getVcnombre() == null)) {\n                ac.addBitacoraEntry(\"El usuario [\" + u.getVcnombre() + \"] salió del sistema.\", u.getVccoduser(), \"Main/SingOut\");\n            }\n        }\n        return SUCCESS;\n    }", "timestamp": "2021-01-15T12:19:02.044999Z", "repo_name": "julianrojas87/Imsys", "path": "/src/java/com/imsys/admin/struts/action/SingInAction.java", "source": "the-stack-v2", "method_name": "singout", "class_name": "SingInAction", "index": 1282, "label": 1}
{"input": "private void updateUI() {\n\n        \n        Intent intent = new Intent(MainActivity.this, MainHome.class);\n        startActivity(intent);\n    }", "timestamp": "2022-06-10T17:57:08.381357Z", "repo_name": "wilsonmwiti/FirebaseUiSignin", "path": "/app/src/main/java/com/spiritledinc/firebaseuisignin/MainActivity.java", "source": "the-stack-v2", "method_name": "updateUI", "class_name": "MainActivity", "index": 1283, "label": 1}
{"input": "@Override\n\tpublic boolean insert(UserModel user) {\n\t\ttry\n\t\t{\n\t\tsessionFactory.getCurrentSession().save(user);\n\t\treturn true;\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\treturn false;\n\t\t}\n\t}", "timestamp": "2021-05-12T19:34:37.277933Z", "repo_name": "thrijita/ActivityStream_Boot", "path": "/activitystreambackendspringboot/src/main/java/com/niit/daoimpl/UserDAOImpl.java", "source": "the-stack-v2", "method_name": "insert", "class_name": "UserDAOImpl", "index": 1284, "label": 1}
{"input": "public Criteria andStatusBetween(Integer value1, Integer value2) {\r\n            addCriterion(\"status between\", value1, value2, \"status\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andStatusBetween", "class_name": "GeneratedCriteria", "index": 1285, "label": 1}
{"input": "public void testBug73112b() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = super.getWorkingCopy(\"/JavaSearchBugs/src/b73112/B.java\",\n\t\t\"package b73112;\\n\" +\n\t\t\"public class B {\\n\" +\n\t\t\"    int fieldB73112a, fieldB73112b = 10;\\n\" +\n\t\t\"    int fieldB73112c = fieldB73112a + fieldB73112b, fieldB73112d = fieldB73112c + fieldB73112a, fieldB73112e;\\n\" +\n\t\t\"    \\n\" +\n\t\t\"    public void method(){}\\n\" +\n\t\t\"}\\n\");\n\t\n\tsearch(\"fieldB73112*\", FIELD, ALL_OCCURRENCES);\n\tassertSearchResults(\n\t\t\"src/b73112/B.java b73112.B.fieldB73112a [fieldB73112a] EXACT_MATCH\\n\" +\n\t\t\"package b73112;\\n\"0 +\n\t\t\"package b73112;\\n\"1 +\n\t\t\"package b73112;\\n\"2 +\n\t\t\"package b73112;\\n\"3 +\n\t\t\"package b73112;\\n\"4 +\n\t\t\"package b73112;\\n\"5 +\n\t\t\"package b73112;\\n\"6 +\n\t\t\"package b73112;\\n\"7\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug73112b", "class_name": "JavaSearchBugsTests", "index": 1286, "label": 1}
{"input": "public static void drawGradientRect(double x, double y, double x2, double y2, int col1, int col2)\n  {\n    float f = (col1 >> 24 & 0xFF) / 255.0F;\n    float f2 = (col1 >> 16 & 0xFF) / 255.0F;\n    float f3 = (col1 >> 8 & 0xFF) / 255.0F;\n    float f4 = (col1 & 0xFF) / 255.0F;\n    float f5 = (col2 >> 24 & 0xFF) / 255.0F;\n    float f6 = (col2 >> 16 & 0xFF) / 255.0F;\n    float f7 = (col2 >> 8 & 0xFF) / 255.0F;\n    float f8 = (col2 & 0xFF) / 255.0F;\n    GL11.glEnable(3042);\n    GL11.glDisable(3553);\n    GL11.glBlendFunc(770, 771);\n    GL11.glEnable(2848);\n    GL11.glShadeModel(7425);\n    GL11.glPushMatrix();\n    GL11.glBegin(7);\n    GL11.glColor4f(f2, f3, f4, f);\n    GL11.glVertex2d(x2, y);\n    GL11.glVertex2d(x, y);\n    GL11.glColor4f(f6, f7, f8, f5);\n    GL11.glVertex2d(x, y2);\n    GL11.glVertex2d(x2, y2);\n    GL11.glEnd();\n    GL11.glPopMatrix();\n    GL11.glEnable(3553);\n    GL11.glDisable(3042);\n    GL11.glDisable(2848);\n    GL11.glShadeModel(7424);\n  }", "timestamp": "2023-07-23T11:39:57.368099Z", "repo_name": "SuperS123/SpicyClient", "path": "/minecraft/info/spicyclient/ui/Jello/RenderSystem.java", "source": "the-stack-v2", "method_name": "drawGradientRect", "class_name": "RenderSystem", "index": 1287, "label": 1}
{"input": "protected void updateIndexSetFor(int i, double C) throws Exception {\n    \n    if (m_alpha[i] == 0 && m_alphaStar[i] == 0) {\n      \n      m_iSet[i] = I1;\n      m_I0.delete(i);\n    } else if (m_alpha[i] > 0) {\n      if (m_alpha[i] < C) {\n\tif ((m_iSet[i] & I0) == 0) {\n\t  \n\t  m_I0.insert(i);\n\t}\n\t\n\tm_iSet[i] = I0a;\n      } else { \n\t\n\tm_iSet[i] = I3;\n\tm_I0.delete(i);\n      }\n    } else {\n      if (m_alphaStar[i] < C) {\n\tif ((m_iSet[i] & I0) == 0) {\n\t  \n\t  m_I0.insert(i);\n\t}\n\t\n\tm_iSet[i] = I0b;\n      } else { \n\t\n\tm_iSet[i] = I2;\n\tm_I0.delete(i);\n      }\n    }\n  }", "timestamp": "2023-04-14T12:37:30.510795Z", "repo_name": "suhitaghosh10/Tune2Timeseries", "path": "/src/main/java/org/ovgu/de/classifier/functions/supportVector/RegSMOImproved.java", "source": "the-stack-v2", "method_name": "updateIndexSetFor", "class_name": "RegSMOImproved", "index": 1288, "label": 1}
{"input": "@Benchmark\n    public Object testCarEncodeJson() throws IOException {\n        return jsonPrinter.print(buildCarData(car));\n    }", "timestamp": "2023-08-16T00:56:34.729730Z", "repo_name": "HebiRobotics/QuickBuffers", "path": "/benchmarks/src/main/java/us/hebi/quickbuf/benchmarks/comparison/SbeThroughputBenchmarkProtobuf.java", "source": "the-stack-v2", "method_name": "testCarEncodeJson", "class_name": "SbeThroughputBenchmarkProtobuf", "index": 1289, "label": 1}
{"input": "public List<LogObject> getLogsByService(String service) {\n        logger.info(\"LogService called, making call to LogRepository\");\n        List<LogObject> logs = new ArrayList<>();\n        try {\n            logs = logRepository.findByService(service);\n        } catch (Exception e) {\n            logger.error(\"LogService caught exception calling LogRepository.getLogs():\\n\", e.getStackTrace());\n            e.printStackTrace();\n        }\n        logger.info(\"Received response from LogRepository, returning logs to LogController\");\n        return logs;\n    }", "timestamp": "2023-03-03T10:36:06.221786Z", "repo_name": "jmartinez059/kafka-consumer", "path": "/src/main/java/com/MNTDemo/Consumer/service/LogService.java", "source": "the-stack-v2", "method_name": "getLogsByService", "class_name": "LogService", "index": 1290, "label": 1}
{"input": "@Override\n    public Map<Long, Book> extractData(ResultSet rs) throws SQLException,\n            DataAccessException {\n        Map<Long, Book> books = new HashMap<>();\n        while (rs.next()) {\n            long id = rs.getLong(\"id\");\n            Book book = books.get(id);\n            if (book == null) {\n                book = new Book(id, rs.getString(\"name\"));\n                books.put(book.getId(), book);\n            }\n            long authorId = rs.getLong(\"author_id\");\n            Author author = new Author(authorId, rs.getString(\"author_name\"));\n            if (!book.getAuthors().contains(author)) {\n                book.addAuthor(author);\n            }\n            long genreId = rs.getLong(\"genre_id\");\n            Genre genre = new Genre(genreId, rs.getString(\"genre_name\"));\n            if (!book.getGenres().contains(genre)) {\n                book.addGenre(genre);\n            }\n        }\n        return books;\n    }", "timestamp": "2022-09-20T07:14:13.900313Z", "repo_name": "mgilivanov/2019-11-otus-spring-GilivanovM", "path": "/work-5/src/main/java/ru/otus/work5/extractor/BookResultSetExtractor.java", "source": "the-stack-v2", "method_name": "extractData", "class_name": "BookResultSetExtractor", "index": 1291, "label": 1}
{"input": "@Override \n        public void setCdmaSubscriptionSourceResponse(RadioResponseInfo info) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(68, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "setCdmaSubscriptionSourceResponse", "class_name": "Proxy", "index": 1292, "label": 1}
{"input": "public boolean match(MemberRef node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 1293, "label": 1}
{"input": "@Override\n    public Drawable makeNormalDrawable() {\n        Drawable drawable = getContext().getResources().getDrawable(normalResId);\n        if (size>0){\n            drawable = zoomDrawable(drawable,size,size);\n        }\n        return drawable;\n    }", "timestamp": "2021-06-20T10:26:39.918483Z", "repo_name": "ly0901/LyApplication", "path": "/app/src/main/java/com/example/administrator/myapplication/rollviewpager/hintview/IconHintView.java", "source": "the-stack-v2", "method_name": "makeNormalDrawable", "class_name": "IconHintView", "index": 1294, "label": 1}
{"input": "private String createFilename() {\n        fileIndex++;\n\n        String newFilename = \"\";\n        if (EXTERNAL_STORAGE_PATH == null || EXTERNAL_STORAGE_PATH.equals(\"\")) {\n            \n            newFilename = RECORDED_FILE + fileIndex + \".mp4\";\n        } else {\n            newFilename = EXTERNAL_STORAGE_PATH + \"/\" + RECORDED_FILE + fileIndex + \".mp4\";\n        }\n\n        return newFilename;\n    }", "timestamp": "2020-04-09T20:35:13.666565Z", "repo_name": "SODA1127/if2moldistudy", "path": "/DoItAndroid/Part2/chapter10/SampleVideoRecorder/app/src/main/java/org/techtown/media/video/recorder/MainActivity.java", "source": "the-stack-v2", "method_name": "createFilename", "class_name": "MainActivity", "index": 1295, "label": 1}
{"input": "void flushAllPlugin(final List<PluginData> pluginDataList) {\n        if (CollectionUtils.isEmpty(pluginDataList)) {\n            LOGGER.info(\"clear all plugin cache, old cache:{}\", PLUGIN_MAP);\n            PLUGIN_MAP.clear();\n        } else {\n            PLUGIN_MAP.clear();\n            configPlugin(pluginDataList);\n            pluginDataList.forEach(pluginData -> PLUGIN_MAP.put(pluginData.getName(), pluginData));\n        }\n    }", "timestamp": "2020-09-20T02:12:13.480092Z", "repo_name": "zhouyanggs/soul", "path": "/soul-web/src/main/java/org/dromara/soul/web/cache/HttpCacheHandler.java", "source": "the-stack-v2", "method_name": "flushAllPlugin", "class_name": "HttpCacheHandler", "index": 1296, "label": 1}
{"input": "public static void main(String[] args) throws IOException {\n        if (args.length == 0) args = new String[]{\"c://1.txt\"};\n        BufferedReader reader = new BufferedReader(new FileReader(args[0]));\n        ArrayList<Integer> num = new ArrayList<Integer>();\n        while (reader.ready()){\n            num.add(Integer.parseInt(reader.readLine()));\n        }\n        ArrayList<Integer> count = new ArrayList<Integer>();\n        for (int i = 0; i < num.size(); i++) {\n            int tempc = 0;\n            for (int j = 0; j < num.size(); j++) {\n                if (i != j) tempc += Math.abs(num.get(i) - num.get(j));\n            }\n            count.add(tempc);\n        }\n        Collections.sort(count);\n        System.out.println(count.get(0));\n    }", "timestamp": "2023-07-03T14:07:57.455986Z", "repo_name": "Scalpel87/PerformanceLab", "path": "/task4/src/Task4.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Task4", "index": 1297, "label": 1}
{"input": "public ScreenOrChangeListener getScreenOrChangeListener() {\n        return mScreenOrChangeListener;\n    }", "timestamp": "2020-12-30T17:10:54.683360Z", "repo_name": "jxzhung/AndroidCodes", "path": "/AndroidDemos/app/src/main/java/com/jzhung/demos/utils/ScreenSwitchUtils.java", "source": "the-stack-v2", "method_name": "getScreenOrChangeListener", "class_name": "ScreenSwitchUtils", "index": 1298, "label": 1}
{"input": "@Override\n\t\n\tpublic User getUserbyUid(int uid) {\n\t\ttry {\n\t\t\treturn dao.getgetUserbyUid(uid);\n\t\t} catch (Exception e) {\n\t\t\t\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn null;\n\t}", "timestamp": "2021-08-20T02:43:02.675295Z", "repo_name": "swaggerduo/yongluocun1", "path": "/src/com/service/impl/UsersServiceImpl.java", "source": "the-stack-v2", "method_name": "getUserbyUid", "class_name": "UsersServiceImpl", "index": 1299, "label": 1}
{"input": "@Override\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n\n        \n        db.execSQL(\"DROP TABLE IF EXISTS \" + CategoriesTable.TABLE_NAME);\n        db.execSQL(\"DROP TABLE IF EXISTS \" + QuestionTable.TABLE_NAME);\n        onCreate(db);\n    }", "timestamp": "2023-01-18T20:19:28.045856Z", "repo_name": "DongPhamBK/DaiCuongBachKhoa2", "path": "/DaiCuongFirstApp - v1.1/app/src/main/java/com/project/daicuongbachkhoa/ui/vatly1/VatLy1QuizDbHelper.java", "source": "the-stack-v2", "method_name": "onUpgrade", "class_name": "VatLy1QuizDbHelper", "index": 1300, "label": 1}
{"input": "public void println(String msg_)\n\t{\n\t\t\n\t\t\n\t\tdrcl.Debug.debug(\"SIMDEBUG | \" + time \n\t\t\t\t+ (msg_ == null? \"\": \"| \" + msg_) + \"\\n\");\n\t}", "timestamp": "2020-11-28T19:02:50.344186Z", "repo_name": "kaist-dmlab/MTA", "path": "/TaskAllocationSim/src/drcl/sim/event/SESimulatorOld.java", "source": "the-stack-v2", "method_name": "println", "class_name": "SESimulatorOld", "index": 1301, "label": 1}
{"input": "public static CurrentUser eq(OptionalCurrentUser optionalCurrentUser) {\n        return argThat(new OptionalCurrentUserMatcher(optionalCurrentUser));\n    }", "timestamp": "2021-06-20T09:20:57.385521Z", "repo_name": "tmhung88/mealtracker", "path": "/webapi/src/test/java/com/mealtracker/utils/matchers/CommonMatchers.java", "source": "the-stack-v2", "method_name": "eq", "class_name": "CommonMatchers", "index": 1302, "label": 1}
{"input": "public Criteria andSystemSourceLessThan(String value) {\n            addCriterion(\"system_source <\", value, \"systemSource\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andSystemSourceLessThan", "class_name": "GeneratedCriteria", "index": 1303, "label": 1}
{"input": "public final TagHandler getTagHandler(String path) {\r\n        return (TagHandler) tagHandlers.get(path);\r\n    }", "timestamp": "2020-06-04T17:15:02.140847Z", "repo_name": "svn2github/s2container", "path": "/tags/2011-12-23/seasar2-2.4.45/seasar2/s2-framework/src/main/java/org/seasar/framework/xml/TagHandlerRule.java", "source": "the-stack-v2", "method_name": "getTagHandler", "class_name": "TagHandlerRule", "index": 1304, "label": 1}
{"input": "@SubscribeEvent\n    public void dropDiamonds(LivingDeathEvent event) { \n        if (!(event.entity instanceof EntityPig))\n            return;\n\n        Random random = new Random();\n        if(!event.entity.worldObj.isRemote) \n            event.entity.dropItem(Items.diamond, random.nextInt(3));\n    }", "timestamp": "2021-01-25T05:16:06.717369Z", "repo_name": "kumakichi/forge-1.8-mods", "path": "/PigDropDiamond/src/PigDrop.java", "source": "the-stack-v2", "method_name": "dropDiamonds", "class_name": "PigDrop", "index": 1305, "label": 1}
{"input": "private static Long unixLikeProcessId(Object process) {\n    Class<?> clazz = process.getClass();\n    try {\n      if (clazz.getName().equals(\"java.lang.UNIXProcess\")) {\n        Field field = clazz.getDeclaredField(\"pid\");\n        field.setAccessible(true);\n        return (long) field.getInt(process);\n      }\n    } catch (Exception e) {\n      LOG.warn(e, \"Cannot get process id!\");\n    }\n    return null;\n  }", "timestamp": "2021-01-11T00:28:22.198175Z", "repo_name": "aarongable/buck", "path": "/src/com/facebook/buck/util/ProcessHelper.java", "source": "the-stack-v2", "method_name": "unixLikeProcessId", "class_name": "ProcessHelper", "index": 1306, "label": 1}
{"input": "public void setSessionLanguage(final LanguageDTO sessionLanguage)\n\t{\n\t\tthis.modifiedPropsSet.add(\"sessionLanguage\");\n\t\tthis.sessionLanguage = sessionLanguage;\n\t}", "timestamp": "2022-11-28T12:15:32.049256Z", "repo_name": "BaggaShivanshu2/hybris-bookstore-tutorial", "path": "/hybris/bin/ext-platform-optional/platformwebservices/custom/src/de/hybris/platform/cronjob/customdto/CronJobDTO.java", "source": "the-stack-v2", "method_name": "setSessionLanguage", "class_name": "CronJobDTO", "index": 1307, "label": 1}
{"input": "public static Bitmap getScaledBitmap(Bitmap b)\n    {\n        int reqWidth = b.getWidth()/2;\n        int reqHeight = b.getHeight()/2;\n        Matrix m = new Matrix();\n        m.setRectToRect(new RectF(\n                0, 0, b.getWidth(), b.getHeight()), new RectF(0, 0, reqWidth, reqHeight), Matrix.ScaleToFit.CENTER);\n        Bitmap reduced_bitmap = Bitmap.createBitmap(b, 0, 0, b.getWidth(), b.getHeight(), m, true);\n        if(byteSizeOf(reduced_bitmap) > MIN_SIZE) {\n            return getScaledBitmap(reduced_bitmap);\n        } else {\n            return reduced_bitmap;\n        }\n    }", "timestamp": "2021-09-16T22:47:28.856964Z", "repo_name": "agnunga/noreader_starter", "path": "/app/src/main/java/com/ag/noreader/MainActivity.java", "source": "the-stack-v2", "method_name": "getScaledBitmap", "class_name": "MainActivity", "index": 1308, "label": 1}
{"input": "public void testBug201064d_CamelCase() throws CoreException {\n\tTypeNameMatchCollector collector = new TypeNameMatchCollector();\n\tsearchAllTypeNames(\"CC\", SearchPattern.R_CAMELCASE_MATCH, collector);\n\tassertSearchResults(\n\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CamelCaseEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CamelCasexxEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CatCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CatCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CxxCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CxxxxCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",\n\t\tcollector\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug201064d_CamelCase", "class_name": "JavaSearchBugsTests", "index": 1309, "label": 1}
{"input": "public static WritableWorkbook createWorkbook(java.io.File file,\n                                                Workbook in,\n                                                WorkbookSettings ws)\n    throws IOException\n  {\n    FileOutputStream fos = new FileOutputStream(file);\n    WritableWorkbook w = new WritableWorkbookImpl(fos, in, true, ws);\n    return w;\n  }", "timestamp": "2020-12-27T09:34:47.148817Z", "repo_name": "bloomer024/Mobile-Development", "path": "/excelClassExceptionDebug/src/jxl/Workbook.java", "source": "the-stack-v2", "method_name": "createWorkbook", "class_name": "Workbook", "index": 1310, "label": 1}
{"input": "public boolean areChildRelationsDirty()\n    {\n        \n        \n        \n        Iterator<EJEditableBlockController> detailBlocks = getDetailRelationControllers().values().iterator();\n        while (detailBlocks.hasNext())\n        {\n            EJEditableBlockController detailBlock = detailBlocks.next();\n\n            if (detailBlock.isBlockDirty())\n            {\n                return true;\n            }\n            if (detailBlock.areChildRelationsDirty())\n            {\n                return true;\n            }\n        }\n        return false;\n    }", "timestamp": "2023-02-18T11:13:58.949927Z", "repo_name": "entirej/core", "path": "/entirej-core/src/org/entirej/framework/core/data/controllers/EJEditableBlockController.java", "source": "the-stack-v2", "method_name": "areChildRelationsDirty", "class_name": "EJEditableBlockController", "index": 1311, "label": 1}
{"input": "private void CUBOActionPerformed(java.awt.event.ActionEvent evt) {\n        double N1, R;\n        N1= Double.parseDouble(NUM1.getText());\n        R= N1*N1*N1;RESULTADO.setText(String.valueOf(R));\n    }", "timestamp": "2023-06-22T16:51:24.691992Z", "repo_name": "Guizal/Java", "path": "/src/ExemploCalculadora.java", "source": "the-stack-v2", "method_name": "CUBOActionPerformed", "class_name": "ExemploCalculadora", "index": 1312, "label": 1}
{"input": "public List<BlockStatementContext> blockStatement() {\n\t\t\treturn getRuleContexts(BlockStatementContext.class);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "blockStatement", "class_name": "BlockContext", "index": 1313, "label": 1}
{"input": "public Criteria andPkpsndocGreaterThan(String value) {\r\n            addCriterion(\"PKPSNDOC >\", value, \"pkpsndoc\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andPkpsndocGreaterThan", "class_name": "GeneratedCriteria", "index": 1314, "label": 1}
{"input": "@Override\n\t\n\tpublic List<Favorite> getFavoritePostByuid(int uid) {\n\t\ttry {\n\t\t\treturn dao.getFavoritePostByuid(uid);\n\t\t} catch (Exception e) {\n\t\t\t\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn null;\n\t}", "timestamp": "2021-08-20T02:43:02.675295Z", "repo_name": "swaggerduo/yongluocun1", "path": "/src/com/service/impl/UsersServiceImpl.java", "source": "the-stack-v2", "method_name": "getFavoritePostByuid", "class_name": "UsersServiceImpl", "index": 1315, "label": 1}
{"input": "public static Logger getLogger(Class clas){\n\t\tif (root) {\n\t\t\treturn Logger.getLogger(clas);\n\t\t}\n\t\tPropertyConfigurator.configure(com.facebook.cucumber_project.framework.util.ResourceHelper.getResourcePath(\"/src/main/resources/configfile/log4j.properties\"));\n\t\troot = true;\n\t\treturn Logger.getLogger(clas);\n\t}", "timestamp": "2021-01-23T17:56:05.809608Z", "repo_name": "ChoudhuryIqbal/CucumberFrameWork", "path": "/src/main/java/com/facebook/cucumber_project/framework/helper/Logger/LoggerHelper.java", "source": "the-stack-v2", "method_name": "getLogger", "class_name": "LoggerHelper", "index": 1316, "label": 1}
{"input": "public FormalParameterDeclsContext formalParameterDecls() {\n\t\t\treturn getRuleContext(FormalParameterDeclsContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "formalParameterDecls", "class_name": "FormalParameterDeclsRestContext", "index": 1317, "label": 1}
{"input": "@Override\n    public boolean getAllowCasualMultipartParsing() {\n        return this.allowCasualMultipartParsing;\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "getAllowCasualMultipartParsing", "class_name": "StandardContext", "index": 1318, "label": 1}
{"input": "@SubscribeEvent\n\t\tpublic void serverLoad(FMLServerStartingEvent event) {\n\t\t\tthis.parent.elements.getElements().forEach(element -> element.serverLoad(event));\n\t\t}", "timestamp": "2023-06-01T01:05:39.099062Z", "repo_name": "shadowforce78/ScriptorMod", "path": "/src/main/java/net/mcreator/scriptor/ScriptorMod.java", "source": "the-stack-v2", "method_name": "serverLoad", "class_name": "ScriptorModFMLBusEvents", "index": 1319, "label": 1}
{"input": "public Criteria andCuseridBetween(String value1, String value2) {\r\n            addCriterion(\"CUSERID between\", value1, value2, \"cuserid\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andCuseridBetween", "class_name": "GeneratedCriteria", "index": 1320, "label": 1}
{"input": "@Override\r\n\t\tpublic INamedContainerProvider getContainer(BlockState state, World worldIn, BlockPos pos) {\r\n\t\t\tTileEntity tileEntity = worldIn.getTileEntity(pos);\r\n\t\t\treturn tileEntity instanceof INamedContainerProvider ? (INamedContainerProvider) tileEntity : null;\r\n\t\t}", "timestamp": "2023-08-24T17:39:59.738030Z", "repo_name": "ChrisCraddock/Crates-and-Containers", "path": "/src/main/java/net/mcreator/blocktesting/block/SnowyRedContainer2Block.java", "source": "the-stack-v2", "method_name": "getContainer", "class_name": "CustomBlock", "index": 1321, "label": 1}
{"input": "static void rotateBackCounterClockwise(int[][] cube) {\n        int temp36 = cube[3][6];\n        int temp37 = cube[3][7];\n        cube[3][6] = cube[3][8];\n        cube[3][7] = cube[4][8];\n        cube[3][8] = cube[5][8];\n        cube[4][8] = cube[5][7];\n        cube[5][8] = cube[5][6];\n        cube[5][7] = cube[4][6];\n        cube[5][6] = temp36;\n        cube[4][6] = temp37;\n\n        int temp35 = cube[3][5];\n        int temp45 = cube[4][5];\n        int temp55 = cube[5][5];\n        cube[3][5] = cube[2][8];\n        cube[4][5] = cube[2][7];\n        cube[5][5] = cube[2][6];\n        cube[2][8] = cube[5][9];\n        cube[2][7] = cube[4][9];\n        cube[2][6] = cube[3][9];\n        cube[5][9] = cube[6][6];\n        cube[4][9] = cube[6][7];\n        cube[3][9] = cube[6][8];\n        cube[6][6] = temp35;\n        cube[6][7] = temp45;\n        cube[6][8] = temp55;\n\n    }", "timestamp": "2020-03-29T19:36:23.556615Z", "repo_name": "ronaldescobarj/a-algorithm", "path": "/src/com/company/Main.java", "source": "the-stack-v2", "method_name": "rotateBackCounterClockwise", "class_name": "Main", "index": 1322, "label": 1}
{"input": "public int[][] merge(int[][] intervals) {\n        \n        Arrays.sort(intervals, Comparator.comparingInt(interval -> interval[0]));\n\n        \n        List<int[]> list = new ArrayList<>();\n        list.add(intervals[0]);\n        for (int i = 1; i < intervals.length; i++) {\n            int[] interval = intervals[i];\n            int lastEnd = list.get(list.size() - 1)[1];\n            int currStart = interval[0];\n            int currEnd = interval[1];\n            if (currStart <= lastEnd) {\n                list.get(list.size() - 1)[1] = Math.max(lastEnd, currEnd);\n            } else {\n                list.add(interval);\n            }\n        }\n\n        \n        int[][] ans = new int[list.size()][];\n        for (int i = 0; i < ans.length; i++) {\n            ans[i] = list.get(i);\n        }\n        return ans;\n    }", "timestamp": "2023-06-24T22:07:31.293571Z", "repo_name": "chenxi-null/leetcode", "path": "/src/main/leetcode/editor/cn/[56]Merge Intervals.java", "source": "the-stack-v2", "method_name": "merge", "class_name": "Solution", "index": 1323, "label": 1}
{"input": "public void loadProperties() {\n         \n         properties = new Properties();\n         try {\n             properties.load(new FileInputStream(pathToProperties));\n         } catch (IOException e) {\n             e.printStackTrace();\n         }\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/15/15_e60c688fb9ae3274bb1fd14d64a0aff53ed9743f/WikiParser/15_e60c688fb9ae3274bb1fd14d64a0aff53ed9743f_WikiParser_s.java", "source": "the-stack-v2", "method_name": "loadProperties", "class_name": "WikiParser", "index": 1324, "label": 1}
{"input": "private static boolean isAnonymousOrLocalOrSyntheticClass(ClassNode node) {\n    if ((node.access & Opcodes.ACC_SYNTHETIC) == Opcodes.ACC_SYNTHETIC) {\n      return true;\n    }\n\n    InnerClassNode innerClass = getInnerClassMetadata(node);\n    while (innerClass != null) {\n      if (innerClass.outerName == null) {\n        return true;\n      }\n      innerClass = getInnerClassMetadata(node, innerClass.outerName);\n    }\n\n    return false;\n  }", "timestamp": "2020-12-02T11:04:47.801319Z", "repo_name": "johnblaze321/buck", "path": "/src/com/facebook/buck/jvm/java/abi/StubJarClassEntry.java", "source": "the-stack-v2", "method_name": "isAnonymousOrLocalOrSyntheticClass", "class_name": "StubJarClassEntry", "index": 1325, "label": 1}
{"input": "@Override\n\tpublic void adjustmentValueChanged(AdjustmentEvent e) {\n\t\tentidad.setPanFine(scrlX.getValue());\n\t\tentidad.setTiltFine(scrlY.getValue());\n\t\t\n\t\tentidad.saltarAFine(scrlX.getValue(), scrlY.getValue());\n\t\tpnlCanvas.repaint();\n\t}", "timestamp": "2021-07-07T15:13:46.386311Z", "repo_name": "clillo/iluminacion", "path": "/src/com/clillo/dmx/ui/jpanels/opcionesMenu/PanelMantienePuntosMovingHeads.java", "source": "the-stack-v2", "method_name": "adjustmentValueChanged", "class_name": "PanelMantienePuntosMovingHeads", "index": 1326, "label": 1}
{"input": "@Override\r\n    public void invalidate() {\r\n        super.invalidate();\r\n\r\n        smoothed = false;\r\n        stippled = false;\r\n        smoothHint = -1;\r\n        width = -1;\r\n        stippleFactor = -1;\r\n        stipplePattern = -1;\r\n    }", "timestamp": "2021-02-11T15:25:47.199953Z", "repo_name": "lihak/fairytale-soulfire-svn-to-git", "path": "/trunk/src/com/jme/scene/state/lwjgl/records/LineRecord.java", "source": "the-stack-v2", "method_name": "invalidate", "class_name": "LineRecord", "index": 1327, "label": 1}
{"input": "@Test\n    public void size_basic(){\n\n        when(mock.size()).thenReturn(5);\n        assertEquals(5,mock.size());\n    }", "timestamp": "2023-03-31T16:28:18.538325Z", "repo_name": "JulianCabreraS/junit-spring-boot", "path": "/src/test/java/com/in28minutes/unittesting/unittesting/business/ListMockTest.java", "source": "the-stack-v2", "method_name": "size_basic", "class_name": "ListMockTest", "index": 1328, "label": 1}
{"input": "protected Object executeTimeConsumingAction()\n         {\n         \n         final int motorIndex = getTextFieldValueAsInt(buttonIndex);\n\n         \n         getQwerkController().getMotorService().setMotorVelocity(20000, motorIndex);\n\n         \n         try\n            {\n            Thread.sleep(5000);\n            }\n         catch (InterruptedException e1)\n            {\n            LOG.error(\"InterruptedException while sleeping\", e1);\n            }\n\n         \n         getQwerkController().getMotorService().stopMotors(motorIndex);\n\n         return null;\n         }", "timestamp": "2021-01-19T11:51:31.891500Z", "repo_name": "CMU-CREATE-Lab/terk-legacy", "path": "/TeRKClient/code/java/prototypingplayground/src/PrototypingPlayground.java", "source": "the-stack-v2", "method_name": "executeTimeConsumingAction", "class_name": "MoveMotorAction", "index": 1329, "label": 1}
{"input": "private BiddingData generateBiddingData() {\n\n\t\tBiddingData biddingData = new BiddingData();\n\n\t\tbiddingData.set_pNodeName(_pNodeName);\n\t\tbiddingData.set_allocationPolicy(_allocationPolicy);\n\n\t\tbiddingData.set_allocationVectorMap(_allocationVectorMap);\n\n\t\tbiddingData.set_bidVectorMap(_bidVectorMap);\n\n\t\tbiddingData.set_biddingTimeMap(_biddingTimeMap);\n\n\t\tbiddingData.set_iterationMap(_iterationMap);\n\t\tbiddingData.set_mMap(_mMap);\n\t\tbiddingData.set_mySP(_mySP);\n\t\tbiddingData.set_nodeMappingMap(_nodeMappingMap);\n\t\tbiddingData.set_nodeStress(_nodeStress);\n\t\tbiddingData.set_nodeStressBeforeThisSliceRequest(_nodeStressBeforeThisSliceRequest);\n\t\tbiddingData.set_NodeUtil(_NodeUtil);\n\t\tbiddingData.set_stress(_stress);\n\t\tbiddingData.set_targetLinkCapacity(_targetLinkCapacity);\n\t\tbiddingData.set_targetNodeCapacity(_targetNodeCapacity);\n\t\tbiddingData.set_targetStress(_targetStress);\n\n\t\treturn biddingData;\n\t}", "timestamp": "2020-03-24T18:57:41.155720Z", "repo_name": "gabrielecastellano/vinea", "path": "/src/vinea/pnode/Pnode.java", "source": "the-stack-v2", "method_name": "generateBiddingData", "class_name": "Pnode", "index": 1330, "label": 1}
{"input": "@Override\n\tpublic void receivePrepare(String fromUID, ProposalID proposalID) {\n\t\tacceptor.receivePrepare(fromUID, proposalID);\n\t}", "timestamp": "2021-01-17T22:48:04.114401Z", "repo_name": "kjorg50/paxos", "path": "/src/main/java/cocagne/paxos/practical/PracticalNode.java", "source": "the-stack-v2", "method_name": "receivePrepare", "class_name": "PracticalNode", "index": 1331, "label": 1}
{"input": "@Override\n    public void removeNotificationListener(NotificationListener listener, \n            NotificationFilter filter, Object object) throws ListenerNotFoundException {\n        broadcaster.removeNotificationListener(listener,filter,object);\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "removeNotificationListener", "class_name": "StandardContext", "index": 1332, "label": 1}
{"input": "@Override\n        protected void startBroker(BrokerOptions options)\n        {\n            _options = options;\n        }", "timestamp": "2022-06-16T21:32:19.633099Z", "repo_name": "scholzj/qpid-java", "path": "/broker/src/test/java/org/apache/qpid/server/MainTest.java", "source": "the-stack-v2", "method_name": "startBroker", "class_name": "TestMain", "index": 1333, "label": 1}
{"input": "protected void addCriterion(String condition, Object value, String property) {\r\n            if (value == null) {\r\n                throw new RuntimeException(\"Value for \" + property + \" cannot be null\");\r\n            }\r\n            criteria.add(new Criterion(condition, value));\r\n        }", "timestamp": "2022-12-10T20:39:24.451742Z", "repo_name": "TangHui-ops/myProject", "path": "/后端/weixingxiaocx/src/main/java/cn/bdqn/mbg/model/UserStateTypeExample.java", "source": "the-stack-v2", "method_name": "addCriterion", "class_name": "GeneratedCriteria", "index": 1334, "label": 1}
{"input": "public boolean match(SingleVariableDeclaration node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 1335, "label": 1}
{"input": "public void handleMessage(Message msg) {\n\t\t\tmServiceConnector.getService().registerMUCListener(\n\t\t\t\t\tMapActivity.this, onNewMUCMessageHandler);\n\n\t\t\tsetUpMapIfNeeded();\n\t\t\tupdateMarkerList();\n\t\t}", "timestamp": "2021-01-10T20:04:03.310715Z", "repo_name": "mobilis/FriendFinder", "path": "/FriendFinder_Android/src/de/tudresden/inf/rn/mobilis/friendfinder/MapActivity.java", "source": "the-stack-v2", "method_name": "handleMessage", "class_name": "MapActivity", "index": 1336, "label": 1}
{"input": "public Dictionary getRootDictionary(Feature rootFeature)\r\n\t{\r\n\t\tDictionary rootDictionary = (Dictionary)dictionary.get(rootFeature);\r\n\t\tif(rootDictionary == null)\r\n\t\t{\r\n\t\t\trootDictionary = new Hashtable();\r\n\t\t\tdictionary.put(rootFeature, rootDictionary);\r\n\t\t}\r\n\t\treturn rootDictionary;\r\n\t}", "timestamp": "2020-04-17T17:30:27.410359Z", "repo_name": "MSPL4SOA/MSPL4SOA-tool", "path": "/SPGenerator/lib/ca.uwaterloo.gp_.fmp_0.7.0/src/ca/uwaterloo/gp/fmp/system/NodeIdDictionary.java", "source": "the-stack-v2", "method_name": "getRootDictionary", "class_name": "NodeIdDictionary", "index": 1337, "label": 1}
{"input": "public int delete(SearchCriteria criteria)\n\t\tthrows BaseException {\n\n\t\tConnection connection = null;\n\t\tint result = 0;\n\t\ttry {\n\t\t\tconnection = getDbManager().getConnection();\n\t\t\tresult = delete(criteria, connection);\n\t\t}\n\t\tfinally {\n\t\t\tthis.getDbManager().returnConnection(connection);\n\t\t}\n\t\treturn result;\n\t}", "timestamp": "2022-12-21T15:46:19.801950Z", "repo_name": "zafrul-ust/tcmISDev", "path": "/src/main/java/com/tcmis/internal/supply/factory/ChangeDlaShipToViewBeanFactory.java", "source": "the-stack-v2", "method_name": "delete", "class_name": "ChangeDlaShipToViewBeanFactory", "index": 1338, "label": 1}
{"input": "public void collect(Cell cell) {\n      valLen.update(cell.getValueLength());\n      if (prevCell != null &&\n          CellComparator.COMPARATOR.compareRows(prevCell, cell) != 0) {\n        \n        collectRow();\n      }\n      curRowBytes += KeyValueUtil.length(cell);\n      curRowKeyLength = KeyValueUtil.keyLength(cell);\n      curRowCols++;\n      prevCell = cell;\n    }", "timestamp": "2021-07-01T04:05:15.247476Z", "repo_name": "canglang1973/hbase", "path": "/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java", "source": "the-stack-v2", "method_name": "collect", "class_name": "KeyValueStatsCollector", "index": 1339, "label": 1}
{"input": "private synchronized void ensureDataDictIndexAccess() {\n        ensureMetadataIndexAccess();\n        if (customDataDictIndexAccess == null) {\n            LOGGER.info(String.format(INITIALIZE_ACCESS, CUSTOM, DICTIONARY_SUBFOLDER_NAME, tenantID));\n            String dataDictIndexPath = getIndexFolderPath(true, DICTIONARY_SUBFOLDER_NAME);\n            File folder = new File(dataDictIndexPath);\n            if (!folder.exists()) {\n                folder.mkdirs();\n            }\n            try {\n                dataDictDirectory = FSDirectory.open(folder);\n                customDataDictIndexAccess = new CustomDocumentIndexAccess(dataDictDirectory);\n            } catch (IOException e) {\n                LOGGER.error(e.getMessage(), e);\n            }\n        }\n    }", "timestamp": "2021-05-01T16:06:31.746782Z", "repo_name": "MarkChappell/data-quality", "path": "/dataquality-semantic/src/main/java/org/talend/dataquality/semantic/api/CustomDictionaryHolder.java", "source": "the-stack-v2", "method_name": "ensureDataDictIndexAccess", "class_name": "CustomDictionaryHolder", "index": 1340, "label": 1}
{"input": "public void testBug137087g_CamelCase() throws CoreException {\n\tint matchRule = SearchPattern.R_CAMELCASE_MATCH;\n\tString pattern = \"clonenotsupportedex\";\n\tsearch(pattern, TYPE, DECLARATIONS, matchRule);\n\tassertSearchResults(\n\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug137087g_CamelCase", "class_name": "JavaSearchBugsTests", "index": 1341, "label": 1}
{"input": "public Criteria andMsgIdGreaterThan(String value) {\r\n            addCriterion(\"msg_id >\", value, \"msgId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andMsgIdGreaterThan", "class_name": "GeneratedCriteria", "index": 1342, "label": 1}
{"input": "@GetMapping(\"/querySupplier\")\n    @ApiOperation(value = \"searchByFilter\", notes = \"Получение списка счетов  по заданным параметрам\")\n    public ResponseEntity<List<SupplierAccountDto>> getAllFilter(\n            @And({\n                    @Spec(path = \"id\", params = \"id\", spec = Equal.class),\n                    @Spec(path = \"date\", params = \"date\", spec = Equal.class),\n                    @Spec(path = \"contractor.name\", params = \"contractorDto\", spec = LikeIgnoreCase.class),\n                    @Spec(path = \"company.name\", params = \"searchByFilter\"0, spec = LikeIgnoreCase.class),\n                    @Spec(path = \"searchByFilter\"1, params = \"searchByFilter\"2, spec = LikeIgnoreCase.class),\n            })Specification<SupplierAccount> supplier) {\n        return ResponseEntity.ok(invoices.search(supplier));\n    }", "timestamp": "2023-07-17T11:46:43.612093Z", "repo_name": "ArtemZaikovsky/Back", "path": "/src/main/java/com/trade_accounting/controllers/rest/SupplierAccountRestController.java", "source": "the-stack-v2", "method_name": "getAllFilter", "class_name": "SupplierAccountRestController", "index": 1343, "label": 1}
{"input": "public void update(String title, String content) {\n        this.title = title;\n        this.content = content;\n    }", "timestamp": "2023-09-01T15:21:33.293421Z", "repo_name": "jbjb4467/springboot-study", "path": "/src/main/java/site/jbjb/webservice/springboot/domain/posts/Posts.java", "source": "the-stack-v2", "method_name": "update", "class_name": "Posts", "index": 1344, "label": 1}
{"input": "@Test\n    public void testDelete_EmptyEntry_returnEmptyMessage() {\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\n        System.setOut(new PrintStream(outContent));\n        TaskList taskList = new TaskList();\n        DeleteCommand deleteCommand = new DeleteCommand(\"delete\");\n        String result = deleteCommand.executeCommand(taskList, null);\n        assertEquals(result, \"☹ OOPS!!! You cannot delete an empty entry.\\n\");\n    }", "timestamp": "2020-07-15T08:03:50.661683Z", "repo_name": "Cary-Xx/duke", "path": "/src/test/java/command/DeleteCommandTest.java", "source": "the-stack-v2", "method_name": "testDelete_EmptyEntry_returnEmptyMessage", "class_name": "DeleteCommandTest", "index": 1345, "label": 1}
{"input": "@Override\n    public void refreshAfterChange(EJDataRecord record)\n    {\n        EJManagedFrameworkConnection connection = _block.getFrameworkManager().getConnection();\n        try\n        {\n            if (_blockRendererController != null)\n            {\n                _blockRendererController.refreshAfterChange(record);\n            }\n            if (getMirrorBlockSynchronizer() != null)\n            {\n                getMirrorBlockSynchronizer().refreshAfterChange(this, record);\n            }\n        }\n        finally\n        {\n            connection.close();\n        }\n\n    }", "timestamp": "2023-02-18T11:13:58.949927Z", "repo_name": "entirej/core", "path": "/entirej-core/src/org/entirej/framework/core/data/controllers/EJEditableBlockController.java", "source": "the-stack-v2", "method_name": "refreshAfterChange", "class_name": "EJEditableBlockController", "index": 1346, "label": 1}
{"input": "public void finish() throws IOException {\n      final ImmutableSortedMap<String, HashCode> entriesMap = entriesMapBuilder.build();\n      if (entriesMap.isEmpty()) {\n        return;\n      }\n\n      putEntry(jar, JarFile.MANIFEST_NAME);\n      writeManifest(entriesMap, jar);\n      jar.closeEntry();\n    }", "timestamp": "2021-01-18T08:33:02.435393Z", "repo_name": "bocon13/buck", "path": "/src/com/facebook/buck/jvm/java/abi/StubJar.java", "source": "the-stack-v2", "method_name": "finish", "class_name": "CreateStubAction", "index": 1347, "label": 1}
{"input": "public void visitReferenceExpression(PsiReferenceExpression psiReferenceExpression) {\n        super.visitReferenceExpression(psiReferenceExpression);\n        PsiElement referenced = psiReferenceExpression.resolve();\n        addReferencedElementType(referenced);\n    }", "timestamp": "2020-12-24T12:00:54.891258Z", "repo_name": "keithkml/nully", "path": "/code/idea-plugin/src/net/kano/nully/plugin/psiToJimple/TypeListBuilder.java", "source": "the-stack-v2", "method_name": "visitReferenceExpression", "class_name": "TypeListBuilder", "index": 1348, "label": 1}
{"input": "public Criteria andSituationNotBetween(String value1, String value2) {\r\n            addCriterion(\"situation not between\", value1, value2, \"situation\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andSituationNotBetween", "class_name": "GeneratedCriteria", "index": 1349, "label": 1}
{"input": "public K max() throws EmptyTreeException {\n\t\ttry {\n\t\t\treturn right.max();\n\t\t} catch (EmptyTreeException k) {\n\t\t\treturn key;\n\t\t}\n\t\t\n\t\t\n\n\t}", "timestamp": "2021-01-23T10:44:04.784406Z", "repo_name": "Wllmgong/Object_oriented", "path": "/tree/NonEmptyTree.java", "source": "the-stack-v2", "method_name": "max", "class_name": "NonEmptyTree", "index": 1350, "label": 1}
{"input": "private Boolean isExistPackage(Intent intent, Context context) {\n            return intent != null && context.getPackageManager().getLaunchIntentForPackage(intent.getPackage()) != null;\n        }", "timestamp": "2022-11-05T18:54:50.987825Z", "repo_name": "jpung0629/client_android_java", "path": "/sample/src/main/java/bootpay/co/kr/samplepayment/LocalHtmlActivity.java", "source": "the-stack-v2", "method_name": "isExistPackage", "class_name": "BWebviewClient", "index": 1351, "label": 1}
{"input": "private ReferenceBinding findSupertype(TypeReference typeReference) {\n\t\ttry {\n\t\t\ttypeReference.aboutToResolve(this); \n\t\t\tcompilationUnitScope().recordQualifiedReference(typeReference.getTypeName());\n\t\t\tthis.superTypeReference = typeReference;\n\t\t\tReferenceBinding superType = (ReferenceBinding) typeReference.resolveSuperType(this);\n\t\t\tthis.superTypeReference = null;\n\t\t\treturn superType;\n\t\t} catch (AbortCompilation e) {\n\t\t\te.updateContext(typeReference, referenceCompilationUnit().compilationResult);\n\t\t\tthrow e;\n\t\t}\t\t\t\n\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/16417/src_0.java", "source": "the-stack-v2", "method_name": "findSupertype", "class_name": "ClassScope", "index": 1352, "label": 1}
{"input": "public void setTrackPosition(long trackPosition) {\n        this.trackPosition = trackPosition;\n    }", "timestamp": "2021-06-12T15:11:49.721193Z", "repo_name": "DenysKomissarov/websocketclient", "path": "/src/main/java/messages/webSocket/BaseServerPlaylistStateSMsg.java", "source": "the-stack-v2", "method_name": "setTrackPosition", "class_name": "BaseServerPlaylistStateSMsg", "index": 1353, "label": 1}
{"input": "public Criteria andUsercodeIsNull() {\r\n            addCriterion(\"USERCODE is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andUsercodeIsNull", "class_name": "GeneratedCriteria", "index": 1354, "label": 1}
{"input": "private void filterLocation() {\n        for (int i = 0; i < this.arms.size(); i++) {\n            if (PerturbationEngine.loggers.get(\"filterLocation\").getCalls(this.arms.get(i)) == 0)\n                this.filter.add(i);\n        }\n        PerturbationEngine.loggers.get(\"filterLocation\").reset();\n        this.policyLocation.filter(filter);\n        this.arms.forEach(PerturbationEngine.loggers.get(\"filterLocation\")::logOn);\n    }", "timestamp": "2021-01-15T22:04:18.376145Z", "repo_name": "cincheo/jPerturb-experiments", "path": "/src/main/java/experiment/explorer/bandit/BanditExplorer.java", "source": "the-stack-v2", "method_name": "filterLocation", "class_name": "BanditExplorer", "index": 1355, "label": 1}
{"input": "public EnumBodyDeclarationsContext enumBodyDeclarations() {\n\t\t\treturn getRuleContext(EnumBodyDeclarationsContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "enumBodyDeclarations", "class_name": "EnumBodyContext", "index": 1356, "label": 1}
{"input": "public void testBug109695i() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/UTF16DocumentScannerSupport.java\",\n\t\t\"public class UTF16DocumentScannerSupport {}\\n\" +\n\t\t\"class UTF1DocScannerSupport {}\\n\" +\n\t\t\"class UTF6DocScannerSupport {}\\n\" +\n\t\t\"class UTFDocScannerSupport {}\\n\"\n\t);\n\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();\n\tint validatedRule = SearchPattern.validateMatchRule(\"UTFDSS\", SearchPattern.R_CAMELCASE_MATCH);\n\tsearchAllTypeNames(\"UTFDSS\", validatedRule, requestor);\n\tassertSearchResults(\n\t\t\"UTF16DocumentScannerSupport\\n\" +\n\t\t\"UTF1DocScannerSupport\\n\" +\n\t\t\"UTF6DocScannerSupport\\n\" +\n\t\t\"public class UTF16DocumentScannerSupport {}\\n\"0,\n\t\trequestor\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug109695i", "class_name": "JavaSearchBugsTests", "index": 1357, "label": 1}
{"input": "CompletableFuture<Void> resetIndexes(SessionId sessionId) {\n    RaftProxyState sessionState = sessions.get(sessionId.id());\n    if (sessionState == null) {\n      return Futures.exceptionalFuture(new IllegalArgumentException(\"Unknown session: \" + sessionId));\n    }\n\n    CompletableFuture<Void> future = new CompletableFuture<>();\n\n    KeepAliveRequest request = KeepAliveRequest.newBuilder()\n        .withSessionIds(new long[]{sessionId.id()})\n        .withCommandSequences(new long[]{sessionState.getCommandResponse()})\n        .withEventIndexes(new long[]{sessionState.getEventIndex()})\n        .build();\n\n    connection.keepAlive(request).whenComplete((response, error) -> {\n      if (error == null) {\n        if (response.status() == RaftResponse.Status.OK) {\n          future.complete(null);\n        } else {\n          future.completeExceptionally(response.error().createException());\n        }\n      } else {\n        future.completeExceptionally(error);\n      }\n    });\n    return future;\n  }", "timestamp": "2021-01-02T08:55:42.350924Z", "repo_name": "maniacs-ops/atomix", "path": "/protocols/raft/src/main/java/io/atomix/protocols/raft/proxy/impl/RaftProxyManager.java", "source": "the-stack-v2", "method_name": "resetIndexes", "class_name": "RaftProxyManager", "index": 1358, "label": 1}
{"input": "public Criteria andVdef4IsNotNull() {\r\n            addCriterion(\"VDEF4 is not null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef4IsNotNull", "class_name": "GeneratedCriteria", "index": 1359, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByNameIsNotEqualToSomething() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        \n        defaultTransactionShouldNotBeFound(\"name.notEquals=\" + DEFAULT_NAME);\n\n        \n        defaultTransactionShouldBeFound(\"name.notEquals=\" + UPDATED_NAME);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByNameIsNotEqualToSomething", "class_name": "TransactionResourceIT", "index": 1360, "label": 1}
{"input": "public void testConstructorEx1() {\n        try {\n            new HashCodeBuilder(0, 0);\n            \n        } catch (IllegalArgumentException ex) {\n            return;\n        }\n        fail();\n    }", "timestamp": "2022-02-13T19:44:43.869060Z", "repo_name": "SpoonLabs/nopol-experiments", "path": "/dataset/cl1/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java", "source": "the-stack-v2", "method_name": "testConstructorEx1", "class_name": "HashCodeBuilderTest", "index": 1361, "label": 1}
{"input": "public void verifyOperation(String operator){\n        if(!operation.equals(\"\")){\n            char end = operation.charAt(operation.length()-1);\n            if(isOperator(end))\n                operation = operation.replace(end+\"\",operator);\n            else\n                operation  +=operator;\n            sign=operator;\n            editText.setText(operation);\n        }\n    }", "timestamp": "2021-05-31T01:02:53.417110Z", "repo_name": "phndavid/calculator", "path": "/Calculator/app/src/main/java/com/master/ndavid/calculator/MainActivity.java", "source": "the-stack-v2", "method_name": "verifyOperation", "class_name": "MainActivity", "index": 1362, "label": 1}
{"input": "public Criteria andTopicIdIsNull() {\r\n            addCriterion(\"topic_id is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2021-05-08T12:41:18.691106Z", "repo_name": "suoyiguke/weixinparent", "path": "/weixinpojo/src/main/java/com/yinkai/entities/ImageExample.java", "source": "the-stack-v2", "method_name": "andTopicIdIsNull", "class_name": "GeneratedCriteria", "index": 1363, "label": 1}
{"input": "public Maze createMaze(MazeFactory mazeFactory)\n    {\n        Maze aMaze = mazeFactory.makeMaze();\n        Room r1 = mazeFactory.makeRoom(1);\n        Room r2 = mazeFactory.makeRoom(2);\n        Door theDoor = new Door(r1, r2);\n        aMaze.addRoom(r1);\n        aMaze.addRoom(r2);\n        r1.setSide(Direction.NORTH, mazeFactory.makeWall());\n        r1.setSide(Direction.EAST, theDoor);\n        r1.setSide(Direction.SOUTH, mazeFactory.makeWall());\n        r1.setSide(Direction.WEST, mazeFactory.makeWall());\n\n        r2.setSide(Direction.NORTH, mazeFactory.makeWall());\n        r2.setSide(Direction.EAST, mazeFactory.makeWall());\n        r2.setSide(Direction.SOUTH, mazeFactory.makeWall());\n        r2.setSide(Direction.WEST, theDoor);\n        \n        currentRoom = r1;\n        return aMaze;\n    }", "timestamp": "2021-01-01T19:08:11.090098Z", "repo_name": "keys961/Design-Pattern", "path": "/src/org/yejt/maze/MazeGame.java", "source": "the-stack-v2", "method_name": "createMaze", "class_name": "MazeGame", "index": 1364, "label": 1}
{"input": "@Override\n  public <DB extends ODatabase> DB create(final Map<OGlobalConfiguration, Object> iInitialSettings) {\n    throw new UnsupportedOperationException(\"use OrientDB\");\n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "create", "class_name": "ODatabaseDocumentEmbedded", "index": 1365, "label": 1}
{"input": "public void start(Stage primaryStage) {\n        Scene scene = new Scene(this.prepareSceneContent(), 800, 500);\n        mainWindow = primaryStage;\n        primaryStage.setTitle(\"Torre Hanoi\");\n        primaryStage.setScene(scene);\n        primaryStage.centerOnScreen();\n        primaryStage.show();\n    }", "timestamp": "2023-03-15T21:04:55.054868Z", "repo_name": "lbottona/UNITN-lingProg-Torre_Hanoi", "path": "/src/it/unitn/disi/giugno2018/torrehannoi.java", "source": "the-stack-v2", "method_name": "start", "class_name": "torrehannoi", "index": 1366, "label": 1}
{"input": "public void setSerializationLibrary(String serializationLibrary) {\n        if (SERIALIZATION_LIBRARY_JACKSON.equalsIgnoreCase(serializationLibrary)) {\n            this.serializationLibrary = SERIALIZATION_LIBRARY_JACKSON;\n        } else if (SERIALIZATION_LIBRARY_JSONB.equalsIgnoreCase(serializationLibrary)) {\n            this.serializationLibrary = SERIALIZATION_LIBRARY_JSONB;\n        } else {\n            throw new IllegalArgumentException(\"Unexpected serializationLibrary value: \" + serializationLibrary);\n        }\n    }", "timestamp": "2023-09-02T11:26:28.189499Z", "repo_name": "OpenAPITools/openapi-generator", "path": "/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaHelidonServerCodegen.java", "source": "the-stack-v2", "method_name": "setSerializationLibrary", "class_name": "JavaHelidonServerCodegen", "index": 1367, "label": 1}
{"input": "@Test public void supertypeOf() throws Exception {\n    Type listOfWildcardType = TypesTest.class.getDeclaredField(\"listSupertype\").getGenericType();\n    Type expected = Types.collectionElementType(listOfWildcardType, List.class);\n    assertThat(Types.supertypeOf(String.class)).isEqualTo(expected);\n  }", "timestamp": "2021-04-27T09:37:55.346570Z", "repo_name": "nedtwigg/moshi", "path": "/moshi/src/test/java/com/squareup/moshi/TypesTest.java", "source": "the-stack-v2", "method_name": "supertypeOf", "class_name": "TypesTest", "index": 1368, "label": 1}
{"input": "public static void drawRect(float paramXStart, float paramYStart, float paramXEnd, float paramYEnd, int paramColor)\n  {\n    float alpha = (paramColor >> 24 & 0xFF) / 255.0F;\n    float red = (paramColor >> 16 & 0xFF) / 255.0F;\n    float green = (paramColor >> 8 & 0xFF) / 255.0F;\n    float blue = (paramColor & 0xFF) / 255.0F;\n    GL11.glEnable(3042);\n    GL11.glDisable(3553);\n    GL11.glBlendFunc(770, 771);\n    GL11.glEnable(2848);\n    GL11.glPushMatrix();\n    GL11.glColor4f(red, green, blue, alpha);\n    GL11.glBegin(7);\n    GL11.glVertex2d(paramXEnd, paramYStart);\n    GL11.glVertex2d(paramXStart, paramYStart);\n    GL11.glVertex2d(paramXStart, paramYEnd);\n    GL11.glVertex2d(paramXEnd, paramYEnd);\n    GL11.glEnd();\n    GL11.glPopMatrix();\n    GL11.glEnable(3553);\n    GL11.glDisable(3042);\n    GL11.glDisable(2848);\n  }", "timestamp": "2023-07-23T11:39:57.368099Z", "repo_name": "SuperS123/SpicyClient", "path": "/minecraft/info/spicyclient/ui/Jello/RenderSystem.java", "source": "the-stack-v2", "method_name": "drawRect", "class_name": "RenderSystem", "index": 1369, "label": 1}
{"input": "private void erzeugeLeinwand()\n    {\n        _leinwand = new Leinwand(\"Bildbetrachter\", _breite, _hoehe);\n\n        zeichneBild();\n    }", "timestamp": "2020-03-07T10:50:29.488628Z", "repo_name": "jonabacke/programieren-1", "path": "/Blatt_7/Blatt07_4_Bildbearbeitung/SWBild.java", "source": "the-stack-v2", "method_name": "erzeugeLeinwand", "class_name": "SWBild", "index": 1370, "label": 1}
{"input": "@Override\n        public String get(ChangeData input, FillArgs args)\n            throws OrmException {\n          Change c = input.change();\n          if (c == null) {\n            return null;\n          }\n          return c.getProject().get();\n        }", "timestamp": "2021-01-16T21:01:21.667768Z", "repo_name": "runt18/gerrit", "path": "/gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeField.java", "source": "the-stack-v2", "method_name": "get", "class_name": "ChangeField", "index": 1371, "label": 1}
{"input": "public void testBug80890() throws CoreException, JavaModelException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b80890/A.java\",\n\t\t\"package b80890;\\n\" +\n\t\t\"public class A {\\n\" +\n\t\t\"\tprotected void foo(Exception e) {}\\n\" +\n\t\t\"\tprotected void foo(String s) {}\\n\" +\n\t\t\"}\\n\" +\n\t\t\"class B1 extends A {\\n\" +\n\t\t\"\tpublic void bar1() {\\n\" +\n\t\t\"\t\tfoo(null);\\n\" +\n\t\t\"\t}\\n\" +\n\t\t\"}\\n\" +\n\t\t\"package b80890;\\n\"1 +\n\t\t\"package b80890;\\n\"2 +\n\t\t\"\t\tfoo(null);\\n\" +\n\t\t\"\t}\\n\" +\n\t\t\"}\\n\"\n\t\t);\n\t\n\tIType type = this.workingCopies[0].getType(\"package b80890;\\n\"6);\n\tIMethod method = type.getMethods()[0];\n\tsearch(method, REFERENCES);\n\tmethod = type.getMethods()[1];\n\tsearch(method, REFERENCES);\n\tassertSearchResults(\n\t\t\"package b80890;\\n\"7 +\n\t\t\"package b80890;\\n\"8 +\n\t\t\"package b80890;\\n\"7 +\n\t\t\"public class A {\\n\"0\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug80890", "class_name": "JavaSearchBugsTests", "index": 1372, "label": 1}
{"input": "public void testBug83230_Explicit03() throws CoreException {\n\tthis.resultCollector.showRule();\n\tsetUpBug83230_Explicit();\n\tIMethod method = selectMethod(this.workingCopies[0], \"foo\");\n\tsearch(method, REFERENCES);\n\tassertSearchResults(\n\t\t\"src/b83230/Test.java String void b83230.Test.foo():Local#1.foo() [foo(obj)] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug83230_Explicit03", "class_name": "JavaSearchBugsTests", "index": 1373, "label": 1}
{"input": "private void saveSiegeDate()\n\t{\n\t\ttry (Connection con = DatabaseFactory.getInstance().getConnection();\n\t\t\tPreparedStatement ps = con.prepareStatement(\"UPDATE fort SET siegeDate = ? WHERE id = ?\"))\n\t\t{\n\t\t\tps.setLong(1, getSiegeDate().getTimeInMillis());\n\t\t\tps.setInt(2, getFort().getResidenceId());\n\t\t\tps.execute();\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\t_log.log(Level.WARNING, \"Exception: saveSiegeDate(): \" + e.getMessage(), e);\n\t\t}\n\t}", "timestamp": "2021-01-10T03:42:04.091432Z", "repo_name": "soultobe/L2JOlivia_EpicEdition", "path": "/java/com/l2jolivia/gameserver/model/entity/FortSiege.java", "source": "the-stack-v2", "method_name": "saveSiegeDate", "class_name": "FortSiege", "index": 1374, "label": 1}
{"input": "public static void fillIndexCF(ColumnFamilyStore cfs, boolean composite, long ... values)\n    {\n        assertTrue(values.length % 2 == 0);\n        for (int i = 0; i < values.length; i +=2)\n        {\n            UpdateBuilder builder = UpdateBuilder.create(cfs.metadata(), String.valueOf(i));\n            if (composite)\n            {\n                builder.newRow(\"c\" + i)\n                       .add(COL_INDEX, values[i])\n                       .add(COL_NON_INDEX, values[i + 1]);\n            }\n            else\n            {\n                builder.newRow()\n                       .add(COL_INDEX, values[i])\n                       .add(COL_NON_INDEX, values[i + 1]);\n            }\n            new Mutation(builder.build()).applyUnsafe();\n        }\n\n        cfs.forceBlockingFlush();\n    }", "timestamp": "2022-05-31T23:56:44.066378Z", "repo_name": "ealonsodb/cassandra", "path": "/test/unit/org/apache/cassandra/db/ScrubTest.java", "source": "the-stack-v2", "method_name": "fillIndexCF", "class_name": "ScrubTest", "index": 1375, "label": 1}
{"input": "protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        button=findViewById(R.id.sign_in_button);\n        mAuth=FirebaseAuth.getInstance();\n        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\n                .requestIdToken(getString(R.string.default_web_client_id))\n                .requestEmail()\n                .build();\n        mGoogleSignInClient = GoogleSignIn.getClient(this, gso);\n\n        button.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                signIn();\n            }\n        });\n\n\n    }", "timestamp": "2022-12-12T15:25:04.966860Z", "repo_name": "ZobaeirAlLikhon/Google_Sign_In", "path": "/app/src/main/java/com/example/google_sign_in/MainActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "MainActivity", "index": 1376, "label": 1}
{"input": "@Override\n    public String toString() {\n        return \"entities.Curso[ idcurso=\" + idcurso + \" ]\";\n    }", "timestamp": "2020-04-01T16:42:25.277518Z", "repo_name": "seminarioumg20188102/PersistenciaWsescuela", "path": "/src/entities/Curso.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "Curso", "index": 1377, "label": 1}
{"input": "public Criteria andVdef9IsNotNull() {\r\n            addCriterion(\"VDEF9 is not null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef9IsNotNull", "class_name": "GeneratedCriteria", "index": 1378, "label": 1}
{"input": "private boolean isValidCoordinate(int row, int col) {\n        final int nRows = getRowDimension();\n        final int nCols = getColumnDimension();\n        return !((((row < 0) || (row > (nRows - 1))) || (col < 0)) || (col > (nCols - 1)));\n    }", "timestamp": "2021-05-07T00:07:06.345617Z", "repo_name": "SajjadZaidi/AutoRepair", "path": "/RawExperiments/Math/math98/1/AstorMain-math_98/src/variant-208/org/apache/commons/math/linear/RealMatrixImpl.java", "source": "the-stack-v2", "method_name": "isValidCoordinate", "class_name": "RealMatrixImpl", "index": 1379, "label": 1}
{"input": "private void stopJettyServer() throws Exception {\n        \n        logger.info(\"Shutting down Jetty server\");\n        server.stop();\n        logger.info(\"REST server shut down\");\n    }", "timestamp": "2020-04-06T04:36:56.064829Z", "repo_name": "mh11/opencga", "path": "/opencga-server/src/main/java/org/opencb/opencga/server/RestServer.java", "source": "the-stack-v2", "method_name": "stopJettyServer", "class_name": "RestServer", "index": 1380, "label": 1}
{"input": "HsqlException unsupportedFeature() {\n        return Error.error(ErrorCode.X_0A501, token.tokenString);\n    }", "timestamp": "2023-09-03T10:33:34.963710Z", "repo_name": "svn2github/hsqldb", "path": "/base/branches/odbcproto1/src/org/hsqldb/ParserBase.java", "source": "the-stack-v2", "method_name": "unsupportedFeature", "class_name": "ParserBase", "index": 1381, "label": 1}
{"input": "public VariableModifierContext variableModifier(int i) {\n\t\t\treturn getRuleContext(VariableModifierContext.class,i);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "variableModifier", "class_name": "VariableModifiersContext", "index": 1382, "label": 1}
{"input": "@Override\n     public void render(GameContainer container, StateBasedGame game, Graphics g)\n             throws SlickException {\n         this.level.render(container, game, g);\n         if (this.showMenu) {\n             this.menu.render(container, game, g);\n         }\n         if (this.showGameOverMenu) {\n             this.gameOverMenu.render(container, game, g);\n         }\n         this.messageBox.render(container, game, g);\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/3/3_c82546db8cf2ab0dbe55947d66a26499749f44c3/GameState/3_c82546db8cf2ab0dbe55947d66a26499749f44c3_GameState_s.java", "source": "the-stack-v2", "method_name": "render", "class_name": "GameState", "index": 1383, "label": 1}
{"input": "@Test(timeout = 10000)\n     public void testArrayMergeAssociative() throws ConfigCompileException {\n         assertEquals(\"{a: a, b: b, c: c, d: {1, 2}}\", SRun(\"array_merge(array(a: a, b: b), array(c: c, d: array(1, 2)))\", fakePlayer));\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/19/19_3b3438a24e33893035d2c602198d49ca13a35845/ArrayHandlingTest/19_3b3438a24e33893035d2c602198d49ca13a35845_ArrayHandlingTest_s.java", "source": "the-stack-v2", "method_name": "testArrayMergeAssociative", "class_name": "ArrayHandlingTest", "index": 1384, "label": 1}
{"input": "public static void main(String[] args) {\n\t\t\n\t\tScoreboard s = new Scoreboard(7);\n\t\tGameEntry n = new GameEntry(\"Mike\", 1105);\n\t\ts.add(n);\n\t\tn = new GameEntry(\"Rob\", 750);\n\t\ts.add(n);\n\t\t\n\t\ts.add(new GameEntry(\"Paul\", 720));\n\t\ts.add(new GameEntry(\"Anna\", 660));\n\n\t\t\t\t\n\t\ts.add(new GameEntry(\"Jill\", 740));\n\n\t\t\n\t\tSystem.out.println(\"At end:\");\n\t\tSystem.out.println(s);\n\t\t\n\t\ts.remove(-1);\n\t\t\n\t\ts.remove(2);\n\t\tSystem.out.println(s);\n\n\n\t}", "timestamp": "2023-08-16T20:01:37.950044Z", "repo_name": "lgw2/lgw2.github.io", "path": "/_teaching/csci132-fall-2022/lectures/ScoreboardDemo.java", "source": "the-stack-v2", "method_name": "main", "class_name": "ScoreboardDemo", "index": 1385, "label": 1}
{"input": "public void testBug110060_TypePattern09() throws CoreException {\n\tsetUpBug110060_TypePattern();\n\tsearch(\"Aaa\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_MATCH | SearchPattern.R_CASE_SENSITIVE);\n\t\n\tassertSearchResults(\n\t\t\"src/b110060/Test.java b110060.Test.a1 [Aaa] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_TypePattern09", "class_name": "JavaSearchBugsTests", "index": 1386, "label": 1}
{"input": "@Override public VerticeArbolBinario<T> getDerecho() {\n            if (hayDerecho())\n                return derecho;\n            else throw new NoSuchElementException(\"No hay elemnto derecho\");\n            \n        }", "timestamp": "2021-05-29T11:10:04.847601Z", "repo_name": "acasanova009/UNAM", "path": "/EDD/practica4/src/mx/unam/ciencias/edd/ArbolBinario.java", "source": "the-stack-v2", "method_name": "getDerecho", "class_name": "Vertice", "index": 1387, "label": 1}
{"input": "public static Menu getTopMenu(){\n\t\tList<Menu> menuList = getMenuList();\n\t\tif(menuList == null || menuList.size() == 0) return null;\n\t\tMenu topMenu =  getMenuList().get(0);\n\t\treturn topMenu;\n\t}", "timestamp": "2022-11-07T06:10:16.559471Z", "repo_name": "moutainhigh/suppplychain", "path": "/src/main/java/com/jeeplus/modules/sys/utils/UserUtils.java", "source": "the-stack-v2", "method_name": "getTopMenu", "class_name": "UserUtils", "index": 1388, "label": 1}
{"input": "public void setDeliverTypeTitle(String deliverTypeTitle) {\n        this.deliverTypeTitle = deliverTypeTitle;\n    }", "timestamp": "2021-01-10T07:10:13.758215Z", "repo_name": "nieshr/xjr", "path": "/src/main/java/com/ynyes/kjxjr/entity/TdOrder.java", "source": "the-stack-v2", "method_name": "setDeliverTypeTitle", "class_name": "TdOrder", "index": 1389, "label": 1}
{"input": "public static BufferedImage autoCrop(BufferedImage bi) {\n        \n        int cropFromTop = findNumberOfRowsToCrop(bi, Origin.TOP);\n        int cropFromBottom = findNumberOfRowsToCrop(bi, Origin.BOTTOM);\n        int cropFromLeft = findNumberOfColumnsToCrop(bi, Origin.LEFT);\n        int cropFromRight = findNumberOfColumnsToCrop(bi, Origin.RIGHT);\n\n        int width = bi.getWidth() - cropFromLeft - cropFromRight;\n        int height = bi.getHeight() - cropFromBottom - cropFromTop;\n        \n        return bi.getSubimage(cropFromLeft, cropFromTop, width, height);\n    }", "timestamp": "2021-01-01T05:50:45.307287Z", "repo_name": "TaylorPeer/somtooolbox-dendrograms", "path": "/src/core/at/tuwien/ifs/somtoolbox/util/ImageUtils.java", "source": "the-stack-v2", "method_name": "autoCrop", "class_name": "ImageUtils", "index": 1390, "label": 1}
{"input": "@JavascriptInterface\n    public void reportAdMarvelAdHistory() {\n        final Context context = (Context)this.contextReference.get();\n        if (context != null) {\n            AdMarvelUtils.reportAdMarvelAdHistory(context);\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "reportAdMarvelAdHistory", "class_name": "AdMarvelWebViewJSInterface", "index": 1391, "label": 1}
{"input": "@Override\n    public void removeChild(Container child) {\n\n        if (!(child instanceof Wrapper)) {\n            throw new IllegalArgumentException\n                (sm.getString(\"standardContext.notWrapper\"));\n        }\n\n        super.removeChild(child);\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "removeChild", "class_name": "StandardContext", "index": 1392, "label": 1}
{"input": "@Test public void testNotInQuery() {\n    \n    final String sql = \"select deptno from emp where deptno not in (\\n\"\n        + \"select deptno from dept)\";\n    withEmpDept(sql)\n        .returnsUnordered(\"DEPTNO=50\",\n            \"DEPTNO=50\",\n            \"DEPTNO=60\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testNotInQuery", "class_name": "JdbcTest", "index": 1393, "label": 1}
{"input": "@Test public void testLateral() {\n    CalciteAssert.hr()\n        .query(\"select * from \\\"hr\\\".\\\"emps\\\",\\n\"\n            + \" LATERAL (select * from \\\"hr\\\".\\\"depts\\\" where \\\"emps\\\".\\\"deptno\\\" = \\\"depts\\\".\\\"deptno\\\")\")\n        .returnsUnordered(\n            \"empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000; deptno0=10; name0=Sales; employees=[{100, 10, Bill, 10000.0, 1000}, {150, 10, Sebastian, 7000.0, null}]; location={-122, 38}\",\n            \"empid=110; deptno=10; name=Theodore; salary=11500.0; commission=250; deptno0=10; name0=Sales; employees=[{100, 10, Bill, 10000.0, 1000}, {150, 10, Sebastian, 7000.0, null}]; location={-122, 38}\",\n            \"empid=150; deptno=10; name=Sebastian; salary=7000.0; commission=null; deptno0=10; name0=Sales; employees=[{100, 10, Bill, 10000.0, 1000}, {150, 10, Sebastian, 7000.0, null}]; location={-122, 38}\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testLateral", "class_name": "JdbcTest", "index": 1394, "label": 1}
{"input": "@Bean\n    JedisConnectionFactory jedisConnectionFactory() {\n        return new JedisConnectionFactory();\n    }", "timestamp": "2020-04-20T14:44:15.648940Z", "repo_name": "lukehanabi/weather", "path": "/src/main/java/com/test/weather/weather/config/RedisConfig.java", "source": "the-stack-v2", "method_name": "jedisConnectionFactory", "class_name": "RedisConfig", "index": 1395, "label": 1}
{"input": "@Override\n    public void setContentView(View view, ViewGroup.LayoutParams params) {\n        getDelegate().setContentView(view, params);\n    }", "timestamp": "2020-04-24T04:10:40.106278Z", "repo_name": "lyriarte/tripmaster", "path": "/app/src/main/java/org/thingagora/tripmaster/AppCompatPreferenceActivity.java", "source": "the-stack-v2", "method_name": "setContentView", "class_name": "AppCompatPreferenceActivity", "index": 1396, "label": 1}
{"input": "public void carDetails() {  \n\t    printDetails();         \n\t    System.out.println(\"Body Style: \" + bodyStyle);\n\t  }", "timestamp": "2023-07-05T11:36:20.379840Z", "repo_name": "PranaliSonawane1106/java", "path": "/src/practiceJava4/Car.java", "source": "the-stack-v2", "method_name": "carDetails", "class_name": "Car", "index": 1397, "label": 1}
{"input": "@Test\r\n    public void addition_isCorrect() throws Exception {\r\n        assertEquals(4, 2 + 2);\r\n    }", "timestamp": "2021-06-01T07:17:58.202825Z", "repo_name": "HuangYe12/past_lab_projects", "path": "/MC_Python_Andriod/lab2/McLabApp_2in1_ForAndroid 6/app/src/test/java/test/hy/mclabapp/ExampleUnitTest.java", "source": "the-stack-v2", "method_name": "addition_isCorrect", "class_name": "ExampleUnitTest", "index": 1398, "label": 1}
{"input": "@Override\n    public String toString() {\n        return \"XMotivo{\" + \"Versao=\" + Versao + \", TpAmb=\" + TpAmb + \", VerAplic=\" + VerAplic + \", CStat=\" + CStat + \", XMotivo=\" + XMotivo + \", CUF=\" + CUF + \", DhRecbto=\" + DhRecbto + '}';\n    }", "timestamp": "2021-01-18T17:48:50.135101Z", "repo_name": "Blasterprateado/info8000", "path": "/Info8000/src/br/com/nfe/comunicador/XMotivo.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "XMotivo", "index": 1399, "label": 1}
{"input": "public Criteria andVdef20LessThanOrEqualTo(String value) {\r\n            addCriterion(\"VDEF20 <=\", value, \"vdef20\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef20LessThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 1400, "label": 1}
{"input": "public ResponseErrorList addErrorsItem(ResponseErrorListErrors errorsItem) {\n    this.errors.add(errorsItem);\n    return this;\n  }", "timestamp": "2020-11-27T18:56:35.376340Z", "repo_name": "FaizRasool/openbanking-aspsp", "path": "/forgerock-openbanking-cdr-aspsp-rs/forgerock-openbanking-cdr-aspsp-rs-model/src/main/java/com/forgerock/openbanking/aspsp/rs/model/v0_9/ResponseErrorList.java", "source": "the-stack-v2", "method_name": "addErrorsItem", "class_name": "ResponseErrorList", "index": 1401, "label": 1}
{"input": "public static boolean talkToNPC()\n    {\n        return Gdx.input.isKeyJustPressed(TALK_TO_NPC);\n    }", "timestamp": "2021-04-18T17:14:44.709163Z", "repo_name": "mmunson2/Leaf", "path": "/core/src/com/mygdx/game/InputHandler.java", "source": "the-stack-v2", "method_name": "talkToNPC", "class_name": "InputHandler", "index": 1402, "label": 1}
{"input": "@Override\n    public String getToolTipText(MouseEvent event) {\n        TreePath path = getPathForLocation(event.getX(), event.getY());\n        if (path != null && path.getLastPathComponent() instanceof BasicFileSystemTreeNode) {\n            BasicFileSystemTreeNode node = (BasicFileSystemTreeNode) path.getLastPathComponent();\n            String typeDescription = node.getTypeDescription();\n            if (typeDescription == null || typeDescription.length() == 0) {\n                return node.toString();\n            }\n            else {\n                return node.toString() + \" - \" + typeDescription;\n            }\n        }\n        else {\n            return null;\n        }\n    }", "timestamp": "2023-06-01T05:52:53.703303Z", "repo_name": "Ren0X1/JavaProject", "path": "/Launcher/src/com/jidesoft/plaf/basic/BasicFileSystemTree.java", "source": "the-stack-v2", "method_name": "getToolTipText", "class_name": "BasicFileSystemTree", "index": 1403, "label": 1}
{"input": "@Override\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_search);\n\n        mTabLayout = (TabLayout) findViewById(R.id.tabs);\n        mViewPager = (ViewPager) findViewById(R.id.viewpager_container);\n\n        \n        verifyPermissions();\n    }", "timestamp": "2023-01-21T03:14:05.843773Z", "repo_name": "johnyhawkahsan/51-CWM-ClassifiedsAdsApp", "path": "/app/src/main/java/com/ahsan/a51_cwm_classifiedsadsapp/SearchActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "SearchActivity", "index": 1404, "label": 1}
{"input": "@Override\n    public Field<String> field4() {\n        return TypeMeaningWord.MW_LEX_COMPLEXITY;\n    }", "timestamp": "2020-12-23T02:30:44.911257Z", "repo_name": "tonisnurk/ekilex", "path": "/ekilex-app/src/main/java/eki/ekilex/data/db/udt/records/TypeMeaningWordRecord.java", "source": "the-stack-v2", "method_name": "field4", "class_name": "TypeMeaningWordRecord", "index": 1405, "label": 1}
{"input": "@Override\n    protected void processKeyEvent(KeyEvent event) {\n        if(event.getKeyCode() == KeyEvent.KeyCode.KEY_ENTER) {\n            ActionEvent act = new ActionEvent(ActionEvent.Action,this);\n            EventBus.getSystem().publish(act);\n        } else {\n            super.processKeyEvent(event);\n        }\n    }", "timestamp": "2016-09-06T17:55:34.673930Z", "repo_name": "joshmarinacci/aminojava", "path": "/src/org/joshy/gfx/node/control/Textbox.java", "source": "the-stack-v2", "method_name": "processKeyEvent", "class_name": "Textbox", "index": 1406, "label": 1}
{"input": "@JavascriptInterface\n    public void expandtofullscreen() {\n        final d d = (d)this.adMarvelInternalWebViewReference.get();\n        if ((d == null || !d.b()) && !this.isInterstitial) {\n            final m m = (m)this.adMarvelWebViewReference.get();\n            if (m != null) {\n                final Context context = d.getContext();\n                if (context != null && context instanceof Activity) {\n                    final Activity activity = (Activity)context;\n                    m.y = true;\n                    if (m.w) {\n                        this.disablerotations(this.lockedOrientation);\n                    }\n                    if (m.x) {\n                        new Handler(Looper.getMainLooper()).post((Runnable)new m$j(m, activity, 0, 0, -1, -1));\n                        return;\n                    }\n                    new Handler(Looper.getMainLooper()).post((Runnable)new m$k(m, activity, 0, 0, -1, -1, this.adMarvelAd));\n                }\n            }\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "expandtofullscreen", "class_name": "AdMarvelWebViewJSInterface", "index": 1407, "label": 1}
{"input": "@Override\n\tpublic void setDataTypesListBoxOptions(List<? extends HasListBox> texts) {\n\t\tsetListBoxItems(dataTypesListBox, texts, MatContext.PLEASE_SELECT);\n\t}", "timestamp": "2021-01-18T19:53:17.807267Z", "repo_name": "michaelaltmann/MeasureAuthoringTool_LatestSprint", "path": "/mat/src/mat/client/clause/QDMAvailableValueSetWidget.java", "source": "the-stack-v2", "method_name": "setDataTypesListBoxOptions", "class_name": "QDMAvailableValueSetWidget", "index": 1408, "label": 1}
{"input": "public void ImportParameters(ECParameters parameters) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.security.cryptography.CryptographicException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NullReferenceException, system.OutOfMemoryException, system.NotSupportedException, system.MissingMethodException, system.reflection.TargetInvocationException, system.PlatformNotSupportedException {\n        if (classInstance == null)\n            throw new UnsupportedOperationException(\"classInstance is null.\");\n        try {\n            classInstance.Invoke(\"ImportParameters\", parameters == null ? null : parameters.getJCOInstance());\n        } catch (JCNativeException jcne) {\n            throw translateException(jcne);\n        }\n    }", "timestamp": "2022-12-07T21:13:06.208025Z", "repo_name": "lvyitian/JCOReflector", "path": "/netreflected/src/Framework/System.Core,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089/system/security/cryptography/ECDsaCng.java", "source": "the-stack-v2", "method_name": "ImportParameters", "class_name": "ECDsaCng", "index": 1409, "label": 1}
{"input": "public void setCreditFeeSpec(final GuaranteeFeeVO creditFeeSpec) {\n        this.creditFeeSpec = creditFeeSpec;\n    }", "timestamp": "2021-06-16T09:55:00.426309Z", "repo_name": "zemuldo/Cyclos_3.7", "path": "/src/nl/strohalm/cyclos/entities/accounts/guarantees/Guarantee.java", "source": "the-stack-v2", "method_name": "setCreditFeeSpec", "class_name": "Guarantee", "index": 1410, "label": 1}
{"input": "@Override\n    public CoprocessorServiceBuilderImpl<S, R> toRow(byte[] endKey, boolean inclusive) {\n      this.endKey = Preconditions.checkNotNull(endKey,\n        \"endKey is null. Consider using\" +\n          \" an empty byte array, or just do not call this method if you want to continue\" +\n          \" selection to the last region\");\n      this.endKeyInclusive = inclusive;\n      return this;\n    }", "timestamp": "2020-03-21T15:28:16.237120Z", "repo_name": "siwuxietang/hbase", "path": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncTableImpl.java", "source": "the-stack-v2", "method_name": "toRow", "class_name": "CoprocessorServiceBuilderImpl", "index": 1411, "label": 1}
{"input": "private void updateBlink() {\n\t\t\n\t\tif ((!mBlinking) && (System.currentTimeMillis() > mNextBlink)) {\n\t\t\t\n\t\t\tmEyesBeforeBlink = mEyesOpen;\n\t\t\tmEyesOpen = EYES_CLOSED_ANGLE; \n\t\t\tmBlinking = true;\n\t\t} else if (mBlinking) {\n\t\t\t\n\t\t\tif (lidR.rotation().x == mEyesOpen) {\n\t\t\t\t\n\t}", "timestamp": "2016-08-11T07:51:42.621498Z", "repo_name": "emote-project/Migration-App", "path": "/Android3DEmys/src/uk/ac/hw/lirec/emys3d/EmysModel.java", "source": "the-stack-v2", "method_name": "updateBlink", "class_name": "EmysModel", "index": 1412, "label": 1}
{"input": "private void checkJdbcSchemaDirectConnection(String s) throws SQLException {\n    final StringBuilder b = new StringBuilder(\"jdbc:calcite:\");\n    b.append(s);\n    pv(b, \"schema.jdbcUser\", SCOTT.username);\n    pv(b, \"schema.jdbcPassword\", SCOTT.password);\n    pv(b, \"schema.jdbcUrl\", SCOTT.url);\n    pv(b, \"schema.jdbcCatalog\", SCOTT.catalog);\n    pv(b, \"schema.jdbcDriver\", SCOTT.driver);\n    pv(b, \"schema.jdbcSchema\", SCOTT.schema);\n    final String url =  b.toString();\n    Connection connection = DriverManager.getConnection(url);\n    assertThat(connection.getSchema(), is(\"adhoc\"));\n    String expected = \"C=14\\n\";\n    final String sql = \"select count(*) as c from emp\";\n    try (Statement statement = connection.createStatement();\n         ResultSet resultSet = statement.executeQuery(sql)) {\n      assertThat(CalciteAssert.toString(resultSet), is(expected));\n    }\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "checkJdbcSchemaDirectConnection", "class_name": "JdbcTest", "index": 1413, "label": 1}
{"input": "private int getAggregatorThreadPoolSize(Configuration conf) {\n    int threadPoolSize;\n    try {\n      threadPoolSize = conf.getInt(YarnConfiguration\n          .NM_LOG_AGGREGATION_THREAD_POOL_SIZE,\n          YarnConfiguration.DEFAULT_NM_LOG_AGGREGATION_THREAD_POOL_SIZE);\n    } catch (NumberFormatException ex) {\n      LOG.warn(\"Invalid thread pool size. Setting it to the default value \" +\n          \"in YarnConfiguration\");\n      threadPoolSize = YarnConfiguration.\n          DEFAULT_NM_LOG_AGGREGATION_THREAD_POOL_SIZE;\n    }\n    if(threadPoolSize <= 0) {\n      LOG.warn(\"Invalid thread pool size. Setting it to the default value \" +\n          \"in YarnConfiguration\");\n      threadPoolSize = YarnConfiguration.\n          DEFAULT_NM_LOG_AGGREGATION_THREAD_POOL_SIZE;\n    }\n    return threadPoolSize;\n  }", "timestamp": "2023-01-22T01:16:51.642516Z", "repo_name": "qtt-bigdata/hadoop", "path": "/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java", "source": "the-stack-v2", "method_name": "getAggregatorThreadPoolSize", "class_name": "LogAggregationService", "index": 1414, "label": 1}
{"input": "@Test\n\tpublic void testObterPessoaJuridicaInstituicao() throws BancoobException{\n\t\tInteger idPessoa = 1;\n\t\tInteger idInstituicao = 2;\n\t\t\n\t\tCapesIntegracaoServicoEJB ejb = new CapesIntegracaoServicoEJB();\n\t\tPessoaJuridicaVO pessoaJuridicaVO = new PessoaJuridicaVO();\n\t\t\n\t\tPessoaJuridicaDelegate mockPessoaJuridicaDelegate = EasyMock.createMock(PessoaJuridicaDelegate.class);\n\t\tEasyMock.expect(mockPessoaJuridicaDelegate.obterPorPessoaInstituicao(EasyMock.anyInt(), EasyMock.anyInt())).andReturn(pessoaJuridicaVO);\n\t\t\n\t\tejb.setPessoaJuridicaDelegate(mockPessoaJuridicaDelegate);\n\t\t\n\t\tEasyMock.replay(mockPessoaJuridicaDelegate);\n\t\tPessoaJuridicaIntegracaoDTO pessoaJuridica = ejb.obterPessoaJuridicaInstituicao(idPessoa, idInstituicao);\n\t\tAssert.assertNotNull(pessoaJuridica);\n\t\tEasyMock.verify(mockPessoaJuridicaDelegate);\n\t}", "timestamp": "2022-12-01T05:20:26.998529Z", "repo_name": "pabllo007/cca", "path": "/Integracao/ContaCapitalIntegracaoEJB/src/test/java/br/com/sicoob/sisbr/cca/integracao/negocio/servicos/ejb/CapesIntegracaoServicoEJBTest.java", "source": "the-stack-v2", "method_name": "testObterPessoaJuridicaInstituicao", "class_name": "CapesIntegracaoServicoEJBTest", "index": 1415, "label": 1}
{"input": "@Override\n        public int getEffectiveMajorVersion() {\n            throw new UnsupportedOperationException(\n                    sm.getString(\"noPluggabilityServletContext.notAllowed\"));\n        }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "getEffectiveMajorVersion", "class_name": "NoPluggabilityServletContext", "index": 1416, "label": 1}
{"input": "synchronized int chooseSpeed() {\n\t\tdouble factor = (1.0D + (Math.random() - 0.5D) * 2 * variation / 100);\n\t\treturn (int) Math.round(factor * basespeed);\n\t}", "timestamp": "2016-09-06T20:11:42.556411Z", "repo_name": "CrackedSass/02158ConcurrentProgramming", "path": "/Task 6/CarControl.java", "source": "the-stack-v2", "method_name": "chooseSpeed", "class_name": "Car", "index": 1417, "label": 1}
{"input": "public void setAntiResourceLocking(boolean antiResourceLocking) {\n\n        boolean oldAntiResourceLocking = this.antiResourceLocking;\n        this.antiResourceLocking = antiResourceLocking;\n        support.firePropertyChange(\"antiResourceLocking\",\n                                   oldAntiResourceLocking,\n                                   this.antiResourceLocking);\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setAntiResourceLocking", "class_name": "StandardContext", "index": 1418, "label": 1}
{"input": "public void validate_ticketStatus(String pnr) throws Throwable\r\n\t{\r\n\t\twaitforElement(BookingPageLocators.summaryStatus);\r\n\t\t\n\t\tif(getText(BookingPageLocators.summaryStatus,\"Status\").trim().equals(\"Confirmed\")\r\n\t\t\t\t||getText(BookingPageLocators.summaryStatus,\"Status\").trim().equals(\"Pending\")\r\n\t\t\t\t||getText(BookingPageLocators.summaryStatus,\"Status\").trim().equals(\"Hold\"))\r\n\t\t{\r\n\t\t\tString env = driver.getCurrentUrl();\r\n\t\t\tif(env.contains(\"develop_r41\")){projectUtilities.writingPNR(\"IBE_NAV_PNR\",pnr);}\r\n\t\t\telse if(env.contains(\"uat\")){projectUtilities.writingPNR(\"IBE_UAT_PNR\",pnr);}\r\n\t\t\telse{projectUtilities.writingPNR(\"Confirmed\"0,pnr);}\r\n\t\t\t\r\n\t\t\tReporter.SuccessReport(\"Confirmed\"1, \"Confirmed\"2+pnr);\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\r\n\t\t\tReporter.failureReport(\"Confirmed\"1, \"Confirmed\"4);\r\n\t\t\t\r\n\t\t}\r\n\t\tclosetoast();\r\n\t}", "timestamp": "2020-03-23T10:24:15.906149Z", "repo_name": "CignitiFlynas/IBE", "path": "/Flynas/src/test/java/flynas/web/workflows/ConfirmationPage.java", "source": "the-stack-v2", "method_name": "validate_ticketStatus", "class_name": "ConfirmationPage", "index": 1419, "label": 1}
{"input": "public AttackVector findValueByNumber(int number) {\n            return AttackVector.forNumber(number);\n          }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "findValueByNumber", "class_name": "Cvssv3", "index": 1420, "label": 1}
{"input": "public void testIntArray() {\n        assertEquals(17 * 37, new HashCodeBuilder(17, 37).append((int[]) null).toHashCode());\n        int[] obj = new int[2];\n        assertEquals((17 * 37) * 37 , new HashCodeBuilder(17, 37).append(obj).toHashCode());\n        obj[0] = 5;\n        assertEquals((17 * 37 + 5) * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());\n        obj[1] = 6;\n        assertEquals( (17 * 37 + 5) * 37 + 6, new HashCodeBuilder(17, 37).append(obj).toHashCode());\n    }", "timestamp": "2022-02-13T19:44:43.869060Z", "repo_name": "SpoonLabs/nopol-experiments", "path": "/dataset/cl1/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java", "source": "the-stack-v2", "method_name": "testIntArray", "class_name": "HashCodeBuilderTest", "index": 1421, "label": 1}
{"input": "public <B> DataTable addNewDataTable(String info, List<B>... lists) {\r\n\t\treturn addNewDataTable(info, false, null, lists);\r\n\t}", "timestamp": "2021-01-19T17:19:52.577870Z", "repo_name": "mattirn/JavaGnuplotHybrid", "path": "/javagnuplothybrid/src/main/java/org/leores/gnuplot/util/data/DataTableSet.java", "source": "the-stack-v2", "method_name": "addNewDataTable", "class_name": "DataTableSet", "index": 1422, "label": 1}
{"input": "public void setDefaultContextXml(String defaultContextXml) {\n        this.defaultContextXml = defaultContextXml;\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setDefaultContextXml", "class_name": "StandardContext", "index": 1423, "label": 1}
{"input": "protected void closeFileSystems(final UserGroupInformation userUgi) {\n    try {\n      FileSystem.closeAllForUGI(userUgi);\n    } catch (IOException e) {\n      LOG.warn(\"Failed to close filesystems: \", e);\n    }\n  }", "timestamp": "2023-01-22T01:16:51.642516Z", "repo_name": "qtt-bigdata/hadoop", "path": "/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java", "source": "the-stack-v2", "method_name": "closeFileSystems", "class_name": "LogAggregationService", "index": 1424, "label": 1}
{"input": "public static void put(String cacheName, String key, Object value) {\n\t\tElement element = new Element(key, value);\n\t\tgetCache(cacheName).put(element);\n\t}", "timestamp": "2020-03-11T17:10:02.910873Z", "repo_name": "a123993930/youngfm", "path": "/src/main/java/com/itianyi/core/utils/CacheUtils.java", "source": "the-stack-v2", "method_name": "put", "class_name": "CacheUtils", "index": 1425, "label": 1}
{"input": "public boolean getBoolean(String key, boolean defValue) {\n        return SP.getBoolean(key, defValue);\n    }", "timestamp": "2020-12-14T18:05:36.409414Z", "repo_name": "KaungMyat-Min/haulio", "path": "/app/src/main/java/com/kaungmyatmin/haulio/helper/PreferenceHelper.java", "source": "the-stack-v2", "method_name": "getBoolean", "class_name": "PreferenceHelper", "index": 1426, "label": 1}
{"input": "private void jMenuItemConnectSomeActionPerformed(java.awt.event.ActionEvent evt) {\n        JInternalFrameSubformTemplate j = new JInternalFrameSubformTemplate(\"连接客户端\", desktopPane, true);\n        j.setVisible(true);\n    }", "timestamp": "2020-03-25T15:11:28.454501Z", "repo_name": "SmithYan/ControlServer", "path": "/ControlServer/src/controlserver/mainServer.java", "source": "the-stack-v2", "method_name": "jMenuItemConnectSomeActionPerformed", "class_name": "mainServer", "index": 1427, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByOriginalAmountIsGreaterThanOrEqualToSomething() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        \n        defaultTransactionShouldBeFound(\"originalAmount.greaterThanOrEqual=\" + DEFAULT_ORIGINAL_AMOUNT);\n\n        \n        defaultTransactionShouldNotBeFound(\"originalAmount.greaterThanOrEqual=\" + UPDATED_ORIGINAL_AMOUNT);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByOriginalAmountIsGreaterThanOrEqualToSomething", "class_name": "TransactionResourceIT", "index": 1428, "label": 1}
{"input": "@Override\n    public PlaceholderData getDefaultValue()\n    {\n        return new PlaceholderData();\n    }", "timestamp": "2020-07-22T11:27:15.670230Z", "repo_name": "CrevolutionRoboticsProgramming/VisionCommunicatorPlugin", "path": "/src/main/java/org/frc2851/data/type/PlaceholderType.java", "source": "the-stack-v2", "method_name": "getDefaultValue", "class_name": "PlaceholderType", "index": 1429, "label": 1}
{"input": "public List<ACL> getACL(String path, Stat stat) throws NoNodeException {\n        return dataTree.getACL(path, stat);\n    }", "timestamp": "2021-11-23T14:30:09.439604Z", "repo_name": "airtimemedia/zookeeper", "path": "/src/java/main/org/apache/zookeeper/server/ZKDatabase.java", "source": "the-stack-v2", "method_name": "getACL", "class_name": "ZKDatabase", "index": 1430, "label": 1}
{"input": "public SimpleReporter build() {\n        return new SimpleReporter(registry,\n            output,\n            locale,\n            timeZone,\n            rateUnit,\n            durationUnit,\n            filter);\n      }", "timestamp": "2021-07-01T04:05:15.247476Z", "repo_name": "canglang1973/hbase", "path": "/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java", "source": "the-stack-v2", "method_name": "build", "class_name": "Builder", "index": 1431, "label": 1}
{"input": "@Test\n  public void testGetStateWithExceptionReturnsUnknown() throws Exception {\n    Dataflow.Projects.Jobs.Get statusRequest = mock(Dataflow.Projects.Jobs.Get.class);\n\n    when(mockJobs.get(eq(PROJECT_ID), eq(JOB_ID))).thenReturn(statusRequest);\n    when(statusRequest.execute()).thenThrow(IOException.class);\n    DataflowAggregatorTransforms dataflowAggregatorTransforms =\n        mock(DataflowAggregatorTransforms.class);\n\n    DataflowPipelineJob job = new DataflowPipelineJob(\n        PROJECT_ID, JOB_ID, mockWorkflowClient, dataflowAggregatorTransforms);\n\n    long startTime = fastClock.nanoTime();\n    assertEquals(\n        State.UNKNOWN,\n        job.getStateWithRetries(DataflowPipelineJob.STATUS_POLLING_ATTEMPTS, fastClock));\n    long timeDiff = TimeUnit.NANOSECONDS.toMillis(fastClock.nanoTime() - startTime);\n    checkValidInterval(DataflowPipelineJob.STATUS_POLLING_INTERVAL,\n        DataflowPipelineJob.STATUS_POLLING_ATTEMPTS, timeDiff);\n  }", "timestamp": "2022-11-24T23:36:03.156413Z", "repo_name": "Sil1991/gcpdf-demo", "path": "/runners/google-cloud-dataflow-java/src/test/java/com/google/cloud/dataflow/sdk/runners/DataflowPipelineJobTest.java", "source": "the-stack-v2", "method_name": "testGetStateWithExceptionReturnsUnknown", "class_name": "DataflowPipelineJobTest", "index": 1432, "label": 1}
{"input": "public void testBug92264d() throws CoreException {\n\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();\n\tnew SearchEngine().searchAllTypeNames(\n\t\t\"b12*\".toCharArray(),\n\t\tSearchPattern.R_PATTERN_MATCH, \n\t\tnew char[] { 'X' },\n\t\tSearchPattern.R_PREFIX_MATCH, \n\t\tTYPE,\n\t\tgetJavaSearchScope(),\n\t\trequestor,\n\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,\n\t\tnull\n\t);\n\tassertSearchResults(\n\t\t\"Unexpected all type names\",\n\t\t\"b124645.test.X_124645\\n\" +\n\t\t\"b124645.xy.X_124645\",\n\t\trequestor);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug92264d", "class_name": "JavaSearchBugsTests", "index": 1433, "label": 1}
{"input": "public List<DataVO> getData(String filePath)\r\n\t{\r\n\t\tList<DataVO> dataList = new ArrayList<DataVO>(0);\r\n\t\ttry{\r\n\t\t\tBufferedReader br = new BufferedReader(new FileReader(new File(filePath)));\r\n\t\t\tString line = null;\r\n\t\t\tDataVO dataVO = null;\r\n\t\t\t\r\n\t\t\twhile((line = br.readLine()) != null)\r\n\t\t\t{\r\n\t\t\t\ttry{\r\n\t\t\t\t\tString[] data = line.trim().split(\"\\t\");\r\n\t\t\t\t\tString houseHoldId = data[0].trim();\r\n\t\t\t\t\tString latitude = data[1].trim();\r\n\t\t\t\t\tString longitude = data[2].trim();\r\n\t\t\t\t\tdataVO = new DataVO();\r\n\t\t\t\t\tdataVO.setHouseHoldId(houseHoldId);\r\n\t\t\t\t\tdataVO.setLatitude(latitude);\r\n\t\t\t\t\tdataVO.setLongitude(longitude);\r\n\t\t\t\t\tdataList.add(dataVO);\r\n\t\t\t\t}catch(Exception e)\r\n\t\t\t\t{\r\n\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tbr.close();\t\r\n\t\t}catch(Exception e)\r\n\t\t{\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn dataList;\r\n\t}", "timestamp": "2021-09-12T09:06:37.814523Z", "repo_name": "hymanath/PA", "path": "/VoterData/src/main/java/com/itgrids/voterdata/service/geo/DistanceChecker.java", "source": "the-stack-v2", "method_name": "getData", "class_name": "DistanceChecker", "index": 1434, "label": 1}
{"input": "public EnumTest enumNumber(EnumNumberEnum enumNumber) {\n    this.enumNumber = enumNumber;\n    return this;\n  }", "timestamp": "2023-03-07T19:55:29.765168Z", "repo_name": "docusign/old_swagger-codegen", "path": "/samples/client/petstore/java/okhttp-gson-parcelableModel/src/main/java/io/swagger/client/model/EnumTest.java", "source": "the-stack-v2", "method_name": "enumNumber", "class_name": "EnumTest", "index": 1435, "label": 1}
{"input": "@Test(timeout = 4000)\n  public void test33()  throws Throwable  {\n      SimpleNode simpleNode0 = new SimpleNode(18);\n      simpleNode0.setIdentifier(\"}\");\n      StringWriter stringWriter0 = new StringWriter();\n      simpleNode0.dump(\"}\", stringWriter0);\n      assertEquals(\"<VariableDeclaratorId>\\n</VariableDeclaratorId>\\n\", stringWriter0.toString());\n  }", "timestamp": "2023-04-17T20:05:40.560943Z", "repo_name": "bellmit/termite-replication", "path": "/tests/time/mosa/tests/s1007/19_jmca/evosuite-tests/com/soops/CEN4010/JMCA/JParser/SimpleNode_ESTest.java", "source": "the-stack-v2", "method_name": "test33", "class_name": "SimpleNode_ESTest", "index": 1436, "label": 1}
{"input": "public int[] reset() {\n        array = original;\n        original = original.clone();\n        return original;\n    }", "timestamp": "2023-03-05T19:48:02.145558Z", "repo_name": "zpffly001/DataStructuresandAlgorithms", "path": "/Leetcode/src/xyz/zhoupf/primary_algorithm/chuji07_designquestion/chuji01_daluanshuzu.java", "source": "the-stack-v2", "method_name": "reset", "class_name": "chuji01_daluanshuzu", "index": 1437, "label": 1}
{"input": "public void testBug100772_ProjectScope_ClassAndSubclass01() throws CoreException {\n\tsetUpBug100772_ProjectScope_ClassAndSubclass();\n\tIType type = this.workingCopies[0].getType(\"Test\");\n\tIMethod method = type.getMethod(\"foo\", new String[] { \"QT;\" });\n\tsearch(method, UI_DECLARATIONS);\n\tassertSearchResults(\n\t\t\"src/b100772/Sub.java void b100772.Sub.foo(String) [foo] EXACT_MATCH\\n\" +\n\t\t\"src/b100772/Test.java void b100772.Test.foo(T) [foo] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug100772_ProjectScope_ClassAndSubclass01", "class_name": "JavaSearchBugsTests", "index": 1438, "label": 1}
{"input": "public static long getSystemIdleTime(String[] strArr) {\n        try {\n            return Long.parseLong(strArr[4]);\n        } catch (Throwable th) {\n            return -1;\n        }\n    }", "timestamp": "2022-01-27T12:48:43.446804Z", "repo_name": "jambestwick/HackWechat", "path": "/app/src/main/java/com/tencent/qqvideo/proxy/common/VcSystemInfo.java", "source": "the-stack-v2", "method_name": "getSystemIdleTime", "class_name": "VcSystemInfo", "index": 1439, "label": 1}
{"input": "public void putNode(Feature rootFeature, String id, Node node)\r\n\t{\r\n\t\tDictionary rootFeatureDictionary = getRootDictionary(rootFeature);\r\n\t\trootFeatureDictionary.put(id, node);\r\n\t}", "timestamp": "2020-04-17T17:30:27.410359Z", "repo_name": "MSPL4SOA/MSPL4SOA-tool", "path": "/SPGenerator/lib/ca.uwaterloo.gp_.fmp_0.7.0/src/ca/uwaterloo/gp/fmp/system/NodeIdDictionary.java", "source": "the-stack-v2", "method_name": "putNode", "class_name": "NodeIdDictionary", "index": 1440, "label": 1}
{"input": "@Override\r\n    public void toStringInternal(TpmStructurePrinter _p, int d)\r\n    {\r\n        _p.add(d, \"byte\", \"buffer\", buffer);\r\n    }", "timestamp": "2022-11-07T09:56:44.953339Z", "repo_name": "keke8273/TSS.MSR", "path": "/TSS.Java/src/tss/tpm/TPM2B_PUBLIC_KEY_RSA.java", "source": "the-stack-v2", "method_name": "toStringInternal", "class_name": "TPM2B_PUBLIC_KEY_RSA", "index": 1441, "label": 1}
{"input": "public int find(int n) {\n        if (n >= count) {\n            throw new IllegalArgumentException(\"Over Capacity!\");\n        }\n\n\n\n\n\n        if (parent[n] != n) {\n            parent[n] = find(parent[n]);\n        }\n        return parent[n];\n    }", "timestamp": "2022-06-07T13:12:10.700024Z", "repo_name": "frankwuyue/Algorithm", "path": "/src/WeightedGraph/UnionFind.java", "source": "the-stack-v2", "method_name": "find", "class_name": "UnionFind", "index": 1442, "label": 1}
{"input": "protected boolean exportApplication() throws IOException, RunnerException {\n     if (Preferences.getBoolean(\"export.application.platform.windows\")) {\n       String windowsPath =\n         new File(folder, \"application.windows\").getAbsolutePath();\n       if (!exportApplication(windowsPath, PConstants.WINDOWS)) {\n         return false;\n       }\n     }\n     if (Preferences.getBoolean(\"export.application.platform.macosx\")) {\n       String macosxPath =\n         new File(folder, \"application.macosx\").getAbsolutePath();\n       if (!exportApplication(macosxPath, PConstants.MACOSX)) {\n         return false;\n       }\n     }\n     if (Preferences.getBoolean(\"export.application.platform.linux\")) {\n       String linuxPath =\n         new File(folder, \"application.linux\").getAbsolutePath();\n       if (!exportApplication(linuxPath, PConstants.LINUX)) {\n         return false;\n       }\n     }\n     return true;\n   }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/7/7_2f542815a58ee55ee03ae89dbab36dfbe50a1841/Sketch/7_2f542815a58ee55ee03ae89dbab36dfbe50a1841_Sketch_s.java", "source": "the-stack-v2", "method_name": "exportApplication", "class_name": "Sketch", "index": 1443, "label": 1}
{"input": "@Nonnull\n    public static Variable temp(@Nonnull String prefix) {\n        return new TempVariable(prefix + \" \" + tempNameRandom.nextInt());\n    }", "timestamp": "2020-04-02T04:11:55.421623Z", "repo_name": "robstoll/predicator", "path": "/core/src/main/java/org/predicode/predicator/terms/Variable.java", "source": "the-stack-v2", "method_name": "temp", "class_name": "Variable", "index": 1444, "label": 1}
{"input": "public void testBug110060_FieldPattern02() throws CoreException {\n\tsetUpBug110060_FieldPattern();\n\tsearch(\"afwsd\", FIELD, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);\n\tassertSearchResults(\"\");\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_FieldPattern02", "class_name": "JavaSearchBugsTests", "index": 1445, "label": 1}
{"input": "public org.apache.commons.math.linear.RealMatrix scalarAdd(double d) {\n        final int rowCount = getRowDimension();\n        final int columnCount = getColumnDimension();\n        final double[][] outData = new double[rowCount][columnCount];\n        for (int row = 0 ; row < rowCount ; row++) {\n            final double[] dataRow = data[row];\n            final double[] outDataRow = outData[row];\n            for (int col = 0 ; col < columnCount ; col++) {\n                outDataRow[col] = (dataRow[col]) + d;\n            }\n        }\n        return new org.apache.commons.math.linear.RealMatrixImpl(outData , false);\n    }", "timestamp": "2021-05-07T00:07:06.345617Z", "repo_name": "SajjadZaidi/AutoRepair", "path": "/RawExperiments/Math/math98/1/AstorMain-math_98/src/variant-208/org/apache/commons/math/linear/RealMatrixImpl.java", "source": "the-stack-v2", "method_name": "scalarAdd", "class_name": "RealMatrixImpl", "index": 1446, "label": 1}
{"input": "@Bean\n    public PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }", "timestamp": "2021-07-08T17:28:28.132421Z", "repo_name": "doanhcongnguyen/aaserver", "path": "/src/main/java/com/dcn/aaserver/config/DIConfig.java", "source": "the-stack-v2", "method_name": "passwordEncoder", "class_name": "DIConfig", "index": 1447, "label": 1}
{"input": "public static void receiveFile(Socket socket) throws IOException {\n\t\tbyte[] inputByte = null;\n\t\tint length = 0;\n\t\tDataInputStream dis = null;\n\t\tFileOutputStream fos = null;\n\t\ttry {\n\t\t\ttry {\n\t\t\t\tdis = new DataInputStream(socket.getInputStream());\n\t\t\t\tint len = dis.readInt();\n\t\t\t\tbyte[] bytes = new byte[len];\n\t\t\t\tdis.read(bytes);\n\t\t\t\tjava.lang.String filePath = new java.lang.String(bytes);\n\n\t\t\t\tfos = new FileOutputStream(new File(filePath));\n\t\t\t\tinputByte = new byte[1024];   \n\t\t\t\tSystem.out.println(\"开始接收数据...\");  \n\t\t\t\twhile ((length = dis.read(inputByte)) > 0) {\n\t\t\t\t\tfos.write(inputByte, 0, length);\n\t\t\t\t\tfos.flush();    \n\t\t\t\t}\n\t\t\t\tSystem.out.println(\"完成接收：\"+\"\");\n\t\t\t} finally {\n\t\t\t\tif (fos != null)\n\t\t\t\t\tfos.close();\n\t\t\t\tif (dis != null)\n\t\t\t\t\tdis.close();\n\t\t\t\tif (socket != null)\n\t\t\t\t\tsocket.close(); \n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}", "timestamp": "2021-01-14T07:02:12.217594Z", "repo_name": "bizipoopoo/efficiency", "path": "/src/main/java/com/ezsyncxz/efficiency/socket/BxServerSocket.java", "source": "the-stack-v2", "method_name": "receiveFile", "class_name": "BxServerSocket", "index": 1448, "label": 1}
{"input": "private void setupMocks() throws Exception\n    {\n        when(websiteFactory.getSupportedStates())\n                .thenReturn(Sets.copyOf(Arrays.asList(State.values())));\n\n    }", "timestamp": "2021-06-18T06:05:39.558041Z", "repo_name": "BlackSourceLabs/BlackNectar-Service", "path": "/src/test/java/tech/blacksource/blacknectar/service/BlackNectarAssertionsTest.java", "source": "the-stack-v2", "method_name": "setupMocks", "class_name": "BlackNectarAssertionsTest", "index": 1449, "label": 1}
{"input": "public final ClassCreatorRestContext classCreatorRest() throws RecognitionException {\n\t\tClassCreatorRestContext _localctx = new ClassCreatorRestContext(_ctx, getState());\n\t\tenterRule(_localctx, 212, RULE_classCreatorRest);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(1279);\n\t\t\targuments();\n\t\t\tsetState(1281);\n\t\t\t_errHandler.sync(this);\n\t\t\tswitch ( getInterpreter().adaptivePredict(_input,138,_ctx) ) {\n\t\t\tcase 1:\n\t\t\t\t{\n\t\t\t\tsetState(1280);\n\t\t\t\tclassBody();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "classCreatorRest", "class_name": "JavaParser", "index": 1450, "label": 1}
{"input": "private void jBBuscMouseExited(java.awt.event.MouseEvent evt) {\n        \n        \n        jBBusc.setBackground(Star.colOri);\n        \n        \n        jBBusc.setBorder(bBordOri);\n        \n    }", "timestamp": "2020-06-10T12:22:45.426839Z", "repo_name": "njmube/SOSDev", "path": "/Electricos/src/cats/SerNotVent.java", "source": "the-stack-v2", "method_name": "jBBuscMouseExited", "class_name": "SerNotVent", "index": 1451, "label": 1}
{"input": "private void updateFramesPerSecondLabel()\n      {\n      SwingUtilities.invokeLater(fpsDisplayRunnable);\n      }", "timestamp": "2021-01-19T11:51:31.891500Z", "repo_name": "CMU-CREATE-Lab/terk-legacy", "path": "/TeRKClient/code/java/prototypingplayground/src/PrototypingPlayground.java", "source": "the-stack-v2", "method_name": "updateFramesPerSecondLabel", "class_name": "PrototypingPlayground", "index": 1452, "label": 1}
{"input": "@Override\n  public void recycle(final ORecord record) {\n    throw new UnsupportedOperationException();\n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "recycle", "class_name": "ODatabaseDocumentEmbedded", "index": 1453, "label": 1}
{"input": "public void testBug81084string() throws CoreException, JavaModelException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b81084a/Test.java\",\n\t\t\"package b81084a;\\n\" +\n\t\t\"class List<E> {}\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"\tclass Element{}\\n\" +\n\t\t\"\tstatic class Inner {\\n\" +\n\t\t\"\t\tprivate final List<Element> fList1;\\n\" +\n\t\t\"\t\tprivate final List<Test.Element> fList2;\\n\" +\n\t\t\"\t\tpublic Inner(List<Element> list) {\\n\" +\n\t\t\"\t\t\tfList1 = list;\\n\" +\n\t\t\"package b81084a;\\n\"0 +\n\t\t\"package b81084a;\\n\"1 +\n\t\t\"package b81084a;\\n\"2 +\n\t\t\"package b81084a;\\n\"3\n\t);\n\tsearch(\"package b81084a;\\n\"4, FIELD, REFERENCES);\n\tsearch(\"package b81084a;\\n\"5, FIELD, REFERENCES);\n\tassertSearchResults(\n\t\t\"package b81084a;\\n\"6 +\n\t\t\"package b81084a;\\n\"7\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug81084string", "class_name": "JavaSearchBugsTests", "index": 1454, "label": 1}
{"input": "@Override\n      public List setCallback(java.lang.String callback) {\n        return (List) super.setCallback(callback);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setCallback", "class_name": "List", "index": 1455, "label": 1}
{"input": "public Criteria andCommissionLessThanOrEqualTo(Double value) {\n            addCriterion(\"commission <=\", value, \"commission\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andCommissionLessThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 1456, "label": 1}
{"input": "public static void main(String[] args) {\r\n        Universidad universidad = new Universidad();\r\n        universidad.actualizar_nombre(\"UTPL\");\r\n        universidad.actualizar_calificacion(\"A\");\r\n        universidad.actualizar_carrera(\"Variedad\");\r\n        universidad.actualizar_tipo_uni(\"Privada\");\r\n        universidad.actualizar_ubicacion(\"Loja,Ecuador\");\r\n        universidad.actualizar_infraestructura(\"Muy buena\");\r\n        String informacion = universidad.obtener_universidad();\r\n        System.out.println(informacion);\r\n\r\n    }", "timestamp": "2020-12-31T08:16:37.124599Z", "repo_name": "iancarlosortega/poo2020", "path": "/poo2020/src/taller1/EjecutaUniversidad.java", "source": "the-stack-v2", "method_name": "main", "class_name": "EjecutaUniversidad", "index": 1457, "label": 1}
{"input": "protected static Database getDatabaseInstance() throws Exception {\n    \tProcessEngineConfiguration engineConfiguration = ProcessEngineConfiguration.createProcessEngineConfigurationFromResource(\"flowable.cfg.xml\");\n    \tDatabaseFactory databaseFactory = DatabaseFactory.getInstance();\n    \tDatabaseConnection connection = databaseFactory.openConnection(engineConfiguration.getJdbcUrl(), engineConfiguration.getJdbcUsername(), \n    \t\t\tengineConfiguration.getJdbcPassword(), engineConfiguration.getJdbcDriver(), null, null, null, new ClassLoaderResourceAccessor());\n        return DatabaseFactory.getInstance().findCorrectDatabaseImplementation(connection);\n    }", "timestamp": "2023-04-13T21:05:23.834729Z", "repo_name": "qiudaoke/flowable-userguide", "path": "/sql/flowable-sql-6.2.0/src/main/java/org/flowable/sql/CombineUpgradeSqlGenerator.java", "source": "the-stack-v2", "method_name": "getDatabaseInstance", "class_name": "CombineUpgradeSqlGenerator", "index": 1458, "label": 1}
{"input": "protected void finish() {\n            if (render == null) {\n                this.renderType = RenderType.AUTO;\n            } else {\n                try {\n                    this.renderType = RenderType.valueOf(render.toUpperCase());\n                } catch (Exception e) {\n                    setParseError(e);\n                }\n            }\n        }", "timestamp": "2020-12-14T02:11:21.814429Z", "repo_name": "fawnapp/aura", "path": "/aura-impl/src/main/java/org/auraframework/impl/root/component/BaseComponentDefImpl.java", "source": "the-stack-v2", "method_name": "finish", "class_name": "Builder", "index": 1459, "label": 1}
{"input": "@Override\n      public Get setAlt(java.lang.String alt) {\n        return (Get) super.setAlt(alt);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setAlt", "class_name": "Get", "index": 1460, "label": 1}
{"input": "@Override\n    public void onConfigurationChanged(Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n        getDelegate().onConfigurationChanged(newConfig);\n    }", "timestamp": "2020-04-24T04:10:40.106278Z", "repo_name": "lyriarte/tripmaster", "path": "/app/src/main/java/org/thingagora/tripmaster/AppCompatPreferenceActivity.java", "source": "the-stack-v2", "method_name": "onConfigurationChanged", "class_name": "AppCompatPreferenceActivity", "index": 1461, "label": 1}
{"input": "private User reigster(TopUser tUser, DataService dao) throws Exception {\n\t\tUser user = new User();\n\t\tuser.setId(tUser.getId());\n\t\tuser.setSessionKey(tUser.getSession_key());\n\t\tuser.setRefreshToken(tUser.getRefresh_token());\n\t\tuser.setExpiresIn(tUser.getExpires_in());\n\t\tuser.setReExpiresIn(tUser.getExpires_in());\n\t\tuser.setRegistTime(new Date());\n\t\tuser.setLastLogin(new Date());\n\t\tdao.save(user);\n\t\treturn user;\n\t}", "timestamp": "2020-05-30T14:18:20.808734Z", "repo_name": "modaokj/payInteract", "path": "/payInteract/src/com/softright/tbcards/actions/TaobaoEntryAction.java", "source": "the-stack-v2", "method_name": "reigster", "class_name": "TaobaoEntryAction", "index": 1462, "label": 1}
{"input": "@Test\n    public void testDataOnlyLogUnequalToTopicsLogWithTopics() {\n        byte[] topic = randomBytes(1);\n        System.out.println(\"Test is using random topic: \" + bytesToString(topic));\n\n        Log dataOnlyLog = Log.dataOnly(this.address, this.data);\n        Log topicsAndDataOnlyLog = Log.topicsAndData(this.address, Collections.singletonList(topic), this.data);\n\n        assertNotEquals(dataOnlyLog, topicsAndDataOnlyLog);\n    }", "timestamp": "2020-06-03T14:12:10.752160Z", "repo_name": "aionnetwork/aion_types", "path": "/test/org/aion/types/LogTest.java", "source": "the-stack-v2", "method_name": "testDataOnlyLogUnequalToTopicsLogWithTopics", "class_name": "LogTest", "index": 1463, "label": 1}
{"input": "public String[] listOfAvailableComponents() {\n        String[] components = {\"textarea\"};\n        return components;\n           \n        \n    }", "timestamp": "2020-05-06T15:49:29.551449Z", "repo_name": "gokcse/Go-Cloud", "path": "/Go Cloud Source Code/Netbeans 6.1 - Virtual Machine/CloudComputingServer/src/org/cit/CloudComputing/T_Editor.java", "source": "the-stack-v2", "method_name": "listOfAvailableComponents", "class_name": "Frame_class", "index": 1464, "label": 1}
{"input": "public int climbStairs_array(int n) {\n        if (n < 2) {\n            return 1;\n        }\n\n        int[] dp = new int[n+1];\n        dp[0] = 1;\n        dp[1] = 1;\n\n        for (int i = 2; i <= n; i++) {\n            dp[i] = dp[i-1] + dp[i-2];\n        }\n\n        return dp[n];\n    }", "timestamp": "2023-04-27T19:24:15.779140Z", "repo_name": "dadnotorc/orgrammar", "path": "/src/leetcode/_0070_ClimbingStairs.java", "source": "the-stack-v2", "method_name": "climbStairs_array", "class_name": "_0070_ClimbingStairs", "index": 1465, "label": 1}
{"input": "public Criteria andVdef13NotLike(String value) {\r\n            addCriterion(\"VDEF13 not like\", value, \"vdef13\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef13NotLike", "class_name": "GeneratedCriteria", "index": 1466, "label": 1}
{"input": "public boolean match(CastExpression node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 1467, "label": 1}
{"input": "@Override\n\tpublic void mueveIzquerda(TipoMovimiento tipo) {\n\t\tfor (PuntoRoboticas pr: PuntosRoboticasCfg.getListaPuntos()){\t\t\n\t\t\tif (\"movingHead1\".equals(this.id)){\n\t\t\t\tif (tipo == TipoMovimiento.TRASLADA)\n\t\t\t\t\tpr.setMovingHead1Pan(pr.getMovingHead1Pan()-1);\n\t\t\t\telse\n\t\t\t\t\tpr.setMovingHead1Pan((int)(pr.getMovingHead1Pan()/1.025));\n\t\t\t}else{\n\t\t\t\tif (tipo == TipoMovimiento.TRASLADA)\n\t\t\t\t\tpr.setMovingHead2Pan(pr.getMovingHead2Pan()-1);\n\t\t\t\telse\n\t\t\t\t\tpr.setMovingHead2Pan((int)(pr.getMovingHead2Pan()/1.025));\n\t\t\t}\n\t\t}\n\t\tactualizaPuntos();\n\t\tpnlCanvas.repaint();\n\t\tPuntosRoboticasCfg.grabar();\t\t\n\t}", "timestamp": "2021-07-07T15:13:46.386311Z", "repo_name": "clillo/iluminacion", "path": "/src/com/clillo/dmx/ui/jpanels/opcionesMenu/PanelMantienePuntosMovingHeads.java", "source": "the-stack-v2", "method_name": "mueveIzquerda", "class_name": "PanelMantienePuntosMovingHeads", "index": 1468, "label": 1}
{"input": "@JavascriptInterface\n    public void setInitialAudioState(final String s) {\n        if (!this.isInterstitial && Version.getAndroidSDKVersion() >= 14) {\n            Logging.log(\"window.ADMARVEL.setInitialAudioState()\");\n            final m m = (m)this.adMarvelWebViewReference.get();\n            if (m != null && s != null && s.trim().length() > 0) {\n                if (s.equalsIgnoreCase(\"mute\")) {\n                    m.P = true;\n                    return;\n                }\n                if (s.equalsIgnoreCase(\"unmute\")) {\n                    m.P = false;\n                }\n            }\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "setInitialAudioState", "class_name": "AdMarvelWebViewJSInterface", "index": 1469, "label": 1}
{"input": "public void setDefaultServiceType(String defaultServiceType) {\r\n        this.defaultServiceType = defaultServiceType;\r\n    }", "timestamp": "2020-05-17T01:26:00.968575Z", "repo_name": "gahlawat4u/repoName", "path": "/rda0105-agl-aus-java-a43926f304e3/xms-dto/src/main/java/com/gms/xms/model/webship/ShipmentInfoModel.java", "source": "the-stack-v2", "method_name": "setDefaultServiceType", "class_name": "ShipmentInfoModel", "index": 1470, "label": 1}
{"input": "@Override \n        public void setPreferredNetworkTypeResponse(RadioResponseInfo info) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(64, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "setPreferredNetworkTypeResponse", "class_name": "Proxy", "index": 1471, "label": 1}
{"input": "private Properties getProperties() {\n\t\t\n\t\tProperties properties = new Properties();\n\t\tproperties.put(\"hibernate.dialect\", DATABASE_DIALECT);\t\n\t\tproperties.put(\"hibernate.show_sql\", true);\n\t\tproperties.put(\"hibernate.format_sql\", true);\n\n\t\treturn properties;\n\t}", "timestamp": "2022-12-30T14:23:55.642319Z", "repo_name": "JESITConsulting/onlineshopping", "path": "/shoppingbackend/src/main/java/net/jgw/shoppingbackend/config/HibernateConfig.java", "source": "the-stack-v2", "method_name": "getProperties", "class_name": "HibernateConfig", "index": 1472, "label": 1}
{"input": "@Override\n  public void init() {\n    subscribeTo(CHECKED_TYPES);\n    if (!Strings.isNullOrEmpty(regularExpression)) {\n      try {\n        pattern = Pattern.compile(regularExpression, Pattern.DOTALL);\n      } catch (RuntimeException e) {\n        throw new SonarException(\"Unable to compile regular expression: \" + regularExpression, e);\n      }\n    }\n  }", "timestamp": "2021-01-18T08:50:23.696480Z", "repo_name": "chocks/sonar-cxx", "path": "/cxx-checks/src/main/java/org/sonar/cxx/checks/UseCorrectTypeCheck.java", "source": "the-stack-v2", "method_name": "init", "class_name": "UseCorrectTypeCheck", "index": 1473, "label": 1}
{"input": "private void initDate() {\n        DisplayMetrics dm = new DisplayMetrics();\n        ((WindowManager) getContext().getSystemService(\"window\")).getDefaultDisplay().getMetrics(dm);\n        this.mScreenWidth = dm.widthPixels;\n        this.mDestationHeight = (int) (((float) this.mScreenWidth) * VIDEO_HEIGHT_PERCENT);\n        this.mFormatBuilder = new StringBuilder();\n        this.mFormatter = new Formatter(this.mFormatBuilder, Locale.getDefault());\n    }", "timestamp": "2020-11-25T21:02:17.790224Z", "repo_name": "pk1z/wladimir-computin-FimiX8-RE-App", "path": "/sources/com/fimi/album/widget/CustomVideoView.java", "source": "the-stack-v2", "method_name": "initDate", "class_name": "CustomVideoView", "index": 1474, "label": 1}
{"input": "@Test\n    @Transactional\n    public void getAllAuthoritiesByCodeIsEqualToSomething() throws Exception {\n        \n        authorityRepository.saveAndFlush(authority);\n\n        \n        defaultAuthorityShouldBeFound(\"code.equals=\" + DEFAULT_CODE);\n\n        \n        defaultAuthorityShouldNotBeFound(\"code.equals=\" + UPDATED_CODE);\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "getAllAuthoritiesByCodeIsEqualToSomething", "class_name": "AuthorityResourceIT", "index": 1475, "label": 1}
{"input": "public void imprimeResumo() {\n\t\tfloat total = preco * quantidade;\n\n\t\tSystem.out.println();\n\t\tSystem.out.println(\"-- RESUMO DA COMPRA --\");\n\t\tSystem.out.println(\"Produto: \"+ getNomeProduto());\n\t\tSystem.out.println(\"Valor: R$\"+ getPreco());\n\t\tSystem.out.println(\"Quantidade: \"+ getQuantidade());\n\t\tSystem.out.println(\"Total: R$\"+ total);\n\n\t}", "timestamp": "2021-01-10T18:31:28.109837Z", "repo_name": "TADebastiani/Prog1-java", "path": "/Compra.java", "source": "the-stack-v2", "method_name": "imprimeResumo", "class_name": "Compra", "index": 1476, "label": 1}
{"input": "public void setTorchMode(int torchMode) {\n        RCTCamera.getInstance().setTorchMode(_cameraType, torchMode);\n    }", "timestamp": "2021-01-22T13:30:35.067748Z", "repo_name": "javiercf/react-cam-fd", "path": "/android/src/main/java/com/lwansbrough/RCTCamera/RCTCameraViewFinder.java", "source": "the-stack-v2", "method_name": "setTorchMode", "class_name": "RCTCameraViewFinder", "index": 1477, "label": 1}
{"input": "public Criteria andVdef17EqualTo(String value) {\r\n            addCriterion(\"VDEF17 =\", value, \"vdef17\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef17EqualTo", "class_name": "GeneratedCriteria", "index": 1478, "label": 1}
{"input": "public void tv1Btn(View.OnClickListener clickListener) {\n        textView1.setOnClickListener(clickListener);\n    }", "timestamp": "2022-12-21T07:36:15.374736Z", "repo_name": "wanlihua/Androidgit", "path": "/src/main/java/com/dtl/gemini/widget/MorePopWindow.java", "source": "the-stack-v2", "method_name": "tv1Btn", "class_name": "MorePopWindow", "index": 1479, "label": 1}
{"input": "@Test\n    @Transactional\n    public void getAllAuthoritiesByNameContainsSomething() throws Exception {\n        \n        authorityRepository.saveAndFlush(authority);\n\n        \n        defaultAuthorityShouldBeFound(\"name.contains=\" + DEFAULT_NAME);\n\n        \n        defaultAuthorityShouldNotBeFound(\"name.contains=\" + UPDATED_NAME);\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "getAllAuthoritiesByNameContainsSomething", "class_name": "AuthorityResourceIT", "index": 1480, "label": 1}
{"input": "public void testBug100772_HierarchyScope_InterfacesAndClass08() throws CoreException {\n\tsetUpBug100772_HierarchyScope_InterfacesAndClass();\n\tIType type = this.workingCopies[0].getType(\"X\");\n\tIMethod method = type.getMethod(\"foo\", new String[] { \"QException;\" });\n\tsearch(method, UI_DECLARATIONS, SearchEngine.createHierarchyScope(type));\n\tassertSearchResults(\n\t\t\"src/b100772/Test.java void b100772.X.foo(Exception) [foo] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug100772_HierarchyScope_InterfacesAndClass08", "class_name": "JavaSearchBugsTests", "index": 1481, "label": 1}
{"input": "@Override\n\tpublic boolean hasExecutorInterceptors() {\n\t\treturn this.executorInterceptorsSize > 0;\n\t}", "timestamp": "2023-09-05T19:35:16.296440Z", "repo_name": "spring-projects/spring-integration", "path": "/spring-integration-core/src/main/java/org/springframework/integration/channel/AbstractExecutorChannel.java", "source": "the-stack-v2", "method_name": "hasExecutorInterceptors", "class_name": "AbstractExecutorChannel", "index": 1482, "label": 1}
{"input": "@Test\n  public void getServiceLevelObjectiveExceptionTest2() throws Exception {\n    StatusRuntimeException exception = new StatusRuntimeException(io.grpc.Status.INVALID_ARGUMENT);\n    mockServiceMonitoringService.addException(exception);\n\n    try {\n      String name = \"name3373707\";\n      client.getServiceLevelObjective(name);\n      Assert.fail(\"No exception raised\");\n    } catch (InvalidArgumentException e) {\n      \n    }\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-monitoring/google-cloud-monitoring/src/test/java/com/google/cloud/monitoring/v3/ServiceMonitoringServiceClientTest.java", "source": "the-stack-v2", "method_name": "getServiceLevelObjectiveExceptionTest2", "class_name": "ServiceMonitoringServiceClientTest", "index": 1483, "label": 1}
{"input": "@GraphProperty(interceptor = HybrisEnumValueToStringConverter.class)\n\tpublic void setLogLevelDatabase(final String logLevelDatabase)\n\t{\n\t\tthis.modifiedPropsSet.add(\"logLevelDatabase\");\n\t\tthis.logLevelDatabase = logLevelDatabase;\n\t}", "timestamp": "2022-11-28T12:15:32.049256Z", "repo_name": "BaggaShivanshu2/hybris-bookstore-tutorial", "path": "/hybris/bin/ext-platform-optional/platformwebservices/custom/src/de/hybris/platform/cronjob/customdto/CronJobDTO.java", "source": "the-stack-v2", "method_name": "setLogLevelDatabase", "class_name": "CronJobDTO", "index": 1484, "label": 1}
{"input": "public void testBug109695g() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/UTF16DocumentScannerSupport.java\",\n\t\t\"public class UTF16DocumentScannerSupport {}\\n\" +\n\t\t\"class UTF1DocScannerSupport {}\\n\" +\n\t\t\"class UTF6DocScannerSupport {}\\n\" +\n\t\t\"class UTFDocScannerSupport {}\\n\"\n\t);\n\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();\n\tint validatedRule = SearchPattern.validateMatchRule(\"UTF1DSS\", SearchPattern.R_CAMELCASE_MATCH);\n\tsearchAllTypeNames(\"UTF1DSS\", validatedRule, requestor);\n\tassertSearchResults(\n\t\t\"UTF16DocumentScannerSupport\\n\" +\n\t\t\"UTF1DocScannerSupport\",\n\t\trequestor\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug109695g", "class_name": "JavaSearchBugsTests", "index": 1485, "label": 1}
{"input": "public FormalParameterContext formalParameter() {\n\t\t\treturn getRuleContext(FormalParameterContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "formalParameter", "class_name": "CatchClauseContext", "index": 1486, "label": 1}
{"input": "@Override\r\n    public void parseStartTag(XmlPullParser parser) {\r\n      if (TAG_PROTECTION_HEADER.equals(parser.getName())) {\r\n        inProtectionHeader = true;\r\n        String uuidString = parser.getAttributeValue(null, KEY_SYSTEM_ID);\r\n        uuidString = stripCurlyBraces(uuidString);\r\n        uuid = UUID.fromString(uuidString);\r\n      }\r\n    }", "timestamp": "2020-12-10T15:15:05.202410Z", "repo_name": "AhabweEmmanuel/Marlia", "path": "/TMessagesProj/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java", "source": "the-stack-v2", "method_name": "parseStartTag", "class_name": "ProtectionParser", "index": 1487, "label": 1}
{"input": "@Bean\n    public TokenStore tokenStore(JwtAccessTokenConverter jwtAccessTokenConverter) {\n        return new JwtTokenStore(jwtAccessTokenConverter);\n    }", "timestamp": "2020-09-07T00:55:14.058223Z", "repo_name": "anvar1/xb-gateway-application", "path": "/src/main/java/uz/almsoft/gateway/config/SecurityConfiguration.java", "source": "the-stack-v2", "method_name": "tokenStore", "class_name": "SecurityConfiguration", "index": 1488, "label": 1}
{"input": "public static void main(String args[]) {\n        Scanner sc = new Scanner(System.in);\n        int n,k,i;\n        BigInteger num;\n        \n        while(true){\n        n= sc.nextInt();\n        k= sc.nextInt();\n        \n        if(n==0&&k==0){\n            System.exit(0);\n        }\n\n        \n        num = BigInteger.valueOf(1);\n        for(i=1;i<=k;++i){\n            System.out.print(num.mod(BigInteger.valueOf(1000000007)));\n            System.out.print(\" \");\n\n\n            num=num.multiply(BigInteger.valueOf(n-i+1));\n            num=num.divide(BigInteger.valueOf(i));\n        }\n        System.out.println(num.mod(BigInteger.valueOf(1000000007)));\n        \n            \n        }\n    }", "timestamp": "2020-06-30T01:42:17.284659Z", "repo_name": "JuncoDH/CompetitiveProgramming", "path": "/Online_Judges/AceptaElReto/227.java", "source": "the-stack-v2", "method_name": "main", "class_name": "MyClass", "index": 1489, "label": 1}
{"input": "private void jBDelMouseEntered(java.awt.event.MouseEvent evt) {\n        \n        \n        jBDel.setBackground(Star.colBot);\n        \n    }", "timestamp": "2020-06-10T12:22:45.426839Z", "repo_name": "njmube/SOSDev", "path": "/Electricos/src/cats/SerNotVent.java", "source": "the-stack-v2", "method_name": "jBDelMouseEntered", "class_name": "SerNotVent", "index": 1490, "label": 1}
{"input": "@Override\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n\n        \n        if (requestCode == RC_SIGN_IN) {\n            \n            \n            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\n            handleSignInResult(task);\n        } else {\n            \n            mCallbackManager.onActivityResult(requestCode, resultCode, data);\n        }\n    }", "timestamp": "2022-06-10T17:57:08.381357Z", "repo_name": "wilsonmwiti/FirebaseUiSignin", "path": "/app/src/main/java/com/spiritledinc/firebaseuisignin/MainActivity.java", "source": "the-stack-v2", "method_name": "onActivityResult", "class_name": "MainActivity", "index": 1491, "label": 1}
{"input": "@Test\n\tpublic void runWithCustomHealthMappingShouldMapStatusCode() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.health.status.http-mapping.CUSTOM=500\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tObject extension = context\n\t\t\t\t\t\t\t.getBean(ReactiveHealthEndpointWebExtension.class);\n\t\t\t\t\tHealthStatusHttpMapper mapper = (HealthStatusHttpMapper) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(extension, \"statusHttpMapper\");\n\t\t\t\t\tMap<String, Integer> statusMappings = mapper.getStatusMapping();\n\t\t\t\t\tassertThat(statusMappings).containsEntry(\"DOWN\", 503);\n\t\t\t\t\tassertThat(statusMappings).containsEntry(\"OUT_OF_SERVICE\", 503);\n\t\t\t\t\tassertThat(statusMappings).containsEntry(\"CUSTOM\", 500);\n\t\t\t\t});\n\t}", "timestamp": "2021-08-28T23:16:47.200509Z", "repo_name": "GuldanChen/spring-boot", "path": "/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/HealthWebEndpointReactiveManagementContextConfigurationTests.java", "source": "the-stack-v2", "method_name": "runWithCustomHealthMappingShouldMapStatusCode", "class_name": "HealthWebEndpointReactiveManagementContextConfigurationTests", "index": 1492, "label": 1}
{"input": "public void setAutoScalingGroupName(String autoScalingGroupName) {\n        this.autoScalingGroupName = autoScalingGroupName;\n    }", "timestamp": "2021-01-20T20:36:53.719764Z", "repo_name": "lenadkn/java-sdk-test-2", "path": "/aws-java-sdk-autoscaling/src/main/java/com/amazonaws/services/autoscaling/model/DeletePolicyRequest.java", "source": "the-stack-v2", "method_name": "setAutoScalingGroupName", "class_name": "DeletePolicyRequest", "index": 1493, "label": 1}
{"input": "@Override\n    public SequenceObservable<T> toastError() {\n        return (SequenceObservable<T>) super.toastError();\n    }", "timestamp": "2023-02-03T14:40:42.305750Z", "repo_name": "huxinjun/fastapi", "path": "/fastapi/src/main/java/org/pulp/fastapi/extension/SequenceObservable.java", "source": "the-stack-v2", "method_name": "toastError", "class_name": "SequenceObservable", "index": 1494, "label": 1}
{"input": "@RequestMapping(\"/checkout\")\n\tpublic String modifyCheck(Check ci){\n\t\tcheckService.CheckOut(ci);\n\t\treturn \"menu\";\n\t}", "timestamp": "2020-08-01T17:38:59.224323Z", "repo_name": "AirAnYv/ExtremeManager", "path": "/ExtremeManager/src/com/nxa/controller/CheckController.java", "source": "the-stack-v2", "method_name": "modifyCheck", "class_name": "CheckController", "index": 1495, "label": 1}
{"input": "@Override\n      public Insert setAlt(java.lang.String alt) {\n        return (Insert) super.setAlt(alt);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setAlt", "class_name": "Insert", "index": 1496, "label": 1}
{"input": "@Override\n  public ch.actifsource.core.javamodel.IClass selectTypeOf() {\n    return _getSingle(ch.actifsource.core.javamodel.IClass.class, \"3169f49a-f91f-11d9-bb45-5fabdff7c7da\");\n  }", "timestamp": "2016-09-05T16:42:50.124353Z", "repo_name": "copton/ActifsourceExamples", "path": "/SimpleService/src-gen/com/actifsource/simpleservice/generic/javamodel/Call.java", "source": "the-stack-v2", "method_name": "selectTypeOf", "class_name": "Call", "index": 1497, "label": 1}
{"input": "@Override\r\n\tpublic void focusLost(FocusEvent fe) {\r\n\t\t\n\t\tObject src=fe.getSource();\r\n\t\tif(src==txuserid)\r\n\t\t{\r\n\t\tjmagid.removeAllItems();\r\n\t\tjmagid.addItem(\"select magzine id\");\r\n\t\ttry\r\n\t\t{\r\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306\",\"root\",\"\");\r\n\t\t\tStatement stmt = con.createStatement();\r\n\t\t\tstmt.execute(\"use LibraryDB\");\r\n\t\t\t\r\n\t\t\tPreparedStatement pstmt=con.prepareStatement(\"select Book_ID from MagazineIssueTb where ID=?\");\r\n\t\t\tpstmt.setInt(1, Integer.parseInt(txuserid.getText()));\r\n\t\t\tResultSet rs=pstmt.executeQuery();\r\n\t\t\t\r\n\t\t\twhile(rs.next())\r\n\t\t\t{\r\n\t\t\t\tjmagid.addItem(rs.getInt(1)+\"\");\r\n\t\t\t}\r\n\t\t\r\n\t\t\tcon.close();\r\n\t\t}\r\n\t\tcatch (Exception e) {\r\n\t\t\t\n\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\tif(src==txdelay)\r\n\t\t\t{\r\n\t\t\t\ttxfine.setText(Integer.parseInt(txdelay.getText())*2+\"\");\r\n\t\t\t}\r\n\t\t\r\n\t\t\r\n\t}", "timestamp": "2020-03-29T06:14:35.053504Z", "repo_name": "SakshiSingh25/project", "path": "/MagazineReturn.java", "source": "the-stack-v2", "method_name": "focusLost", "class_name": "MagazineReturn", "index": 1498, "label": 1}
{"input": "private Document getHtmlBody(Connection connection, SiteUri siteUri) throws IOException, DownloadException\n    {\n        JSONObject params = siteUri.getParams();\n        if (null != params)\n        {\n            JSONArray keys = params.names();\n            for (int i = 0; i < keys.length(); ++i)\n            {\n                String key = keys.getString(i);\n                connection.data(key, params.getString(key));\n            }\n        }\n\n        if (siteUri.getMethod() == HttpMethodEnum.GET)\n        {\n            return connection.get();\n        }\n\n        if (siteUri.getMethod() == HttpMethodEnum.POST)\n        {\n            return connection.post();\n        }\n\n        throw new DownloadException(\"Unhandled Method\");\n    }", "timestamp": "2022-11-26T19:35:30.152581Z", "repo_name": "balazskrizsan/weather-snapshot", "path": "/src/main/java/com/kbalazsworks/weathersnapshot/service/DownloaderService.java", "source": "the-stack-v2", "method_name": "getHtmlBody", "class_name": "DownloaderService", "index": 1499, "label": 1}
{"input": "@Test\n    @Transactional\n    public void getAllAuthoritiesByParentIsEqualToSomething() throws Exception {\n        \n        authorityRepository.saveAndFlush(authority);\n        Authority parent = AuthorityResourceIT.createEntity(em);\n        em.persist(parent);\n        em.flush();\n        authority.setParent(parent);\n        authorityRepository.saveAndFlush(authority);\n        Long parentId = parent.getId();\n\n        \n        defaultAuthorityShouldBeFound(\"parentId.equals=\" + parentId);\n\n        \n        defaultAuthorityShouldNotBeFound(\"parentId.equals=\" + (parentId + 1));\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "getAllAuthoritiesByParentIsEqualToSomething", "class_name": "AuthorityResourceIT", "index": 1500, "label": 1}
{"input": "private static String computeName( IgnoreItem iim, Map m ) {\n \t\treturn getNumberedName( \"\", 1, m );\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/6/6_7532b921b64d0f9159adb4080422cb222237a131/RuleFileGenerator/6_7532b921b64d0f9159adb4080422cb222237a131_RuleFileGenerator_s.java", "source": "the-stack-v2", "method_name": "computeName", "class_name": "RuleFileGenerator", "index": 1501, "label": 1}
{"input": "@Override\n\tprotected void delete(Object object) {\n\t\tennMonitorAlarmTicketEmailCache.remove((EnnMonitorAlarmConfigEmailGetDeleted) object);\n\t}", "timestamp": "2021-03-21T03:44:38.105122Z", "repo_name": "charmby/monitor-ye", "path": "/enn-monitor-alarm/enn-monitor-alarm-ticket-server/src/main/java/enn/monitor/alarm/ticket/email/pipe/EnnMonitorAlarmTicketEmailPipeClientImpl.java", "source": "the-stack-v2", "method_name": "delete", "class_name": "EnnMonitorAlarmTicketEmailPipeClientImpl", "index": 1502, "label": 1}
{"input": "@Override\n  public <S, R> CoprocessorServiceBuilder<S, R> coprocessorService(\n      Function<RpcChannel, S> stubMaker, ServiceCaller<S, R> callable,\n      CoprocessorCallback<R> callback) {\n    return new CoprocessorServiceBuilderImpl<>(stubMaker, callable, callback);\n  }", "timestamp": "2020-03-21T15:28:16.237120Z", "repo_name": "siwuxietang/hbase", "path": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncTableImpl.java", "source": "the-stack-v2", "method_name": "coprocessorService", "class_name": "RawAsyncTableImpl", "index": 1503, "label": 1}
{"input": "public Criteria andUserpasswordEqualTo(String value) {\r\n            addCriterion(\"USERPASSWORD =\", value, \"userpassword\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andUserpasswordEqualTo", "class_name": "GeneratedCriteria", "index": 1504, "label": 1}
{"input": "void readQuotedString() throws HsqlException {\n\n        if (token.dataType.typeCode != Types.SQL_CHAR) {\n            throw Error.error(ErrorCode.X_42565);\n        }\n    }", "timestamp": "2023-09-03T10:33:34.963710Z", "repo_name": "svn2github/hsqldb", "path": "/base/branches/odbcproto1/src/org/hsqldb/ParserBase.java", "source": "the-stack-v2", "method_name": "readQuotedString", "class_name": "ParserBase", "index": 1505, "label": 1}
{"input": "@Test\n    public void useAppContext() {\n        \n        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();\n        assertEquals(\"com.example.msisdqa\", appContext.getPackageName());\n    }", "timestamp": "2022-11-23T05:24:19.224130Z", "repo_name": "kentwx/msi.sdqa", "path": "/app/src/androidTest/java/com/example/msisdqa/ExampleInstrumentedTest.java", "source": "the-stack-v2", "method_name": "useAppContext", "class_name": "ExampleInstrumentedTest", "index": 1506, "label": 1}
{"input": "public Criteria andUserStIdIsNotNull() {\r\n            addCriterion(\"user_st_id is not null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2022-12-10T20:39:24.451742Z", "repo_name": "TangHui-ops/myProject", "path": "/后端/weixingxiaocx/src/main/java/cn/bdqn/mbg/model/UserStateTypeExample.java", "source": "the-stack-v2", "method_name": "andUserStIdIsNotNull", "class_name": "GeneratedCriteria", "index": 1507, "label": 1}
{"input": "public Criteria andUserStIdEqualTo(Integer value) {\r\n            addCriterion(\"user_st_id =\", value, \"userStId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2022-12-10T20:39:24.451742Z", "repo_name": "TangHui-ops/myProject", "path": "/后端/weixingxiaocx/src/main/java/cn/bdqn/mbg/model/UserStateTypeExample.java", "source": "the-stack-v2", "method_name": "andUserStIdEqualTo", "class_name": "GeneratedCriteria", "index": 1508, "label": 1}
{"input": "public void testWellKnownBindings() {\n\n\t\t\n\t\tString[] wkbs = {\n\t\t\t\"byte\", \"char\", \"short\", \"int\", \"long\", \n\t\t\t\"boolean\", \"float\", \"double\", \"void\", \n\t\t\t\"java.lang.Class\", \n\t\t\t\"char\"0, \n\t\t\t\"char\"1, \n\t\t\t\"char\"2, \n\t\t\t\"char\"3, \n\t\t\t\"char\"4, \n\t\t\t\"char\"5, \n\t\t\t\"char\"6, \n\t\t\t\"char\"7, \n\t\t\t\"char\"8, \n\t\t\t\"char\"9, \n\t\t\t\"short\"0, \n\t\t\t\"short\"1, \n\t\t\t\"short\"2, \n\t\t\t\"short\"3, \n\t\t\t\"short\"4, \n\t\t\t\"short\"5, \n\t\t\t\"short\"6, \n\t\t\t\"short\"7, \n\t\t};\n\t\t\n\t\t\n\t\tString[] nwkbs = {\n\t\t\t\"short\"8, \n\t\t\t\"short\"9, \n\t\t\t\"int\"0, \n\t\t};\n\t\n\t\t\n\t\tfor (int i = 0; i<wkbs.length; i++) {\n\t\t\tassertTrue(ast.resolveWellKnownType(wkbs[i]) == null);\n\t\t}\n\t\n\t\t\n\t\tfor (int i = 0; i<nwkbs.length; i++) {\n\t\t\tassertTrue(ast.resolveWellKnownType(nwkbs[i]) == null);\n\t\t}\n\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "testWellKnownBindings", "class_name": "ASTTest", "index": 1509, "label": 1}
{"input": "public static void main(String[] args) {\n\t\tSpringApplication.run(OrderConsumerStarter.class,args);\n\t}", "timestamp": "2022-12-25T19:50:57.564912Z", "repo_name": "YongkangFan/WetripProject", "path": "/bigtom-order-consumer/src/main/java/xyz/bigtom/OrderConsumerStarter.java", "source": "the-stack-v2", "method_name": "main", "class_name": "OrderConsumerStarter", "index": 1510, "label": 1}
{"input": "@Test\n    public void getClientEndpoint() throws Exception {\n        ResultActions perform = restMockMvc.perform(get(\"/non-existant-mapping\"));\n        perform\n            .andExpect(status().isOk())\n            .andExpect(forwardedUrl(\"/\"));\n    }", "timestamp": "2023-02-04T07:50:23.383164Z", "repo_name": "CyberCastle/WasteCollectorTracer", "path": "/src/test/java/cl/cc/web/rest/ClientForwardControllerTest.java", "source": "the-stack-v2", "method_name": "getClientEndpoint", "class_name": "ClientForwardControllerTest", "index": 1511, "label": 1}
{"input": "public void setModifiedDate(java.util.Date modifiedDate) {\n        this.modifiedDate = modifiedDate;\n    }", "timestamp": "2021-01-25T05:50:39.073013Z", "repo_name": "erbrito/aws-java-sdk", "path": "/aws-java-sdk-ssm/src/main/java/com/amazonaws/services/simplesystemsmanagement/model/UpdatePatchBaselineResult.java", "source": "the-stack-v2", "method_name": "setModifiedDate", "class_name": "UpdatePatchBaselineResult", "index": 1512, "label": 1}
{"input": "@Test\n    @Transactional\n    void putWithIdMismatchTransaction() throws Exception {\n        int databaseSizeBeforeUpdate = transactionRepository.findAll().size();\n        transaction.setId(count.incrementAndGet());\n\n        \n        restTransactionMockMvc\n            .perform(\n                put(ENTITY_API_URL_ID, count.incrementAndGet())\n                    .with(csrf())\n                    .contentType(MediaType.APPLICATION_JSON)\n                    .content(TestUtil.convertObjectToJsonBytes(transaction))\n            )\n            .andExpect(status().isBadRequest());\n\n        \n        List<Transaction> transactionList = transactionRepository.findAll();\n        assertThat(transactionList).hasSize(databaseSizeBeforeUpdate);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "putWithIdMismatchTransaction", "class_name": "TransactionResourceIT", "index": 1513, "label": 1}
{"input": "public static IRequestBody build(final BodyType bodyType,Object content,final byte[] body) {\n        return new RequestBody(bodyType, content , body);\n    }", "timestamp": "2023-07-28T05:30:04.301660Z", "repo_name": "osvaldogh85/rest_tinny", "path": "/RestfulClient/src/main/java/com/restfulclient/impl/RequestBody.java", "source": "the-stack-v2", "method_name": "build", "class_name": "RequestBody", "index": 1514, "label": 1}
{"input": "@Override\n    @SuppressWarnings(\"unchecked\")\n    public Class<? extends RuleFactory> getCustomRuleFactory() {\n        if (isNotBlank(customRuleFactory)) {\n            try {\n                return (Class<? extends RuleFactory>) Class.forName(customRuleFactory);\n            } catch (ClassNotFoundException e) {\n                throw new IllegalArgumentException(e);\n            }\n        } else {\n            return RuleFactory.class;\n        }\n    }", "timestamp": "2020-04-03T18:05:28.604343Z", "repo_name": "brentsowers1/jsonschema2pojo", "path": "/jsonschema2pojo-maven-plugin/src/main/java/org/jsonschema2pojo/maven/Jsonschema2PojoMojo.java", "source": "the-stack-v2", "method_name": "getCustomRuleFactory", "class_name": "Jsonschema2PojoMojo", "index": 1515, "label": 1}
{"input": "public void setMaterialRequest(PcMaterialRequest materialRequest) {\n\t\tthis.materialRequest = materialRequest;\n\t}", "timestamp": "2020-07-18T13:00:48.470174Z", "repo_name": "siba8908/osdmanew", "path": "/src/main/java/com/sunjray/osdma/SMmodel/ConsignmentLogistic.java", "source": "the-stack-v2", "method_name": "setMaterialRequest", "class_name": "ConsignmentLogistic", "index": 1516, "label": 1}
{"input": "public static void main(String[] args) {\n        System.out.println( arrayPairSum(new int[]{\n                1,4,3,2\n        }));\n    }", "timestamp": "2022-07-08T17:18:23.954213Z", "repo_name": "DavinderSinghKharoud/AlgorithmsAndDataStructures", "path": "/LeetCode/ArrayPartitionI.java", "source": "the-stack-v2", "method_name": "main", "class_name": "ArrayPartitionI", "index": 1517, "label": 1}
{"input": "public Long getDiasCriacao() {\n\t\tLocalDate inicio = dataCriacao != null ? dataCriacao.toLocalDate() : LocalDate.now();\n\t\treturn ChronoUnit.DAYS.between(inicio, LocalDate.now());\n\t}", "timestamp": "2021-01-13T05:23:47.336037Z", "repo_name": "Beleboni/spring-project", "path": "/src/main/java/com/algaworks/brewer/model/Pedido.java", "source": "the-stack-v2", "method_name": "getDiasCriacao", "class_name": "Pedido", "index": 1518, "label": 1}
{"input": "@Test public void testInnerJoinValues() {\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.LINGUAL)\n        .query(\"select empno, desc from sales.emps,\\n\"\n            + \"  (SELECT * FROM (VALUES (10, 'SameName')) AS t (id, desc)) as sn\\n\"\n            + \"where emps.deptno = sn.id and sn.desc = 'SameName' group by empno, desc\")\n        .explainContains(\"EnumerableAggregate(group=[{0, 3}])\\n\"\n            + \"  EnumerableNestedLoopJoin(condition=[=(CAST($1):INTEGER NOT NULL, $2)], joinType=[inner])\\n\"\n            + \"    EnumerableTableScan(table=[[SALES, EMPS]])\\n\"\n            + \"    EnumerableCalc(expr#0..1=[{inputs}], expr#2=['SameName'], expr#3=[=($t1, $t2)], proj#0..1=[{exprs}], $condition=[$t3])\\n\"\n            + \"      EnumerableValues(tuples=[[{ 10, 'SameName' }]])\\n\")\n        .returns(\"EMPNO=1; DESC=SameName\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testInnerJoinValues", "class_name": "JdbcTest", "index": 1519, "label": 1}
{"input": "@Override\n    public void setDistrictTitle(String districtTitle){\n        this.districtTitle = districtTitle;\n    }", "timestamp": "2020-12-02T05:43:39.783730Z", "repo_name": "drilion/tuturu_test", "path": "/app/src/main/java/com/selfcompany/tuturutest/subjects/CitiesTo.java", "source": "the-stack-v2", "method_name": "setDistrictTitle", "class_name": "CitiesTo", "index": 1520, "label": 1}
{"input": "public static String getProperty(String key){\n\n        Properties props = new Properties();\n\n        try {\n            props.load(Propertiesmanager.class.getClassLoader().getResourceAsStream(\"config/tank.properties\"));\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n\n\n        return props.getProperty(key);\n    }", "timestamp": "2021-01-10T02:14:23.269751Z", "repo_name": "weics/TankWar", "path": "/src/Propertiesmanager.java", "source": "the-stack-v2", "method_name": "getProperty", "class_name": "Propertiesmanager", "index": 1521, "label": 1}
{"input": "@Override\n  public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {\n\n    \n    doGet(request, response);\n  }", "timestamp": "2023-01-12T13:11:43.708344Z", "repo_name": "gary-jipp/demo-servlet", "path": "/src/main/java/servlet/HelloServlet.java", "source": "the-stack-v2", "method_name": "doPost", "class_name": "HelloServlet", "index": 1522, "label": 1}
{"input": "public void init(){\n        operation = \"\";\n        sign = \"\";\n        editText = (EditText) findViewById(R.id.editText);\n        textView = (TextView) findViewById(R.id.textView);\n    }", "timestamp": "2021-05-31T01:02:53.417110Z", "repo_name": "phndavid/calculator", "path": "/Calculator/app/src/main/java/com/master/ndavid/calculator/MainActivity.java", "source": "the-stack-v2", "method_name": "init", "class_name": "MainActivity", "index": 1523, "label": 1}
{"input": "public BlockState rotate(BlockState state, Rotation rot) {\r\n\t\t\treturn state.with(FACING, rot.rotate(state.get(FACING)));\r\n\t\t}", "timestamp": "2023-04-03T11:32:01.583363Z", "repo_name": "blahblahbal/Blah-s-MCreator-Mod", "path": "/src/main/java/net/mcreator/blahmod/block/PolishedCharredScoriaSideSlabBlock.java", "source": "the-stack-v2", "method_name": "rotate", "class_name": "CustomBlock", "index": 1524, "label": 1}
{"input": "@Override\n\tpublic int detailCount(Map<String, Object> map){\n\t\treturn experevaluateDao.detailCount(map);\n\t}", "timestamp": "2022-09-11T09:39:11.970942Z", "repo_name": "iamfine099/mia", "path": "/src/main/java/com/bootdo/mia/service/impl/ExperevaluateServiceImpl.java", "source": "the-stack-v2", "method_name": "detailCount", "class_name": "ExperevaluateServiceImpl", "index": 1525, "label": 1}
{"input": "protected void executeGUIActionAfter(final Object resultOfTimeConsumingAction)\n         {\n         isVideoStreamPaused = !isVideoStreamPaused;\n         PrototypingPlayground.this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n         fpsTimestamp = System.currentTimeMillis();\n         fpsCount = 0;\n         fps = 0;\n         updateFramesPerSecondLabel();\n         }", "timestamp": "2021-01-19T11:51:31.891500Z", "repo_name": "CMU-CREATE-Lab/terk-legacy", "path": "/TeRKClient/code/java/prototypingplayground/src/PrototypingPlayground.java", "source": "the-stack-v2", "method_name": "executeGUIActionAfter", "class_name": "PauseResumeVideoAction", "index": 1526, "label": 1}
{"input": "MessageHandler getMessageHandler(String type){\n        MessageHandler handler = handlers.get(type);\n        if (handler == null){\n            throw new IllegalArgumentException(\"找不到匹配类型的MessageHandler处理器\");\n        }\n        return handler;\n    }", "timestamp": "2023-04-06T02:01:47.308570Z", "repo_name": "zhanghailang123/myim", "path": "/myimrcommon/src/main/java/com/zhl/dispatcher/MessageHandlerContainer.java", "source": "the-stack-v2", "method_name": "getMessageHandler", "class_name": "MessageHandlerContainer", "index": 1527, "label": 1}
{"input": "public Criteria andUserpasswordIsNull() {\r\n            addCriterion(\"USERPASSWORD is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andUserpasswordIsNull", "class_name": "GeneratedCriteria", "index": 1528, "label": 1}
{"input": "public Object convert(Object key, List rowData,ColumnModel colModel) {\r\n\t\tif(params==null || params.size()==0)\r\n\t\t\treturn key;\r\n\t\t\n\t\tif(params.size()==2)\r\n\t\t{\r\n\t\t\ttempateName=(String)params.get(0);\r\n\t\t\tmarcTemplate=(String)params.get(1);\r\n\t\t}\r\n\t\telse\r\n\t\t\tmarcTemplate=(String)params.get(0);\r\n\t\t\r\n\t\t\r\n\t\tString result=null;\r\n\t\ttry {\r\n\t\t\ttmpLoader.putTemplate(tempateName, marcTemplate);\r\n\t\t\tcfg.setTemplateLoader(tmpLoader);\r\n\t\t\tTemplate template = cfg.getTemplate(tempateName);\r\n\t\t\tMap root = new HashMap();\r\n\t\t\troot.put(tempateName, rowData);\r\n\t\t\t\r\n\t\t\tStringWriter writer = new StringWriter(); \r\n\t\t\ttry {\r\n\t\t\t\ttemplate.process(root, writer);\r\n\t\t\t\twriter.flush();\r\n\t\t\t\tresult=writer.getBuffer().toString();\r\n\t\t\t} catch (TemplateException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\t\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tlogger.error(\"模板匹配错误!\", e.fillInStackTrace());\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}", "timestamp": "2020-03-27T04:48:37.964067Z", "repo_name": "denghuafeng/sagacity", "path": "/sagacity-core/src/main/java/org/sagacity/tools/excel/convert/impl/TemplateConvert.java", "source": "the-stack-v2", "method_name": "convert", "class_name": "TemplateConvert", "index": 1529, "label": 1}
{"input": "public void initRootLayout() {\n        rootLayout = new BorderPane();\n\n\t\t\n\t\tScene scene = new Scene(rootLayout,600,400);\n\t\tscene.getStylesheets().add(getClass().getResource(\"application.css\").toExternalForm());\n\t\tprimaryStage.setScene(scene);\n\t\tprimaryStage.show();\n    }", "timestamp": "2021-09-15T16:43:38.485201Z", "repo_name": "bluesky2525/Social-Check", "path": "/src/main/java/com/ht/Main.java", "source": "the-stack-v2", "method_name": "initRootLayout", "class_name": "Main", "index": 1530, "label": 1}
{"input": "public void setSubscriptionConnectionPoolSize(int subscriptionConnectionPoolSize) {\n        this.subscriptionConnectionPoolSize = subscriptionConnectionPoolSize;\n    }", "timestamp": "2023-03-02T14:24:07.386321Z", "repo_name": "missaouib/redis-cluster-1", "path": "/src/main/java/cn/zhanhuarecao/rediscluster/config/RedissonEntity.java", "source": "the-stack-v2", "method_name": "setSubscriptionConnectionPoolSize", "class_name": "RedissonEntity", "index": 1531, "label": 1}
{"input": "public static void main(String[] args) {\t  \n\t\t  \n\t\t  \n\t\tScanner sc = new Scanner(System.in); \n\t\tint i = sc.nextInt(); \n\t\t\n\t\tif (i > 6) { \n\t\t\tSystem.out.println(\"Getal hoger dan 6\");\n\t\t} \n\t\tif (i == 6) { \n\t\t\tSystem.out.println(\"Getal gelijk aan 6\"); \n\t\t} \n\t\tif (i < 6) {\n\t\t  System.out.println(\"Getal lager dan 6\"); \n\t\t}\n\t\t\n\t}", "timestamp": "2022-11-29T22:23:32.350843Z", "repo_name": "tessievh/TraineeshipOefeningen", "path": "/MiniOpdrachtenWeek2/opdracht3.java", "source": "the-stack-v2", "method_name": "main", "class_name": "opdracht3", "index": 1532, "label": 1}
{"input": "public static void main(String []args){\n        ArrayList<Beach> beaches = new ArrayList<Beach>();\n\n        Beach beach1 = new Beach(\"Сосенки\", 1f, 5);\n        Beach beach2 = new Beach(\"Ижевскк\", 1.5f, 5);\n        Beach beach3 = new Beach(\"Воронеж\", 1.4f, 6);\n        Beach beach4 = new Beach(\"Шампань\", 1.3f, 8);\n        Beach beach5 = new Beach(\"Берегъа\", 5.0f, 10);\n\n        Beach beach[] = {beach1, beach2, beach3, beach4, beach5};\n        Arrays.sort(beach);\n        for (Beach x : beach){\n            beaches.add(x);\n            System.out.println(x.getName() + \"/\" + x.getDistance() + \"/\" + x.getQuality());\n        }\n        System.out.println(beach[1].compareTo(beach[2]));\n        System.out.println(beach[2].compareTo(beach[3]));\n        System.out.println(beach[1].compareTo(beach[3]));\n    }", "timestamp": "2021-06-25T18:14:15.204111Z", "repo_name": "Arkadiu/JavaRush", "path": "/src/com/javarush/test/level17/lesson10/home02/Beach.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Beach", "index": 1533, "label": 1}
{"input": "@Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"class InboxForwarderTestResult {\\n\");\n    sb.append(\"    matches: \").append(toIndentedString(matches)).append(\"\\n\");\n    sb.append(\"    doesMatch: \").append(toIndentedString(doesMatch)).append(\"\\n\");\n    sb.append(\"}\");\n    return sb.toString();\n  }", "timestamp": "2023-06-24T02:46:29.757016Z", "repo_name": "mailslurp/mailslurp-client-java", "path": "/src/main/java/com/mailslurp/models/InboxForwarderTestResult.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "InboxForwarderTestResult", "index": 1534, "label": 1}
{"input": "@Override\n  public byte[] toStream(final ORecord iSource, final boolean iOnlyDelta) {\n    checkTypeODocument(iSource);\n\n    final BytesContainer container = new BytesContainer();\n\n    \n    int pos = container.alloc(1);\n    container.bytes[pos] = CURRENT_RECORD_VERSION;\n\n    if (!OSerializationSetThreadLocal.checkAndAdd((ODocument) iSource)) {\n      \n      serializerByVersion[CURRENT_RECORD_VERSION].serialize((ODocument) iSource, container, true);\n\n      \n      OSerializationSetThreadLocal.setPartial((ODocument) iSource);\n\n      return container.fitBytes();\n    }\n\n    try {\n      \n      serializerByVersion[CURRENT_RECORD_VERSION].serialize((ODocument) iSource, container, false);\n    } finally {\n      OSerializationSetThreadLocal.removeCheck((ODocument) iSource);\n    }\n\n    return container.fitBytes();\n  }", "timestamp": "2021-01-19T06:50:08.211003Z", "repo_name": "fracz/refactor-extractor", "path": "/results-java/orientechnologies--orientdb/9328ce558638d85dce5566a565f791beed5230fa/before/ORecordSerializerBinary.java", "source": "the-stack-v2", "method_name": "toStream", "class_name": "ORecordSerializerBinary", "index": 1535, "label": 1}
{"input": "public static void main(String[] args) throws Exception {\n\n\n        System.out.println(Calculator.calculateExpression(\"6*3+2/6\"));\n\n\n    }", "timestamp": "2021-07-11T04:17:17.135515Z", "repo_name": "ovichowdhury/Android-Calculator", "path": "/app/src/main/java/com/example/windows_81/calculator/Calculator.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Calculator", "index": 1536, "label": 1}
{"input": "private void createInterface(String interfacePath,String beanType, XMLNode beanDAONode){\r\n\t\tif(!(new File(interfacePath)).exists()){\r\n\t\t\t  (new File(interfacePath)).mkdirs();\r\n\t\t\t  System.out.println(\"创建DAO文件夹目录\");\r\n\t\t }\r\n\t\ttry {\r\n\t\t\tFileWriter fw = new FileWriter(interfacePath + \"/\"+beanType+\"DAO.java\");\r\n\t\t\tPrintWriter out = new PrintWriter(fw);   \r\n\t\t\tout.println(this.interfaceAddBeginMessage(beanDAONode,beanType));\r\n\t\t\t\r\n\t\t\tXMLNodeHandler xmlNodeHandler = (XMLNodeHandler) (beanDAONode.getChildNode(\"daoMethods\"));\r\n\t\t\tXMLNode[] nodeList = xmlNodeHandler.selectNodes(\"./method\");\r\n\t\t\tSystem.out.println(\"nodeList的length：\"+nodeList.length);\r\n\t\t\tif(nodeList.length>=1){\r\n\t\t\t\tfor(int i=0;i<nodeList.length;i++){\r\n\t\t\t\t\tout.println(this.interfaceAddExecuteMethod(nodeList[i],beanType));\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tout.println(this.interfaceAddEndMessage()); \r\n\t\t\tout.close();\r\n\t\t\tfw.close();\r\n\t\t\tSystem.out.println(\"生成javaDAO文件\");\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}", "timestamp": "2020-03-27T08:13:20.801773Z", "repo_name": "binweishuang/yumingoa", "path": "/src/kdf/tools/easyCode/DAO/impl/CreateBeanDAOImpl.java", "source": "the-stack-v2", "method_name": "createInterface", "class_name": "CreateBeanDAOImpl", "index": 1537, "label": 1}
{"input": "@Bean\n    public ConnectionFactory connectionFactory() {\n        ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory();\n        connectionFactory.setBrokerURL(brokerUrl);\n        connectionFactory.setTrustedPackages(Arrays.asList(\"com.NTT\"));\n        return connectionFactory;\n    }", "timestamp": "2020-07-31T22:27:06.001636Z", "repo_name": "MouliRepo/Spring-JMS-ActiveMq-Listener", "path": "/Spring JMS Application/Spring-JMS-Application/src/main/java/com/NTT/config/ReceiverConfig.java", "source": "the-stack-v2", "method_name": "connectionFactory", "class_name": "ReceiverConfig", "index": 1538, "label": 1}
{"input": "public Criteria andUserpasswordLike(String value) {\r\n            addCriterion(\"USERPASSWORD like\", value, \"userpassword\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andUserpasswordLike", "class_name": "GeneratedCriteria", "index": 1539, "label": 1}
{"input": "@Override\n        @Deprecated\n        public Servlet getServlet(String name) throws ServletException {\n            return sc.getServlet(name);\n        }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "getServlet", "class_name": "NoPluggabilityServletContext", "index": 1540, "label": 1}
{"input": "private void isPass() {\n        if (pipe.getWidth()[0] <= (bird.getRect().right) && pipe.getWidth()[1] >= bird.getRect().left) {\n            startPass = true;\n            if (birdHeight - bird.getBirdHeight() / 2 > pipe.getPass()[0] && birdHeight + bird.getBirdHeight() / 2 < pipe.getPass()[1]) {\n                Log.i(TAG, \"isPass true\");\n            }\n            \n            else {\n                Log.i(TAG, \"isPass false\");\n                setRunning(false);\n                ((Activity)mainContest).finish();\n            }\n        }\n        if (pipe.getWidth()[1] < bird.getRect().left && startPass) {\n            score++;\n            startPass = false;\n            Log.i(TAG, \"isPass 1   \" + score);\n        }\n    }", "timestamp": "2022-11-10T15:18:39.844014Z", "repo_name": "AndroidCourseTeam/AndroidHomework", "path": "/app/src/main/java/com/nankai/myflappybird/GameView.java", "source": "the-stack-v2", "method_name": "isPass", "class_name": "GameView", "index": 1541, "label": 1}
{"input": "private static void assertDefaultCopier(Collection<ServiceConfiguration<?>> serviceConfigurations) {\n    boolean noCopierConfigPresent = false;\n    for (ServiceConfiguration<?> serviceConfiguration : serviceConfigurations) {\n      if (serviceConfiguration instanceof DefaultCopierConfiguration) {\n        noCopierConfigPresent = true;\n        DefaultCopierConfiguration copierConfig = (DefaultCopierConfiguration)serviceConfiguration;\n        assertThat(copierConfig.getClazz().isAssignableFrom(Eh107IdentityCopier.class), is(true));\n      }\n    }\n    if (!noCopierConfigPresent) {\n      fail();\n    }\n  }", "timestamp": "2021-08-23T22:08:57.063756Z", "repo_name": "leespy/ehcache3", "path": "/107/src/test/java/org/ehcache/jsr107/ConfigurationMergerTest.java", "source": "the-stack-v2", "method_name": "assertDefaultCopier", "class_name": "ConfigurationMergerTest", "index": 1542, "label": 1}
{"input": "private void jouer() {\n\n\t\tfor(int i = 0; i < listeJoueurs.size(); i++) {\n\n\t\t\tjoueurActif = listeJoueurs.get(i);\n\n\t\t\tcui.lancerTour(joueurActif);\n\n\t\t\tint[] resultatDe = lancerDe();\n\n\t\t\tcui.afficherDe(resultatDe);\n\n\t\t\tif(cui.veutRelancer()) {\n\t\t\t\tresultatDe = lancerDe();\n\t\t\t\tcui.afficherDe(resultatDe);\n\t\t\t} \n\n\t\t\tif(joueurActif.getNomMonumentsConstruits().contains(\"Parc d'attractions\") && resultatDe[0] == resultatDe[1]) {\n\t\t\t\tcui.annoncerDouble();\n\t\t\t\ti--;\n\t\t\t}\n\n\t\t\tactiverEffets(resultatDe);\n\n\t\t\tif(veutConstruire()) {\n\t\t\t\tconstruire();\n\t\t\t}\n\n\t\t\tif(partieFinie()) {\n\t\t\t\tcui.afficherVictoire();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n\t}", "timestamp": "2020-05-29T14:30:59.287416Z", "repo_name": "Quentin-V/Miniville", "path": "/src/Controleur.java", "source": "the-stack-v2", "method_name": "jouer", "class_name": "Controleur", "index": 1543, "label": 1}
{"input": "private void renderStars(Painter g){\n\t\tg.drawImage(Assets.star1, (int) star.getX(), (int) star.getY(), 10, 10);\n\t\tfor (Star s: stars){\n\t\t\tg.drawImage(Assets.star1, (int) s.getX(), (int) s.getY(), 10, 10);\n\t\t}\n\t}", "timestamp": "2020-05-15T20:09:09.580480Z", "repo_name": "wcmaclean/home-repo", "path": "/android/experiments/SpaceMermaid/src/com/toymoon/game/state/PlayState.java", "source": "the-stack-v2", "method_name": "renderStars", "class_name": "PlayState", "index": 1544, "label": 1}
{"input": "@AfterClass\n    void classTeardown() throws Exception {\n        executor.shutdown();\n        scheduledExecutor.shutdown();\n    }", "timestamp": "2021-06-22T04:11:29.154786Z", "repo_name": "kafkaesque-io/pulsar", "path": "/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZookeeperCacheTest.java", "source": "the-stack-v2", "method_name": "classTeardown", "class_name": "ZookeeperCacheTest", "index": 1545, "label": 1}
{"input": "public Criteria andStatusNotBetween(Integer value1, Integer value2) {\r\n            addCriterion(\"status not between\", value1, value2, \"status\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andStatusNotBetween", "class_name": "GeneratedCriteria", "index": 1546, "label": 1}
{"input": "@GetMapping(\"/products/availability\")\n    @ResponseBody\n    public ResponseEntity<CollectionModel<EntityModel<ProductEntity>>> getAvailability() {\n        List<ProductDTO> productDTOList = productService.availability();\n        List<EntityModel> entityModelList = productDTOList.stream().map(productDTO -> assembler.toModel(productDTO))\n                .collect(Collectors.toList());\n\n        return ResponseEntity.ok(new CollectionModel(entityModelList,\n                linkTo(methodOn(ProductController.class).getAvailability()).withSelfRel()\n        ));\n    }", "timestamp": "2023-03-18T14:05:52.289148Z", "repo_name": "JoelPintoMata/warehouse-inventory-api", "path": "/src/main/java/com/datawarehouse/product/controller/ProductController.java", "source": "the-stack-v2", "method_name": "getAvailability", "class_name": "ProductController", "index": 1547, "label": 1}
{"input": "@Bean\n    public AuthenticationProvider ajaxAuthenticationProvider() {\n        return new AjaxAuthenticationProvider();\n    }", "timestamp": "2022-12-21T15:58:58.931728Z", "repo_name": "arhrina/toyPrj", "path": "/AsyncSpringSecurity/src/main/java/me/arhrina/asynchronous/security/config/AjaxSecurityConfig.java", "source": "the-stack-v2", "method_name": "ajaxAuthenticationProvider", "class_name": "AjaxSecurityConfig", "index": 1548, "label": 1}
{"input": "public static void main(String[] args) {\n        final AsyncSubject<String> asyncSubject = AsyncSubject.create();\n        asyncSubject.onNext(\"1\");\n        asyncSubject.onComplete();\n        asyncSubject.onNext(\"2\");\n        asyncSubject.subscribe(new DefaultSubscriberImpl<String>(TAG + \"1\"));\n        asyncSubject\n                .subscribeOn(Schedulers.single())\n                .subscribe(new DefaultSubscriberImpl<String>(TAG + \"2\"));\n        Runnable runnable = new Runnable() {\n            public void run() {\n                asyncSubject.onNext(\"3\");\n            }\n        };\n        Executors.newFixedThreadPool(1).submit(runnable);\n        asyncSubject.onNext(\"4\");\n\n        try {\n            TimeUnit.SECONDS.sleep(5);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }", "timestamp": "2020-04-23T22:38:17.206675Z", "repo_name": "zhengjun1987/RxAndroidInAction", "path": "/app/src/main/java/cn/zhengjun/rxandroidinaction/chapter02basicals/AsyncSubjectTest.java", "source": "the-stack-v2", "method_name": "main", "class_name": "AsyncSubjectTest", "index": 1549, "label": 1}
{"input": "private int getActivityNumFromBundle(){\n        Log.d(TAG, \"getActivityNumFromBundle: arguments: \" + getArguments());\n        Bundle bundle = this.getArguments();\n        if(bundle != null) {\n            return bundle.getInt(getString(R.string.activity_number));\n        }else{\n            return 0;\n        }\n    }", "timestamp": "2020-04-03T18:16:12.362449Z", "repo_name": "ezzatthrwat/instaclone", "path": "/app/src/main/java/com/example/zizoj/instaclone/Utils/ViewPostFragment.java", "source": "the-stack-v2", "method_name": "getActivityNumFromBundle", "class_name": "ViewPostFragment", "index": 1550, "label": 1}
{"input": "public void push(Button b) {\n\t\tb.setCurrent(OFF.instance());\n\t\tSystem.out.println(\"   turning OFF\");\n\t}", "timestamp": "2020-05-21T17:54:53.149716Z", "repo_name": "thekant/myCodeRepo", "path": "/src/com/kant/design/patterns/state/StateToggle.java", "source": "the-stack-v2", "method_name": "push", "class_name": "ON", "index": 1551, "label": 1}
{"input": "@Override\n    public void onClick(View v) {\n        if (OnClickUtils.isFastDoubleClick()) {\n            return;\n        }\n        onClickListener(v);\n    }", "timestamp": "2021-04-29T10:13:12.314166Z", "repo_name": "CallMonster/NFCCheck", "path": "/app/src/main/java/com/tj/chaersi/nfccheck/base/BaseActivity.java", "source": "the-stack-v2", "method_name": "onClick", "class_name": "BaseActivity", "index": 1552, "label": 1}
{"input": "public NonWildcardTypeArgumentsContext nonWildcardTypeArguments() {\n\t\t\treturn getRuleContext(NonWildcardTypeArgumentsContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "nonWildcardTypeArguments", "class_name": "CreatorContext", "index": 1553, "label": 1}
{"input": "@Override\n      public Generate setFields(java.lang.String fields) {\n        return (Generate) super.setFields(fields);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setFields", "class_name": "Generate", "index": 1554, "label": 1}
{"input": "public static YFlowPaths definePaths(List<FlowPath> flowPaths) {\n        List<FlowPath> nonEmptyPaths = flowPaths.stream()\n                .filter(flowPath -> !flowPath.getSegments().isEmpty())\n                .collect(Collectors.toList());\n        PathInfoData sharedPath = FlowPathMapper.INSTANCE.map(nonEmptyPaths.size() >= 2\n                ? IntersectionComputer.calculatePathIntersectionFromSource(nonEmptyPaths) : emptyList());\n\n        List<SubFlowPathDto> subFlowPaths = flowPaths.stream()\n                .map(flowPath -> new SubFlowPathDto(flowPath.getHaSubFlowId(), FlowPathMapper.INSTANCE.map(flowPath)))\n                .collect(Collectors.toList());\n\n        return YFlowPaths.builder()\n                .sharedPath(sharedPath)\n                .subFlowPaths(subFlowPaths)\n                .build();\n    }", "timestamp": "2023-08-15T21:24:21.294425Z", "repo_name": "telstra/open-kilda", "path": "/src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/utils/HaFlowUtils.java", "source": "the-stack-v2", "method_name": "definePaths", "class_name": "HaFlowUtils", "index": 1555, "label": 1}
{"input": "public String openFileService(String filename){\n                       try{\n                StringBuffer ret=new StringBuffer(\"\");\n                String cur_line=new String();\n                BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(filename)));\n                while((cur_line=br.readLine()) != null){\n                   ret.append(ret + \"\\n\" + cur_line);\n                }\n                return ret.toString();\n        }catch(Exception e){\n            e.printStackTrace();\n            return \"\";\n        }\n   }", "timestamp": "2020-05-06T15:49:29.551449Z", "repo_name": "gokcse/Go-Cloud", "path": "/Go Cloud Source Code/Netbeans 6.1 - Virtual Machine/CloudComputingServer/src/org/cit/CloudComputing/T_Editor.java", "source": "the-stack-v2", "method_name": "openFileService", "class_name": "Frame_class", "index": 1556, "label": 1}
{"input": "@Override\r\n    public void reconnect() throws RemotingException {\r\n        client.reconnect();\r\n    }", "timestamp": "2021-05-10T13:47:01.148671Z", "repo_name": "archerda/dubbo", "path": "/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/header/HeaderExchangeClient.java", "source": "the-stack-v2", "method_name": "reconnect", "class_name": "HeaderExchangeClient", "index": 1557, "label": 1}
{"input": "private int getElementos(Vertice<T> ver)\n    {\n        if (ver == null)\n            return 0;\n        else\n            return (1 + getElementos(ver.izquierdo) + getElementos(ver.derecho));\n    }", "timestamp": "2021-05-29T11:10:04.847601Z", "repo_name": "acasanova009/UNAM", "path": "/EDD/practica4/src/mx/unam/ciencias/edd/ArbolBinario.java", "source": "the-stack-v2", "method_name": "getElementos", "class_name": "ArbolBinario", "index": 1558, "label": 1}
{"input": "public void setShipmentRequestPieces(List<PieceModel> shipmentRequestPieces) {\r\n        this.shipmentRequestPieces = shipmentRequestPieces;\r\n    }", "timestamp": "2020-05-17T01:26:00.968575Z", "repo_name": "gahlawat4u/repoName", "path": "/rda0105-agl-aus-java-a43926f304e3/xms-dto/src/main/java/com/gms/xms/model/webship/ShipmentInfoModel.java", "source": "the-stack-v2", "method_name": "setShipmentRequestPieces", "class_name": "ShipmentInfoModel", "index": 1559, "label": 1}
{"input": "public void tv3Btn(View.OnClickListener clickListener) {\n        textView3.setOnClickListener(clickListener);\n    }", "timestamp": "2022-12-21T07:36:15.374736Z", "repo_name": "wanlihua/Androidgit", "path": "/src/main/java/com/dtl/gemini/widget/MorePopWindow.java", "source": "the-stack-v2", "method_name": "tv3Btn", "class_name": "MorePopWindow", "index": 1560, "label": 1}
{"input": "public void foo( boolean throwException ) throws Exception{\r\n     System.out.println( \"in foo\" );\r\n\r\n     if( throwException ){\r\n       System.out.println( \"throwing exception\" );\r\n       throw new Exception( \"testing exception\" );\r\n     }\r\n\r\n     System.out.println( \"after throwing exception\" );\r\n   }", "timestamp": "2021-09-22T20:42:43.662165Z", "repo_name": "kframework/java-semantics", "path": "/external-programs/jbook/Misc_ThrowingException.java", "source": "the-stack-v2", "method_name": "foo", "class_name": "Misc_ThrowingException", "index": 1561, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByDateAddedIsNotEqualToSomething() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        \n        defaultTransactionShouldNotBeFound(\"dateAdded.notEquals=\" + DEFAULT_DATE_ADDED);\n\n        \n        defaultTransactionShouldBeFound(\"dateAdded.notEquals=\" + UPDATED_DATE_ADDED);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByDateAddedIsNotEqualToSomething", "class_name": "TransactionResourceIT", "index": 1562, "label": 1}
{"input": "private void updateEyeRoll(long timeElapsed) {\n\t\t\n\t\t\n\t\tfloat increment = EYELID_ROT_SPEED * (timeElapsed/1000.0f);\n\t\tfloat current = lidR.rotation().z;\n\t\t\n\t\tif (current == mEyeRoll)\n\t\t\treturn;\n\t\telse if (current < mEyeRoll) {\n\t\t\tlidR.rotation().z += increment;\n\t\t\tlidL.rotation().z += -increment;\n\t\t\tif (lidR.rotation().z > mEyeRoll) {\n\t\t\t\tlidR.rotation().z = mEyeRoll;\n\t\t\t\tlidL.rotation().z = -mEyeRoll;\n\t\t\t}\n\t\t}\n\t\t\n\t\telse {\n\t\t\tlidR.rotation().z -= increment;\n\t\t\tlidL.rotation().z -= -increment;\n\t\t\tif (lidR.rotation().z < mEyeRoll) {\n\t\t\t\tlidR.rotation().z = mEyeRoll;\n\t\t\t\tlidL.rotation().z = -mEyeRoll;\n\t\t\t}\n\t\t}\n\t\t\n\t}", "timestamp": "2016-08-11T07:51:42.621498Z", "repo_name": "emote-project/Migration-App", "path": "/Android3DEmys/src/uk/ac/hw/lirec/emys3d/EmysModel.java", "source": "the-stack-v2", "method_name": "updateEyeRoll", "class_name": "EmysModel", "index": 1563, "label": 1}
{"input": "public void add(int index, E element){\n\n        rangeCheckForAdd(index);\n        ensureCapacity(size+1);\n        \n\n        for (int i = size; i > index ; i--) {\n\n            elements[i] = elements[i-1];\n        }\n        elements[index] = element;\n        size++;\n\n    }", "timestamp": "2020-04-18T01:46:02.912154Z", "repo_name": "appbanana/MachineLearningAction", "path": "/data-structure/xmg/第一季/day05-栈/src/com/jqc/list/ArrayList.java", "source": "the-stack-v2", "method_name": "add", "class_name": "ArrayList", "index": 1564, "label": 1}
{"input": "@Override\r\n    protected RecyclerView.ViewHolder onCreateBottomView(ViewGroup parent) {\r\n        return new BottomViewHolder(mLayoutImflater.inflate(R.layout.item_image, parent, false));\r\n    }", "timestamp": "2021-01-23T17:03:45.335028Z", "repo_name": "youqibing/Grow-upPro", "path": "/app/src/main/java/com/example/dell/growup/main/characters/CharacterAdapter.java", "source": "the-stack-v2", "method_name": "onCreateBottomView", "class_name": "CharacterAdapter", "index": 1565, "label": 1}
{"input": "public void invertieren()\n    {\n        \n        for (int y = 0; y < _hoehe; y++)\n        {\n            for (int x = 0; x < _breite; x++)\n            {\n                _bilddaten[y][x] = (short) (255 - _bilddaten[y][x]);\n            }\n        }\n        zeichneBild();\n    }", "timestamp": "2020-03-07T10:50:29.488628Z", "repo_name": "jonabacke/programieren-1", "path": "/Blatt_7/Blatt07_4_Bildbearbeitung/SWBild.java", "source": "the-stack-v2", "method_name": "invertieren", "class_name": "SWBild", "index": 1566, "label": 1}
{"input": "public void normalize2(){\n        double m= magnitude();\n        x = x/m;\n        y= y/m;\n        z= z/m;\n    }", "timestamp": "2020-12-20T21:05:43.720248Z", "repo_name": "angrajales/Computer-Graphics-2020-1", "path": "/starting-point/src/main/java/bezier/curves/pkg3d/camera/Point4.java", "source": "the-stack-v2", "method_name": "normalize2", "class_name": "Point4", "index": 1567, "label": 1}
{"input": "private boolean add2DB(String paramString1, String paramString2) {\n\n\t\tdatabaseAdapter.open();\n\t\tprefs = getSharedPreferences(prefName, MODE_PRIVATE);\n\t\tSharedPreferences.Editor editor = prefs.edit();\n\t\teditor.putString(TEXT_VALUE_KEY, paramString1);\n\t\t\n\t\teditor.putString(TEXT_VALUE_KEY, paramString2);\n\t\tString name = paramString1;\n\t\tString number = paramString2.trim();\n\t\teditor.commit();\n\t\teditor.commit();\n\t\t\n\n\t\tdatabaseAdapter.insertEntry(name, number.trim());\n\n\t\tToast.makeText(getApplicationContext(),\n\t\t\t\t\"Phone No successfully Entered...\", Toast.LENGTH_SHORT).show();\n\n\t\tdatabaseAdapter.close();\n\n\t\treturn true;\n\t}", "timestamp": "2021-01-25T04:50:17.810237Z", "repo_name": "mgmcen/1192_design-of-android-application-for-emergency-help-manager-", "path": "/Emergency Help Manager/src/com/ehm/ws/AddContacts.java", "source": "the-stack-v2", "method_name": "add2DB", "class_name": "AddContacts", "index": 1568, "label": 1}
{"input": "@Override\n\tpublic List<JourDetails> selectJourDetailsbySourceLocation(String sourceLoc) throws JourDetailsException {\n\t\t\n\t\treturn jourDetailsDao.selectJourDetailsbySourceLocation(sourceLoc);\n\t}", "timestamp": "2023-08-02T14:49:42.070804Z", "repo_name": "SaiCharan87s/BmPPmp", "path": "/BmPPmp/src/main/java/com/lti/service/JourDetailsSeviceImpl.java", "source": "the-stack-v2", "method_name": "selectJourDetailsbySourceLocation", "class_name": "JourDetailsSeviceImpl", "index": 1569, "label": 1}
{"input": "@JavascriptInterface\n    public int getAndroidOSVersionAPI() {\n        return Version.getAndroidSDKVersion();\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "getAndroidOSVersionAPI", "class_name": "AdMarvelWebViewJSInterface", "index": 1570, "label": 1}
{"input": "public static QueryOrderDetail4DistributionResponse build(java.util.Map<String, ?> map) throws Exception {\n        QueryOrderDetail4DistributionResponse self = new QueryOrderDetail4DistributionResponse();\n        return TeaModel.build(map, self);\n    }", "timestamp": "2023-09-01T04:10:33.640756Z", "repo_name": "aliyun/alibabacloud-java-sdk", "path": "/linkedmall-20220531/src/main/java/com/aliyun/linkedmall20220531/models/QueryOrderDetail4DistributionResponse.java", "source": "the-stack-v2", "method_name": "build", "class_name": "QueryOrderDetail4DistributionResponse", "index": 1571, "label": 1}
{"input": "private static Animator.AnimatorListener getRevealFinishListener(RevealAnimator target){\n        if(SDK_INT >= 18){\n            return (Animator.AnimatorListener) new RevealAnimator.RevealFinishedJellyBeanMr2(target);\n        }else if(SDK_INT >= 14){\n            return (Animator.AnimatorListener) new RevealAnimator.RevealFinishedIceCreamSandwich(target);\n        }else {\n            return (Animator.AnimatorListener) new RevealAnimator.RevealFinishedGingerbread(target);\n        }\n    }", "timestamp": "2020-05-30T06:04:27.390224Z", "repo_name": "dream5535/mvvmandroiddream", "path": "/app/src/main/java/com/cmexpertise/beautyapp/revalAnimation/animation/ViewAnimationUtils.java", "source": "the-stack-v2", "method_name": "getRevealFinishListener", "class_name": "ViewAnimationUtils", "index": 1572, "label": 1}
{"input": "public void setU_RegSupName(String u_RegSupName) {\n            U_RegSupName = u_RegSupName;\n        }", "timestamp": "2021-07-13T20:48:36.038715Z", "repo_name": "mtc-navy/SourceCode", "path": "/Mitsubishi/mtc-admin/src/main/java/io/mtc/servicelayer/model/Order.java", "source": "the-stack-v2", "method_name": "setU_RegSupName", "class_name": "DocumentLines", "index": 1573, "label": 1}
{"input": "@Test public void testStartOfGroupLagValueStep2() {\n    startOfGroupStep2(\"val = lag(val) over (order by rn)\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testStartOfGroupLagValueStep2", "class_name": "JdbcTest", "index": 1574, "label": 1}
{"input": "public void setTaxMoney(BigDecimal taxMoney)\n        {\n            this.taxMoney = taxMoney;\n        }", "timestamp": "2021-01-18T13:50:32.011316Z", "repo_name": "THEMING/TZLottery", "path": "/core/com/xsc/lottery/task/ticket/.svn/text-base/TicketTreatmentWork.java.svn-base", "source": "the-stack-v2", "method_name": "setTaxMoney", "class_name": "winTicketDis", "index": 1575, "label": 1}
{"input": "public void addItemKafka(MessagePlanning messagePlanning) throws InterruptedException, ExecutionException {\n        long time = System.currentTimeMillis();\n        JsonElement jsonElement = new Gson().toJsonTree(messagePlanning);\n        final ProducerRecord<Long, String> record =\n                new ProducerRecord<>(TOPIC, time, jsonElement.toString());\n        RecordMetadata metadata = this.producer.send(record).get();\n        long elapsedTime = System.currentTimeMillis() - time;\n        System.out.printf(\"sent record(key=%s value=%s) \" +\n                        \"meta(partition=%d, offset=%d) time=%d\\n\",\n                record.key(), record.value(), metadata.partition(),\n                metadata.offset(), elapsedTime);\n        this.producer.flush();\n    }", "timestamp": "2020-06-25T02:54:18.517424Z", "repo_name": "jreluiz/tma-framework-a", "path": "/analyzer/src/main/java/eubrazil/atmosphere/kafka/KafkaManager.java", "source": "the-stack-v2", "method_name": "addItemKafka", "class_name": "KafkaManager", "index": 1576, "label": 1}
{"input": "public Criteria andCreateTimeIn(List<Date> values) {\n            addCriterion(\"create_time in\", values, \"createTime\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andCreateTimeIn", "class_name": "GeneratedCriteria", "index": 1577, "label": 1}
{"input": "@Test\n    public void testFieldFixedHeight() {\n        doTestFieldFixedHeight(Binary64Field.getInstance());\n    }", "timestamp": "2023-09-03T20:33:42.748576Z", "repo_name": "CS-SI/Orekit", "path": "/src/test/java/org/orekit/models/earth/troposphere/MariniMurrayModelTest.java", "source": "the-stack-v2", "method_name": "testFieldFixedHeight", "class_name": "MariniMurrayModelTest", "index": 1578, "label": 1}
{"input": "private void setUpBug80264_Fields() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b80264/Fields.java\",\n\t\t\"package b80264;\\n\" +\n\t\t\"class Fields {\\n\" +\n\t\t\"    Fields field1;\\n\" +\n\t\t\"    Fields field2;\\n\" +\n\t\t\"}\\n\" +\n\t\t\"class FieldsSub extends Fields {\\n\" +\n\t\t\"    Fields field1;\\n\" +\n\t\t\"    FieldsSub field2;\\n\" +\n\t\t\"}\\n\" +\n\t\t\"package b80264;\\n\"0 +\n\t\t\"    Fields field1;\\n\" +\n\t\t\"    Fields field2;\\n\" +\n\t\t\"}\\n\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "setUpBug80264_Fields", "class_name": "JavaSearchBugsTests", "index": 1579, "label": 1}
{"input": "@Before\n    public void setup() {\n        MockitoAnnotations.initMocks(this);\n        AuditEventService auditEventService =\n            new AuditEventService(auditEventRepository, auditEventConverter);\n        AuditResource auditResource = new AuditResource(auditEventService);\n        this.restAuditMockMvc = MockMvcBuilders.standaloneSetup(auditResource)\n            .setCustomArgumentResolvers(pageableArgumentResolver)\n            .setConversionService(formattingConversionService)\n            .setMessageConverters(jacksonMessageConverter).build();\n    }", "timestamp": "2021-04-28T13:34:14.329505Z", "repo_name": "scarabetta/jhipsterSample2", "path": "/src/test/java/io/github/jhipster/application/web/rest/AuditResourceIntTest.java", "source": "the-stack-v2", "method_name": "setup", "class_name": "AuditResourceIntTest", "index": 1580, "label": 1}
{"input": "@CamundaQueryParam(value=\"successLog\", converter = BooleanConverter.class)\n  public void setSuccessLog(Boolean successLog) {\n    this.successLog = successLog;\n  }", "timestamp": "2020-05-05T11:21:15.055791Z", "repo_name": "rezza72/camunda-bpm-platform", "path": "/engine-rest/engine-rest/src/main/java/org/camunda/bpm/engine/rest/dto/history/HistoricJobLogQueryDto.java", "source": "the-stack-v2", "method_name": "setSuccessLog", "class_name": "HistoricJobLogQueryDto", "index": 1581, "label": 1}
{"input": "public String getBTDevice(){\n        try{\n            SQLiteDatabase db = this.getReadableDatabase();\n            Cursor res =  db.rawQuery( \"select * from prefs \",null );\n            res.moveToFirst();\n            return res.getString(res.getColumnIndex(DBHelper.PREFS_COLUMN_BTDEVICE));}\n        catch (Exception e ){Log.d(\"BTWeather - getBTDevice\", String.valueOf(e));}\n        return \"\";\n    }", "timestamp": "2020-03-22T13:09:56.343529Z", "repo_name": "JamesHarley/BTWeatherStation", "path": "/app/src/main/java/gnosisdevelopment/arduinobtweatherstation/DBHelper.java", "source": "the-stack-v2", "method_name": "getBTDevice", "class_name": "DBHelper", "index": 1582, "label": 1}
{"input": "@Test\n    public void shouldFindEducationalPlan() {\n        EducationalPlan actual = repository.findPlanByCustomName(\"customName\").get();\n\n        assertThat(actual, is(educationalPlan));\n        assertThat(actual.getDisciplines(),is(Sets.newLinkedHashSet(discipline1, discipline2)));\n    }", "timestamp": "2022-06-24T11:47:13.278686Z", "repo_name": "Lirveez/geps", "path": "/src/test/java/mirea/geps/core/service/db/EducationalPlanCustomTest.java", "source": "the-stack-v2", "method_name": "shouldFindEducationalPlan", "class_name": "EducationalPlanCustomTest", "index": 1583, "label": 1}
{"input": "@Test\n  public void deleteServiceLevelObjectiveTest2() throws Exception {\n    Empty expectedResponse = Empty.newBuilder().build();\n    mockServiceMonitoringService.addResponse(expectedResponse);\n\n    String name = \"name3373707\";\n\n    client.deleteServiceLevelObjective(name);\n\n    List<AbstractMessage> actualRequests = mockServiceMonitoringService.getRequests();\n    Assert.assertEquals(1, actualRequests.size());\n    DeleteServiceLevelObjectiveRequest actualRequest =\n        ((DeleteServiceLevelObjectiveRequest) actualRequests.get(0));\n\n    Assert.assertEquals(name, actualRequest.getName());\n    Assert.assertTrue(\n        channelProvider.isHeaderSent(\n            ApiClientHeaderProvider.getDefaultApiClientHeaderKey(),\n            GaxGrpcProperties.getDefaultApiClientHeaderPattern()));\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-monitoring/google-cloud-monitoring/src/test/java/com/google/cloud/monitoring/v3/ServiceMonitoringServiceClientTest.java", "source": "the-stack-v2", "method_name": "deleteServiceLevelObjectiveTest2", "class_name": "ServiceMonitoringServiceClientTest", "index": 1584, "label": 1}
{"input": "@BeforeMethod\n    void setup() throws Exception {\n        zkClient = MockZooKeeper.newInstance(MoreExecutors.newDirectExecutorService());\n    }", "timestamp": "2021-06-22T04:11:29.154786Z", "repo_name": "kafkaesque-io/pulsar", "path": "/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZookeeperCacheTest.java", "source": "the-stack-v2", "method_name": "setup", "class_name": "ZookeeperCacheTest", "index": 1585, "label": 1}
{"input": "@Override\n  public Record copy(Map<String, Object> overwriteValues) {\n    return new RecordWithAction(record.copy(overwriteValues), action);\n  }", "timestamp": "2023-08-05T07:32:25.442740Z", "repo_name": "alldatacenter/alldata", "path": "/lake/amoro/core/src/main/java/com/netease/arctic/io/writer/RecordWithAction.java", "source": "the-stack-v2", "method_name": "copy", "class_name": "RecordWithAction", "index": 1586, "label": 1}
{"input": "@Override\n      public void write(final JsonWriter jsonWriter, final EnumStringEnum enumeration) throws IOException {\n        jsonWriter.value(enumeration.getValue());\n      }", "timestamp": "2023-03-07T19:55:29.765168Z", "repo_name": "docusign/old_swagger-codegen", "path": "/samples/client/petstore/java/okhttp-gson-parcelableModel/src/main/java/io/swagger/client/model/EnumTest.java", "source": "the-stack-v2", "method_name": "write", "class_name": "Adapter", "index": 1587, "label": 1}
{"input": "public boolean truncateLog(long zxid) throws IOException {\n        clear();\n\n        \n        boolean truncated = snapLog.truncateLog(zxid);\n\n        if (!truncated) {\n            return false;\n        }\n\n        loadDataBase();\n        return true;\n    }", "timestamp": "2021-11-23T14:30:09.439604Z", "repo_name": "airtimemedia/zookeeper", "path": "/src/java/main/org/apache/zookeeper/server/ZKDatabase.java", "source": "the-stack-v2", "method_name": "truncateLog", "class_name": "ZKDatabase", "index": 1588, "label": 1}
{"input": "public  void setImageItem(Bitmap bm, int index) {\n\t\talist.get(index).bmp = bm;\n\t\taadapter.notifyDataSetChanged();\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "setImageItem", "class_name": "jListView", "index": 1589, "label": 1}
{"input": "public Connection conectarBanco() {\n        if (connec == null) {\n            try {\n                connec = DriverManager.getConnection(URL + DB, OWNER, PASS);\n                \n            } catch (SQLException e) {\n                System.out.println(\"Erro ao conectar banco \" + DB + \".\" + e);\n            }\n        }\n        return connec;\n    }", "timestamp": "2016-09-05T09:25:30.232129Z", "repo_name": "ChristianARamos/JAVA-BancoArq", "path": "/Banco/Banco.java", "source": "the-stack-v2", "method_name": "conectarBanco", "class_name": "Banco", "index": 1590, "label": 1}
{"input": "private static SharedPreferences getSharedPreferences(Context context) {\n        return context.getSharedPreferences(\"APP_PREF\", Context.MODE_PRIVATE);\n    }", "timestamp": "2020-05-22T12:38:12.378322Z", "repo_name": "uyit14/RxAndroidEx", "path": "/app/src/main/java/com/rxandroidex/rxandroidexapp/app/utils/PrefUtils.java", "source": "the-stack-v2", "method_name": "getSharedPreferences", "class_name": "PrefUtils", "index": 1591, "label": 1}
{"input": "protected void removeTip() {\n        if (size == 0) {\n            throw new IllegalStateException();\n        }\n\n        size--;\n        data[0] = data[size];\n        keys[0] = keys[size];\n        data[size] = null;\n        siftDown(0);\n    }", "timestamp": "2016-09-12T14:35:45.885407Z", "repo_name": "racheloei/hackdfw2016", "path": "/EventApp/app/src/main/java/com/sribandi/hotsauce/eventapp/BinaryHeap.java", "source": "the-stack-v2", "method_name": "removeTip", "class_name": "BinaryHeap", "index": 1592, "label": 1}
{"input": "@Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      SimpleNode simpleNode0 = new SimpleNode(37);\n      simpleNode0.setIdentifier(\"&\");\n      StringWriter stringWriter0 = new StringWriter();\n      simpleNode0.dump(\"&\", stringWriter0);\n      assertEquals(\"<NameList>\\n  <identifier>*amp</identifier>\\n</NameList>\\n\", stringWriter0.toString());\n  }", "timestamp": "2023-04-17T20:05:40.560943Z", "repo_name": "bellmit/termite-replication", "path": "/tests/time/mosa/tests/s1007/19_jmca/evosuite-tests/com/soops/CEN4010/JMCA/JParser/SimpleNode_ESTest.java", "source": "the-stack-v2", "method_name": "test24", "class_name": "SimpleNode_ESTest", "index": 1593, "label": 1}
{"input": "private void nextBlock() {\n \t\tif (mBlockNum >= mBlocksPerSet[mSetIndex]) {\n \t\t\tnextSet();\n \t\t\treturn;\n \t\t}\n \t\t\n \t\tmTrialOrder = new Integer[mTrials[mSetIndex].length];\n \t\tfor (int i = 0; i < mTrialOrder.length; i++)\n \t\t\tmTrialOrder[i] = i;\n \t\tCollections.shuffle(Arrays.asList(mTrialOrder));\n \t\t\n \t\tmBlockNum++;\n \t\tmTrialNum = 0;\n \t\tnextTrial();\n \t\tshouldPause = true;\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/3/3_4cd8a69f6192f2d8f84b9f96771db798e04f1b40/StudyController/3_4cd8a69f6192f2d8f84b9f96771db798e04f1b40_StudyController_s.java", "source": "the-stack-v2", "method_name": "nextBlock", "class_name": "StudyController", "index": 1594, "label": 1}
{"input": "@Override\n    public Collection<String> headers() {\n        final ImmutableSet.Builder<String> headers = ImmutableSet.builder();\n        headers.add(\n            DirectoryListing.header(\n                HttpHeaders.CONTENT_TYPE,\n                this.contentType()\n            )\n        );\n        headers.add(\n            DirectoryListing.header(\n                HttpHeaders.CONTENT_LENGTH,\n                String.valueOf(this.content.length)\n            )\n        );\n        return headers.build();\n    }", "timestamp": "2020-03-08T16:17:03.523530Z", "repo_name": "nixworks/s3auth", "path": "/s3auth-hosts/src/main/java/com/s3auth/hosts/DirectoryListing.java", "source": "the-stack-v2", "method_name": "headers", "class_name": "DirectoryListing", "index": 1595, "label": 1}
{"input": "public Criteria andStatusEqualTo(Integer value) {\r\n            addCriterion(\"status =\", value, \"status\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andStatusEqualTo", "class_name": "GeneratedCriteria", "index": 1596, "label": 1}
{"input": "private ByteSource getStubClassBytes(InputStream stream,\n        String fileName) throws IOException {\n      ClassReader classReader = new ClassReader(stream);\n      ClassMirror visitor = new ClassMirror(fileName);\n      classReader.accept(visitor, SKIP_CODE | SKIP_DEBUG | SKIP_FRAMES);\n      return visitor.getStubClassBytes();\n    }", "timestamp": "2021-01-18T08:33:02.435393Z", "repo_name": "bocon13/buck", "path": "/src/com/facebook/buck/jvm/java/abi/StubJar.java", "source": "the-stack-v2", "method_name": "getStubClassBytes", "class_name": "CreateStubAction", "index": 1597, "label": 1}
{"input": "public static Corretor createEntity(EntityManager em) {\n        Corretor corretor = new Corretor()\n            .nomeCorretor(DEFAULT_NOME_CORRETOR)\n            .usuario(DEFAULT_USUARIO)\n            .dataNascimento(DEFAULT_DATA_NASCIMENTO)\n            .foto(DEFAULT_FOTO)\n            .fotoContentType(DEFAULT_FOTO_CONTENT_TYPE)\n            .telefone(DEFAULT_TELEFONE);\n        return corretor;\n    }", "timestamp": "2023-04-25T08:10:07.834277Z", "repo_name": "ceduardo-roque/easyinsurance-hybrid", "path": "/src/test/java/br/com/fiap/easyinsurance/web/rest/CorretorResourceIT.java", "source": "the-stack-v2", "method_name": "createEntity", "class_name": "CorretorResourceIT", "index": 1598, "label": 1}
{"input": "public List<AnnotationContext> annotation() {\n\t\t\treturn getRuleContexts(AnnotationContext.class);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "annotation", "class_name": "AnnotationsContext", "index": 1599, "label": 1}
{"input": "public static void main(String[] args) {\n\t\tGenerateParentheses22 t = new GenerateParentheses22();\n\t\tSystem.out.println(t.generateParenthesis(3));\n\t}", "timestamp": "2021-04-28T02:56:40.843125Z", "repo_name": "liuxiao/LeetCodeExcercises", "path": "/src/com/cloudlewis/leetcode50/GenerateParentheses22.java", "source": "the-stack-v2", "method_name": "main", "class_name": "GenerateParentheses22", "index": 1600, "label": 1}
{"input": "public static void main(String[] args) {\n\t\tSchiebepuzzle puzzle = new Schiebepuzzle();\n\t\t\n\t\tpuzzle.mische();\n\t\tSystem.out.println(puzzle);\n\t\t\n\t\t\n\t\tSchiebAlg1 alg1 = new SchiebAlg1();\n\t\talg1.loese(puzzle);\n\t\tSystem.out.println(puzzle);\n\t\t}", "timestamp": "2022-04-24T17:32:22.874401Z", "repo_name": "alexemm/Programming-Homework-WS2016-17", "path": "/src/Hausaufgabe08/Testfall.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Testfall", "index": 1601, "label": 1}
{"input": "@GetMapping(\"/category/add\")\n    public String add(HttpServletRequest request,@RequestParam(\"depth1Field\")String depth1, @RequestParam(\"depth2Skill\")String depth2, Model model){\n        try {\n            HttpSession session = request.getSession();\n            Employee loginUser = (Employee) session.getAttribute(\"loginUser\");\n            if(loginUser.getAuthority()==0) {\n                return \"redirect:/\";\n            }\n            else {\n                model.addAttribute(\"empName\",loginUser.getEmpName());\n                model.addAttribute(\"depth1Field\",depth1);\n                model.addAttribute(\"depth2Skill\",depth2);\n                return \"manager/category_add\";\n            }\n        } catch (Exception e) {\n            return \"redirect:/\";\n        }\n    }", "timestamp": "2023-08-23T19:49:03.359668Z", "repo_name": "dudgh9661/tsisProject", "path": "/src/main/java/kr/co/tsis/education/category/categoryController.java", "source": "the-stack-v2", "method_name": "add", "class_name": "categoryController", "index": 1602, "label": 1}
{"input": "public static void setAlias(String xmlTagName, Class<?> className) {\n\t\txstream.alias(xmlTagName, className);\n\t}", "timestamp": "2020-07-02T07:42:44.849295Z", "repo_name": "patlai/anime-suggest-java", "path": "/src/anime/persistence/PersistenceXStream.java", "source": "the-stack-v2", "method_name": "setAlias", "class_name": "PersistenceXStream", "index": 1603, "label": 1}
{"input": "public Criteria andIdGreaterThanOrEqualTo(String value) {\r\n            addCriterion(\"id >=\", value, \"id\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andIdGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 1604, "label": 1}
{"input": "@Override\n    public Options overlapping(Text startRow, boolean startInclusive, Text endRow) {\n      var metaStartRow =\n          TabletsSection.encodeRow(tableId, startRow == null ? new Text(\"\") : startRow);\n      var metaEndRow = TabletsSection.encodeRow(tableId, null);\n      this.range =\n          new Range(metaStartRow, startRow == null ? true : startInclusive, metaEndRow, true);\n      this.endRow = endRow;\n\n      return this;\n    }", "timestamp": "2023-08-31T07:35:03.455133Z", "repo_name": "ctubbsii/accumulo", "path": "/core/src/main/java/org/apache/accumulo/core/metadata/schema/TabletsMetadata.java", "source": "the-stack-v2", "method_name": "overlapping", "class_name": "Builder", "index": 1605, "label": 1}
{"input": "private double getLength()\n    {\n        int end = getNodeEnd();\n        double length  = 0;\n        String stringlength = newick.substring(position, end);\n        try {\n            length = Double.valueOf(stringlength);\n        }\n        \n        catch (Exception e){\n                System.out.println(\"Error reading branch length\");\n                System.exit(1);\n        }\n        position = end; \n        \n        return length;\n    }", "timestamp": "2021-06-26T12:36:00.754838Z", "repo_name": "gatechatl/STRAW", "path": "/src/TreeVector/NewickParser.java", "source": "the-stack-v2", "method_name": "getLength", "class_name": "NewickParser", "index": 1606, "label": 1}
{"input": "private void setupMVP() {\n        \n        if (mStateMaintainer.firstTimeIn()) {\n            \n            MainPresenter presenter = new MainPresenter(this);\n            \n            MainModel model = new MainModel(presenter);\n            \n            presenter.setModel(model);\n            \n            mStateMaintainer.put(presenter);\n            mStateMaintainer.put(model);\n\n            \n            \n            mPresenter = presenter;\n\n        }\n        \n        else {\n            \n            mPresenter = mStateMaintainer.get(MainPresenter.class.getName());\n            \n            mPresenter.setView(this);\n        }\n    }", "timestamp": "2021-09-02T16:21:38.755318Z", "repo_name": "Ivan-Arias/ClaimUNSA-INP", "path": "/app/src/main/java/com/tinmegali/tutsmvp_sample/main/activity/view/MainActivity.java", "source": "the-stack-v2", "method_name": "setupMVP", "class_name": "MainActivity", "index": 1607, "label": 1}
{"input": "public String getFullName()\n    {\n        if(firstName.isEmpty() && lastName.isEmpty())\n            return \"\";\n        else if(firstName.isEmpty() && !lastName.isEmpty())\n            return lastName;\n        else if(!firstName.isEmpty() && lastName.isEmpty())\n            return firstName;\n        else\n            return firstName + \" \" + lastName;\n    }", "timestamp": "2023-05-31T15:13:32.184795Z", "repo_name": "Eldraea/Exercises_in_Java", "path": "/Person/src/myjava/exercises/Person.java", "source": "the-stack-v2", "method_name": "getFullName", "class_name": "Person", "index": 1608, "label": 1}
{"input": "public boolean match(StringLiteral node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 1609, "label": 1}
{"input": "public void showAll(){\n\t\tSystem.out.println(\"승객이 \"+billPay+\"원을 지불하였습니다.\");\n\t\tSystem.out.println(\"현재 총\"+passengerNum+\"가 탑승하였고,\");\n\t\tSystem.out.println(\"현재 총\"+(billPay*passengerNum)+\"의 수입금액이 있습니다.\");\n\t}", "timestamp": "2021-01-13T16:42:11.779798Z", "repo_name": "paul2oh/new_java", "path": "/javastart/src/javastart/b01_object/C05_Bus.java", "source": "the-stack-v2", "method_name": "showAll", "class_name": "Passenger", "index": 1610, "label": 1}
{"input": "@ResponseBody\n    @PostMapping(\"/category/addDepth\")\n    public int addDepth(@RequestBody categoryForm form){\n        if(form.getAdddepth()==\"\"){\n            return -1;\n        }\n        else return service.addDepth(form);\n    }", "timestamp": "2023-08-23T19:49:03.359668Z", "repo_name": "dudgh9661/tsisProject", "path": "/src/main/java/kr/co/tsis/education/category/categoryController.java", "source": "the-stack-v2", "method_name": "addDepth", "class_name": "categoryController", "index": 1611, "label": 1}
{"input": "@Override\n    protected void onDraw(Canvas canvas) {\n\n        super.onDraw(canvas);\n\n        drawDarkenedSurroundingArea(canvas);\n        drawGuidelines(canvas);\n        drawBorder(canvas);\n        drawCorners(canvas);\n    }", "timestamp": "2022-05-06T21:27:51.136578Z", "repo_name": "Jelly0726/JellyBase", "path": "/library/baselibrary/src/main/java/com/jelly/baselibrary/cropper/CropImageView.java", "source": "the-stack-v2", "method_name": "onDraw", "class_name": "CropImageView", "index": 1612, "label": 1}
{"input": "@Test\n    @Transactional\n    public void getAllAuthoritiesByInfoIsNotEqualToSomething() throws Exception {\n        \n        authorityRepository.saveAndFlush(authority);\n\n        \n        defaultAuthorityShouldNotBeFound(\"info.notEquals=\" + DEFAULT_INFO);\n\n        \n        defaultAuthorityShouldBeFound(\"info.notEquals=\" + UPDATED_INFO);\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "getAllAuthoritiesByInfoIsNotEqualToSomething", "class_name": "AuthorityResourceIT", "index": 1613, "label": 1}
{"input": "protected void onPause() {\n        if (camera != null) {\n            camera.release();\n            camera = null;\n        }\n\n        if (recorder != null) {\n            recorder.release();\n            recorder = null;\n        }\n\n        if (player != null) {\n            player.release();\n            player = null;\n        }\n\n        super.onPause();\n    }", "timestamp": "2020-04-09T20:35:13.666565Z", "repo_name": "SODA1127/if2moldistudy", "path": "/DoItAndroid/Part2/chapter10/SampleVideoRecorder/app/src/main/java/org/techtown/media/video/recorder/MainActivity.java", "source": "the-stack-v2", "method_name": "onPause", "class_name": "MainActivity", "index": 1614, "label": 1}
{"input": "@Override\n  public List<CompletableFuture<Void>> delete(List<Delete> deletes) {\n    return voidMutate(deletes);\n  }", "timestamp": "2020-03-21T15:28:16.237120Z", "repo_name": "siwuxietang/hbase", "path": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncTableImpl.java", "source": "the-stack-v2", "method_name": "delete", "class_name": "RawAsyncTableImpl", "index": 1615, "label": 1}
{"input": "@Override\n    public UserModel getUser(Integer id) {\n        return userModelMapper.selectByPrimaryKey(id);\n    }", "timestamp": "2023-06-25T20:05:39.320927Z", "repo_name": "bfyjr/dianping", "path": "/src/main/java/com/hs/dianping/service/Impl/UserServiceImpl.java", "source": "the-stack-v2", "method_name": "getUser", "class_name": "UserServiceImpl", "index": 1616, "label": 1}
{"input": "private static void createTitleRow(Map<String, String> titleMap, String sheetName) {\n        CellRangeAddress titleRange = new CellRangeAddress(0, 0, 0, titleMap.size() - 1);\n        sheet.addMergedRegion(titleRange);\n         SXSSFRow titleRow = sheet.createRow(TITLE_START_POSITION);\n       SXSSFCell titleCell = titleRow.createCell(0);\n        titleCell.setCellValue(sheetName);\n    }", "timestamp": "2022-12-22T13:26:20.663306Z", "repo_name": "xuhongda/load-service", "path": "/load-service-util/src/main/java/com/xu/util/Excel/ExportExcel.java", "source": "the-stack-v2", "method_name": "createTitleRow", "class_name": "ExportExcel", "index": 1617, "label": 1}
{"input": "public int getCelsius(){\n        try{\n            SQLiteDatabase db = this.getReadableDatabase();\n            Cursor res =  db.rawQuery( \"select * from prefs \",null );\n            res.moveToFirst();\n            return res.getInt(res.getColumnIndex(DBHelper.PREFS_COLUMN_CELSIUS));}\n        catch (Exception e ){Log.d(\"BTWeather - getCelsius\", String.valueOf(e));}\n        return 1;\n    }", "timestamp": "2020-03-22T13:09:56.343529Z", "repo_name": "JamesHarley/BTWeatherStation", "path": "/app/src/main/java/gnosisdevelopment/arduinobtweatherstation/DBHelper.java", "source": "the-stack-v2", "method_name": "getCelsius", "class_name": "DBHelper", "index": 1618, "label": 1}
{"input": "@Override\n        public void onComplete() {\n            logger.config(\"Config Changes support finished. There will no other Config reload.\");\n        }", "timestamp": "2021-06-12T20:52:56.747999Z", "repo_name": "vanajaguru/helidon", "path": "/config/config/src/main/java/io/helidon/config/ConfigHelper.java", "source": "the-stack-v2", "method_name": "onComplete", "class_name": "OnNextFunctionSubscriber", "index": 1619, "label": 1}
{"input": "public static String aesDecrypt(String input) {\n\t\ttry {\n\t\t\treturn new String(aesDecrypt(UtilEncode.decodeHex(input), DEFAULT_KEY), DEFAULT_URL_ENCODING);\n\t\t} catch (UnsupportedEncodingException e) {\n\t\t\treturn \"\";\n\t\t}\n\t}", "timestamp": "2020-04-27T10:34:21.844066Z", "repo_name": "wuchenl/springboot2-scaffold", "path": "/springboot2-utils/src/main/java/com/letters7/wuchen/springboot2/utils/security/Cryptos.java", "source": "the-stack-v2", "method_name": "aesDecrypt", "class_name": "Cryptos", "index": 1620, "label": 1}
{"input": "@Override\n    public NetworkSettings networkSettings() {\n      return NetworkSettings.builder()\n          .ports(Collections.emptyMap())\n          .build();\n    }", "timestamp": "2021-01-11T17:01:51.211646Z", "repo_name": "fguerco/helios", "path": "/helios-services/src/test/java/com/spotify/helios/agent/SupervisorTest.java", "source": "the-stack-v2", "method_name": "networkSettings", "class_name": "SupervisorTest", "index": 1621, "label": 1}
{"input": "@Override\n      public GetFile setUploadType(java.lang.String uploadType) {\n        return (GetFile) super.setUploadType(uploadType);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setUploadType", "class_name": "GetFile", "index": 1622, "label": 1}
{"input": "public DefaultValueContext defaultValue() {\n\t\t\treturn getRuleContext(DefaultValueContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "defaultValue", "class_name": "AnnotationMethodRestContext", "index": 1623, "label": 1}
{"input": "public static synchronized void m1() {\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\ttry {\n\t\t\t\tSystem.out.println(Thread.currentThread().getName() + \":\" + (number++));\n\t\t\t\tThread.sleep(200);\n\t\t\t} catch (Exception e) {\n\t\t\t\tSystem.out.println(\"异常\");\n\t\t\t}\n\t\t}\n\t}", "timestamp": "2023-01-15T21:40:15.999114Z", "repo_name": "lojack636/DEMO", "path": "/JavaExercise/src/main/java/thread/synchronizedDemo/TestMethod.java", "source": "the-stack-v2", "method_name": "m1", "class_name": "TestMethod", "index": 1624, "label": 1}
{"input": "protected boolean checkAuthorization(Session session, Container container)\n      throws IOException {\n    boolean authorized = true;\n    String user = \"\";\n    if (UserGroupInformation.isSecurityEnabled()) {\n      user = new HadoopKerberosName(session.getUpgradeRequest()\n          .getUserPrincipal().getName()).getShortName();\n    } else {\n      Map<String, List<String>> parameters = session.getUpgradeRequest()\n          .getParameterMap();\n      if (parameters.containsKey(\"user.name\")) {\n        List<String> users = parameters.get(\"user.name\");\n        user = users.get(0);\n      }\n    }\n    boolean isAdmin = false;\n    if (nmContext.getApplicationACLsManager().areACLsEnabled()) {\n      UserGroupInformation ugi = UserGroupInformation.createRemoteUser(user);\n      isAdmin = nmContext.getApplicationACLsManager().isAdmin(ugi);\n    }\n    String containerUser = container.getUser();\n    if (!user.equals(containerUser) && !isAdmin) {\n      authorized = false;\n    }\n    return authorized;\n  }", "timestamp": "2023-08-18T07:29:26.346912Z", "repo_name": "apache/hadoop", "path": "/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerShellWebSocket.java", "source": "the-stack-v2", "method_name": "checkAuthorization", "class_name": "ContainerShellWebSocket", "index": 1625, "label": 1}
{"input": "public void addMessageDestinationRef\n        (MessageDestinationRef mdr) {\n\n        namingResources.addMessageDestinationRef(mdr);\n        fireContainerEvent(\"addMessageDestinationRef\", mdr.getName());\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "addMessageDestinationRef", "class_name": "StandardContext", "index": 1626, "label": 1}
{"input": "public static boolean[][] readBoolean2D() {\n        int m = StdIn.readInt();\n        int n = StdIn.readInt();\n        boolean[][] a = new boolean[m][n];\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                a[i][j] = StdIn.readBoolean();\n            }\n        }\n        return a;\n    }", "timestamp": "2020-05-22T08:05:18.503891Z", "repo_name": "gjgj821/fortress", "path": "/src/main/java/stdlib/StdArrayIO.java", "source": "the-stack-v2", "method_name": "readBoolean2D", "class_name": "StdArrayIO", "index": 1627, "label": 1}
{"input": "public void createAndHoldSavepoint() throws TransactionException {\n        setSavepoint(getSavepointManager().createSavepoint());\n    }", "timestamp": "2021-07-12T23:37:36.449358Z", "repo_name": "zepfred/micronaut-data", "path": "/data-tx/src/main/java/io/micronaut/transaction/support/AbstractTransactionStatus.java", "source": "the-stack-v2", "method_name": "createAndHoldSavepoint", "class_name": "AbstractTransactionStatus", "index": 1628, "label": 1}
{"input": "public boolean testConnection() throws UnirestException, JSONException {\n\t\ttry {\n\t\t\treturn Unirest.get(url.toString()).asJson().getBody().getObject().getString(\"couchdb\").equals(\"Welcome\");\n\t\t} catch (UnirestException e) {\n\t\t\tlog.log(Level.SEVERE, connectmessage);\n\t\t\tthrow new UnirestException(connectmessage);\n\t\t} catch (JSONException e) {\n\t\t\tlog.log(Level.SEVERE, rootmessage);\n\t\t\tthrow new JSONException(rootmessage);\n\t\t}\n\t}", "timestamp": "2021-01-18T01:40:35.930601Z", "repo_name": "BenKettlewell/couchburp", "path": "/src/main/java/com/prevsec/couchburp/controller/BurpController.java", "source": "the-stack-v2", "method_name": "testConnection", "class_name": "BurpController", "index": 1629, "label": 1}
{"input": "@Override public boolean equals(Object obj) {\n      return obj == this\n          || obj instanceof Department\n          && deptno == ((Department) obj).deptno;\n    }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "Department", "index": 1630, "label": 1}
{"input": "@BeforeEach\n    public void setup() {\n        MockitoAnnotations.initMocks(this);\n        final AuthorityResource authorityResource = new AuthorityResource(authorityService, authorityQueryService);\n        this.restAuthorityMockMvc = MockMvcBuilders.standaloneSetup(authorityResource)\n            .setCustomArgumentResolvers(pageableArgumentResolver)\n            .setControllerAdvice(exceptionTranslator)\n            .setConversionService(createFormattingConversionService())\n            .setMessageConverters(jacksonMessageConverter)\n            .setValidator(validator).build();\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "setup", "class_name": "AuthorityResourceIT", "index": 1631, "label": 1}
{"input": "public static char removeAccent(char ch) {\n\t\tint index = Arrays.binarySearch(SPECIAL_CHARACTERS, ch);\n\t\tif (index >= 0) {\n\t\t\tch = REPLACEMENTS[index];\n\t\t}\n\t\treturn ch;\n\t}", "timestamp": "2021-01-10T04:47:01.704295Z", "repo_name": "quandt162/Jsp_Servlet", "path": "/news-jsp-mysql/src/java/com/news/util/DaiCaThang.java", "source": "the-stack-v2", "method_name": "removeAccent", "class_name": "DaiCaThang", "index": 1632, "label": 1}
{"input": "private FrameRecord createFrameRecord2()\n    {\n        FrameRecord r = new FrameRecord();\n        r.setBorderType( FrameRecord.BORDER_TYPE_REGULAR );\n        r.setAutoSize( true );\n        r.setAutoPosition( true );\n        return r;\n    }", "timestamp": "2023-01-11T02:29:36.328694Z", "repo_name": "DXYyang/SDP", "path": "/sourcedata/poi-REL_3_0/src/scratchpad/src/org/apache/poi/hssf/usermodel/HSSFChart.java", "source": "the-stack-v2", "method_name": "createFrameRecord2", "class_name": "HSSFChart", "index": 1633, "label": 1}
{"input": "public int getCustom(Object item, String propertyName, int defaultVal)\n    {\n       CustomProperties props = getCustomPropertiesForItem(item, false);\n       if (null == props)\n          return defaultVal;\n       if (props.m_customPropertyMap_int.containsKey(propertyName))\n          return props.m_customPropertyMap_int.get(propertyName);\n       return defaultVal;\n    }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/8/8_c35c0071965ffa2a49cabadc2a29a69aa9158202/RubeScene/8_c35c0071965ffa2a49cabadc2a29a69aa9158202_RubeScene_s.java", "source": "the-stack-v2", "method_name": "getCustom", "class_name": "RubeScene", "index": 1634, "label": 1}
{"input": "@Override\n    public String toString() {\n        return \"ArticleInfo{\" +\n                \"name='\" + name + '\\'' +\n                \", music='\" + music + '\\'' +\n                \", article='\" + article + '\\'' +\n                '}';\n    }", "timestamp": "2023-03-18T02:18:19.311221Z", "repo_name": "sine233/EnWords", "path": "/EnWords/app/src/main/java/com/jwstudio/enwords/exercise/bean/ArticleInfo.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "ArticleInfo", "index": 1635, "label": 1}
{"input": "public static int byteSizeOf(Bitmap bitmap) {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n            return bitmap.getAllocationByteCount();\n        } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB_MR1) {\n            return bitmap.getByteCount();\n        } else {\n            return bitmap.getRowBytes() * bitmap.getHeight();\n        }\n    }", "timestamp": "2021-09-16T22:47:28.856964Z", "repo_name": "agnunga/noreader_starter", "path": "/app/src/main/java/com/ag/noreader/MainActivity.java", "source": "the-stack-v2", "method_name": "byteSizeOf", "class_name": "MainActivity", "index": 1636, "label": 1}
{"input": "public ListItem searchForCarById(int id){\n\t\tEntityManager em = emfactory.createEntityManager();\n\t\tem.getTransaction().begin();\n\t\tListItem found = em.find(ListItem.class, id);\n\t\tem.close();\n\t\treturn found;\n\t}", "timestamp": "2020-03-30T14:10:51.723220Z", "repo_name": "triluong21/Online-Car-Shopping-List", "path": "/src/controller/ListItemHelper.java", "source": "the-stack-v2", "method_name": "searchForCarById", "class_name": "ListItemHelper", "index": 1637, "label": 1}
{"input": "@Override\n    public boolean findWelcomeFile(String name) {\n\n        synchronized (welcomeFilesLock) {\n            for (int i = 0; i < welcomeFiles.length; i++) {\n                if (name.equals(welcomeFiles[i]))\n                    return (true);\n            }\n        }\n        return (false);\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "findWelcomeFile", "class_name": "StandardContext", "index": 1638, "label": 1}
{"input": "public boolean match(AssertStatement node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 1639, "label": 1}
{"input": "@Override\n    public View getView(LayoutInflater inflater, @Nullable ViewGroup container) {\n        return inflater.inflate(R.layout.layout_care, container, false);\n    }", "timestamp": "2020-05-02T18:39:47.194466Z", "repo_name": "aartisoft/QuickRideAndroid", "path": "/quickRide/src/wr/java/com/disha/weride/androidapp/fragments/WRCareFragment.java", "source": "the-stack-v2", "method_name": "getView", "class_name": "WRCareFragment", "index": 1640, "label": 1}
{"input": "@RequestMapping(method = RequestMethod.GET, value = \"/time\")\n\tpublic ResponseEntity<PiStamp> getTime() {\n\t\tSystem.out.println(\"Giving out current time\");\n\t\treturn piService.getTime();\n\t}", "timestamp": "2021-01-17T07:09:20.274705Z", "repo_name": "AntonHellbe/ServerProject", "path": "/src/main/java/org/demo/controller/PiController.java", "source": "the-stack-v2", "method_name": "getTime", "class_name": "PiController", "index": 1641, "label": 1}
{"input": "public void testBug122442i() throws CoreException {\n\tsetUpBug122442d();\n\tsearch(\"Klass\", CLASS, IMPLEMENTORS);\n\tassertSearchResults(\n\t\t\"src/b122442/User.java void b122442.User.m():<anonymous>#1 [Klass] EXACT_MATCH\\n\" +\n\t\t\"src/b122442/User.java b122442.Sub [Klass] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug122442i", "class_name": "JavaSearchBugsTests", "index": 1642, "label": 1}
{"input": "@Test\n\tpublic void testQueriesExtended() throws Exception {\t    \n\t\taddJpegDocument(\"photo1.jpg\"); \n\t\taddJpegDocument(\"photo2.jpg\"); \n\n\t\tClientRequest request = clientRequest(\"/s-ramp?query=ext/JpgDocument\"); \n\t\tClientResponse<Feed> response = request.get(Feed.class);\n\t\tFeed feed = response.getEntity();\n\t\tObject totalResultsAttr = feed.getExtensionAttributes().get(SrampConstants.SRAMP_TOTAL_RESULTS_QNAME);\n        int total = Integer.parseInt(String.valueOf(totalResultsAttr));\n\t\tAssert.assertEquals(2, total);\n\n\t\trequest = clientRequest(\"/s-ramp/ext/JpgDocument\"); \n\t\tresponse = request.get(Feed.class);\n\t\tfeed = response.getEntity();\n\t\ttotalResultsAttr = feed.getExtensionAttributes().get(SrampConstants.SRAMP_TOTAL_RESULTS_QNAME);\n        total = Integer.parseInt(String.valueOf(totalResultsAttr));\n        Assert.assertEquals(2, total);\n\t}", "timestamp": "2021-01-18T07:59:21.887262Z", "repo_name": "softweaver/artificer", "path": "/s-ramp-test/src/test/java/org/overlord/sramp/test/server/atom/services/QueryResourceTest.java", "source": "the-stack-v2", "method_name": "testQueriesExtended", "class_name": "QueryResourceTest", "index": 1643, "label": 1}
{"input": "@Test\n    public void test4(){\n        String token = getToken();\n        Map<String,String> header = new HashMap<>();\n        header.put(ACCESS_TOKEN,token);\n        UserDTO userDTO = new UserDTO();\n        HttpUtil.doPostForObject(\"http://localhost:9998/demo/testDelegate\",userDTO,header, UserRepDTO.class);\n    }", "timestamp": "2023-06-07T17:13:15.018773Z", "repo_name": "yylstudy/spring-cloud-new", "path": "/test/src/main/java/com/yyl/test/MyTest1.java", "source": "the-stack-v2", "method_name": "test4", "class_name": "MyTest1", "index": 1644, "label": 1}
{"input": "public List<Block> getBlocks()\n  {\n    List<Block> newBlocks = Collections.unmodifiableList(blocks);\n    return newBlocks;\n  }", "timestamp": "2020-09-27T06:19:22.075701Z", "repo_name": "mustafain117/Block-Breaker-Game", "path": "/Block223v2/src/ca/mcgill/ecse223/block/model/Game.java", "source": "the-stack-v2", "method_name": "getBlocks", "class_name": "Game", "index": 1645, "label": 1}
{"input": "@java.lang.Override\n    public com.google.protobuf.ByteString\n        getRemoveBytes() {\n      java.lang.Object ref = \"\";\n      if (operationCase_ == 3) {\n        ref = operation_;\n      }\n      if (ref instanceof String) {\n        com.google.protobuf.ByteString b = \n            com.google.protobuf.ByteString.copyFromUtf8(\n                (java.lang.String) ref);\n        if (operationCase_ == 3) {\n          operation_ = b;\n        }\n        return b;\n      } else {\n        return (com.google.protobuf.ByteString) ref;\n      }\n    }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "getRemoveBytes", "class_name": "Builder", "index": 1646, "label": 1}
{"input": "@Test\n  public void case83() {\n    int[] revenues = { 886, -394, 173, -638, 236, -231, 733, -146, 0, 0, 296, -142, 515, -987, 10, -690, 803, -240, 636, -90, 867, -142, 88, -549, 379, -123, 114, -732, 841, -900, 947, -81, 519, 0, 0, -409, 391, -307, 813, -822, 269, -796, 641, -566, 880, -624, 811, -424, 303, -394 };\n    int k = 12;\n    assertEquals(760.2217796840958, mergersdivtwo.findMaximum(revenues, k), DELTA * 760.2217796840958);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case83", "class_name": "MergersDivTwoTest", "index": 1647, "label": 1}
{"input": "@Test\n\tpublic void intoEscapedXPathString() {\n\t\tassertThat(SelectorUtils.intoEscapedXPathString(\"abc\"), is(\"'abc'\"));\n\t\tassertThat(SelectorUtils.intoEscapedXPathString(\"a\\\"bc\"), is(\"'a\\\"bc'\"));\n\t\tassertThat(SelectorUtils.intoEscapedXPathString(\"a'bc\"), is(\"concat('a', \\\"'\\\", 'bc')\"));\n\t\tassertThat(SelectorUtils.intoEscapedXPathString(\"'abc'\"), is(\"concat('', \\\"'\\\", 'abc', \\\"'\\\", '')\"));\n\t}", "timestamp": "2020-03-28T19:37:01.701292Z", "repo_name": "hjralyc1/seleniumQuery", "path": "/src/test/java/integration/io/github/seleniumquery/by/SelectorsUtilTest.java", "source": "the-stack-v2", "method_name": "intoEscapedXPathString", "class_name": "SelectorsUtilTest", "index": 1648, "label": 1}
{"input": "public void testIntArrayAsObject() {\n        int[] obj = new int[2];\n        assertEquals((17 * 37) * 37 , new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());\n        obj[0] = 5;\n        assertEquals((17 * 37 + 5) * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());\n        obj[1] = 6;\n        assertEquals( (17 * 37 + 5) * 37 + 6, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());\n    }", "timestamp": "2022-02-13T19:44:43.869060Z", "repo_name": "SpoonLabs/nopol-experiments", "path": "/dataset/cl1/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java", "source": "the-stack-v2", "method_name": "testIntArrayAsObject", "class_name": "HashCodeBuilderTest", "index": 1649, "label": 1}
{"input": "public final ConstantExpressionContext constantExpression() throws RecognitionException {\n\t\tConstantExpressionContext _localctx = new ConstantExpressionContext(_ctx, getState());\n\t\tenterRule(_localctx, 196, RULE_constantExpression);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(1061);\n\t\t\texpression(0);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "constantExpression", "class_name": "JavaParser", "index": 1650, "label": 1}
{"input": "public static DocumentFragment createInlineForSdt( \n    \t\tWordprocessingMLPackage wmlPackage,\n    \t\tNodeIterator rPrNodeIt,\n    \t\tNodeIterator childResults, String tag) {\n    \t\n    \tDocumentFragment docfrag = createBlockForRPr( \n        \t\twmlPackage,\n        \t\tnull,\n        \t\trPrNodeIt,\n        \t\tchildResults);\n    \t    \n    \treturn docfrag;\n    }", "timestamp": "2020-04-03T02:05:51.304271Z", "repo_name": "ermanishks/docx4j", "path": "/src/main/java/org/docx4j/convert/out/pdf/viaXSLFO/Conversion.java", "source": "the-stack-v2", "method_name": "createInlineForSdt", "class_name": "Conversion", "index": 1651, "label": 1}
{"input": "public void clear() {\n        oredCriteria.clear();\n        orderByClause = null;\n        distinct = false;\n    }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "clear", "class_name": "UserCommissionsExample", "index": 1652, "label": 1}
{"input": "@Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        super.doPost(req, resp);\n    }", "timestamp": "2023-05-04T02:38:58.810083Z", "repo_name": "so1esou1/Learn", "path": "/javaweb-05-cookie/src/main/java/com/csu/servlet/CookieDemo2.java", "source": "the-stack-v2", "method_name": "doPost", "class_name": "CookieDemo2", "index": 1653, "label": 1}
{"input": "@Override\n\tpublic List<Category> listBySeUrl(MerchantStore store, String seUrl) throws ServiceException{\n\t\t\n\t\ttry {\n\t\t\treturn categoryDao.listBySeUrl(store, seUrl);\n\t\t} catch (Exception e) {\n\t\t\tthrow new ServiceException(e);\n\t\t}\n\t\t\n\t}", "timestamp": "2021-05-11T22:33:13.512901Z", "repo_name": "joshLV/laVetrina", "path": "/sm-core/src/main/java/com/salesmanager/core/business/catalog/category/service/CategoryServiceImpl.java", "source": "the-stack-v2", "method_name": "listBySeUrl", "class_name": "CategoryServiceImpl", "index": 1654, "label": 1}
{"input": "public void setNodeAsBlocked(Visualizer visualizer, List<Integer> next) {\n        Node node = visualizer.getNodes()[next.get(0)][next.get(1)];\n        if(!visualizer.getPathfindingRun().isRunning() && node.getState().equals(NodeState.DEFAULT)) {\n            node.changeState(NodeState.BLOCKED);\n        }\n    }", "timestamp": "2021-05-16T19:55:44.333105Z", "repo_name": "ShaneMaglangit/PathfindingVisualizer", "path": "/src/sample/Controller.java", "source": "the-stack-v2", "method_name": "setNodeAsBlocked", "class_name": "Controller", "index": 1655, "label": 1}
{"input": "@Test\n  public void case85() {\n    int[] revenues = { 383, 777, 793, 386, 649, 362, 690, 763, 540, 172, -211, 567, -782, 862, 67, 929, 22, 69, 393, 11, 229, -421, 784, -198, 315, 413, -91, 956, -862, 996, 305, 84, -336, 846, -313, 124, 582, 814, -434, -43, 87, -276, 788, -403, 754, 932, 676, 739, 226, -94 };\n    int k = 5;\n    assertEquals(925.5364900317867, mergersdivtwo.findMaximum(revenues, k), DELTA * 925.5364900317867);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case85", "class_name": "MergersDivTwoTest", "index": 1656, "label": 1}
{"input": "@Override\r\n    public void añadirHabitacion() {\r\n        pack.setHabitacion(\"Habitacion doble\");\r\n    }", "timestamp": "2020-08-30T05:09:37.020535Z", "repo_name": "ProgramacionPolitecnicoMalaga/PPM-Jesus-Manuel-Diaz-Aleman", "path": "/POO/Tercer Trimestre/PatronBuilderr/src/ContructorPackRomance.java", "source": "the-stack-v2", "method_name": "añadirHabitacion", "class_name": "ContructorPackRomance", "index": 1657, "label": 1}
{"input": "public static String dateFormat(String sdate, String format) {\n\t\t\tSimpleDateFormat formatter = new SimpleDateFormat(format);\n\t\t\tjava.sql.Date date = java.sql.Date.valueOf(sdate);\n\t\t\tString dateString = formatter.format(date);\n\n\t\t\treturn dateString;\n\t\t}", "timestamp": "2020-04-03T19:08:02.936008Z", "repo_name": "xhly521/AAHelper", "path": "/app/src/main/java/com/xhly/godutch/utility/DateTools.java", "source": "the-stack-v2", "method_name": "dateFormat", "class_name": "DateTools", "index": 1658, "label": 1}
{"input": "@Test\n    public void testAddShouldReturn6withMutipleDelimiterofAnyLength()  {\n        StringCalculator calculator = new StringCalculator();\n        assertEquals(6, calculator.add(\"//[***][%%%]\\n1***2%%%3\"));\n    }", "timestamp": "2023-02-01T22:46:50.310071Z", "repo_name": "fahad-israr/TDD-Kata-String-Calculator", "path": "/src/test/java/StringCalculatorTest.java", "source": "the-stack-v2", "method_name": "testAddShouldReturn6withMutipleDelimiterofAnyLength", "class_name": "StringCalculatorTest", "index": 1659, "label": 1}
{"input": "public void setCustomHeaders(Map<String, String> customHeaders) {\n        this.customHeaders.clear();\n        this.customHeaders.putAll(customHeaders);\n    }", "timestamp": "2023-08-17T01:42:17.287918Z", "repo_name": "MyPureCloud/platform-client-sdk-java", "path": "/build/src/main/java/com/mypurecloud/sdk/v2/api/request/GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdataRequest.java", "source": "the-stack-v2", "method_name": "setCustomHeaders", "class_name": "GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdataRequest", "index": 1660, "label": 1}
{"input": "public void menu1(MenuBar mbar) {\n        Menu help = new Menu(\"  Help  \");\n        help.add(item10 = new MenuItem(\"About..\"));\n        mbar.add(help);\n        item10.addActionListener(this);\n\n    }", "timestamp": "2020-05-06T15:49:29.551449Z", "repo_name": "gokcse/Go-Cloud", "path": "/Go Cloud Source Code/Netbeans 6.1 - Virtual Machine/CloudComputingServer/src/org/cit/CloudComputing/T_Editor.java", "source": "the-stack-v2", "method_name": "menu1", "class_name": "Frame_class", "index": 1661, "label": 1}
{"input": "public synchronized void initConfigInZKDatabase(QuorumVerifier qv) {\n        if (qv == null) return; \n        try {\n            if (this.dataTree.getNode(ZooDefs.CONFIG_NODE) == null) {\n                \n                LOG.warn(\"configuration znode missing (hould only happen during upgrade), creating the node\");\n                this.dataTree.addConfigNode();\n            }\n            this.dataTree.setData(ZooDefs.CONFIG_NODE, qv.toString().getBytes(), -1, qv.getVersion(), Time.currentWallTime());\n        } catch (NoNodeException e) {\n            System.out.println(\"configuration node missing - should not happen\");\n        }\n    }", "timestamp": "2021-11-23T14:30:09.439604Z", "repo_name": "airtimemedia/zookeeper", "path": "/src/java/main/org/apache/zookeeper/server/ZKDatabase.java", "source": "the-stack-v2", "method_name": "initConfigInZKDatabase", "class_name": "ZKDatabase", "index": 1662, "label": 1}
{"input": "public void setDefaultPackageType(String defaultPackageType) {\r\n        this.defaultPackageType = defaultPackageType;\r\n    }", "timestamp": "2020-05-17T01:26:00.968575Z", "repo_name": "gahlawat4u/repoName", "path": "/rda0105-agl-aus-java-a43926f304e3/xms-dto/src/main/java/com/gms/xms/model/webship/ShipmentInfoModel.java", "source": "the-stack-v2", "method_name": "setDefaultPackageType", "class_name": "ShipmentInfoModel", "index": 1663, "label": 1}
{"input": "public void sendStringMsg(String msg) {\n        ByteBuf message = Unpooled.buffer(msg.getBytes().length);\n        message.writeBytes(msg.getBytes());\n        ChannelFuture future = socketChannel.writeAndFlush(message);\n        future.addListener((ChannelFutureListener) channelFuture -> {\n            log.info(\"客户端手动发消息成功={}\", msg);\n        });\n    }", "timestamp": "2023-04-07T13:42:19.684531Z", "repo_name": "bellmit/jiang-mall-cloud", "path": "/chat-system/chat-client/src/main/java/org/jiang/chat/client/client/CIMClient.java", "source": "the-stack-v2", "method_name": "sendStringMsg", "class_name": "CIMClient", "index": 1664, "label": 1}
{"input": "@Test\n\tpublic void testCreateCard() throws Exception {\n\t\twhen(cardData.save(ArgumentMatchers.any(Card.class))).thenAnswer(new Answer<>() {\n\t\t\t@Override\n\t\t\tpublic Object answer(InvocationOnMock invocation) throws Throwable {\n\t\t\t\tCard c = (Card) invocation.getArgument(0);\n\t\t\t\tc.setId((long)new Random().nextInt(100));\n\t\t\t\treturn c;\n\t\t\t}\n\t\t});\n\t\tthis.mockMvc.perform(post(\"/newCard\").contentType(MediaType.APPLICATION_JSON).characterEncoding(\"UTF-8\").content(\"{\\\"title\\\": \\\"TestCard\\\", \\\"score\\\":100}\").with(csrf())\n\t\t)\n\t\t.andDo(print())\n\t\t.andExpect(status().isCreated());\n\t}", "timestamp": "2023-02-23T15:22:43.298997Z", "repo_name": "ElskeM/CardGameScrum", "path": "/cardgame/src/test/java/com/yrgo/sp/cardgame/controller/CardControllerTest.java", "source": "the-stack-v2", "method_name": "testCreateCard", "class_name": "CardControllerTest", "index": 1665, "label": 1}
{"input": "private synchronized void m418d(String str, List<String> list, String str2) {\n        C0328z2.m889d();\n        String str3 = f423d;\n        C0260s1.m686c(5, str3, \"Saving Index File for \" + str + \" file name:\" + C0118e1.m386a().f361a.getFileStreamPath(m425l(str)));\n        C0174k1 k1Var = new C0174k1(C0118e1.m386a().f361a.getFileStreamPath(m425l(str)), str2, 1, new C0139c(this));\n        ArrayList arrayList = new ArrayList();\n        for (String str4 : list) {\n            arrayList.add(new C0147g2(str4));\n        }\n        k1Var.mo253b(arrayList);\n    }", "timestamp": "2023-02-23T06:37:03.730470Z", "repo_name": "alissonlauffer/via-browser-dump", "path": "/app/src/main/java/com/flurry/sdk/C0136f2.java", "source": "the-stack-v2", "method_name": "m418d", "class_name": "C0136f2", "index": 1666, "label": 1}
{"input": "@Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n                .antMatcher(\"/api/**, /api**\")\n                .authorizeRequests()\n                .anyRequest().authenticated()\n                .and()\n\n                \n                .addFilterBefore(ajaxLoginProcessingFilter(), UsernamePasswordAuthenticationFilter.class)\n            .exceptionHandling()\n            .authenticationEntryPoint(new AjaxLoginAuthenticationEntryPoint()) \n            .accessDeniedHandler(ajaxAccessDeniedHandler()) \n        ;\n    }", "timestamp": "2022-12-21T15:58:58.931728Z", "repo_name": "arhrina/toyPrj", "path": "/AsyncSpringSecurity/src/main/java/me/arhrina/asynchronous/security/config/AjaxSecurityConfig.java", "source": "the-stack-v2", "method_name": "configure", "class_name": "AjaxSecurityConfig", "index": 1667, "label": 1}
{"input": "@Override\n        public Builder<T> addRendererDef(RendererDef rendererDef) {\n            if (rendererDescriptors == null) {\n                rendererDescriptors = Lists.newArrayList();\n            }\n            rendererDescriptors.add(rendererDef.getDescriptor());\n            return this;\n        }", "timestamp": "2020-12-14T02:11:21.814429Z", "repo_name": "fawnapp/aura", "path": "/aura-impl/src/main/java/org/auraframework/impl/root/component/BaseComponentDefImpl.java", "source": "the-stack-v2", "method_name": "addRendererDef", "class_name": "Builder", "index": 1668, "label": 1}
{"input": "private void spawnFlag(int Id)\n\t{\n\t\tfor (CombatFlag cf : FortSiegeManager.getInstance().getFlagList(Id))\n\t\t{\n\t\t\tcf.spawnMe();\n\t\t}\n\t}", "timestamp": "2021-01-10T03:42:04.091432Z", "repo_name": "soultobe/L2JOlivia_EpicEdition", "path": "/java/com/l2jolivia/gameserver/model/entity/FortSiege.java", "source": "the-stack-v2", "method_name": "spawnFlag", "class_name": "FortSiege", "index": 1669, "label": 1}
{"input": "@Test public void testJanino169() {\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.JDBC_FOODMART)\n        .query(\n            \"select \\\"time_id\\\" from \\\"foodmart\\\".\\\"time_by_day\\\" as \\\"t\\\"\\n\")\n        .returnsCount(730);\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testJanino169", "class_name": "JdbcTest", "index": 1670, "label": 1}
{"input": "@Override\n    public Set<DefDescriptor<InterfaceDef>> getInterfaces() {\n        return interfaces;\n    }", "timestamp": "2020-12-14T02:11:21.814429Z", "repo_name": "fawnapp/aura", "path": "/aura-impl/src/main/java/org/auraframework/impl/root/component/BaseComponentDefImpl.java", "source": "the-stack-v2", "method_name": "getInterfaces", "class_name": "BaseComponentDefImpl", "index": 1671, "label": 1}
{"input": "@Override\n        public NotesViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n            return mPresenter.createViewHolder(parent, viewType);\n        }", "timestamp": "2021-09-02T16:21:38.755318Z", "repo_name": "Ivan-Arias/ClaimUNSA-INP", "path": "/app/src/main/java/com/tinmegali/tutsmvp_sample/main/activity/view/MainActivity.java", "source": "the-stack-v2", "method_name": "onCreateViewHolder", "class_name": "ListNotes", "index": 1672, "label": 1}
{"input": "private static void showErrorHint(Project project, Editor editor, String message) {\n        CodeInsightUtils.showErrorHint(project, editor, message, INTRODUCE_VARIABLE, HelpID.INTRODUCE_VARIABLE);\n    }", "timestamp": "2021-01-16T19:01:44.796215Z", "repo_name": "leomindez/kotlin", "path": "/idea/src/org/jetbrains/kotlin/idea/refactoring/introduce/introduceVariable/KotlinIntroduceVariableHandler.java", "source": "the-stack-v2", "method_name": "showErrorHint", "class_name": "KotlinIntroduceVariableHandler", "index": 1673, "label": 1}
{"input": "@Override\n\tpublic int getComparatorInputOverride(IBlockState state, World world, BlockPos pos) {\n\t\tTileEntity tile = world.getTileEntity(pos);\n\t\tif (tile instanceof TileFusionCore) {\n\t\t\tTileFusionCore core = (TileFusionCore) tile;\n\t\t\tdouble strength = core.getAlternateComparator() ? (double)core.heat/core.getMaxHeat() : (double)core.efficiency/(double)NCConfig.fusion_comparator_max_efficiency;\n\t\t\treturn (int) MathHelper.clamp(15D*strength, 0, 15);\n\t\t}\n\t\treturn Container.calcRedstone(world.getTileEntity(pos));\n\t}", "timestamp": "2020-03-25T08:56:26.322487Z", "repo_name": "remclave/NuclearCraft", "path": "/src/main/java/nc/block/tile/generator/BlockFusionCore.java", "source": "the-stack-v2", "method_name": "getComparatorInputOverride", "class_name": "BlockFusionCore", "index": 1674, "label": 1}
{"input": "@PutMapping(\"/update\")\n    @ResponseStatus(HttpStatus.CREATED)\n    public Reservation update(@RequestBody Reservation reservation) {\n        return\n                reservationServices.update(reservation);\n    }", "timestamp": "2023-08-25T17:19:03.155974Z", "repo_name": "RedmiRei/Reto3_4", "path": "/src/main/java/com/usa/ciclo3/reto3/web/ReservationControllerWeb.java", "source": "the-stack-v2", "method_name": "update", "class_name": "ReservationControllerWeb", "index": 1675, "label": 1}
{"input": "private int getRise() {\n        rise = rise + GameTool.getInstance().jumpHeight * 15 / 50;\n        Log.i(TAG, \"getRise \" + riseStart + \"   \" + birdHeight);\n        if (GameTool.getInstance().jumpHeight < rise) {\n            rise = -1;\n            return -1;\n        } else\n            return rise;\n    }", "timestamp": "2022-11-10T15:18:39.844014Z", "repo_name": "AndroidCourseTeam/AndroidHomework", "path": "/app/src/main/java/com/nankai/myflappybird/GameView.java", "source": "the-stack-v2", "method_name": "getRise", "class_name": "GameView", "index": 1676, "label": 1}
{"input": "public static WritableWorkbook createWorkbook(OutputStream os,\n                                                Workbook in)\n    throws IOException\n  {\n    return createWorkbook(os, in, ((WorkbookParser) in).getSettings());\n  }", "timestamp": "2020-12-27T09:34:47.148817Z", "repo_name": "bloomer024/Mobile-Development", "path": "/excelClassExceptionDebug/src/jxl/Workbook.java", "source": "the-stack-v2", "method_name": "createWorkbook", "class_name": "Workbook", "index": 1677, "label": 1}
{"input": "public void updateBlockedState() {\n        if (state > KEY_NO_INPUT) {\n            state = KEY_RELEASED;\n        } else if (state == KEY_RELEASED) {\n            state = KEY_NO_INPUT;\n        }\n    }", "timestamp": "2022-08-26T19:37:43.916742Z", "repo_name": "przwr/GameEngine", "path": "/src/game/gameobject/inputs/Action.java", "source": "the-stack-v2", "method_name": "updateBlockedState", "class_name": "Action", "index": 1678, "label": 1}
{"input": "public StreamingResolution preview() {\n        return new StreamingResolution(\"image/jpeg\") {\n            @Override\n            public void stream(HttpServletResponse response) throws Exception {\n                if (getCategory().getImage() != null) {\n                    response.getOutputStream().write(getCategory().getImageThumbnail(thumbnailSize));\n                    response.flushBuffer();\n                }\n            }\n        }.setFilename(\"category-\".concat(getCategory().getCode() != null ? getCategory().getCode() : \"0000\").concat(\".jpeg\"));\n    }", "timestamp": "2022-12-20T20:53:48.632393Z", "repo_name": "cclafuente/openbravo-appengine-maven", "path": "/openbravopos_2.30.2_src/src-appengine-nordpos/src/main/java/mobi/nordpos/retail/action/CategoryImageActionBean.java", "source": "the-stack-v2", "method_name": "preview", "class_name": "CategoryImageActionBean", "index": 1679, "label": 1}
{"input": "public String toString() {\n    String listOfStudents = \" \";\n    for (Student student : students) {\n      listOfStudents += \"\\n\" + student.getName();\n    }\n    return \"Group: \" + name + \".\\n\" + \"List of students: \" + listOfStudents;\n  }", "timestamp": "2021-01-12T16:14:18.791767Z", "repo_name": "igorkorunets/homework", "path": "/lesson5/mvakarchuk/src/jelementary/Group.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "Group", "index": 1680, "label": 1}
{"input": "public void testBug137087b_CamelCase() throws CoreException {\n\tint matchRule = SearchPattern.R_CAMELCASE_MATCH;\n\tString pattern = \"Runtimeex\";\n\tsearch(pattern, TYPE, DECLARATIONS, matchRule);\n\tassertSearchResults(\n\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.RuntimeException EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug137087b_CamelCase", "class_name": "JavaSearchBugsTests", "index": 1681, "label": 1}
{"input": "@Test\n    @Transactional\n    public void getAllUnits() throws Exception {\n        \n        unitRepository.saveAndFlush(unit);\n\n        \n        restUnitMockMvc.perform(get(\"/api/units?sort=id,desc\"))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.[*].id\").value(hasItem(unit.getId().intValue())))\n            .andExpect(jsonPath(\"$.[*].unitType\").value(hasItem(DEFAULT_UNIT_TYPE.toString())));\n    }", "timestamp": "2022-12-21T12:20:33.195209Z", "repo_name": "bahmetpalanci/katilimcivatandas", "path": "/src/test/java/com/municipality/katilimcivatandas/web/rest/UnitResourceIT.java", "source": "the-stack-v2", "method_name": "getAllUnits", "class_name": "UnitResourceIT", "index": 1682, "label": 1}
{"input": "public String useVariant1TipText() {\n    return \"set true to use variant 1 of the paper, otherwise use variant 2.\";\n  }", "timestamp": "2023-04-14T12:37:30.510795Z", "repo_name": "suhitaghosh10/Tune2Timeseries", "path": "/src/main/java/org/ovgu/de/classifier/functions/supportVector/RegSMOImproved.java", "source": "the-stack-v2", "method_name": "useVariant1TipText", "class_name": "RegSMOImproved", "index": 1683, "label": 1}
{"input": "public void testBug94718() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[2];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b94718/SetUp.java\",\n\t\t\"package b94718;\\n\" +\n\t\t\"public @interface SetUp {\\n\" +\n\t\t\"\tString value() {}\\n\" +\n\t\t\"}\\n\"\n\t);\n\tthis.workingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/b94718/Test.java\",\n\t\t\"package b94718;\\n\" +\n\t\t\"@SetUp(\\\"howdy\\\")\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"}\\n\"\n\t);\n\tIType type = this.workingCopies[1].getType(\"package b94718;\\n\"0);\n\tsearch(type, REFERENCES, SearchEngine.createWorkspaceScope());\n\tassertSearchResults(\n\t\t\"package b94718;\\n\"1\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug94718", "class_name": "JavaSearchBugsTests", "index": 1684, "label": 1}
{"input": "public boolean ifBranchContainsReturn() {\n\t\tReturnStatementExplorator r = new ReturnStatementExplorator();\n\t\tstatement.getThenStatement().accept(r);\n\t\treturn r.hasReturnStatement();\n\t}", "timestamp": "2020-05-29T08:52:09.843587Z", "repo_name": "netgroup-polito/vnf-modeling", "path": "/Marchetti/nf-modeling-master-87a891e14833de7ee71f941d0532284571489bdc/nf-modeling-master-87a891e14833de7ee71f941d0532284571489bdc/src/it/polito/parser/IfElseBranch.java", "source": "the-stack-v2", "method_name": "ifBranchContainsReturn", "class_name": "IfElseBranch", "index": 1685, "label": 1}
{"input": "private static String bytesToString(byte[] bytes) {\n        StringBuilder hexString = new StringBuilder();\n        for (byte b : bytes) {\n            hexString.append(String.format(\"%02X\", b));\n        }\n        return hexString.toString();\n    }", "timestamp": "2020-06-03T14:12:10.752160Z", "repo_name": "aionnetwork/aion_types", "path": "/test/org/aion/types/LogTest.java", "source": "the-stack-v2", "method_name": "bytesToString", "class_name": "LogTest", "index": 1686, "label": 1}
{"input": "protected Formatter<?> getFormatter(PeriodFormat annotation, Class<?> fieldType) {\n\t\treturn new PeriodFormatter();\n\t}", "timestamp": "2023-03-07T14:09:26.124132Z", "repo_name": "chelu/jdal", "path": "/core/src/main/java/org/jdal/text/PeriodFormatAnnotationFactory.java", "source": "the-stack-v2", "method_name": "getFormatter", "class_name": "PeriodFormatAnnotationFactory", "index": 1687, "label": 1}
{"input": "@Nonnull\n    public final Rule.Pattern definitionOf(@Nonnull PlainTerm ...terms) {\n        return Rule.pattern(definitionTerms(terms));\n    }", "timestamp": "2020-04-02T04:11:55.421623Z", "repo_name": "robstoll/predicator", "path": "/core/src/main/java/org/predicode/predicator/terms/Variable.java", "source": "the-stack-v2", "method_name": "definitionOf", "class_name": "Variable", "index": 1688, "label": 1}
{"input": "@Override\n    public void showSearchResultList(List<BooksByTag.TagBook> list) {\n        List<SearchDetail.SearchBooks> mList = new ArrayList<>();\n        for (BooksByTag.TagBook book : list) {\n            mList.add(new SearchDetail.SearchBooks(book._id, book.title, book.author, book.cover, book.retentionRatio, book.latelyFollower));\n        }\n        mAdapter.clear();\n        mAdapter.addAll(mList);\n    }", "timestamp": "2023-02-26T23:09:19.854822Z", "repo_name": "NEW-MIKE/Stareader", "path": "/app/src/main/java/com/kaya/stareader/ui/activity/SearchByAuthorActivity.java", "source": "the-stack-v2", "method_name": "showSearchResultList", "class_name": "SearchByAuthorActivity", "index": 1689, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        toolbar=findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n        getSupportActionBar().setTitle(\"StartUp Ideas\");\n\n        navigationView=findViewById(R.id.navigation_nav);\n        drawerLayout = findViewById(R.id.navigation_drawer);\n        actionBarDrawerToggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.drawer_ope, R.string.drawer_close);\n        drawerLayout.setDrawerListener(actionBarDrawerToggle);\n\n\n        \n\n        initAllIdeas();\n\n    }", "timestamp": "2020-05-24T22:49:45.368657Z", "repo_name": "jwngma/Startup-Ideas", "path": "/app/src/main/java/com/startupideas/startupideas/MainActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "MainActivity", "index": 1690, "label": 1}
{"input": "@Override\n    public void draw(Canvas canvas, Paint paint) {\n        paint.setStyle(Paint.Style.STROKE);\n        paint.setStrokeWidth(3);\n        super.draw(canvas, paint);\n    }", "timestamp": "2020-12-24T19:17:55.548273Z", "repo_name": "nullog/AVLoadingIndicatorView", "path": "/library/src/main/java/com/wang/avi/indicator/BallScaleRippleIndicator.java", "source": "the-stack-v2", "method_name": "draw", "class_name": "BallScaleRippleIndicator", "index": 1691, "label": 1}
{"input": "@Override\n      public Update setQuotaUser(java.lang.String quotaUser) {\n        return (Update) super.setQuotaUser(quotaUser);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setQuotaUser", "class_name": "Update", "index": 1692, "label": 1}
{"input": "public void testBug201064d_CamelCaseSamePartCount() throws CoreException {\n\tTypeNameMatchCollector collector = new TypeNameMatchCollector();\n\tsearchAllTypeNames(\"CC\", SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH, collector);\n\tassertSearchResults(\n\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CatCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CatCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CxxCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CxxxxCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",\n\t\tcollector\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug201064d_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 1693, "label": 1}
{"input": "@Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();\n        assert actionBar != null;\n        actionBar.setTitle(\"خرید گیفت کارت\");\n        actionBar.setDisplayShowHomeEnabled(true);\n        actionBar.setDisplayHomeAsUpEnabled(true);\n    }", "timestamp": "2021-10-28T22:28:27.287477Z", "repo_name": "mehrdadbahri/charge-app-android", "path": "/app/src/main/java/ir/android_developing/chargeapp/GiftcardPurchaseFragment.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "GiftcardPurchaseFragment", "index": 1694, "label": 1}
{"input": "@Test\n            public void shouldReturn400() {\n                response.then().statusCode(HttpURLConnection.HTTP_BAD_REQUEST);\n            }", "timestamp": "2021-01-23T06:35:39.821088Z", "repo_name": "anttiahonen/ekanban", "path": "/backend/src/integration-test/java/fi/aalto/ekanban/controllers/GameControllerTest.java", "source": "the-stack-v2", "method_name": "shouldReturn400", "class_name": "withInvalidTurn", "index": 1695, "label": 1}
{"input": "public Criteria andTypeIsNull() {\r\n            addCriterion(\"type is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andTypeIsNull", "class_name": "GeneratedCriteria", "index": 1696, "label": 1}
{"input": "@Override\n    public String toString() {\n        return \"StoreData{\" +\n                \"code=\" + code +\n                \", msg='\" + msg + '\\'' +\n                \", info=\" + info +\n                '}';\n    }", "timestamp": "2020-04-08T01:24:13.675127Z", "repo_name": "yyj1204/junchenlun", "path": "/emperor/src/main/java/com/wktx/www/emperor/apiresult/mine/store/StoreData.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "StoreData", "index": 1697, "label": 1}
{"input": "@RequestMapping(\"change-password\")\n\tvoid changePassword(@RequestParam(name = \"newPassword\") String newPassword,\n\t\t\t@RequestParam(name = \"username\") String username) {\n\t\tadminService.changePassword(newPassword, username);\n\n\t}", "timestamp": "2020-04-09T18:27:51.709543Z", "repo_name": "mmazur658/Marcin-Mazur-Portfolio", "path": "/src/main/java/pl/marcinmazur/portfolio/controller/AdminRestController.java", "source": "the-stack-v2", "method_name": "changePassword", "class_name": "AdminRestController", "index": 1698, "label": 1}
{"input": "public StatsBsIbBaseTermDataResponse getBsIbBaseTermDataRawGetResult() {\r\n        return bsIbBaseTermDataRawGetResult;\r\n    }", "timestamp": "2022-11-24T11:20:29.041478Z", "repo_name": "AirspanNetworks/SWITModules", "path": "/airspan.netspan/src/main/java/Netspan/NBI_15_2/Statistics/BsIbBaseTermDataRawGetResponse.java", "source": "the-stack-v2", "method_name": "getBsIbBaseTermDataRawGetResult", "class_name": "BsIbBaseTermDataRawGetResponse", "index": 1699, "label": 1}
{"input": "@Override\n    public String toString() {\n        StringBuilder res = new StringBuilder(\"Stack: [\");\n\n        for(int i = 0; i < array.getSize(); i ++){\n            res.append(array.get(i));\n\n            if( i != array.getSize() - 1)\n                res.append(\",\");\n        }\n\n        res.append(\"]\");\n        return res.toString();\n    }", "timestamp": "2020-11-25T21:11:22.131235Z", "repo_name": "yaopeng-coder/data-structure", "path": "/stack/ArrayStack.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "ArrayStack", "index": 1700, "label": 1}
{"input": "@JsonIgnore\n    public int getNumberAsInt(){\n        if(number != null){\n            String[] nbrs = number.split(\"\\\\.\");\n            return Integer.valueOf(nbrs[nbrs.length-1]);\n        }else{\n            return -1;\n        }\n    }", "timestamp": "2022-11-28T15:08:42.672199Z", "repo_name": "noahch/blogdiff", "path": "/src/main/java/ch/uzh/seal/BLogDiff/model/rest/Job.java", "source": "the-stack-v2", "method_name": "getNumberAsInt", "class_name": "Job", "index": 1701, "label": 1}
{"input": "private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {\n      \n      \n      \n      String useMtlsEndpoint = System.getenv(\"GOOGLE_API_USE_MTLS_ENDPOINT\");\n      useMtlsEndpoint = useMtlsEndpoint == null ? \"auto\" : useMtlsEndpoint;\n      if (\"always\".equals(useMtlsEndpoint) || (\"auto\".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {\n        return DEFAULT_MTLS_ROOT_URL;\n      }\n      return DEFAULT_ROOT_URL;\n    }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "chooseEndpoint", "class_name": "Builder", "index": 1702, "label": 1}
{"input": "public static Shape createUpTriangle(float s) {\n        GeneralPath p0 = new GeneralPath();\n        p0.moveTo(0.0f, -s);\n        p0.lineTo(s, s);\n        p0.lineTo(-s, s);\n        p0.closePath();\n        return p0;\n    }", "timestamp": "2021-04-17T05:37:48.393527Z", "repo_name": "wuhongjun15/overfitting-study", "path": "/DiffTGen-result/output/Chart_11_1_capgen/patch/instru1/ShapeUtilities.java", "source": "the-stack-v2", "method_name": "createUpTriangle", "class_name": "ShapeUtilities", "index": 1703, "label": 1}
{"input": "public void testBug124624_HaMa_CamelCaseSamePartCount() throws CoreException {\n\tsetupBug124624();\n\tsearch(\"HaMa\", IJavaSearchConstants.TYPE, IJavaSearchConstants.DECLARATIONS, SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);\n\tassertSearchResults(\n\t\t\"src/Test.java HashMap [HashMap] EXACT_MATCH\\n\" +\n\t\t\"src/Test.java HaxMapxxxx [HaxMapxxxx] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug124624_HaMa_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 1704, "label": 1}
{"input": "private void setUpBug100772_ProjectScope_ClassAndSubclass() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[2];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b100772/Test.java\",\n\t\t\"package b100772;\\n\" +\n\t\t\"class Test<T> {\\n\" +\n\t\t\"    public void foo(T t) {}\\n\" +\n\t\t\"    public void foo(Class c) {}\\n\" +\n\t\t\"}\\n\"\n\t);\n\tthis.workingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/b100772/Sub.java\",\n\t\t\"package b100772;\\n\" +\n\t\t\"class Sub extends Test<String> {\\n\" +\n\t\t\"    public void foo(String str) {}\\n\" +\n\t\t\"package b100772;\\n\"0 +\n\t\t\"}\\n\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "setUpBug100772_ProjectScope_ClassAndSubclass", "class_name": "JavaSearchBugsTests", "index": 1705, "label": 1}
{"input": "public void ProcessElement(TextElement TheElement) {\n\t\tString TheElementName = TheElement.getName();\n\t\tString TheTextValue = TheElement.getTextValue();\n\n\t\tif (TheElementName.compareTo(IDTag) == 0) {\n\t\t\ttry {\n\t\t\t\tURI ReadID = new URI(TheTextValue);\n\t\t\t\tAdvertisementID = IDFactory.fromURI(ReadID);\n\t\t\t\treturn;\n\t\t\t} catch (URISyntaxException Ex) {\n\t\t\t\t\n\t\t\t\tEx.printStackTrace();\n\t\t\t} catch (ClassCastException Ex) {\n\t\t\t\t\n\t\t\t\tEx.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tif (TheElementName.compareTo(NameTag) == 0) {\n\t\t\tTheName = TheTextValue;\n\t\t\treturn;\n\t\t}\n\t\tif (TheElementName.compareTo(OwnerTag) == 0) {\n\t\t\tOwner = TheTextValue;\n\t\t\treturn;\n\t\t}\n\t}", "timestamp": "2021-01-10T22:05:07.458712Z", "repo_name": "lucasaoki/sd0642-t3-g5", "path": "/src/advertisementFileFactory/FileAdvertisement.java", "source": "the-stack-v2", "method_name": "ProcessElement", "class_name": "FileAdvertisement", "index": 1706, "label": 1}
{"input": "@Override\r\n    public void init(FilterConfig filterConfig) throws ServletException {\r\n    \t\r\n    \t\n    \ttry {\r\n    \t\tblade = Blade.me();\r\n\t\t\tif(!blade.isInit){\r\n\t\t\t\t\r\n\t\t\t\tblade.webRoot(filterConfig.getServletContext().getRealPath(\"/\"));\r\n\t\t\t\tBootstrap bootstrap = blade.bootstrap();\r\n\t\t\t\tString bootStrapClassName = filterConfig.getInitParameter(BOOSTRAP_CLASS);\r\n\t\t\t\tif(StringKit.isNotBlank(bootStrapClassName)){\r\n\t\t\t\t\tbootstrap = getBootstrap(filterConfig.getInitParameter(BOOSTRAP_CLASS));\r\n\t\t\t\t\tbootstrap.init();\r\n\t\t\t\t\tblade.app(bootstrap);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t    \n\t\t\t\tnew RouteBuilder(blade).building();\r\n\t\t\t\t\r\n\t\t\t\t\n\t\t\t    IocApplication.init(blade);\r\n\t\t\t    \r\n\t\t\t    bootstrap.contextInitialized(blade);\r\n\t\t\t    \r\n\t\t\t    blade.setInit(true);\r\n\t\t\t    \r\n\t\t\t    actionHandler = new ActionHandler(filterConfig.getServletContext(), blade);\r\n\t\t\t    \r\n\t\t\t    LOGGER.info(\"blade init complete!\");\r\n\t\t\t}\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tSystem.exit(0);\r\n\t\t}\r\n    \t\r\n    }", "timestamp": "2020-04-01T17:59:07.086611Z", "repo_name": "dakabang/blade", "path": "/blade-core/src/main/java/com/blade/CoreFilter.java", "source": "the-stack-v2", "method_name": "init", "class_name": "CoreFilter", "index": 1707, "label": 1}
{"input": "@Test\n    public void testThatConsumerMustNotBeNullWithShortcut() {\n        assertThrows(IllegalArgumentException.class, () -> Uni.createFrom().item(1).invoke((Consumer<? super Integer>) null));\n    }", "timestamp": "2022-11-30T09:32:52.267405Z", "repo_name": "lamtrhieu/smallrye-mutiny", "path": "/implementation/src/test/java/io/smallrye/mutiny/operators/UniOnItemInvokeTest.java", "source": "the-stack-v2", "method_name": "testThatConsumerMustNotBeNullWithShortcut", "class_name": "UniOnItemInvokeTest", "index": 1708, "label": 1}
{"input": "public void handleGuideKey() {\r\n        if (!mMainActivityWrapper.isResumed()) {\r\n            startActivity(new Intent(Intent.ACTION_VIEW, TvContract.Programs.CONTENT_URI));\r\n        } else {\r\n            mMainActivityWrapper.getMainActivity().getOverlayManager().toggleProgramGuide();\r\n        }\r\n    }", "timestamp": "2020-03-31T22:30:02.802799Z", "repo_name": "johnjcool/TV", "path": "/app/src/main/java/com/android/tv/TvApplication.java", "source": "the-stack-v2", "method_name": "handleGuideKey", "class_name": "TvApplication", "index": 1709, "label": 1}
{"input": "@Override\n    public void put(String key, int exp, Object value) {\n        redisTemplate.opsForValue().set(key, value, exp);\n    }", "timestamp": "2021-01-01T15:49:23.889089Z", "repo_name": "sjony/order", "path": "/order/order-base/src/main/java/com/sjony/cache/RedisClient.java", "source": "the-stack-v2", "method_name": "put", "class_name": "RedisClient", "index": 1710, "label": 1}
{"input": "@Test\n    public void testShouldGiveTheFirstNameOfPerson() throws Exception {\n        Person person = new Person(name, gender, age, address);\n        assertEquals(\"Chaitanya\",person.getFirstName());\n    }", "timestamp": "2021-01-10T07:02:07.328196Z", "repo_name": "navyasrib/java", "path": "/records/test/guestTest/PersonTest.java", "source": "the-stack-v2", "method_name": "testShouldGiveTheFirstNameOfPerson", "class_name": "PersonTest", "index": 1711, "label": 1}
{"input": "@Override\r\n    public String toString()\r\n    {\r\n        TpmStructurePrinter _p = new TpmStructurePrinter(\"TPM2B_PUBLIC_KEY_RSA\");\r\n        toStringInternal(_p, 1);\r\n        _p.endStruct();\r\n        return _p.toString();\r\n    }", "timestamp": "2022-11-07T09:56:44.953339Z", "repo_name": "keke8273/TSS.MSR", "path": "/TSS.Java/src/tss/tpm/TPM2B_PUBLIC_KEY_RSA.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "TPM2B_PUBLIC_KEY_RSA", "index": 1712, "label": 1}
{"input": "@Test(timeout = 4000)\n  public void test40()  throws Throwable  {\n      SimpleNode simpleNode0 = new SimpleNode(1);\n      simpleNode0.jjtAddChild((Node) null, 0);\n      simpleNode0.jjtAddChild((Node) null, 1);\n      assertEquals(2, simpleNode0.jjtGetNumChildren());\n  }", "timestamp": "2023-04-17T20:05:40.560943Z", "repo_name": "bellmit/termite-replication", "path": "/tests/time/mosa/tests/s1007/19_jmca/evosuite-tests/com/soops/CEN4010/JMCA/JParser/SimpleNode_ESTest.java", "source": "the-stack-v2", "method_name": "test40", "class_name": "SimpleNode_ESTest", "index": 1713, "label": 1}
{"input": "@Override\n    public Object afterAction(WorkflowInstance workflowInstance) {\n        return null;\n    }", "timestamp": "2020-04-21T18:36:26.492140Z", "repo_name": "anindoasaha/workflow_engine", "path": "/src/main/java/com/anindoasaha/workflowengine/prianza/task/control/composite/AsyncWorkflowTask.java", "source": "the-stack-v2", "method_name": "afterAction", "class_name": "AsyncWorkflowTask", "index": 1714, "label": 1}
{"input": "public static void assertEmpty(final Collection<?> collection) {\n    assertEmpty(collection.toString(), collection);\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "assertEmpty", "class_name": "UsefulTestCase", "index": 1715, "label": 1}
{"input": "public void testBug128877b() throws CoreException {\n\tIType type = getPackageFragment(\"JavaSearchBugs\", \"lib/b128877.jar\", \"pack\").getClassFile(\"Test.class\").getType();\n\tIMethod method = type.getMethod(\"Test\", new String[] { \"Ljava.lang.String;\" });\n\tsearch(method, REFERENCES);\n\tassertSearchResults(\n\t\t\"lib/b128877.jar pack.X$Sub(pack.X, java.lang.String) EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug128877b", "class_name": "JavaSearchBugsTests", "index": 1716, "label": 1}
{"input": "public void clickLinkEdit()\n\t{\n\t\twaitForElementClickable(10, linkEdit);\n\t\tclickByJavaScript(linkEdit);\n\t}", "timestamp": "2023-04-28T20:07:48.832750Z", "repo_name": "JohnTo88/Wize_L-D", "path": "/src/main/java/talentwize/pages/TimesheetConfigurations_Task.java", "source": "the-stack-v2", "method_name": "clickLinkEdit", "class_name": "TimesheetConfigurations_Task", "index": 1717, "label": 1}
{"input": "public Criteria andVdef20Like(String value) {\r\n            addCriterion(\"VDEF20 like\", value, \"vdef20\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef20Like", "class_name": "GeneratedCriteria", "index": 1718, "label": 1}
{"input": "@Override\n\tpublic boolean equals(Object o) {\n\t\tif (this == o)\n\t\t\treturn true;\n\t\tif (!(o instanceof ReportedEvent))\n\t\t\treturn false;\n\n\t\tReportedEvent that = (ReportedEvent) o;\n\n\t\tif (Double.compare(that.getTimestamp(), getTimestamp()) != 0)\n\t\t\treturn false;\n\t\tif (!getPosition().equals(that.getPosition()))\n\t\t\treturn false;\n\t\treturn getType() == that.getType();\n\t}", "timestamp": "2021-05-09T19:21:33.186594Z", "repo_name": "technophil98/AMNAM", "path": "/src/scenario/events/ReportedEvent.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "ReportedEvent", "index": 1719, "label": 1}
{"input": "public void testBug96763b() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b96763/Test.java\",\n\t\t\"package b96763;\\n\" +\n\t\t\"class Test<T> {\\n\" +\n\t\t\"    public void first(Exception num) {}\\n\" +\n\t\t\"    public void second(T t) {}\\n\" +\n\t\t\"}\\n\" +\n\t\t\"class Sub extends Test<Exception> {\\n\" +\n\t\t\"    public void first(Exception num) {}\\n\" +\n\t\t\"    public void second(Exception t) {}\\n\" +\n\t\t\"}\\n\"\n\t);\n\tIMethod method = this.workingCopies[0].getType(\"package b96763;\\n\"0).getMethods()[1];\n\tsearch(method, DECLARATIONS|IGNORE_DECLARING_TYPE|IGNORE_RETURN_TYPE);\n\tassertSearchResults(\n\t\t\"package b96763;\\n\"1 +\n\t\t\"package b96763;\\n\"2\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug96763b", "class_name": "JavaSearchBugsTests", "index": 1720, "label": 1}
{"input": "private void waitToFinish(Activity activity, long timeout) throws InterruptedException {\n        long start_time = System.currentTimeMillis();\n        while (activity.isFinishing() && (System.currentTimeMillis() - start_time < timeout))\n            Thread.sleep(100);\n    }", "timestamp": "2022-12-08T04:12:54.583056Z", "repo_name": "yeahhhhhhhh/chromium_quic", "path": "/src/chrome/android/javatests/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferencesTest.java", "source": "the-stack-v2", "method_name": "waitToFinish", "class_name": "SavePasswordsPreferencesTest", "index": 1721, "label": 1}
{"input": "public void uninstallUI(JComponent c) \n      {\n         ((JLayer<?>) c).setLayerEventMask(0);\n         super.uninstallUI(c);\n      }", "timestamp": "2021-06-20T08:54:11.622461Z", "repo_name": "coder-chenzhi/core-java", "path": "/src/main/java/edu/zju/corejava/v2ch06/layer/ColorFrame.java", "source": "the-stack-v2", "method_name": "uninstallUI", "class_name": "PanelLayer", "index": 1722, "label": 1}
{"input": "public void setWx_timeline(WxTimelineBean wx_timeline) {\n                this.wx_timeline = wx_timeline;\n            }", "timestamp": "2021-01-13T07:12:09.987566Z", "repo_name": "acmlgogo/one_kotlin", "path": "/app/src/main/java/com/storm/cftest/base/Question.java", "source": "the-stack-v2", "method_name": "setWx_timeline", "class_name": "ShareListBean", "index": 1723, "label": 1}
{"input": "private Double[] differential(Double[] doubles) {\r\n        Double[] diffs = new Double[doubles.length - 1];\r\n\r\n        \n        for (int i = 0; i < doubles.length - 1; i++) {\r\n            diffs[i] = (doubles[i + 1] - doubles[i]);\r\n        }\r\n\r\n        return diffs;\r\n    }", "timestamp": "2020-05-17T23:05:08.022297Z", "repo_name": "TrueIchiro/SS4", "path": "/SWP4VO/Java programs/SWP4_NIEDERMAYR_UE02/Übung02/Beispiel_01/Blocks/Implementations/DifferentialBlock.java", "source": "the-stack-v2", "method_name": "differential", "class_name": "DifferentialBlock", "index": 1724, "label": 1}
{"input": "@Before\n  public void setup() {\n    MockitoAnnotations.initMocks(this);\n\n    when(mockWorkflowClient.projects()).thenReturn(mockProjects);\n    when(mockProjects.jobs()).thenReturn(mockJobs);\n  }", "timestamp": "2022-11-24T23:36:03.156413Z", "repo_name": "Sil1991/gcpdf-demo", "path": "/runners/google-cloud-dataflow-java/src/test/java/com/google/cloud/dataflow/sdk/runners/DataflowPipelineJobTest.java", "source": "the-stack-v2", "method_name": "setup", "class_name": "DataflowPipelineJobTest", "index": 1725, "label": 1}
{"input": "protected synchronized void _stop(boolean block_) \n\t{\n\t\tif (suspended) return;\n\t\tltime = System.currentTimeMillis() - startTime;\n\t\tsuspended = true;\n\n\t\t\n\t\tif (block_ && mainThread != null)\n\t\t\ttry {\n\t\t\t\tthis.wait();\n\t\t\t}\n\t\t\tcatch (Exception e_) {\n\t\t\t\te_.printStackTrace();\n\t\t\t\tdrcl.Debug.fatalError(e_.toString());\n\t\t\t}\n\t\tsetState(State_SUSPENDED);\n\t}", "timestamp": "2020-11-28T19:02:50.344186Z", "repo_name": "kaist-dmlab/MTA", "path": "/TaskAllocationSim/src/drcl/sim/event/SESimulatorOld.java", "source": "the-stack-v2", "method_name": "_stop", "class_name": "SESimulatorOld", "index": 1726, "label": 1}
{"input": "public Criteria andTopicIdLessThanOrEqualTo(Integer value) {\r\n            addCriterion(\"topic_id <=\", value, \"topicId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2021-05-08T12:41:18.691106Z", "repo_name": "suoyiguke/weixinparent", "path": "/weixinpojo/src/main/java/com/yinkai/entities/ImageExample.java", "source": "the-stack-v2", "method_name": "andTopicIdLessThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 1727, "label": 1}
{"input": "public double[] calcEquation_DFS2(String[][] equations, double[] values, String[][] queries) {\r\n        graph = buildGraph(equations, values);\r\n        double[] res = new double[queries.length];\r\n        for (int i = 0; i < queries.length; i++) {\r\n            if (!graph.containsKey(queries[i][0]) || !graph.containsKey(queries[i][1])) {\r\n                res[i] = -1.0;\r\n            } else if (queries[i][0] == queries[i][1]) {\r\n                res[i] = 1.0;\r\n            } else {\r\n                temp = 1.0;\r\n                isFound = false;\r\n                DFS2(queries[i][0], queries[i][1], new HashSet<>(), 1.0);\r\n                if (isFound) {\r\n                    res[i] = temp;\r\n                } else {\r\n                    res[i] = -1.0;\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }", "timestamp": "2023-02-10T08:00:13.729659Z", "repo_name": "sahilmutreja/Algorithms", "path": "/src/coding/temp/_0399_Evaluate_Division.java", "source": "the-stack-v2", "method_name": "calcEquation_DFS2", "class_name": "_0399_Evaluate_Division", "index": 1728, "label": 1}
{"input": "public void update(AnActionEvent e) {\n    boolean editorAvailable = e.getDataContext().getData(DataConstants.EDITOR) != null;\n    boolean isRecording = ActionMacroManager.getInstance().isRecording();\n\n    e.getPresentation().setEnabled(editorAvailable || isRecording);\n    e.getPresentation().setText(isRecording\n                                ? IdeBundle.message(\"action.stop.macro.recording\")\n                                : IdeBundle.message(\"action.start.macro.recording\"));\n  }", "timestamp": "2021-01-19T06:50:08.211003Z", "repo_name": "fracz/refactor-extractor", "path": "/results-java/JetBrains--intellij-community/1e937add5f846a026373c06f978efdf6cff2dada/before/StartStopMacroRecordingAction.java", "source": "the-stack-v2", "method_name": "update", "class_name": "StartStopMacroRecordingAction", "index": 1729, "label": 1}
{"input": "@java.lang.Override\n    public com.google.ads.googleads.v5.services.FeedItemOperation getDefaultInstanceForType() {\n      return com.google.ads.googleads.v5.services.FeedItemOperation.getDefaultInstance();\n    }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "getDefaultInstanceForType", "class_name": "Builder", "index": 1730, "label": 1}
{"input": "public void SetWidgetFontFromAssets(String _fontName) {\t\t\t\n         mWidgetCustomFont = Typeface.createFromAsset( controls.activity.getAssets(), _fontName);\t\t\n    }", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "SetWidgetFontFromAssets", "class_name": "jArrayAdapter", "index": 1731, "label": 1}
{"input": "@Override\n        public void call(FSMRunTimeException error, Context context) {\n            String errorMessage = \"Runtime Error in state [\" + error.getState() + \"]\";\n            if (!Objects.isNull(error.getEvent())) {\n                errorMessage += \"on Event [\" + error.getEvent() + \"]\";\n            }\n            errorMessage += \"with context [\" + error.getContext() + \"]\";\n            log.error(\"ERROR\", new Exception(errorMessage, error));\n        }", "timestamp": "2022-11-24T07:05:27.078403Z", "repo_name": "aggarwal-vibhuti/state-machine", "path": "/src/main/java/com.fsm/StateMachine.java", "source": "the-stack-v2", "method_name": "call", "class_name": "DefaultErrorAction", "index": 1732, "label": 1}
{"input": "protected void closePreparedStatement() {\n    MySQLPreparedStatement ps = (MySQLPreparedStatement) this.cmd.ps;\n    if (ps.closeAfterUsage) {\n      sendCloseStatementCommand(ps);\n    }\n  }", "timestamp": "2023-08-31T09:04:39.300272Z", "repo_name": "eclipse-vertx/vertx-sql-client", "path": "/vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/codec/ExtendedQueryCommandBaseCodec.java", "source": "the-stack-v2", "method_name": "closePreparedStatement", "class_name": "ExtendedQueryCommandBaseCodec", "index": 1733, "label": 1}
{"input": "private void assertIncorrectUseOfAdditionalMatchers(String additionalMatcherName, int count) {\n        if(matcherStack.size() < count) {\n            ArrayList<LocalizedMatcher> lastMatchers = new ArrayList<LocalizedMatcher>(matcherStack);\n            matcherStack.clear();\n            new Reporter().incorrectUseOfAdditionalMatchers(additionalMatcherName, count, lastMatchers);\n        }\n    }", "timestamp": "2023-03-18T20:12:02.923428Z", "repo_name": "ozzydong/CapGen", "path": "/newEvaluatedBugs/Mockito_24_buggy/mutated/45/ArgumentMatcherStorageImpl.java", "source": "the-stack-v2", "method_name": "assertIncorrectUseOfAdditionalMatchers", "class_name": "ArgumentMatcherStorageImpl", "index": 1734, "label": 1}
{"input": "@Operation(summary = \"List associate\")\n    @GetMapping(\"/v1/session\")\n    public List<SessionVote> getAllSessions() {\n        return sessionVoteService.findAll();\n    }", "timestamp": "2023-06-15T20:45:46.311955Z", "repo_name": "mariosergiosantos/desafio-back-votos", "path": "/src/main/java/br/com/southsystem/cooperativismo/controller/SessionVoteController.java", "source": "the-stack-v2", "method_name": "getAllSessions", "class_name": "SessionVoteController", "index": 1735, "label": 1}
{"input": "@Override\n    public void registerDataSetObserver(DataSetObserver observer) {\n        if (datasetObservers == null) {\n            datasetObservers = new LinkedList<DataSetObserver>();\n        }\n        datasetObservers.add(observer);\n    }", "timestamp": "2021-01-21T13:44:13.989810Z", "repo_name": "lucky5237/FinalDesign", "path": "/breakfast/src/main/java/zjut/jianlu/breakfast/widget/AbstractWheelAdapter.java", "source": "the-stack-v2", "method_name": "registerDataSetObserver", "class_name": "AbstractWheelAdapter", "index": 1736, "label": 1}
{"input": "@Override\n    public void handleDirective(Directive directive) throws HandleDirectiveException {\n        String directiveName = directive.getName();\n        LogUtil.d(TAG, \"rawMessage:\" + directive.rawMessage);\n        LogUtil.d(TAG, \"directiveName:\" + directiveName);\n        if (directiveName.equals(ApiConstants.Directives.Speak.NAME)) {\n            SpeakPayload speak = (SpeakPayload) directive.payload;\n            handleSpeak(speak);\n        } else {\n            String message = \"VoiceOutput cannot handle the directive\";\n            throw (new HandleDirectiveException(\n                    HandleDirectiveException.ExceptionType.UNSUPPORTED_OPERATION, message));\n        }\n    }", "timestamp": "2020-03-18T20:34:35.302007Z", "repo_name": "exiaoqu/BluetoothDemo", "path": "/app/src/main/java/com/baidu/duer/dcs/devicemodule/voiceoutput/VoiceOutputDeviceModule.java", "source": "the-stack-v2", "method_name": "handleDirective", "class_name": "VoiceOutputDeviceModule", "index": 1737, "label": 1}
{"input": "public String toString()\n  {\n    return super.toString() + \"[\"+\n            \"isPublished\" + \":\" + getIsPublished()+ \",\" +\n            \"name\" + \":\" + getName()+ \",\" +\n            \"nrBlocksPerLevel\" + \":\" + getNrBlocksPerLevel()+ \"]\" + System.getProperties().getProperty(\"isPublished\"0) +\n            \"isPublished\"1 + \"isPublished\"2+(getAdmin()!=null?Integer.toHexString(System.identityHashCode(getAdmin())):\"isPublished\"3) + System.getProperties().getProperty(\"isPublished\"0) +\n            \"isPublished\"1 + \"isPublished\"6+(getBall()!=null?Integer.toHexString(System.identityHashCode(getBall())):\"isPublished\"3) + System.getProperties().getProperty(\"isPublished\"0) +\n            \"isPublished\"1 + \":\"0+(getPaddle()!=null?Integer.toHexString(System.identityHashCode(getPaddle())):\"isPublished\"3) + System.getProperties().getProperty(\"isPublished\"0) +\n            \"isPublished\"1 + \":\"4+(getBlock223()!=null?Integer.toHexString(System.identityHashCode(getBlock223())):\"isPublished\"3);\n  }", "timestamp": "2020-09-27T06:19:22.075701Z", "repo_name": "mustafain117/Block-Breaker-Game", "path": "/Block223v2/src/ca/mcgill/ecse223/block/model/Game.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "Game", "index": 1738, "label": 1}
{"input": "public static void createFoAttributes(WordprocessingMLPackage wmlPackage, PPr pPr, Element foBlockElement, boolean inList, boolean ignoreBorders){\n\t\t\n    \tList<Property> properties = PropertyFactory.createProperties(wmlPackage, pPr);\n    \t\n    \tfor( Property p :  properties ) {\n\t\t\tif (p!=null) {\n\t\t\t\t\n\t\t\t\tif (ignoreBorders &&\n\t\t\t\t\t\t((p instanceof PBorderTop)\n\t\t\t\t\t\t\t\t|| (p instanceof PBorderBottom))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\tif (inList && !(p instanceof Indent) ) { \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tp.setXslFO(foBlockElement);\n\t\t\t\t} else if (!inList) {\n\t\t\t\t\tp.setXslFO(foBlockElement);\n\t\t\t\t}\n\t\t\t}\n    \t}\n\t\t\n    \t\n    \t\n\t}", "timestamp": "2020-04-03T02:05:51.304271Z", "repo_name": "ermanishks/docx4j", "path": "/src/main/java/org/docx4j/convert/out/pdf/viaXSLFO/Conversion.java", "source": "the-stack-v2", "method_name": "createFoAttributes", "class_name": "Conversion", "index": 1739, "label": 1}
{"input": "public static int RectCover(int target) {\r\n    \tif(target==0) {\r\n    \t\treturn 0;\r\n    \t}\r\n    \tif(target<=1) {\r\n    \t\treturn 1;\r\n    \t}\r\n    \tif(target*2==2) {\r\n    \t\treturn 1;\r\n    \t}else if(target*2==4) {\r\n    \t\treturn 2;\r\n    \t}else {\r\n\t\t\treturn RectCover(target-1)+RectCover(target-2);\r\n\t\t}\r\n    \t\r\n     }", "timestamp": "2020-04-19T11:40:32.675332Z", "repo_name": "showiproute/Algorithm", "path": "/src/Offer/Rectangle_Arrange.java", "source": "the-stack-v2", "method_name": "RectCover", "class_name": "Rectangle_Arrange", "index": 1740, "label": 1}
{"input": "@Override\n    public String toString() {\n        return \"UserPo [uid=\" + uid + \", accname=\" + accname + \", password=\" + password + \", declaration=\" + declaration\n               + \", email=\" + email + \", phone=\" + phone + \", gender=\" + gender + \", nick=\" + nick + \", hobby=\" + hobby\n               + \", ctime=\" + ctime + \", accname=\"0;\n    }", "timestamp": "2022-03-26T22:31:34.700625Z", "repo_name": "wligang/wlgdo", "path": "/wlgdo-web-hido/src/main/java/com/wlgdo/hido/domain/UserPo.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "UserPo", "index": 1741, "label": 1}
{"input": "@RequestMapping(value=\"/notice/updateNotice\")\r\n\t public ModelAndView updateNotice(\r\n\t\t\t String flag,\r\n\t\t\t @ModelAttribute Notice notice,\r\n\t\t\t ModelAndView mv,\r\n\t\t\t HttpSession session){\r\n\t\tif(flag.equals(\"1\")){\r\n\t\t\tNotice target = hrmService.findNoticeById(notice.getId());\r\n\t\t\tmv.addObject(\"notice\",target);\r\n\t\t\tmv.setViewName(\"notice/showUpdateNotice\");\r\n\t\t}else{\r\n\t\t\thrmService.modifyNotice(notice);\r\n\t\t\tmv.setViewName(\"redirect:/notice/selectNotice\");\r\n\t\t}\r\n\t\t\n\t\treturn mv;\r\n\t}", "timestamp": "2021-07-21T00:14:57.826817Z", "repo_name": "lijintaowkd/assm", "path": "/src/main/java/org/fkit/controller/NoticeController.java", "source": "the-stack-v2", "method_name": "updateNotice", "class_name": "NoticeController", "index": 1742, "label": 1}
{"input": "protected Set<Visit> getVisitsInternal() {\n        if (this.visits == null) {\n            this.visits = new HashSet<>();\n        }\n        return this.visits;\n    }", "timestamp": "2020-04-07T05:12:47.673091Z", "repo_name": "xorob0/AdvancedWebDevProject", "path": "/petclinic/petclinic-core/src/be/heh/petclinic/domain/Pet.java", "source": "the-stack-v2", "method_name": "getVisitsInternal", "class_name": "Pet", "index": 1743, "label": 1}
{"input": "protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\r\n\t\t\n\t\tdoPost(request, response);\r\n\t}", "timestamp": "2021-01-23T21:03:50.201996Z", "repo_name": "xmuzhangshuai/ElephantBikeServer", "path": "/ElephantBike/src/com/xxn/servlet/BGetUnlockPass.java", "source": "the-stack-v2", "method_name": "doGet", "class_name": "BGetUnlockPass", "index": 1744, "label": 1}
{"input": "public Builder support480p() {\n            mSupportPreviewSize.add(CAMERA_SUPPORT_640_480);\n            return this;\n        }", "timestamp": "2020-05-15T12:10:00.878334Z", "repo_name": "qinhaihang/OpenCVDemo-master", "path": "/app/src/main/java/com/qhh/opencvdemo/camera/CameraConfig.java", "source": "the-stack-v2", "method_name": "support480p", "class_name": "Builder", "index": 1745, "label": 1}
{"input": "public final PackageDeclarationContext packageDeclaration() throws RecognitionException {\n\t\tPackageDeclarationContext _localctx = new PackageDeclarationContext(_ctx, getState());\n\t\tenterRule(_localctx, 2, RULE_packageDeclaration);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(235);\n\t\t\tmatch(T__0);\n\t\t\tsetState(236);\n\t\t\tqualifiedName();\n\t\t\tsetState(237);\n\t\t\tmatch(T__1);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "packageDeclaration", "class_name": "JavaParser", "index": 1746, "label": 1}
{"input": "@Override\n    public void onClick(View v) {\n        if (v.getId() == R.id.PickLocation) {\n            Intent intent = new Intent(LostPetLocationActivity.this, pet_details.class);\n            if(finalPos==null)\n            {\n                intent.putExtra(\"LostPetLatitude\", (float)defaultPos.latitude);\n                intent.putExtra(\"LostPetLongitude\", (float)defaultPos.longitude);\n            }\n            else{\n                intent.putExtra(\"LostPetLatitude\", (float)finalPos.latitude);\n                intent.putExtra(\"LostPetLongitude\", (float)finalPos.longitude);\n            }\n            startActivity(intent);\n        }\n    }", "timestamp": "2023-03-02T11:49:15.205897Z", "repo_name": "jbuildstuff/PetLocator", "path": "/app/src/main/java/edu/illinois/cs465/petlocator/LostPetLocationActivity.java", "source": "the-stack-v2", "method_name": "onClick", "class_name": "LostPetLocationActivity", "index": 1747, "label": 1}
{"input": "public void setLogText(final String logText)\n\t{\n\t\tthis.modifiedPropsSet.add(\"logText\");\n\t\tthis.logText = logText;\n\t}", "timestamp": "2022-11-28T12:15:32.049256Z", "repo_name": "BaggaShivanshu2/hybris-bookstore-tutorial", "path": "/hybris/bin/ext-platform-optional/platformwebservices/custom/src/de/hybris/platform/cronjob/customdto/CronJobDTO.java", "source": "the-stack-v2", "method_name": "setLogText", "class_name": "CronJobDTO", "index": 1748, "label": 1}
{"input": "public ModificationRequestBuilder withOriginalReference(final String value) {\n        request.setOriginalReference(value);\n        return this;\n    }", "timestamp": "2021-01-18T13:10:15.438166Z", "repo_name": "BLangendorf/killbill-adyen-plugin", "path": "/src/main/java/org/killbill/billing/plugin/adyen/client/payment/builder/ModificationRequestBuilder.java", "source": "the-stack-v2", "method_name": "withOriginalReference", "class_name": "ModificationRequestBuilder", "index": 1749, "label": 1}
{"input": "public void putBoolean(String key, boolean value) {\n        getEditor().putBoolean(key, value).commit();\n    }", "timestamp": "2020-12-14T18:05:36.409414Z", "repo_name": "KaungMyat-Min/haulio", "path": "/app/src/main/java/com/kaungmyatmin/haulio/helper/PreferenceHelper.java", "source": "the-stack-v2", "method_name": "putBoolean", "class_name": "PreferenceHelper", "index": 1750, "label": 1}
{"input": "public boolean isExistInDB(String username) {\n\t\tboolean isFlag = false;\n\t\t\n\t\ttry {\n\t\t\tsta = conn.createStatement();\n\t\t\t\n\t\t\trs = sta.executeQuery(\"select * from userinfo\");\n\t\t\tif (rs != null) {\n\t\t\t\twhile (rs.next()) {\n\t\t\t\t\tif (rs.getString(\"user_name\").equals(username)) {\n\t\t\t\t\t\tisFlag = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (SQLException e) {\n\t\t\te.printStackTrace();\n\t\t\tisFlag = false;\n\t\t}\n\t\treturn isFlag;\n\t}", "timestamp": "2021-06-11T10:40:55.637172Z", "repo_name": "24Kshign/TestJavaWeb", "path": "/src/com/share/jack/db/DBUtils.java", "source": "the-stack-v2", "method_name": "isExistInDB", "class_name": "DBUtils", "index": 1751, "label": 1}
{"input": "@Override\n      public Get setKey(java.lang.String key) {\n        return (Get) super.setKey(key);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setKey", "class_name": "Get", "index": 1752, "label": 1}
{"input": "public void testNullLiteral() {\n\t\tlong previousCount = ast.modificationCount();\n\t\tNullLiteral x = ast.newNullLiteral();\n\t\tassertTrue(ast.modificationCount() > previousCount);\n\t\tpreviousCount = ast.modificationCount();\n\t\tassertTrue(x.getAST() == ast);\n\t\tassertTrue(x.getParent() == null);\n\t\tassertTrue(x.getNodeType() == ASTNode.NULL_LITERAL);\n\t\tassertTrue(x.structuralPropertiesForType() == NullLiteral.propertyDescriptors(ast.apiLevel()));\n\t\t\n\t\tassertTrue(ast.modificationCount() == previousCount);\n\n\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "testNullLiteral", "class_name": "ASTTest", "index": 1753, "label": 1}
{"input": "public static void main(String[] args) {\r\n        for (int i = 0; i < 100; i++) {\r\n            System.out.println(i + 1);\r\n        }\r\n\r\n    }", "timestamp": "2021-01-10T16:43:34.646344Z", "repo_name": "GabrielSalasR/Problema-1", "path": "/Problema1/src/problema1/Problema1.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Problema1", "index": 1754, "label": 1}
{"input": "public void setPrayerTimes(List<PrayerTimeResponse> prayerTimes) {\n        this.prayerTimes = prayerTimes;\n    }", "timestamp": "2020-04-11T19:13:15.520567Z", "repo_name": "mmakhalaf/MasjidyWS", "path": "/src/main/java/info/masjidy/responses/PrayerTimeListResponse.java", "source": "the-stack-v2", "method_name": "setPrayerTimes", "class_name": "PrayerTimeListResponse", "index": 1755, "label": 1}
{"input": "public Vector3D add(Vector3D vec)\n    {\n        return new Vector3D(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n    }", "timestamp": "2023-06-11T12:13:10.631017Z", "repo_name": "gjz010-Archive/VoxelGuest", "path": "/src/main/java/com/thevoxelbox/voxelguest/regions/Vector3D.java", "source": "the-stack-v2", "method_name": "add", "class_name": "Vector3D", "index": 1756, "label": 1}
{"input": "public void padawan_the_ring_02_action_spokeToNpc(obj_id player, obj_id npc) throws InterruptedException\n    {\n        setObjVar(player, \"jedi_trials.padawan_trials.temp.spokeToTarget_01\", true);\n        stopCombat(npc);\n        setInvulnerable(npc, true);\n        messageTo(player, \"handleSetBeginLoc\", null, 1, false);\n        return;\n    }", "timestamp": "2020-04-06T11:18:36.110302Z", "repo_name": "geralex/SWG-NGE", "path": "/dsrc/sku.0/sys.server/compiled/game/script/conversation/padawan_the_ring_02.java", "source": "the-stack-v2", "method_name": "padawan_the_ring_02_action_spokeToNpc", "class_name": "padawan_the_ring_02", "index": 1757, "label": 1}
{"input": "public void init() {\r\n    DbHelper.LOGGER.debug(\"Loading properties\");\r\n    final Properties properties = new Properties();\r\n    properties.put(\"db.path\", \"target/db\");\r\n    properties.put(\"db.username\", \"sa\");\r\n    properties.put(\"db.password\", \"\");\r\n    try {\r\n      properties.load(getClass().getResourceAsStream(\"/app.properties\"));\r\n    } catch (final IOException e) {\r\n      DbHelper.LOGGER.error(\"Failed to load the properties\");\r\n    }\r\n\r\n    DbHelper.LOGGER.debug(\"Creating the data source\");\r\n    ds = new BasicDataSource();\r\n    ds.setDriverClassName(\"db.path\"0);\r\n    ds.setUrl(\"db.path\"1 + properties.getProperty(\"db.path\"));\r\n    ds.setUsername(properties.getProperty(\"db.username\"));\r\n    ds.setPassword(properties.getProperty(\"db.password\"));\r\n\r\n    DbHelper.LOGGER.debug(\"db.path\"5);\r\n    final Flyway flyway = new Flyway();\r\n    flyway.setDataSource(ds);\r\n    flyway.migrate();\r\n  }", "timestamp": "2016-09-06T08:10:14.959217Z", "repo_name": "rkmishracs/java-creed-examples", "path": "/introduction/Simple Java Database Swing Application/Part 12 - Packaging and Distribution/src/main/java/com/javacreed/examples/app/DbHelper.java", "source": "the-stack-v2", "method_name": "init", "class_name": "DbHelper", "index": 1758, "label": 1}
{"input": "public static boolean isTablet(Context context) {\n\t    return (context.getResources().getConfiguration().screenLayout & Configuration.SCREENLAYOUT_SIZE_MASK) >= Configuration.SCREENLAYOUT_SIZE_LARGE;\n\t}", "timestamp": "2021-01-10T02:48:04.633612Z", "repo_name": "tanujchawla1991/CallJugnu", "path": "/CallJugnu/src/com/example/calljugnu/TasteBuds.java", "source": "the-stack-v2", "method_name": "isTablet", "class_name": "TasteBuds", "index": 1759, "label": 1}
{"input": "private boolean propertiesHandling(Editor editor, DataContext dataContext, SelectionModel selectionModel,\n\t\t\t\t\t\t\t\t\t   PsiFile psiFile) {\n\t\tPsiElement elementAtCaret = PsiUtilBase.getElementAtCaret(editor);\n\t\tif (elementAtCaret instanceof PsiWhiteSpace) {\n\t\t\treturn false;\n\t\t} else if (elementAtCaret instanceof LeafPsiElement) {\n\t\t\tIElementType elementType = ((LeafPsiElement) elementAtCaret).getElementType();\n\t\t\tif (elementType.toString().equals(\"Properties:VALUE_CHARACTERS\")\n\t\t\t\t\t|| elementType.toString().equals(\"Properties:KEY_CHARACTERS\")) {\n\t\t\t\tTextRange textRange = elementAtCaret.getTextRange();\n\t\t\t\tif (textRange.getLength() == 0) {\n\t\t\t\t\treturn super.selectSomethingUnderCaret(editor, dataContext, selectionModel);\n\t\t\t\t}\n\t\t\t\tselectionModel.setSelection(textRange.getStartOffset(), textRange.getEndOffset());\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}", "timestamp": "2023-08-22T04:45:14.361417Z", "repo_name": "hatip5656/StringManipulation", "path": "/src/osmedile/intellij/stringmanip/styles/AbstractCaseConvertingAction.java", "source": "the-stack-v2", "method_name": "propertiesHandling", "class_name": "AbstractCaseConvertingAction", "index": 1760, "label": 1}
{"input": "@Override\n    public String toString() {\n        return \"TreeNode{\" +\n                \"data=\" + data +\n                \", leftChild=\" + leftChild +\n                \", rightChild=\" + rightChild +\n                '}';\n    }", "timestamp": "2020-07-01T01:51:52.754476Z", "repo_name": "obelinskyi/JavaCource", "path": "/src/datastructuresandalgorithmes/c07binarysearchtree/TreeNode.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "TreeNode", "index": 1761, "label": 1}
{"input": "public Criteria andCreateTimeLessThanOrEqualTo(Date value) {\n            addCriterion(\"create_time <=\", value, \"createTime\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andCreateTimeLessThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 1762, "label": 1}
{"input": "public void dismissLoadingDialogAndDisplayError(WeakReference<Activity> weakActivity, final ProgressDialog progressDialog, \n      final int errorDialogId) {\n    \n    if (weakActivity != null) {\n      final Activity activity = weakActivity.get();\n      if (activity != null) {\n        activity.runOnUiThread(new Runnable() {\n          \n          @SuppressWarnings(\"deprecation\")\n          @Override\n          public void run() {\n            if (progressDialog != null && progressDialog.isShowing()) {\n              progressDialog.dismiss();\n            }\n            \n            activity.showDialog(errorDialogId);\n          }\n        });         \n      }\n    }\n  }", "timestamp": "2021-03-12T19:21:51.030457Z", "repo_name": "cobras9/Test", "path": "/Android MMWallet/HockeySDK-Android-3.0.1/src/main/java/net/hockeyapp/android/utils/UiThreadUtil.java", "source": "the-stack-v2", "method_name": "dismissLoadingDialogAndDisplayError", "class_name": "UiThreadUtil", "index": 1763, "label": 1}
{"input": "private void createSourceCodeFilesForRequest(Request request) {\n        String sourceCode = codeGenerator.createCodeForRequest(request);\n        try {\n            File file = fileForRequest(request);\n            write(file, sourceCode);\n            buildContext.refresh(file);\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }", "timestamp": "2023-06-15T13:23:02.509653Z", "repo_name": "stefanbirkner/semantic-wrapper", "path": "/maven-plugin/src/main/java/com/github/stefanbirkner/semanticwrapper/maven/SourceCodeFileGenerator.java", "source": "the-stack-v2", "method_name": "createSourceCodeFilesForRequest", "class_name": "SourceCodeFileGenerator", "index": 1764, "label": 1}
{"input": "private synchronized boolean m428o(String str) {\n        boolean c;\n        C0328z2.m889d();\n        C0174k1 k1Var = new C0174k1(C0118e1.m386a().f361a.getFileStreamPath(m425l(str)), \".YFlurrySenderIndex.info.\", 1, new C0141e(this));\n        List<String> a = mo203a(str);\n        if (a != null) {\n            String str2 = f423d;\n            C0260s1.m686c(4, str2, \"discardOutdatedBlocksForDataKey: notSentBlocks = \" + a.size());\n            for (String str3 : a) {\n                C0119e2.m395b(str3).mo254c();\n                C0260s1.m686c(4, f423d, \"discardOutdatedBlocksForDataKey: removed block = \".concat(String.valueOf(str3)));\n            }\n        }\n        this.f425b.remove(str);\n        c = k1Var.mo254c();\n        m417b();\n        return c;\n    }", "timestamp": "2023-02-23T06:37:03.730470Z", "repo_name": "alissonlauffer/via-browser-dump", "path": "/app/src/main/java/com/flurry/sdk/C0136f2.java", "source": "the-stack-v2", "method_name": "m428o", "class_name": "C0136f2", "index": 1765, "label": 1}
{"input": "@Override\n\tpublic List<Category> listByLineage(String storeCode, String lineage) throws ServiceException {\n\t\ttry {\n\t\t\treturn categoryDao.listByLineage(storeCode, lineage);\n\t\t} catch (Exception e) {\n\t\t\tthrow new ServiceException(e);\n\t\t}\n\t\t\n\t\t\n\t}", "timestamp": "2021-05-11T22:33:13.512901Z", "repo_name": "joshLV/laVetrina", "path": "/sm-core/src/main/java/com/salesmanager/core/business/catalog/category/service/CategoryServiceImpl.java", "source": "the-stack-v2", "method_name": "listByLineage", "class_name": "CategoryServiceImpl", "index": 1766, "label": 1}
{"input": "public QualifiedNameListContext qualifiedNameList() {\n\t\t\treturn getRuleContext(QualifiedNameListContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "qualifiedNameList", "class_name": "VoidInterfaceMethodDeclaratorRestContext", "index": 1767, "label": 1}
{"input": "@Override\n  public ResultScanner getScanner(Scan scan) {\n    return new AsyncTableResultScanner(this, ReflectionUtils.newInstance(scan.getClass(), scan),\n        resultSize2CacheSize(\n          scan.getMaxResultSize() > 0 ? scan.getMaxResultSize() : defaultScannerMaxResultSize));\n  }", "timestamp": "2020-03-21T15:28:16.237120Z", "repo_name": "siwuxietang/hbase", "path": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncTableImpl.java", "source": "the-stack-v2", "method_name": "getScanner", "class_name": "RawAsyncTableImpl", "index": 1768, "label": 1}
{"input": "private void fireOnVoiceOutputFinished() {\n        for (IVoiceOutputListener listener : voiceOutputListeners) {\n            listener.onVoiceOutputFinished();\n        }\n    }", "timestamp": "2020-03-18T20:34:35.302007Z", "repo_name": "exiaoqu/BluetoothDemo", "path": "/app/src/main/java/com/baidu/duer/dcs/devicemodule/voiceoutput/VoiceOutputDeviceModule.java", "source": "the-stack-v2", "method_name": "fireOnVoiceOutputFinished", "class_name": "VoiceOutputDeviceModule", "index": 1769, "label": 1}
{"input": "@Override\n    Parameter doEncode(LocalDateTime value) {\n        Assert.requireNonNull(value, \"value must not be null\");\n\n        ByteBuf encoded = ByteBufUtils.encode(this.byteBufAllocator, value.toString());\n        return create(FORMAT_TEXT, TIMESTAMP, Flux.just(encoded));\n    }", "timestamp": "2020-06-17T21:09:45.580803Z", "repo_name": "arpit006/r2dbc-postgresql", "path": "/src/main/java/io/r2dbc/postgresql/codec/LocalDateTimeCodec.java", "source": "the-stack-v2", "method_name": "doEncode", "class_name": "LocalDateTimeCodec", "index": 1770, "label": 1}
{"input": "public Criteria andSendTimeNotIn(List<Date> values) {\r\n            addCriterion(\"send_time not in\", values, \"sendTime\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andSendTimeNotIn", "class_name": "GeneratedCriteria", "index": 1771, "label": 1}
{"input": "public static void update() {\r\n        modelSnowLayer = Config.getMinecraft().getBlockRendererDispatcher().getBlockModelShapes().getModelForState(Blocks.snow_layer.getDefaultState());\r\n    }", "timestamp": "2020-04-02T18:47:52.047731Z", "repo_name": "MicrowaveClient/Clarinet", "path": "/src/net/minecraft/src/BetterSnow.java", "source": "the-stack-v2", "method_name": "update", "class_name": "BetterSnow", "index": 1772, "label": 1}
{"input": "@Override\n        protected String[] doInBackground(Void... voids) {\n            return new String[0];\n        }", "timestamp": "2021-01-20T16:10:02.437775Z", "repo_name": "adamfils/SchoolAssistant", "path": "/app/src/main/java/com/adamapps/coursealert/HomeActivity.java", "source": "the-stack-v2", "method_name": "doInBackground", "class_name": "Task", "index": 1773, "label": 1}
{"input": "public boolean match(SynchronizedStatement node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 1774, "label": 1}
{"input": "private <T> SingleRequestCallerBuilder<T> newCaller(Row row, long rpcTimeoutNs) {\n    return newCaller(row.getRow(), rpcTimeoutNs);\n  }", "timestamp": "2020-03-21T15:28:16.237120Z", "repo_name": "siwuxietang/hbase", "path": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncTableImpl.java", "source": "the-stack-v2", "method_name": "newCaller", "class_name": "RawAsyncTableImpl", "index": 1775, "label": 1}
{"input": "public AbsSavedState createFromParcel(Parcel parcel, ClassLoader classLoader) {\n            if (parcel.readParcelable(classLoader) == null) {\n                return AbsSavedState.f1421c;\n            }\n            throw new IllegalStateException(\"superState must be null\");\n        }", "timestamp": "2023-01-09T06:43:40.830942Z", "repo_name": "zteeed/tempmail-apks", "path": "/sources-2020-11-04-tempmail/sources/androidx/customview/view/AbsSavedState.java", "source": "the-stack-v2", "method_name": "createFromParcel", "class_name": "a", "index": 1776, "label": 1}
{"input": "public Query filter(FilterLogic filter) {\n    if (this.filter == null) {\n      this.filter = filter;\n    } else {\n      this.filter = this.filter.and(filter);\n    }\n    return this;\n  }", "timestamp": "2023-08-17T00:59:45.862350Z", "repo_name": "davitbzh/FlinkAggJob", "path": "/flink/src/main/java/com/logicalclocks/hsfs/constructor/Query.java", "source": "the-stack-v2", "method_name": "filter", "class_name": "Query", "index": 1777, "label": 1}
{"input": "private synchronized Engine getQuteEngine() {\n        if (quteEngine == null) {\n            EngineBuilder builder = Engine.builder().addDefaults();\n            builder.addValueResolver(ReflectionValueResolver::new);\n            builder.addLocator(this::locate);\n\n            quteEngine = builder.build();\n        }\n        return quteEngine;\n    }", "timestamp": "2023-08-31T10:54:12.673685Z", "repo_name": "ppalaga/camel-quarkus", "path": "/extensions/qute/component/src/main/java/org/apache/camel/component/qute/QuteEndpoint.java", "source": "the-stack-v2", "method_name": "getQuteEngine", "class_name": "QuteEndpoint", "index": 1778, "label": 1}
{"input": "@Override\n    public void offer(Runnable runnable) {\n        throw new UnsupportedOperationException(\"Offering runnables to this queue during bootstrap or setup Container phase is not supported\");\n    }", "timestamp": "2018-02-09T01:51:37.577264Z", "repo_name": "lenxeon/jira7.2.3", "path": "/jira-project/jira-components/jira-core/src/main/java/com/atlassian/jira/transaction/BootstrapRunnablesQueue.java", "source": "the-stack-v2", "method_name": "offer", "class_name": "BootstrapRunnablesQueue", "index": 1779, "label": 1}
{"input": "public DQCategory getCategoryMetadataByName(String catName) {\n        for (DQCategory cat : getMetadata().values()) {\n            if (cat.getName().equals(catName)) {\n                return cat;\n            }\n        }\n        return null;\n    }", "timestamp": "2021-05-01T16:06:31.746782Z", "repo_name": "MarkChappell/data-quality", "path": "/dataquality-semantic/src/main/java/org/talend/dataquality/semantic/api/CustomDictionaryHolder.java", "source": "the-stack-v2", "method_name": "getCategoryMetadataByName", "class_name": "CustomDictionaryHolder", "index": 1780, "label": 1}
{"input": "@Override\n    public void addApplicationListener(ApplicationListener listener) {\n\n        synchronized (applicationListenersLock) {\n            ApplicationListener results[] =\n                    new ApplicationListener[applicationListeners.length + 1];\n            for (int i = 0; i < applicationListeners.length; i++) {\n                if (listener.equals(applicationListeners[i])) {\n                    log.info(sm.getString(\n                            \"standardContext.duplicateListener\",listener));\n                    return;\n                }\n                results[i] = applicationListeners[i];\n            }\n            results[applicationListeners.length] = listener;\n            applicationListeners = results;\n        }\n        fireContainerEvent(\"addApplicationListener\", listener);\n\n        \n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "addApplicationListener", "class_name": "StandardContext", "index": 1781, "label": 1}
{"input": "private static void assertOrdered(ReadCommand cmd, int expectedSize)\n    {\n        int size = 0;\n        DecoratedKey prev = null;\n        for (Partition partition : Util.getAllUnfiltered(cmd))\n        {\n            DecoratedKey current = partition.partitionKey();\n            assertTrue(\"key \" + current + \" does not sort after previous key \" + prev, prev == null || prev.compareTo(current) < 0);\n            prev = current;\n            ++size;\n        }\n        assertEquals(expectedSize, size);\n    }", "timestamp": "2022-05-31T23:56:44.066378Z", "repo_name": "ealonsodb/cassandra", "path": "/test/unit/org/apache/cassandra/db/ScrubTest.java", "source": "the-stack-v2", "method_name": "assertOrdered", "class_name": "ScrubTest", "index": 1782, "label": 1}
{"input": "public Criteria andStatusNotIn(List<Integer> values) {\r\n            addCriterion(\"status not in\", values, \"status\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andStatusNotIn", "class_name": "GeneratedCriteria", "index": 1783, "label": 1}
{"input": "private void updateGamePieces(float delta){\n\t\tfor(GamePiece g: gamePieces){\n\t\t\tg.updateAnimation(delta);\n\t\t\t\n\t\t\tg.update(delta);\n\t\t\t\n\t\t\tif((g.getY()>=g.maxY)&&(g.getGotHit()!=true)){\n\t\t\t\tAssets.playSound(Assets.popSound);\n\t\t\t\tplayerScore++;\n\t\t\t\t\n\t\t\t}\n\t\t\tif(g.getY()>=g.maxY){\n\t\t\t\tg.reset();\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tif((playerScore==10)&&(stage==1)){\n\t\t\t\n\t\t\tgamePieces.add(new Spider(120, 0, 87, 121));\n\t\t\tstage++;\n\t\t}\n\t\tif((playerScore==20)&&(stage==2)){\n\t\t\t\n\t\t\tgamePieces.add(new Bubbloid(160, 0, 93, 96));\n\t\t\tstage++;\n\t\t}\n\t}", "timestamp": "2020-05-15T20:09:09.580480Z", "repo_name": "wcmaclean/home-repo", "path": "/android/experiments/SpaceMermaid/src/com/toymoon/game/state/PlayState.java", "source": "the-stack-v2", "method_name": "updateGamePieces", "class_name": "PlayState", "index": 1784, "label": 1}
{"input": "@Override\n\tprotected Bitmap doInBackground(String... urls) {\n        String urldisplay = urls[0];\n        Bitmap mIcon11 = null;\n        try {\n            InputStream in = new java.net.URL(urldisplay).openStream();\n            mIcon11 = BitmapFactory.decodeStream(in);\n        } catch (Exception e) {\n            Log.e(\"Error\", e.getMessage());\n            e.printStackTrace();\n        }\n        return mIcon11;\n    }", "timestamp": "2020-06-02T14:21:40.973866Z", "repo_name": "htw398/searchImagebyhtw", "path": "/src/kr/htw398/searchimage/DownloadImageTask.java", "source": "the-stack-v2", "method_name": "doInBackground", "class_name": "DownloadImageTask", "index": 1785, "label": 1}
{"input": "private byte[] readContent(String file) throws Exception {\n\t\tList<Byte> data = new ArrayList<Byte>();\n\t\tAudioInputStream cin = AudioSystem.getAudioInputStream(new File(file));\n\t\tint nBytesRead = 0;\n\t\tbyte[] buffer = new byte[512];\n\t\twhile (true) {\n\t\t\tnBytesRead = cin.read(buffer, 0, buffer.length);\n\t\t\tif (nBytesRead <= 0)\n\t\t\t\tbreak;\n\t\t\tfor (int i = 0; i < nBytesRead; i++) {\n\t\t\t\tdata.add(buffer[i]);\n\t\t\t}\n\t\t}\n\t\tbyte[] ret = new byte[data.size()];\n\t\tint i = 0;\n\t\tfor (Byte b : data) {\n\t\t\tret[i] = b;\n\t\t\ti++;\n\t\t}\n\t\treturn ret;\n\t}", "timestamp": "2021-09-14T07:02:53.037353Z", "repo_name": "wardensky/wardensky-demo", "path": "/java/audioplayer/src/main/java/com/hhtd/audioplayer/App.java", "source": "the-stack-v2", "method_name": "readContent", "class_name": "App", "index": 1786, "label": 1}
{"input": "@Override\n\tpublic LockItem<V> lockItem(K key) {\n\t\ttry {\n\t\t\tlock.lock();\n\t\t\tLockItem<V> lockItem = reigon.getLockItem(key);\n\t\t\tif (null == lockItem) {\n\t\t\t\tlockItem = new LockItem<V>();\n\t\t\t} else {\n\t\t\t\tlockItem.lock();\n\t\t\t}\n\t\t\t\n\t\t\treigon.put(key, lockItem);\n\t\t\treturn lockItem;\n\t\t} finally {\n\t\t\tlock.unlock();\n\t\t}\n\t}", "timestamp": "2020-05-04T21:10:01.690777Z", "repo_name": "Crasader/h-framework", "path": "/src/jdbc/orm/cache/AbstractRWCacheRegionAccessStrategy.java", "source": "the-stack-v2", "method_name": "lockItem", "class_name": "AbstractRWCacheRegionAccessStrategy", "index": 1787, "label": 1}
{"input": "@Override\n        public void run() {\n            while (true) {\n                suspend();\n                try {\n                    Thread.sleep(1000);\n                    playEnd();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        }", "timestamp": "2023-04-15T13:53:26.916349Z", "repo_name": "wang-kui-die/MediaPlayer", "path": "/src/main/java/com/player/Player/AudioPlayer.java", "source": "the-stack-v2", "method_name": "run", "class_name": "EndThread", "index": 1788, "label": 1}
{"input": "public int \r\nomPerson_ActivateAllProspects( zVIEW    mPerson,\r\n                               View     ViewToWindow )\r\n{\r\n   zVIEW    vTempViewVar_0 = new zVIEW( );\r\n   int      RESULT = 0;\r\n\r\n   \n   \n\r\n   \n   \n   omPerson_fnLocalBuildQual_1( ViewToWindow, vTempViewVar_0 );\r\n   RESULT = ActivateObjectInstance( mPerson, \"mPerson\", ViewToWindow, vTempViewVar_0, zMULTIPLE );\r\n   DropView( vTempViewVar_0 );\r\n\r\n   \n   OrderEntityForView( mPerson, \"Person\", \"LastName A, FirstName A\" );\r\n   return( 0 );\r\n\n}", "timestamp": "2023-09-05T19:31:15.344771Z", "repo_name": "zeidon/zeidon-joe", "path": "/zeidon-tests/src/test/java/com/quinsoft/zencas/mPerson_Object.java", "source": "the-stack-v2", "method_name": "omPerson_ActivateAllProspects", "class_name": "mPerson_Object", "index": 1789, "label": 1}
{"input": "public static void init_undergroundFluidsRoss128() {\n        String ross128b = StatCollector.translateToLocal(\"planet.Ross128b\");\n        uo_dimensionList.SetConfigValues(ross128b, ross128b, \"veryheavyoil\", \"liquid_extra_heavy_oil\", 0, 625, 40, 5);\n        uo_dimensionList.SetConfigValues(ross128b, ross128b, \"lava\", FluidRegistry.getFluidName(FluidRegistry.LAVA), 0, 32767, 5, 5);\n        uo_dimensionList.SetConfigValues(ross128b, ross128b, \"gas_natural_gas\", \"gas_natural_gas\", 0, 625, 65, 5);\n    }", "timestamp": "2020-05-19T07:30:35.007374Z", "repo_name": "DarkShadow44/bartworks", "path": "/src/main/java/com/github/bartimaeusnek/bartworks/system/oregen/BW_WorldGenRoss128b.java", "source": "the-stack-v2", "method_name": "init_undergroundFluidsRoss128", "class_name": "BW_WorldGenRoss128b", "index": 1790, "label": 1}
{"input": "@Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        \n        \n        \n        int id = item.getItemId();\n\n        \n        if (id == R.id.action_settings) {\n            return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }", "timestamp": "2021-05-31T01:02:53.417110Z", "repo_name": "phndavid/calculator", "path": "/Calculator/app/src/main/java/com/master/ndavid/calculator/MainActivity.java", "source": "the-stack-v2", "method_name": "onOptionsItemSelected", "class_name": "MainActivity", "index": 1791, "label": 1}
{"input": "private Direction readSpinners(Spinner v) {\n        int selected = v.getSelectedItemPosition();\n        switch (selected) {\n            case 0:\n                if ((v.getId() == R.id.fic_ns) | (v.getId() == R.id.delta_ns))\n                    return Direction.NORTH;\n                if (v.getId() == R.id.tm_ew)\n                    return Direction.EAST;\n                break;\n            case 1:\n                if ((v.getId() == R.id.fic_ns) | (v.getId() == R.id.delta_ns))\n                    return Direction.SOUTH;\n                if (v.getId() == R.id.tm_ew)\n                    return Direction.WEST;\n                break;\n\n        }\n        return null;\n    }", "timestamp": "2020-12-01T15:56:26.463589Z", "repo_name": "cytangjoseph/CelestialNavCalc", "path": "/app/src/main/java/com/anmas/star/calculation/MainActivity.java", "source": "the-stack-v2", "method_name": "readSpinners", "class_name": "MainActivity", "index": 1792, "label": 1}
{"input": "@Override \n        public void getGsmBroadcastConfigResponse(RadioResponseInfo info, ArrayList<GsmBroadcastSmsConfigInfo> configs) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            GsmBroadcastSmsConfigInfo.writeVectorToParcel(_hidl_request, configs);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(79, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "getGsmBroadcastConfigResponse", "class_name": "Proxy", "index": 1793, "label": 1}
{"input": "public void addCondiment(Condiments.CondimentChoices condimentChoice, int quantityToAdd) {\n\n        condimentInjector.addCondiment(condimentChoice, quantityToAdd);\n    }", "timestamp": "2020-04-05T04:46:01.377151Z", "repo_name": "jeffreydalby/PowerBrew", "path": "/src/main/java/edu/bu/met/cs665/hardware/PowerBrew5000.java", "source": "the-stack-v2", "method_name": "addCondiment", "class_name": "PowerBrew5000", "index": 1794, "label": 1}
{"input": "private void drawScore() {\n        Paint paint = new Paint();\n        paint.setTextSize(128);\n        paint.setColor(Color.parseColor(\"#ffffff\"));\n        mCanvas.drawText(score + \"\", mCanvas.getWidth() / 2, mCanvas.getHeight() / 6, paint);\n    }", "timestamp": "2022-11-10T15:18:39.844014Z", "repo_name": "AndroidCourseTeam/AndroidHomework", "path": "/app/src/main/java/com/nankai/myflappybird/GameView.java", "source": "the-stack-v2", "method_name": "drawScore", "class_name": "GameView", "index": 1795, "label": 1}
{"input": "public Criteria andVdef3Like(String value) {\r\n            addCriterion(\"VDEF3 like\", value, \"vdef3\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef3Like", "class_name": "GeneratedCriteria", "index": 1796, "label": 1}
{"input": "@Override\n    public String toString() {\n        return \"FoodModel{\" +\n                \"id=\" + id +\n                \", dish_name='\" + dish_name + '\\'' +\n                \", dish_desc='\" + dish_desc + '\\'' +\n                \", image='\" + image + '\\'' +\n                '}';\n    }", "timestamp": "2023-05-29T03:00:58.588642Z", "repo_name": "raksha-s/cookbook", "path": "/app/src/main/java/com/example/cookbook/FoodModel.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "FoodModel", "index": 1797, "label": 1}
{"input": "@Override\n\tpublic FileAdvertisement clone() throws CloneNotSupportedException {\n\t\tFileAdvertisement Result = (FileAdvertisement) super.clone();\n\n\t\tResult.AdvertisementID = this.AdvertisementID;\n\t\tResult.TheName = this.TheName;\n\t\tResult.Owner = this.Owner;\n\n\t\treturn Result;\n\t}", "timestamp": "2021-01-10T22:05:07.458712Z", "repo_name": "lucasaoki/sd0642-t3-g5", "path": "/src/advertisementFileFactory/FileAdvertisement.java", "source": "the-stack-v2", "method_name": "clone", "class_name": "FileAdvertisement", "index": 1798, "label": 1}
{"input": "public Account findAccountForUser(String userId) {\r\n\t\tthis.logger.debug(\"Getting account for user [\" + userId + \"]\");\r\n\t\tthis.configuration.getSQL(\"FIND_ACCOUNT_FOR_USER\");\r\n\r\n\t\t\n\t\t\n\t\treturn null;\r\n\t}", "timestamp": "2020-05-18T12:42:10.176913Z", "repo_name": "a0248327/JUnit", "path": "/ch07-mocks/src/main/java/com/manning/junitbook/ch07/mocks/account/DefaultAccountManager2.java", "source": "the-stack-v2", "method_name": "findAccountForUser", "class_name": "DefaultAccountManager2", "index": 1799, "label": 1}
{"input": "public void marshall(VirtualGatewayTlsValidationContext virtualGatewayTlsValidationContext, ProtocolMarshaller protocolMarshaller) {\n\n        if (virtualGatewayTlsValidationContext == null) {\n            throw new SdkClientException(\"Invalid argument passed to marshall(...)\");\n        }\n\n        try {\n            protocolMarshaller.marshall(virtualGatewayTlsValidationContext.getTrust(), TRUST_BINDING);\n        } catch (Exception e) {\n            throw new SdkClientException(\"Unable to marshall request to JSON: \" + e.getMessage(), e);\n        }\n    }", "timestamp": "2023-02-26T13:01:37.888044Z", "repo_name": "kundan59/aws-sdk-java", "path": "/aws-java-sdk-appmesh/src/main/java/com/amazonaws/services/appmesh/model/transform/VirtualGatewayTlsValidationContextMarshaller.java", "source": "the-stack-v2", "method_name": "marshall", "class_name": "VirtualGatewayTlsValidationContextMarshaller", "index": 1800, "label": 1}
{"input": "@Column(name =\"SYS_COMPANY_CODE\",nullable=true,length=50)\n\tpublic String getSysCompanyCode(){\n\t\treturn this.sysCompanyCode;\n\t}", "timestamp": "2022-12-28T08:28:08.585073Z", "repo_name": "289222346/dianshang", "path": "/src/main/java/org/jeecgframework/web/superquery/entity/SuperQueryHistoryEntity.java", "source": "the-stack-v2", "method_name": "getSysCompanyCode", "class_name": "SuperQueryHistoryEntity", "index": 1801, "label": 1}
{"input": "@JavascriptInterface\n    public void resumeVideo() {\n        if (!this.isInterstitial && Version.getAndroidSDKVersion() >= 14) {\n            Logging.log(\"window.ADMARVEL.resumeVideo()\");\n            final m m = (m)this.adMarvelWebViewReference.get();\n            if (m != null) {\n                final d d = (d)this.adMarvelInternalWebViewReference.get();\n                if (d != null) {\n                    new Handler(Looper.getMainLooper()).post((Runnable)new m$y(m, d));\n                }\n            }\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "resumeVideo", "class_name": "AdMarvelWebViewJSInterface", "index": 1802, "label": 1}
{"input": "@Override\n        protected void onPostExecute(String[] strings) {\n            waveSwipeRefreshLayout.setRefreshing(false);\n            super.onPostExecute(strings);\n\n        }", "timestamp": "2021-01-20T16:10:02.437775Z", "repo_name": "adamfils/SchoolAssistant", "path": "/app/src/main/java/com/adamapps/coursealert/HomeActivity.java", "source": "the-stack-v2", "method_name": "onPostExecute", "class_name": "Task", "index": 1803, "label": 1}
{"input": "public void getFive(View view){\n        operation  +=\"5\";\n        editText.setText(operation);\n    }", "timestamp": "2021-05-31T01:02:53.417110Z", "repo_name": "phndavid/calculator", "path": "/Calculator/app/src/main/java/com/master/ndavid/calculator/MainActivity.java", "source": "the-stack-v2", "method_name": "getFive", "class_name": "MainActivity", "index": 1804, "label": 1}
{"input": "public Criteria andIdNotIn(List<String> values) {\n            addCriterion(\"ID not in\", values, \"id\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andIdNotIn", "class_name": "GeneratedCriteria", "index": 1805, "label": 1}
{"input": "@Override\n    public String toString() {\n        return getId() + \". Book: \" + getBook().getName() + \"\\n\" +\n                \"Member: \" + getMember().getFirstname() + \"\\n\" +\n                \"Staff: \" +  getStaff().getUsername() + \"\\n\" +\n                \"Borrow: \" + getStart().toString() + \"\\n\" +\n                \"Due: \" + getEnd().toString();\n    }", "timestamp": "2020-06-16T15:10:14.338351Z", "repo_name": "PhompAng/Lib2", "path": "/app/src/main/java/com/example/phompang/lib2/model/Borrow.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "Borrow", "index": 1806, "label": 1}
{"input": "@Override\n        public void processingFinished ()\n        {\n            Wave16[] arr = new Wave16[waves.size()];\n            waves.toArray(arr);\n            result = Wave16.combineAppend(arr);\n            \n        }", "timestamp": "2021-01-17T09:11:52.268778Z", "repo_name": "nietoperz809/wavecreator", "path": "/src/com/WaveCreator/TarsosWrapper/TarsosRunner.java", "source": "the-stack-v2", "method_name": "processingFinished", "class_name": "Wave16Creator", "index": 1807, "label": 1}
{"input": "public Criteria andIntegralValueNotIn(List<Integer> values) {\n            addCriterion(\"integral_value not in\", values, \"integralValue\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andIntegralValueNotIn", "class_name": "GeneratedCriteria", "index": 1808, "label": 1}
{"input": "public Block addBlock(int aRed, int aGreen, int aBlue, int aPoints)\n  {\n    return new Block(aRed, aGreen, aBlue, aPoints, this);\n  }", "timestamp": "2020-09-27T06:19:22.075701Z", "repo_name": "mustafain117/Block-Breaker-Game", "path": "/Block223v2/src/ca/mcgill/ecse223/block/model/Game.java", "source": "the-stack-v2", "method_name": "addBlock", "class_name": "Game", "index": 1809, "label": 1}
{"input": "@Test\n    public void getBackendEndpoint() throws Exception {\n        restMockMvc.perform(get(\"/test\"))\n            .andExpect(status().isOk())\n            .andExpect(content().contentTypeCompatibleWith(MediaType.TEXT_PLAIN_VALUE))\n            .andExpect(content().string(\"test\"));\n    }", "timestamp": "2023-02-04T07:50:23.383164Z", "repo_name": "CyberCastle/WasteCollectorTracer", "path": "/src/test/java/cl/cc/web/rest/ClientForwardControllerTest.java", "source": "the-stack-v2", "method_name": "getBackendEndpoint", "class_name": "ClientForwardControllerTest", "index": 1810, "label": 1}
{"input": "int getPreferredWidth(int index) {\r\n\tint size = getImageStopX(index);\r\n\tString text = getText(index);\r\n\tif (text != null) {\r\n\t\tsize += getParent().getTextWidth(text) + getTextIndent(index) * 2 + 1;\r\n\t}\r\n\treturn size;\r\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipseswt_cluster/56034/tar_1.java", "source": "the-stack-v2", "method_name": "getPreferredWidth", "class_name": "TableItem", "index": 1811, "label": 1}
{"input": "public static void main(String args[]) \n    {\n    \taula2 app = new aula2();\n    \tapp.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    }", "timestamp": "2021-01-24T12:12:18.420416Z", "repo_name": "Kakaroto446/aula2", "path": "/src/aula2/aula2.java", "source": "the-stack-v2", "method_name": "main", "class_name": "aula2", "index": 1812, "label": 1}
{"input": "@Test\n\tpublic void whenCreateLaundryCabinetShouldReturnCabinet() {\n\t\tList<Cabinet> cabinets = cut.createCabinet(DepartmentType.Laundry);\n\n\t\tassertThat(cabinets, hasSize(10));\n\t}", "timestamp": "2020-06-05T19:40:47.927589Z", "repo_name": "cternes/R-Manager", "path": "/backend/src/test/java/de/slackspace/rmanager/gameengine/service/CabinetServiceTest.java", "source": "the-stack-v2", "method_name": "whenCreateLaundryCabinetShouldReturnCabinet", "class_name": "CabinetServiceTest", "index": 1813, "label": 1}
{"input": "public void testBug82208_ANNOTATION_TYPE() throws CoreException {\n\tthis.resultCollector.showRule();\n\tsetUpBug82208();\n\tsearch(\"B82208*\", ANNOTATION_TYPE, ALL_OCCURRENCES);\n\tassertSearchResults(\n\t\t\"src/b82208/Test.java b82208.B82208_A [B82208_A] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug82208_ANNOTATION_TYPE", "class_name": "JavaSearchBugsTests", "index": 1814, "label": 1}
{"input": "@Override\n\tpublic void onInfoWindowClick(Marker marker) {\n\t\ttoast.setText(marker.getTitle());\n\t\ttoast.show();\n\t}", "timestamp": "2021-01-10T20:04:03.310715Z", "repo_name": "mobilis/FriendFinder", "path": "/FriendFinder_Android/src/de/tudresden/inf/rn/mobilis/friendfinder/MapActivity.java", "source": "the-stack-v2", "method_name": "onInfoWindowClick", "class_name": "MapActivity", "index": 1815, "label": 1}
{"input": "@Override\n\tpublic void addEmployees(String firstName, String lastName, String title, String reportTo, String email) {\n\t\ttry(Connection con = ConnectionUtil.getConnection(filename)) {\n\t\t\tString sql = \"INSERT INTO EMPLOYEES(FIRSTNAME, LASTNAME, TITLE, REPORTTO, EMAIL) VALUES (?, ?, ?, ?, ?)\";\n\t\t\tPreparedStatement pstmt = con.prepareStatement(sql);\n\t\t\tpstmt.setString(1, firstName);\n\t\t\tpstmt.setString(2, lastName);\n\t\t\tpstmt.setString(3, title);\n\t\t\tpstmt.setString(4, reportTo);\n\t\t\tpstmt.setString(5, email);\n\t\t\tpstmt.executeQuery();\n\t\t} catch (SQLException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}", "timestamp": "2020-04-04T11:58:08.778182Z", "repo_name": "1810Oct29SPARK/RuizR", "path": "/ProjectOne/src/main/java/com/revature/dao/EmployeesDAOImpl.java", "source": "the-stack-v2", "method_name": "addEmployees", "class_name": "EmployeesDAOImpl", "index": 1816, "label": 1}
{"input": "public void testBug95152_jar01() throws CoreException {\n\tIType type = getPackageFragment(\"JavaSearchBugs\", \"lib/b95152.jar\", \"b95152\").getClassFile(\"T1$T12.class\").getType();\n\t\n\tsearch(type.getMethods()[0], REFERENCES);\n\ttype = getPackageFragment(\"JavaSearchBugs\", \"lib/b95152.jar\", \"b95152\").getClassFile(\"T1$T12$T13.class\").getType();\n\t\n\tsearch(type.getMethods()[0], REFERENCES);\n\tassertSearchResults(\n\t\t\"lib/b95152.jar b95152.T1() EXACT_MATCH\\n\" +\n\t\t\"lib/b95152.jar b95152.T1() EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug95152_jar01", "class_name": "JavaSearchBugsTests", "index": 1817, "label": 1}
{"input": "private void initializeCADStructures(Slice sliceRequested) {\n\n\n\t\tint sliceID= sliceRequested.getSliceID();\n\n\t\t\n\t\tif(!this._embeddedSlices.contains(sliceID))\n\t\t\tthis._embeddedSlices.add(sliceID);\n\n\t\tint sliceSize = sliceRequested.getVirtualnodeCount();\n\n\n\n\t\t\n\t\tLinkedList<Double> b = new LinkedList<Double>(); \n\t\tfor(int i=1; i<=sliceSize; i++ )\n\t\t{\n\t\t\tb.add(0.0); \n\t\t}\n\t\tthis._bidVectorMap.put(sliceID, b);\n\n\t\t\n\t\tLinkedHashMap<Integer,String> a = new LinkedHashMap<Integer,String>();\n\t\tthis._allocationVectorMap.put(sliceID, a);\n\n\t\t\n\t\tLinkedList<Integer> m = new LinkedList<Integer>(); \n\t\tthis._mMap.put(sliceID, m);\n\n\t\t\n\t\tLinkedHashMap<Integer,Long> biddingTime = new LinkedHashMap<Integer,Long>();\n\t\tthis._biddingTimeMap.put(sliceID, biddingTime);\n\n\n\t\t\n\t\tLinkedHashMap<Integer,Integer> nodeMapping = new LinkedHashMap<Integer,Integer>(); \n\t\tthis._nodeMappingMap.put(sliceID, nodeMapping);\n\n\t\t\n\t\tthis.set_nodeStressBeforeThisSliceRequest(this.get_nodeCapacity());\n\n\n\t}", "timestamp": "2020-03-24T18:57:41.155720Z", "repo_name": "gabrielecastellano/vinea", "path": "/src/vinea/pnode/Pnode.java", "source": "the-stack-v2", "method_name": "initializeCADStructures", "class_name": "Pnode", "index": 1818, "label": 1}
{"input": "private void checkBlock(int row, int col) {\n        for (int i = 0; i < 4; i++) {\n            int neighborIndex = blockGetNeighbor(i, row, col);\n            if (neighborIndex != -1 && !isIndexAvailable(neighborIndex)) {\n                if (fallDown(getRow(neighborIndex), getCol(neighborIndex))) {\n                    checkBlock(getRow(neighborIndex), getCol(neighborIndex));\n                    break;\n                }\n            }\n        }\n    }", "timestamp": "2023-02-27T20:35:24.673052Z", "repo_name": "JakubKosmaty/java", "path": "/Zadanie03_game/src/StrangeWorld.java", "source": "the-stack-v2", "method_name": "checkBlock", "class_name": "StrangeWorld", "index": 1819, "label": 1}
{"input": "public static com.google.cloud.securitycenter.v1.Cvssv3 parseFrom(byte[] data)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data);\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "parseFrom", "class_name": "Cvssv3", "index": 1820, "label": 1}
{"input": "public Criteria andSendTimeLessThanOrEqualTo(Date value) {\r\n            addCriterion(\"send_time <=\", value, \"sendTime\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andSendTimeLessThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 1821, "label": 1}
{"input": "public void testBug201064f_CamelCaseSamePartCount() throws CoreException {\n\tTypeNameMatchCollector collector = new TypeNameMatchCollector();\n\tsearchAllTypeNames(\"CamelC\", SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH, collector);\n\tassertSearchResults(\n\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",\n\t\tcollector\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug201064f_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 1822, "label": 1}
{"input": "@Test\n\tpublic void testDeleteCard() throws Exception {\n\t\tCard c = new Card(\"CardToDelete\", 275);\n\t\tc.setId(1L);\n\t\twhen(cardData.save(ArgumentMatchers.any(Card.class))).thenAnswer(new Answer<>() {\n\t\t\t@Override\n\t\t\tpublic Object answer(InvocationOnMock invocation) throws Throwable {\n\t\t\t\tCard c = (Card) invocation.getArgument(0);\n\t\t\t\treturn c;\n\t\t\t}\n\t\t});\n\t\tthis.mockMvc.perform(delete(\"/card/1\")\n\t        \t\t)\n\t        \t\t.andDo(print())\n\t        \t\t.andExpect(status().isNoContent());\n\t\tverify(cardData).deleteById(1L);\n\t\t\n\t}", "timestamp": "2023-02-23T15:22:43.298997Z", "repo_name": "ElskeM/CardGameScrum", "path": "/cardgame/src/test/java/com/yrgo/sp/cardgame/controller/CardControllerTest.java", "source": "the-stack-v2", "method_name": "testDeleteCard", "class_name": "CardControllerTest", "index": 1823, "label": 1}
{"input": "public void scanQR(View v) {\r\n        System.out.println(\"hi\");\r\n        try {\r\n            \n            Intent intent = new Intent(ACTION_SCAN);\r\n            intent.putExtra(\"SCAN_MODE\", \"QR_CODE_MODE\");\r\n            startActivityForResult(intent, 0);\r\n        } catch (ActivityNotFoundException anfe) {\r\n            \n            showDialog(MainActivity.this, \"No Scanner Found\", \"Download a scanner code activity?\", \"Yes\", \"No\").show();\r\n        }\r\n    }", "timestamp": "2016-09-01T16:41:45.003792Z", "repo_name": "1595ayush/E-Voting", "path": "/Voting/Voting/app/src/main/java/mycompany/voting/MainActivity.java", "source": "the-stack-v2", "method_name": "scanQR", "class_name": "MainActivity", "index": 1824, "label": 1}
{"input": "public Callback<String> getExportErrorCallback() {\n            return mExportErrorCallback;\n        }", "timestamp": "2022-12-08T04:12:54.583056Z", "repo_name": "yeahhhhhhhh/chromium_quic", "path": "/src/chrome/android/javatests/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferencesTest.java", "source": "the-stack-v2", "method_name": "getExportErrorCallback", "class_name": "FakePasswordManagerHandler", "index": 1825, "label": 1}
{"input": "public void testBug6930_AllConstructorDeclarations05() throws Exception {\n\ttry {\n\t\tIJavaProject p = createJavaProject(\"P\", new String[] {}, new String[] {\"/P/lib6930.jar\"}, \"\");\n\t\t\n\t\tcreateJar(new String[] {\n\t\t\t\"p6930/AllConstructorDeclarations05.java\",\n\t\t\t\"package p6930;\\n\" +\n\t\t\t\"public class AllConstructorDeclarations05 {\\n\" +\n\t\t\t\"  public class AllConstructorDeclarations05b {\\n\" +\n\t\t\t\"    public AllConstructorDeclarations05b(Object o) {}\\n\" +\n\t\t\t\"  }\\n\" +\n\t\t\t\"}\"\n\t\t}, p.getProject().getLocation().append(\"/P/lib6930.jar\"0).toOSString());\n\t\trefresh(p);\n\t\t\n\t\tConstructorDeclarationsCollector requestor = new ConstructorDeclarationsCollector();\n\t\tsearchAllConstructorDeclarations(\"/P/lib6930.jar\"1, SearchPattern.R_PREFIX_MATCH, requestor);\n\t\tassertSearchResults(\n\t\t\t\"/P/lib6930.jar\"2,\n\t\t\trequestor\n\t\t);\n\t} finally {\n\t\tdeleteProject(\"P\");\n\t}\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug6930_AllConstructorDeclarations05", "class_name": "JavaSearchBugsTests", "index": 1826, "label": 1}
{"input": "public static boolean isValid(final Set<Tile> selectedTiles, final Set<TownSite> townSites) {\n    \tfinal Map<TownSite, List<Tile>> matching = new HashMap<>();\n    \tfor (final TownSite townSite : townSites) {\n    \t\tmatching.put(townSite, new ArrayList<>());\n    \t}\n    \tfor (final Tile tile : selectedTiles) {\n    \t\tfinal Set<TownSite> visited = new HashSet<>();\n    \t\tif (!bpm(tile, visited, matching)) {\n    \t\t\treturn false;\n    \t\t}\n    \t}\n    \treturn true;\n    }", "timestamp": "2021-01-20T18:33:43.125350Z", "repo_name": "pjsavola/doe", "path": "/java_src/HarvestAlgorithm.java", "source": "the-stack-v2", "method_name": "isValid", "class_name": "HarvestAlgorithm", "index": 1827, "label": 1}
{"input": "@Test public void testValues() {\n    CalciteAssert.that()\n        .query(\"values (1), (2)\")\n        .returns(\"EXPR$0=1\\n\"\n            + \"EXPR$0=2\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testValues", "class_name": "JdbcTest", "index": 1828, "label": 1}
{"input": "private boolean shouldKeepTmpFile(File file) {\n    String path = file.getPath();\n    if (FileUtil.pathsEqual(path, ourPathToKeep)) return true;\n    for (String pathToKeep : myPathsToKeep) {\n      if (FileUtil.pathsEqual(path, pathToKeep)) return true;\n    }\n    return false;\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "shouldKeepTmpFile", "class_name": "UsefulTestCase", "index": 1829, "label": 1}
{"input": "public static String getAppName(Context context, String str) {\n        if (context == null) {\n            return \"\";\n        }\n        try {\n            PackageManager packageManager = context.getPackageManager();\n            return packageManager.getApplicationLabel(packageManager.getApplicationInfo(str, 0)).toString();\n        } catch (Throwable th) {\n            return \"\";\n        }\n    }", "timestamp": "2022-01-27T12:48:43.446804Z", "repo_name": "jambestwick/HackWechat", "path": "/app/src/main/java/com/tencent/qqvideo/proxy/common/VcSystemInfo.java", "source": "the-stack-v2", "method_name": "getAppName", "class_name": "VcSystemInfo", "index": 1830, "label": 1}
{"input": "@RequestMapping(value=\"/list\")\r\n\tpublic ModelAndView list(Page page) throws Exception{\r\n\t\tlogBefore(logger, Jurisdiction.getUsername()+\"列表Weal\");\r\n\t\t\n\t\tModelAndView mv = this.getModelAndView();\r\n\t\tPageData pd = new PageData();\r\n\t\tpd = this.getPageData();\r\n\t\tString keywords = pd.getString(\"keywords\");\t\t\t\t\n\t\tif(null != keywords && !\"\".equals(keywords)){\r\n\t\t\tpd.put(\"keywords\", keywords.trim());\r\n\t\t}\r\n\t\tpage.setPd(pd);\r\n\t\tList<PageData>\tvarList = wealService.list(page);\t\n\t\tmv.setViewName(\"weal/weal/weal_list\");\r\n\t\tmv.addObject(\"varList\", varList);\r\n\t\tmv.addObject(\"pd\", pd);\r\n\t\tmv.addObject(\"QX\",Jurisdiction.getHC());\t\n\t\treturn mv;\r\n\t}", "timestamp": "2021-01-11T09:00:41.561800Z", "repo_name": "MrXT/erp", "path": "/src/com/fh/controller/weal/weal/WealController.java", "source": "the-stack-v2", "method_name": "list", "class_name": "WealController", "index": 1831, "label": 1}
{"input": "@Test\n    @Transactional\n    void checkMovementTypeIsRequired() throws Exception {\n        int databaseSizeBeforeTest = transactionRepository.findAll().size();\n        \n        transaction.setMovementType(null);\n\n        \n\n        restTransactionMockMvc\n            .perform(\n                post(ENTITY_API_URL)\n                    .with(csrf())\n                    .contentType(MediaType.APPLICATION_JSON)\n                    .content(TestUtil.convertObjectToJsonBytes(transaction))\n            )\n            .andExpect(status().isBadRequest());\n\n        List<Transaction> transactionList = transactionRepository.findAll();\n        assertThat(transactionList).hasSize(databaseSizeBeforeTest);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "checkMovementTypeIsRequired", "class_name": "TransactionResourceIT", "index": 1832, "label": 1}
{"input": "public Criteria andIdLike(String value) {\n            addCriterion(\"ID like\", value, \"id\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andIdLike", "class_name": "GeneratedCriteria", "index": 1833, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n\tpublic ActionForward toDjyqfkTaskList(ActionMapping mapping,\n\t\t\tActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response) {\n\t\tMap params = new HashMap();\n\t\tParamUtil.putStr2Map(request, \"APPLICATIONID\", params);\n\t\tint pageNo = ParamUtil.getInt(request, \"pageNo\", 1);\n\t\tIListPage page = zfdjService.pageQueryDjyqfkTask(params, pageNo);\n\t\trequest.setAttribute(\"page\", page);\n\t\treturn mapping.findForward(\"djyqfklist\");\n\t}", "timestamp": "2021-01-12T15:41:00.492001Z", "repo_name": "MoonLuckSir/MoonRepository", "path": "/src/java/com/yitong/app/action/judicial/dxzpzfdj/ZfdjAction.java", "source": "the-stack-v2", "method_name": "toDjyqfkTaskList", "class_name": "ZfdjAction", "index": 1834, "label": 1}
{"input": "@Override\n    public void onActivityCreated(@Nullable Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n        postDisposable = retrofitCallOperation.getPost().subscribe(binding::setViewState);\n    }", "timestamp": "2020-03-27T20:52:28.784854Z", "repo_name": "ozanturcan/JsonPlaceHolderApp", "path": "/app/src/main/java/ozanturcan/com/myapplication/fragment/PostFragment.java", "source": "the-stack-v2", "method_name": "onActivityCreated", "class_name": "PostFragment", "index": 1835, "label": 1}
{"input": "public Criteria andTopicIdIn(List<Integer> values) {\r\n            addCriterion(\"topic_id in\", values, \"topicId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2021-05-08T12:41:18.691106Z", "repo_name": "suoyiguke/weixinparent", "path": "/weixinpojo/src/main/java/com/yinkai/entities/ImageExample.java", "source": "the-stack-v2", "method_name": "andTopicIdIn", "class_name": "GeneratedCriteria", "index": 1836, "label": 1}
{"input": "private void issueTokenForAuthCode(\n            HttpServletRequest request,\n            HttpServletResponse response,\n            String clientId,\n            String scope) throws Exception {\n        log.debug(\"Entered issueTokenForAuthCode\");\n        String authCode = SsoUtils.getRequestParameter(request,\n                SsoConstants.HTTP_PARAM_AUTHORIZATION_CODE,\n                SsoConstants.HTTP_PARAM_AUTHORIZATION_CODE);\n        String accessToken = ssoContext.getTokenForAuthCode(authCode);\n        SsoUtils.validateRequestScope(request, accessToken, scope);\n        SsoSession ssoSession = SsoUtils.getSsoSession(request, clientId, accessToken, true);\n        log.debug(\"Sending json response\");\n        SsoUtils.sendJsonData(response, buildResponse(request, ssoSession, clientId));\n    }", "timestamp": "2021-01-19T08:50:52.137957Z", "repo_name": "igoihman/ovirt-engine", "path": "/backend/manager/modules/enginesso/src/main/java/org/ovirt/engine/core/sso/servlets/OAuthTokenServlet.java", "source": "the-stack-v2", "method_name": "issueTokenForAuthCode", "class_name": "OAuthTokenServlet", "index": 1837, "label": 1}
{"input": "public static PreferenceHelper getInstance(Context context) {\n        if (instance == null) {\n            synchronized (PreferenceHelper.class) {\n                if (instance == null)\n                    instance = new PreferenceHelper(context);\n            }\n        }\n        return instance;\n    }", "timestamp": "2020-12-14T18:05:36.409414Z", "repo_name": "KaungMyat-Min/haulio", "path": "/app/src/main/java/com/kaungmyatmin/haulio/helper/PreferenceHelper.java", "source": "the-stack-v2", "method_name": "getInstance", "class_name": "PreferenceHelper", "index": 1838, "label": 1}
{"input": "public EnumPushReaction getMobilityFlag(IBlockState state)\n    {\n        return EnumPushReaction.DESTROY;\n    }", "timestamp": "2022-04-25T21:12:53.403324Z", "repo_name": "SkidJava/Orbit-1.12.2", "path": "/src/main/java/net/minecraft/block/BlockBasePressurePlate.java", "source": "the-stack-v2", "method_name": "getMobilityFlag", "class_name": "BlockBasePressurePlate", "index": 1839, "label": 1}
{"input": "@Override\n  public String toString() {\n    return toStringHelper(this)\n        .add(\"client\", clientId)\n        .toString();\n  }", "timestamp": "2021-01-02T08:55:42.350924Z", "repo_name": "maniacs-ops/atomix", "path": "/protocols/raft/src/main/java/io/atomix/protocols/raft/proxy/impl/RaftProxyManager.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "RaftProxyManager", "index": 1840, "label": 1}
{"input": "public Criteria andVdef20Between(String value1, String value2) {\r\n            addCriterion(\"VDEF20 between\", value1, value2, \"vdef20\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef20Between", "class_name": "GeneratedCriteria", "index": 1841, "label": 1}
{"input": "@Test\n  public void case33() {\n    int[] revenues = { -95, -5, -348, 90, 90, -51, -48, -55, 549, -53, 252, 728, 546, 3, 72, -762, 323, 553, 56, -61, 246, 243, 115, 244, -74, -9, -956, -51, -947, 994, -953, -9, -4, -5, -1, 1, -947, 5, 68, -956, -5, -356, -136, 243, -953, -70, -11, -468 };\n    int k = 8;\n    assertEquals(513.340727629485, mergersdivtwo.findMaximum(revenues, k), DELTA * 513.340727629485);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case33", "class_name": "MergersDivTwoTest", "index": 1842, "label": 1}
{"input": "public T poll(){\n        if(store[0] != null) {\n            T value = (T) store[0];\n            removeFirst();\n\n            return value;\n        }\n\n        return null;\n    }", "timestamp": "2021-01-09T06:01:08.916799Z", "repo_name": "orifjon9/MPP-preparing-examples", "path": "/src/com/company/MyQueue.java", "source": "the-stack-v2", "method_name": "poll", "class_name": "MyQueue", "index": 1843, "label": 1}
{"input": "@Override\r\n\t\tpublic void remove() {\r\n\t\t\tsuper.remove();\r\n\t\t\tfor (LazyOptional<? extends IItemHandler> handler : handlers)\r\n\t\t\t\thandler.invalidate();\r\n\t\t}", "timestamp": "2023-08-24T17:39:59.738030Z", "repo_name": "ChrisCraddock/Crates-and-Containers", "path": "/src/main/java/net/mcreator/blocktesting/block/SnowyRedContainer2Block.java", "source": "the-stack-v2", "method_name": "remove", "class_name": "CustomTileEntity", "index": 1844, "label": 1}
{"input": "@Override\n\tpublic void removeEmployees(int Id) {\n\t\ttry(Connection con = ConnectionUtil.getConnection(filename)) {\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tString sql = \"DELETE FROM EMPLOYEES WHERE ID = ?\";\n\t\t\tPreparedStatement pstmt = con.prepareStatement(sql);\n\t\t\tpstmt.setInt(1, Id);\n\t\t\tpstmt.executeQuery();\n\t\t} catch (SQLException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t}", "timestamp": "2020-04-04T11:58:08.778182Z", "repo_name": "1810Oct29SPARK/RuizR", "path": "/ProjectOne/src/main/java/com/revature/dao/EmployeesDAOImpl.java", "source": "the-stack-v2", "method_name": "removeEmployees", "class_name": "EmployeesDAOImpl", "index": 1845, "label": 1}
{"input": "@Override\n    public boolean isSatisfiedBy(T t){\n        return left.isSatisfiedBy(t) && right.isSatisfiedBy(t);\n    }", "timestamp": "2020-04-06T07:13:05.218905Z", "repo_name": "realjax/repository-specification-pattern", "path": "/src/nl/schildmos/repspec/specification/AndSpecification.java", "source": "the-stack-v2", "method_name": "isSatisfiedBy", "class_name": "AndSpecification", "index": 1846, "label": 1}
{"input": "public Criteria or() {\n        Criteria criteria = createCriteriaInternal();\n        oredCriteria.add(criteria);\n        return criteria;\n    }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "or", "class_name": "IntegralsLogCriteria", "index": 1847, "label": 1}
{"input": "@Override\n    public void displayImage(Activity activity, String path, ImageView imageView, int width, int height) {\n\n        Glide.with(activity)                             \n                .load(Uri.fromFile(new File(path)))      \n                .error(R.drawable.ic_default_image)           \n                .placeholder(R.drawable.ic_default_image)     \n                .diskCacheStrategy(DiskCacheStrategy.ALL)\n                .into(imageView);\n    }", "timestamp": "2021-10-24T19:18:13.427995Z", "repo_name": "bluad/S8", "path": "/apps8/src/main/java/com/mantoo/yican/GlideImageLoader.java", "source": "the-stack-v2", "method_name": "displayImage", "class_name": "GlideImageLoader", "index": 1848, "label": 1}
{"input": "public void testBug95152_wc03() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b95152/T.java\",\n\t\t\"package b95152;\\n\" +\n\t\t\"public class T {\\n\" +\n\t\t\"\tT2 c2;\\n\" +\n\t\t\"\tT2.T3 c3;\\n\" +\n\t\t\"\tT(T c) {\\n\" +\n\t\t\"\t\tc2 = new T2(c);\\n\" +\n\t\t\"\t\tc3 = c2.new T3(c2);\\n\" +\n\t\t\"\t}\\n\" +\n\t\t\"\tclass T2 {\\n\" +\n\t\t\"package b95152;\\n\"0 +\n\t\t\"package b95152;\\n\"1 +\n\t\t\"package b95152;\\n\"2 +\n\t\t\"package b95152;\\n\"3 +\n\t\t\"\t}\\n\" +\n\t\t\"package b95152;\\n\"5\n\t);\n\t\n\tIType type = this.workingCopies[0].getType(\"package b95152;\\n\"6).getType(\"package b95152;\\n\"7);\n\tsearch(type.getMethods()[0], REFERENCES);\n\t\n\ttype = type.getType(\"package b95152;\\n\"8);\n\tsearch(type.getMethods()[0], REFERENCES);\n\t\n\tassertSearchResults(\n\t\t\"package b95152;\\n\"9 +\n\t\t\"public class T {\\n\"0\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug95152_wc03", "class_name": "JavaSearchBugsTests", "index": 1849, "label": 1}
{"input": "@Override\n  public boolean equals(java.lang.Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    EnumTest enumTest = (EnumTest) o;\n    return Objects.equals(this.enumString, enumTest.enumString) &&\n        Objects.equals(this.enumStringRequired, enumTest.enumStringRequired) &&\n        Objects.equals(this.enumInteger, enumTest.enumInteger) &&\n        Objects.equals(this.enumNumber, enumTest.enumNumber) &&\n        Objects.equals(this.outerEnum, enumTest.outerEnum);\n  }", "timestamp": "2023-03-07T19:55:29.765168Z", "repo_name": "docusign/old_swagger-codegen", "path": "/samples/client/petstore/java/okhttp-gson-parcelableModel/src/main/java/io/swagger/client/model/EnumTest.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "EnumTest", "index": 1850, "label": 1}
{"input": "public static Shape createDiagonalCross(float l, float t) {\n        GeneralPath p0 = new GeneralPath();\n        p0.moveTo(-l - t, -l + t);\n        p0.lineTo(-l + t, -l - t);\n        p0.lineTo(0.0f, -t * SQRT2);\n        p0.lineTo(l - t, -l - t);\n        p0.lineTo(l + t, -l + t);\n        p0.lineTo(t * SQRT2, 0.0f);\n        p0.lineTo(l + t, l - t);\n        p0.lineTo(l - t, l + t);\n        p0.lineTo(0.0f, t * SQRT2);\n        p0.lineTo(-l + t, l + t);\n        p0.lineTo(-l - t, l - t);\n        p0.lineTo(-t * SQRT2, 0.0f);\n        p0.closePath();\n        return p0;\n    }", "timestamp": "2021-04-17T05:37:48.393527Z", "repo_name": "wuhongjun15/overfitting-study", "path": "/DiffTGen-result/output/Chart_11_1_capgen/patch/instru1/ShapeUtilities.java", "source": "the-stack-v2", "method_name": "createDiagonalCross", "class_name": "ShapeUtilities", "index": 1851, "label": 1}
{"input": "public List<Score> getScores()\n  {\n    List<Score> newScores = Collections.unmodifiableList(scores);\n    return newScores;\n  }", "timestamp": "2020-09-27T06:19:22.075701Z", "repo_name": "mustafain117/Block-Breaker-Game", "path": "/Block223v2/src/ca/mcgill/ecse223/block/model/Game.java", "source": "the-stack-v2", "method_name": "getScores", "class_name": "Game", "index": 1852, "label": 1}
{"input": "private int profundidad(Vertice<T> ver )\n    {\n        if (ver == null || (!ver.hayIzquierdo() && !ver.hayDerecho()))\n            return 0;\n        return (1 + Math.max(profundidad(ver.izquierdo), profundidad(ver.derecho)));\n    }", "timestamp": "2021-05-29T11:10:04.847601Z", "repo_name": "acasanova009/UNAM", "path": "/EDD/practica4/src/mx/unam/ciencias/edd/ArbolBinario.java", "source": "the-stack-v2", "method_name": "profundidad", "class_name": "ArbolBinario", "index": 1853, "label": 1}
{"input": "@Test\n    public void testRegisterTransitionCallbackAfterInit() {\n        verify(mMockDisplayAreaOrganizer).registerTransitionCallback(mMockTouchHandler);\n        verify(mMockDisplayAreaOrganizer).registerTransitionCallback(mMockTutorialHandler);\n    }", "timestamp": "2023-05-12T00:27:34.162348Z", "repo_name": "Flamingo-OS/frameworks_base", "path": "/libs/WindowManager/Shell/tests/unittest/src/com/android/wm/shell/onehanded/OneHandedControllerTest.java", "source": "the-stack-v2", "method_name": "testRegisterTransitionCallbackAfterInit", "class_name": "OneHandedControllerTest", "index": 1854, "label": 1}
{"input": "public void testBug100772_HierarchyScope_InterfacesAndClass01() throws CoreException {\n\tsetUpBug100772_HierarchyScope_InterfacesAndClass();\n\tIType type = this.workingCopies[0].getType(\"Test\");\n\tIMethod method = type.getMethod(\"foo\", new String[] { \"QT;\" });\n\tsearch(method, UI_DECLARATIONS, SearchEngine.createHierarchyScope(type));\n\tassertSearchResults(\n\t\t\"src/b100772/Test.java void b100772.Test.foo(T) [foo] EXACT_MATCH\\n\" +\n\t\t\"src/b100772/Test.java void b100772.Sub.foo(String) [foo] EXACT_MATCH\\n\" +\n\t\t\"src/b100772/Test.java void b100772.X.foo(String) [foo] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug100772_HierarchyScope_InterfacesAndClass01", "class_name": "JavaSearchBugsTests", "index": 1855, "label": 1}
{"input": "private synchronized boolean m421h(String str) {\n        File fileStreamPath;\n        fileStreamPath = C0118e1.m386a().f361a.getFileStreamPath(\".FlurrySenderIndex.info.\".concat(String.valueOf(str)));\n        String str2 = f423d;\n        C0260s1.m686c(5, str2, \"isOldIndexFilePresent: for \" + str + fileStreamPath.exists());\n        return fileStreamPath.exists();\n    }", "timestamp": "2023-02-23T06:37:03.730470Z", "repo_name": "alissonlauffer/via-browser-dump", "path": "/app/src/main/java/com/flurry/sdk/C0136f2.java", "source": "the-stack-v2", "method_name": "m421h", "class_name": "C0136f2", "index": 1856, "label": 1}
{"input": "@Override\n        public String getInitParameter(String name) {\n            return sc.getInitParameter(name);\n        }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "getInitParameter", "class_name": "NoPluggabilityServletContext", "index": 1857, "label": 1}
{"input": "public void updateAnimation () {\n\t\tlong timeElapsed = System.currentTimeMillis() - mTimeLastFrame;\n\t\tmTimeLastFrame = System.currentTimeMillis();\n\t\t\n\t\tupdateBlink();\n\t\tupdateSpeaking();\n\t\tupdateEyeRoll(timeElapsed);\n\t\tupdateEyesOut(timeElapsed);\n\t\tupdateEyesOpen(timeElapsed);\n\t\tupdateUpper(timeElapsed);\n\t\tupdateLower(timeElapsed);\n\t\tupdateBowHead(timeElapsed);\n\t\tupdateMove(timeElapsed);\n\t}", "timestamp": "2016-08-11T07:51:42.621498Z", "repo_name": "emote-project/Migration-App", "path": "/Android3DEmys/src/uk/ac/hw/lirec/emys3d/EmysModel.java", "source": "the-stack-v2", "method_name": "updateAnimation", "class_name": "EmysModel", "index": 1858, "label": 1}
{"input": "private String imapUri(String username, String password) {\r\n\t\tImapServer imapd = mailMock.getImap();\r\n\t\treturn makeURI(\"imap://\" + imapd.getBindTo() + \":\" + imapd.getPort(), newMapBuilder() \n\t\t\t\t.put(\"username\", username) \n\t\t\t\t.put(\"password\", password) \n\t\t\t\t.put(\"delete\", true) \n\t\t\t\t.put(\"initialDelay\", 0) \n\t\t\t\t.put(\"delay\", 10) \n\t\t\t\t.put(\"timeUnit\", MINUTES.name()) \n\t\t\t\t.build() \n\t\t);\r\n\t}", "timestamp": "2022-11-12T07:05:46.773336Z", "repo_name": "andy521/Ardulink-2", "path": "/ardulink-mail/src/test/java/org/ardulink/mail/camel/ArdulinkMailOnCamelIntegrationTest.java", "source": "the-stack-v2", "method_name": "imapUri", "class_name": "ArdulinkMailOnCamelIntegrationTest", "index": 1859, "label": 1}
{"input": "public AnnotationTypeElementRestContext annotationTypeElementRest() {\n\t\t\treturn getRuleContext(AnnotationTypeElementRestContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "annotationTypeElementRest", "class_name": "AnnotationTypeElementDeclarationContext", "index": 1860, "label": 1}
{"input": "public static boolean getBoolean(double probability) {\n\t\tif (probability < 0 || probability > 1) {\n\t\t\tthrow new IllegalArgumentException(\"Probability should be a number between 0 and 1\");\n\t\t}\n\t\t\n\t\treturn random.nextDouble() < probability;\n\t}", "timestamp": "2020-09-20T17:10:29.039955Z", "repo_name": "gutomarzagao/simple-genetic-algorithm", "path": "/src/main/java/shell/util/Rand.java", "source": "the-stack-v2", "method_name": "getBoolean", "class_name": "Rand", "index": 1861, "label": 1}
{"input": "private void drawBirdDrop() {\n        if (birdHeight == 0)\n            birdHeight = mCanvas.getHeight() / 2;\n        \n        if (rise >= 0) {\n            birdHeight = birdHeight - getRise();\n        }\n        \n        else {\n            birdHeight = birdHeight + getH();\n        }\n\n        if (birdHeight <= mCanvas.getHeight()) {\n            bird.draw(mCanvas, birdHeight);\n        }\n        \n        else if (birdHeight <= 0) {\n            bird.draw(mCanvas, 0);\n        }\n        \n        else {\n            birdHeight = mCanvas.getHeight() / 2;\n            h = 0;\n        }\n    }", "timestamp": "2022-11-10T15:18:39.844014Z", "repo_name": "AndroidCourseTeam/AndroidHomework", "path": "/app/src/main/java/com/nankai/myflappybird/GameView.java", "source": "the-stack-v2", "method_name": "drawBirdDrop", "class_name": "GameView", "index": 1862, "label": 1}
{"input": "private void addAttacker(int clanId)\n\t{\n\t\tgetAttackerClans().add(new L2SiegeClan(clanId, SiegeClanType.ATTACKER)); \n\t}", "timestamp": "2021-01-10T03:42:04.091432Z", "repo_name": "soultobe/L2JOlivia_EpicEdition", "path": "/java/com/l2jolivia/gameserver/model/entity/FortSiege.java", "source": "the-stack-v2", "method_name": "addAttacker", "class_name": "FortSiege", "index": 1863, "label": 1}
{"input": "public static void refreshRecursively(@NotNull VirtualFile file) {\n    VfsUtilCore.visitChildrenRecursively(file, new VirtualFileVisitor() {\n      @Override\n      public boolean visitFile(@NotNull VirtualFile file) {\n        file.getChildren();\n        return true;\n      }\n    });\n    file.refresh(false, true);\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "refreshRecursively", "class_name": "UsefulTestCase", "index": 1864, "label": 1}
{"input": "public Criteria andCreateTimeNotIn(List<Date> values) {\n            addCriterion(\"create_time not in\", values, \"createTime\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andCreateTimeNotIn", "class_name": "GeneratedCriteria", "index": 1865, "label": 1}
{"input": "@Override\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        \n                \n                Admin_ReadAllTasksQuery rq = new Admin_ReadAllTasksQuery();\n\n                \n                rq.doRead();\n                String table = rq.makeHtmlTable();\n\n                \n                request.setAttribute(\"table\", table);\n                String url = \"./adminRead.jsp\";\n\n                RequestDispatcher dispatcher = request.getRequestDispatcher(url);\n                dispatcher.forward(request, response);\n    }", "timestamp": "2021-04-27T11:14:20.740714Z", "repo_name": "kate-anderson/TaskManager", "path": "/Task_Manager/src/java/controller/Admin_ReadAllTasksServlet.java", "source": "the-stack-v2", "method_name": "doPost", "class_name": "Admin_ReadAllTasksServlet", "index": 1866, "label": 1}
{"input": "public void importExcel(String fileName, MultipartFile file) throws Exception {\n\t\t\n\t\t\tImportExcel ei = new ImportExcel(file, 1, 0);\n\t\t\tList<ExperevaluateDO> list = ei.getDataList(ExperevaluateDO.class);\n\t\t\t\n\t\t\tfor (ExperevaluateDO experevaluate : list) {\n\t\t\t\t\n\t\t\t\tif(experevaluate != null) {\n\t\t\t\t\t experevaluateDao.save( experevaluate);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t}", "timestamp": "2022-09-11T09:39:11.970942Z", "repo_name": "iamfine099/mia", "path": "/src/main/java/com/bootdo/mia/service/impl/ExperevaluateServiceImpl.java", "source": "the-stack-v2", "method_name": "importExcel", "class_name": "ExperevaluateServiceImpl", "index": 1867, "label": 1}
{"input": "@Override\n        public <T extends EventListener> void addListener(T t) {\n            throw new UnsupportedOperationException(\n                    sm.getString(\"noPluggabilityServletContext.notAllowed\"));\n        }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "addListener", "class_name": "NoPluggabilityServletContext", "index": 1868, "label": 1}
{"input": "public void setPosition(Point position)\n   {\n      int disX = Math.abs(a.x - position.x);\n      int disY = Math.abs(a.y - position.y);\n      if(a.x > position.x)\n      {\n         disX = (disX)*(-1);\n      }\n      if(a.y > position.y)\n      {\n         disY = (disY)*(-1);\n      }\n      \n      this.move(new Point(disX, disY));\n   }", "timestamp": "2021-04-18T22:28:05.611678Z", "repo_name": "Ademello25/Poly-CS-backups", "path": "/CPE102/program3/Triangle.java", "source": "the-stack-v2", "method_name": "setPosition", "class_name": "Triangle", "index": 1869, "label": 1}
{"input": "public void gotoNextRoom(String direction)\n    {\n        Direction d;\n        switch (direction)\n        {\n            case \"N\": d = Direction.NORTH; break;\n            case \"S\": d = Direction.SOUTH; break;\n            case \"E\": d = Direction.EAST; break;\n            case \"W\": d = Direction.WEST; break;\n            default: d = Direction.EAST;\n        }\n        MapSite site = currentRoom.getSide(d);\n        if(site instanceof Door)\n        {\n            currentRoom = ((Door) site).otherSideFrom(currentRoom);\n            currentRoom.enter();\n        }\n        else\n            site.enter();\n    }", "timestamp": "2021-01-01T19:08:11.090098Z", "repo_name": "keys961/Design-Pattern", "path": "/src/org/yejt/maze/MazeGame.java", "source": "the-stack-v2", "method_name": "gotoNextRoom", "class_name": "MazeGame", "index": 1870, "label": 1}
{"input": "@GetMapping(\"/Login/LoginDetails/{name}\")\n\tpublic User loginDetails(@PathVariable (\"name\") String name)\n\t{\n\t\treturn userService.loginDetails(name);\n\t}", "timestamp": "2022-07-13T20:32:11.679113Z", "repo_name": "tushartevetia/SPRINT2", "path": "/Spring/OnlineMovieTicketSystem/src/main/java/com/cg/OnlineMovieTicketSystem/controller/BookingController.java", "source": "the-stack-v2", "method_name": "loginDetails", "class_name": "BookingController", "index": 1871, "label": 1}
{"input": "@Override\n    public ControllerDef getControllerDef() throws QuickFixException {\n        if (this.controllerDescriptors.isEmpty()) {\n            if (this.extendsDescriptor != null) {\n                return getSuperDef().getControllerDef();\n            } else {\n                return null;\n            }\n        } else {\n            return compoundControllerDescriptor.getDef();\n        }\n    }", "timestamp": "2020-12-14T02:11:21.814429Z", "repo_name": "fawnapp/aura", "path": "/aura-impl/src/main/java/org/auraframework/impl/root/component/BaseComponentDefImpl.java", "source": "the-stack-v2", "method_name": "getControllerDef", "class_name": "BaseComponentDefImpl", "index": 1872, "label": 1}
{"input": "@Override\n    public boolean isGenerationAllowed(World aWorld, int aDimensionType, int aAllowedDimensionType) {\n        return aWorld.provider.dimensionId == ConfigHandler.ross128BID;\n    }", "timestamp": "2020-05-19T07:30:35.007374Z", "repo_name": "DarkShadow44/bartworks", "path": "/src/main/java/com/github/bartimaeusnek/bartworks/system/oregen/BW_WorldGenRoss128b.java", "source": "the-stack-v2", "method_name": "isGenerationAllowed", "class_name": "BW_WorldGenRoss128b", "index": 1873, "label": 1}
{"input": "@Override\r\n\t\tpublic FluidStack getTank(int i) {\r\n\t\t\tItemStack item = player.mainInventory.get(player.currentItem);\r\n\t\t\tFluid[] fluids = item != null ? getFluids(item.getTagCompound()) : null;\r\n\t\t\treturn fluids != null && i < fluids.length ? new FluidStack(fluids[i], 0) : null;\r\n\t\t}", "timestamp": "2020-07-29T23:15:57.914435Z", "repo_name": "coldino/InductiveLogistics", "path": "/src/java/cd4017be/indlog/item/ItemFluidFilter.java", "source": "the-stack-v2", "method_name": "getTank", "class_name": "GuiData", "index": 1874, "label": 1}
{"input": "public void inserirDados(String nomeTabela, int matr, String nome, String curso, String discipl, int turma, int ano, int sem) {\n        try {\n            String sql = \"Insert into \"+nomeTabela+\"(matricula, nome, curso, disciplina, \"\n                    + \"turma, ano, semestre) values(?, ?, ?, ?, ?, ?, ?)\";\n            PreparedStatement ps = conectarBanco().prepareStatement(sql);\n            ps.setInt(1, matr);\n            ps.setString(2, nome);\n            ps.setString(3, curso);\n            ps.setString(4, discipl);\n            ps.setInt(5, turma);\n            ps.setInt(6, ano);\n            ps.setInt(7, sem);\n\n            ps.execute();\n            ps.close();\n            desconectarBanco();\n            \n        } catch (SQLException e) {\n            System.out.println(\"Erro ao inserir dados no banco.\\n\" + e);\n        }\n        System.out.println(\"Dados inseridos!\");\n    }", "timestamp": "2016-09-05T09:25:30.232129Z", "repo_name": "ChristianARamos/JAVA-BancoArq", "path": "/Banco/Banco.java", "source": "the-stack-v2", "method_name": "inserirDados", "class_name": "Banco", "index": 1875, "label": 1}
{"input": "public void setBtnCampoPesquisaYoutube(By btnCampoPesquisaYoutube) {\n\t\tthis.btnCampoPesquisaYoutube = btnCampoPesquisaYoutube;\n\t}", "timestamp": "2023-08-22T18:06:19.145278Z", "repo_name": "Guilherme2309/Master", "path": "/TesteOlx/src/test/java/Elementos/elementos.java", "source": "the-stack-v2", "method_name": "setBtnCampoPesquisaYoutube", "class_name": "elementos", "index": 1876, "label": 1}
{"input": "private Widget getOperatorExtension() {\n        container.setStylePrimaryName( GuidedRuleEditorResources.INSTANCE.css().container() );\n\n        btnAddCEPOperators = new Image( GuidedRuleEditorResources.INSTANCE.images().clock() );\n        btnAddCEPOperators.setVisible( parameterSets.size() > 0 );\n        btnAddCEPOperators.addClickHandler( new ClickHandler() {\n\n            public void onClick( ClickEvent event ) {\n                visibleParameterSet++;\n                if ( visibleParameterSet == parameterSets.size() ) {\n                    visibleParameterSet = 0;\n                }\n                hop.setParameter( VISIBLE_PARAMETER_SET,\n                                  Integer.toString( visibleParameterSet ) );\n                displayParameters();\n            }\n\n        } );\n\n        container.add( btnAddCEPOperators );\n        for ( int i = 0; i < this.parameters.length; i++ ) {\n            container.add( parameters[ i ] );\n        }\n\n        return container;\n    }", "timestamp": "2021-01-17T21:55:31.542359Z", "repo_name": "Brianxia/guvnor", "path": "/drools-wb/drools-wb-screens/drools-wb-guided-rule-editor/drools-wb-guided-rule-editor-client/src/main/java/org/drools/workbench/screens/guided/rule/client/editor/CEPOperatorsDropdown.java", "source": "the-stack-v2", "method_name": "getOperatorExtension", "class_name": "CEPOperatorsDropdown", "index": 1877, "label": 1}
{"input": "public void testBug201064g_CamelCaseSamePartCount() throws CoreException {\n\tTypeNameMatchCollector collector = new TypeNameMatchCollector();\n\tsearchAllTypeNames(\"CCa\", SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH, collector);\n\tassertSearchResults(\n\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CatCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CatCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CxxCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +\n\t\t\"CxxxxCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",\n\t\tcollector\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug201064g_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 1878, "label": 1}
{"input": "public void testBug92944_CLASS_AND_ENUM() throws CoreException {\n\tthis.resultCollector.showRule();\n\tsetUpBug92944();\n\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();\n\tnew SearchEngine(this.workingCopies).searchAllTypeNames(\n\t\tnull,\n\t\tSearchPattern.R_EXACT_MATCH,\n\t\tnull,\n\t\tSearchPattern.R_PATTERN_MATCH, \n\t\tCLASS_AND_ENUM,\n\t\tgetJavaSearchWorkingCopiesScope(),\n\t\trequestor,\n\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,\n\t\tnull\n\t);\n\t\n\tassertSearchResults(\n\t\t\"Unexpected all type names\",\n\t\t\"b92944.B92944\\n\" +\n\t\t\"b92944.B92944_E\",\n\t\trequestor);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug92944_CLASS_AND_ENUM", "class_name": "JavaSearchBugsTests", "index": 1879, "label": 1}
{"input": "public void handle(Event t) {\n            if (txtFrom.getText().equals(\"\") || txtTo.getText().equals(\"\"))\n            {\n                erroreTextBoxVuote();\n            }\n            else\n            {\n                discoAppoggio = paloPartenza.rimuoviUltimo();\n                boolean risultato = paloArrivo.aggiungi(discoAppoggio);\n                if (risultato == false)\n                {\n                    paloPartenza.aggiungi(discoAppoggio);\n                    alert.setTitle(\"ATTENZIONE\");\n                    alert.setHeaderText(\"ATTENZIONE!!\");\n                    alert.setContentText(\"Impossibile appoggiare un disco su uno più piccolo\");\n                    alert.showAndWait();\n                }\n                txtFrom.setText(\"\");\n                txtTo.setText(\"\");\n                paloPartenza = null;\n                paloArrivo = null;\n            }\n        }", "timestamp": "2023-03-15T21:04:55.054868Z", "repo_name": "lbottona/UNITN-lingProg-Torre_Hanoi", "path": "/src/it/unitn/disi/giugno2018/torrehannoi.java", "source": "the-stack-v2", "method_name": "handle", "class_name": "ListenerMove", "index": 1880, "label": 1}
{"input": "public boolean enablePortForward(PortForwardBean portForward) {\n\t\tif (!transport.isConnected()) {\n\t\t\tLog.i(TAG, \"Attempt to enable port forward while not connected\");\n\t\t\treturn false;\n\t\t}\n\n\t\treturn transport.enablePortForward(portForward);\n\t}", "timestamp": "2023-03-17T11:32:39.789148Z", "repo_name": "iiordanov/BSSH", "path": "/app/src/main/java/org/connectbot/service/TerminalBridge.java", "source": "the-stack-v2", "method_name": "enablePortForward", "class_name": "TerminalBridge", "index": 1881, "label": 1}
{"input": "public Criteria andIdLessThan(Integer value) {\n            addCriterion(\"id <\", value, \"id\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andIdLessThan", "class_name": "GeneratedCriteria", "index": 1882, "label": 1}
{"input": "@Override\n    public void addSecurityRole(String role) {\n\n        synchronized (securityRolesLock) {\n            String results[] =new String[securityRoles.length + 1];\n            for (int i = 0; i < securityRoles.length; i++)\n                results[i] = securityRoles[i];\n            results[securityRoles.length] = role;\n            securityRoles = results;\n        }\n        fireContainerEvent(\"addSecurityRole\", role);\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "addSecurityRole", "class_name": "StandardContext", "index": 1883, "label": 1}
{"input": "@Test\n  public void preparesWithMisMatchedDigestAreNotRespondedTo() {\n    peers.getProposer().injectProposal(roundId, proposedBlock);\n    peers.verifyMessagesReceived(expectedPrepare);\n\n    peers.prepareForNonProposing(roundId, Hash.ZERO);\n    peers.verifyNoMessagesReceived();\n\n    peers.prepareForNonProposing(roundId, proposedBlock.getHash());\n    peers.verifyMessagesReceived(expectedCommit);\n\n    peers.prepareForNonProposing(roundId, Hash.ZERO);\n    assertThat(context.getCurrentChainHeight()).isEqualTo(0);\n\n    peers.commitForNonProposing(roundId, proposedBlock);\n    assertThat(context.getCurrentChainHeight()).isEqualTo(1);\n  }", "timestamp": "2023-05-28T12:48:02.535365Z", "repo_name": "enterpact/enterchain", "path": "/consensus/qbft/src/integration-test/java/org/enterchain/enter/consensus/qbft/test/SpuriousBehaviourTest.java", "source": "the-stack-v2", "method_name": "preparesWithMisMatchedDigestAreNotRespondedTo", "class_name": "SpuriousBehaviourTest", "index": 1884, "label": 1}
{"input": "@Override\n  public Record copy(String field1, Object value1, String field2, Object value2) {\n    return new RecordWithAction(record.copy(field1, value1, field2, value2), action);\n  }", "timestamp": "2023-08-05T07:32:25.442740Z", "repo_name": "alldatacenter/alldata", "path": "/lake/amoro/core/src/main/java/com/netease/arctic/io/writer/RecordWithAction.java", "source": "the-stack-v2", "method_name": "copy", "class_name": "RecordWithAction", "index": 1885, "label": 1}
{"input": "@Override\r\n\tpublic Action getMove(CritterInfo info){\r\n\t\tif(info.getFront() == Neighbor.OTHER)\r\n\t\t\treturn Action.INFECT;\r\n\t\telse if(info.getLeft() == Neighbor.OTHER)\r\n\t\t\treturn Action.LEFT;\r\n\t\telse if(info.getBack() == Neighbor.OTHER)\r\n\t\t\treturn Action.LEFT;\r\n\t\telse if(info.getRight() == Neighbor.OTHER)\r\n\t\t\treturn Action.RIGHT;\r\n\t\telse if(info.getFront() == Neighbor.WALL)\r\n\t\t\treturn Action.LEFT;\r\n\t\telse if(info.getFront() == Neighbor.EMPTY)\r\n\t\t\treturn Action.HOP;\r\n\t\telse if(info.getLeft() == Neighbor.WALL)\r\n\t\t\treturn Action.RIGHT;\r\n\t\telse if(info.getRight() == Neighbor.WALL)\r\n\t\t\treturn Action.LEFT;\r\n\t\telse if(info.getRight() == Neighbor.WALL)\r\n\t\t\treturn Action.LEFT;\r\n\t\telse return Action.LEFT;\r\n\t}", "timestamp": "2021-01-19T00:58:23.635582Z", "repo_name": "Straw1239/First", "path": "/First/critters/critters/Husky_Arden1.java", "source": "the-stack-v2", "method_name": "getMove", "class_name": "Husky_Arden1", "index": 1886, "label": 1}
{"input": "public Criteria andVdef14EqualTo(String value) {\r\n            addCriterion(\"VDEF14 =\", value, \"vdef14\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef14EqualTo", "class_name": "GeneratedCriteria", "index": 1887, "label": 1}
{"input": "public void updateContactCount(int count) {\n        mContactCount.setText(NumberFormat.getInstance().format(count));\n    }", "timestamp": "2023-01-13T08:15:21.509899Z", "repo_name": "imfht/chromium", "path": "/chrome/android/java/src/org/chromium/chrome/browser/contacts_picker/TopView.java", "source": "the-stack-v2", "method_name": "updateContactCount", "class_name": "TopView", "index": 1888, "label": 1}
{"input": "public void testDeleteKeyPair() throws SecurityException, NoSuchMethodException, IOException {\n      Invokable<?, ?> method = method(KeyPairApi.class, \"deleteKeyPairInRegion\", String.class, String.class);\n      GeneratedHttpRequest request = processor.createRequest(method, Lists.<Object> newArrayList(null, \"mykey\"));\n\n      assertRequestLineEquals(request, \"POST https://ec2.us-east-1.amazonaws.com/ HTTP/1.1\");\n      assertNonPayloadHeadersEqual(request, \"Host: ec2.us-east-1.amazonaws.com\\n\");\n      assertPayloadEquals(request, \"Action=DeleteKeyPair&KeyName=mykey\",\n            \"application/x-www-form-urlencoded\", false);\n\n      assertResponseParserClassEquals(method, request, ReleasePayloadAndReturn.class);\n      assertSaxResponseParserClassEquals(method, null);\n      assertFallbackClassEquals(method, null);\n\n      checkFilters(request);\n   }", "timestamp": "2020-12-04T11:49:53.121041Z", "repo_name": "nucoupons/Mobile_Applications", "path": "/apis/ec2/src/test/java/org/jclouds/ec2/features/KeyPairApiTest.java", "source": "the-stack-v2", "method_name": "testDeleteKeyPair", "class_name": "KeyPairApiTest", "index": 1889, "label": 1}
{"input": "@Test\n    @Transactional\n    void deleteTransaction() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        int databaseSizeBeforeDelete = transactionRepository.findAll().size();\n\n        \n        restTransactionMockMvc\n            .perform(delete(ENTITY_API_URL_ID, transaction.getId()).with(csrf()).accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNoContent());\n\n        \n        List<Transaction> transactionList = transactionRepository.findAll();\n        assertThat(transactionList).hasSize(databaseSizeBeforeDelete - 1);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "deleteTransaction", "class_name": "TransactionResourceIT", "index": 1890, "label": 1}
{"input": "public static void deleteDiary(Diary diary) throws IOException {\r\n        CSVFileAccess csvFA = new CSVFileAccess();\r\n        \r\n        \n        int diaryid = diary.getId();\r\n        \r\n        \n        String id = String.valueOf(diaryid);\r\n        \r\n        \n        String afterStr = id + \",\" + \" \" + \",\" + \" \" + \",\" + \" \";\r\n        \r\n        try {\r\n            csvFA.editLine(diaryid, afterStr);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n            throw e;\r\n        }\r\n    }", "timestamp": "2022-09-12T11:51:06.306046Z", "repo_name": "OmOm-muron/practice", "path": "/practice/WEB-INF/src/practice/util/DiaryUtil.java", "source": "the-stack-v2", "method_name": "deleteDiary", "class_name": "DiaryUtil", "index": 1891, "label": 1}
{"input": "@Override\n\tpublic void setWorld(World world) {\n\n\t\tsuper.setWorld(world);\n\t\tif (_grindingWorld != null) {\n\t\t\t_grindingWorld.clearReferences();\n\t\t\t_grindingWorld.setMachine(null);\n\t\t}\n\t\tif (this.world instanceof WorldServer) {\n\t\t\t_grindingWorld = new GrindingWorldServer((WorldServer) this.world, this);\n\t\t\t_damageSource.setupGrindingPlayer((WorldServer) this.world);\n\t\t}\n\t}", "timestamp": "2021-10-19T03:56:24.894626Z", "repo_name": "rotkodr3d/MineFactoryReloaded", "path": "/src/main/java/powercrystals/minefactoryreloaded/tile/machine/mobs/TileEntityGrinder.java", "source": "the-stack-v2", "method_name": "setWorld", "class_name": "TileEntityGrinder", "index": 1892, "label": 1}
{"input": "@Test\n\tpublic void whenCreateReeferCabinetShouldReturnCabinet() {\n\t\tList<Cabinet> cabinets = cut.createCabinet(DepartmentType.Reefer);\n\t\t\n\t\tassertThat(cabinets, hasSize(10));\n\t}", "timestamp": "2020-06-05T19:40:47.927589Z", "repo_name": "cternes/R-Manager", "path": "/backend/src/test/java/de/slackspace/rmanager/gameengine/service/CabinetServiceTest.java", "source": "the-stack-v2", "method_name": "whenCreateReeferCabinetShouldReturnCabinet", "class_name": "CabinetServiceTest", "index": 1893, "label": 1}
{"input": "public Criteria andIdIsNotNull() {\r\n            addCriterion(\"id is not null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andIdIsNotNull", "class_name": "GeneratedCriteria", "index": 1894, "label": 1}
{"input": "public void setData(String title, String r1, String r2, String r3, String r4, String r5, String answer) {\n        tvtitle.setText(title);\n        cb1.setText(r1);\n        cb2.setText(r2);\n        cb3.setText(r3);\n        cb4.setText(r4);\n        cb5.setText(r5);\n        cb6.setVisibility(View.GONE);\n        et_other.setVisibility(View.GONE);\n        if (\"1\".equals(answer.substring(0, 1))) {\n            cb1.setChecked(true);\n        }\n        if (\"1\".equals(answer.substring(1, 2))) {\n            cb2.setChecked(true);\n        }\n        if (\"1\".equals(answer.substring(2, 3))) {\n            cb3.setChecked(true);\n        }\n        if (\"1\".equals(answer.substring(3, 4))) {\n            cb4.setChecked(true);\n        }\n        if (\"1\".equals(answer.substring(4, 5))) {\n            cb5.setChecked(true);\n        }\n    }", "timestamp": "2020-04-03T06:11:53.864630Z", "repo_name": "KnnethKong/housekeeper", "path": "/app/src/main/java/com/haiwai/housekeeper/view/View_DTQX_13.java", "source": "the-stack-v2", "method_name": "setData", "class_name": "View_DTQX_13", "index": 1895, "label": 1}
{"input": "@Override\n    public long skip(long n) throws IOException {\n        while ((n > 0) && (readFirstBytes() >= 0)) {\n            n--;\n        }\n        return in.skip(n);\n    }", "timestamp": "2023-08-24T22:10:09.132179Z", "repo_name": "apache/creadur-rat", "path": "/apache-rat-core/src/main/java/org/apache/rat/annotation/AbstractLicenseAppender.java", "source": "the-stack-v2", "method_name": "skip", "class_name": "BOMInputStream", "index": 1896, "label": 1}
{"input": "@java.lang.Override\n  public com.google.cloud.securitycenter.v1.Cvssv3.PrivilegesRequired getPrivilegesRequired() {\n    @SuppressWarnings(\"deprecation\")\n    com.google.cloud.securitycenter.v1.Cvssv3.PrivilegesRequired result =\n        com.google.cloud.securitycenter.v1.Cvssv3.PrivilegesRequired.valueOf(privilegesRequired_);\n    return result == null\n        ? com.google.cloud.securitycenter.v1.Cvssv3.PrivilegesRequired.UNRECOGNIZED\n        : result;\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "getPrivilegesRequired", "class_name": "Cvssv3", "index": 1897, "label": 1}
{"input": "public void setShippingPhone(String shippingPhone) {\n        this.shippingPhone = shippingPhone;\n    }", "timestamp": "2021-01-10T07:10:13.758215Z", "repo_name": "nieshr/xjr", "path": "/src/main/java/com/ynyes/kjxjr/entity/TdOrder.java", "source": "the-stack-v2", "method_name": "setShippingPhone", "class_name": "TdOrder", "index": 1898, "label": 1}
{"input": "public void testBug110060_MethodPattern02() throws CoreException {\n\tsetUpBug110060_MethodPattern();\n\tsearch(\"AMWD\", METHOD, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);\n\tassertSearchResults(\"\");\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_MethodPattern02", "class_name": "JavaSearchBugsTests", "index": 1899, "label": 1}
{"input": "@Override\r\n\tpublic boolean equals(Object obj) {\r\n\t\tif (this == obj)\r\n\t\t\treturn true;\r\n\t\tif (obj == null)\r\n\t\t\treturn false;\r\n\t\tif (getClass() != obj.getClass())\r\n\t\t\treturn false;\r\n\t\tGoalQuestionPK other = (GoalQuestionPK) obj;\r\n\t\tif (goal == null) {\r\n\t\t\tif (other.goal != null)\r\n\t\t\t\treturn false;\r\n\t\t} else if (!goal.equals(other.goal))\r\n\t\t\treturn false;\r\n\t\tif (question == null) {\r\n\t\t\tif (other.question != null)\r\n\t\t\t\treturn false;\r\n\t\t} else if (!question.equals(other.question))\r\n\t\t\treturn false;\r\n\t\treturn true;\r\n\t}", "timestamp": "2021-06-01T11:57:40.566750Z", "repo_name": "PuRoTeam/PuRoGQM", "path": "/src/main/java/it/uniroma2/gqm/model/GoalQuestionPK.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "GoalQuestionPK", "index": 1900, "label": 1}
{"input": "public static BufferedImage createEmptyImage(int width, int height) {\n        BufferedImage res = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);\n        Graphics2D g = (Graphics2D) res.getGraphics();\n        Color c = g.getBackground();\n        g.setBackground(Color.WHITE);\n        g.fillRect(0, 0, width, height);\n        g.setBackground(c);\n        return res;\n    }", "timestamp": "2021-01-01T05:50:45.307287Z", "repo_name": "TaylorPeer/somtooolbox-dendrograms", "path": "/src/core/at/tuwien/ifs/somtoolbox/util/ImageUtils.java", "source": "the-stack-v2", "method_name": "createEmptyImage", "class_name": "ImageUtils", "index": 1901, "label": 1}
{"input": "@Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        \n        View view =  inflater.inflate(R.layout.fragment_request_sent_page, container, false);\n        close_button = (AppCompatButton) view.findViewById(R.id.close_button);\n\n        close_button.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                getActivity().finish();\n            }\n        });\n        return view;\n    }", "timestamp": "2023-09-04T09:53:58.936684Z", "repo_name": "mohan2106/UIDAIAddressUpdate", "path": "/app/src/main/java/com/example/uidaiaddressupdate/requestaddress/RequestSentPage.java", "source": "the-stack-v2", "method_name": "onCreateView", "class_name": "RequestSentPage", "index": 1902, "label": 1}
{"input": "@JavascriptInterface\n    public void notifyInterstitialBackgroundState(final String s) {\n        if (s != null && s.length() > 0) {\n            final AdMarvelActivity adMarvelActivity = (AdMarvelActivity)this.adMarvelActivityReference.get();\n            if (adMarvelActivity != null) {\n                adMarvelActivity.s = s;\n            }\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "notifyInterstitialBackgroundState", "class_name": "AdMarvelWebViewJSInterface", "index": 1903, "label": 1}
{"input": "public Criteria andCuseridNotEqualTo(String value) {\r\n            addCriterion(\"CUSERID <>\", value, \"cuserid\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andCuseridNotEqualTo", "class_name": "GeneratedCriteria", "index": 1904, "label": 1}
{"input": "@Override\n    public void setPath(String path) {\n        if (path == null || (!path.equals(\"\") && !path.startsWith(\"/\"))) {\n            this.path = \"/\" + path;\n            log.warn(sm.getString(\n                    \"standardContext.pathInvalid\", path, this.path));\n        } else {\n            this.path = path;\n        }\n        encodedPath = urlEncoder.encode(this.path);\n        if (getName() == null) {\n            setName(this.path);\n        }\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setPath", "class_name": "StandardContext", "index": 1905, "label": 1}
{"input": "@Override\n    public int getItemCount() {\n        if(businesses != null) {\n            if (businesses.isEmpty()) {\n                return 0;\n            } else {\n                return businesses.size() + 1;\n            }\n        }\n        return 0;\n    }", "timestamp": "2020-04-27T08:23:29.216219Z", "repo_name": "madhavc/HelloSearch", "path": "/app/src/main/java/com/example/hellosearch/ImagesAdapter.java", "source": "the-stack-v2", "method_name": "getItemCount", "class_name": "ImagesAdapter", "index": 1906, "label": 1}
{"input": "public Peca retornaPecaSelecionada(Point mousePosition, ArrayList<Peca> pecas) {\n        Peca pecaRetorno = null;\n        for (Peca peca : pecas) {\n\n            if ((mousePosition.getX() >= peca.getPosition().x)\n                    && (mousePosition.getX() <= peca.getPosition().x + peca.getWidth())\n                    && (mousePosition.getY() >= peca.getPosition().y)\n                    && (mousePosition.getY() <= peca.getPosition().y + peca.getHeight())) {\n\n                System.out.println(\"Peca \" + peca.getId() + \" Selecionada\");\n                pecaRetorno = peca;\n                return pecaRetorno;\n            }\n\n        }\n        return null;\n    }", "timestamp": "2021-01-17T07:28:41.295754Z", "repo_name": "lfnascimento/Dama", "path": "/src/dama/Dama.java", "source": "the-stack-v2", "method_name": "retornaPecaSelecionada", "class_name": "Dama", "index": 1907, "label": 1}
{"input": "public Builder clearUserInteraction() {\n\n      userInteraction_ = 0;\n      onChanged();\n      return this;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "clearUserInteraction", "class_name": "Builder", "index": 1908, "label": 1}
{"input": "private void addShopImg(Shop shop, ImageHolder thumbnail) {\n\t\t\n\t\tString dest = PathUtil.getShopImagePath(shop.getShopId());\n\t\tString shopImgAddr =ImageUtil.generateThumbnail( thumbnail,dest);\n\t\tshop.setShopImg(shopImgAddr);\n\t}", "timestamp": "2020-03-24T20:23:10.895275Z", "repo_name": "dengcong139/o2o", "path": "/src/main/java/com/deng/o2o/service/impl/ShopServiceImpl.java", "source": "the-stack-v2", "method_name": "addShopImg", "class_name": "ShopServiceImpl", "index": 1909, "label": 1}
{"input": "@Override \n        public void supplyIccPuk2ForAppResponse(RadioResponseInfo info, int remainingRetries) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            _hidl_request.writeInt32(remainingRetries);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(5, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "supplyIccPuk2ForAppResponse", "class_name": "Proxy", "index": 1910, "label": 1}
{"input": "public static InboxForwarderTestResult fromJson(String jsonString) throws IOException {\n    return JSON.getGson().fromJson(jsonString, InboxForwarderTestResult.class);\n  }", "timestamp": "2023-06-24T02:46:29.757016Z", "repo_name": "mailslurp/mailslurp-client-java", "path": "/src/main/java/com/mailslurp/models/InboxForwarderTestResult.java", "source": "the-stack-v2", "method_name": "fromJson", "class_name": "InboxForwarderTestResult", "index": 1911, "label": 1}
{"input": "public Authentication getAuthentication(String token) {\n        Claims claims = Jwts.parser()\n            .setSigningKey(secretKey)\n            .parseClaimsJws(token)\n            .getBody();\n\n        Collection<? extends GrantedAuthority> authorities =\n            Arrays.stream(claims.get(AUTHORITIES_KEY).toString().split(\",\"))\n                .map(SimpleGrantedAuthority::new)\n                .collect(Collectors.toList());\n\n        User principal = new User(claims.getSubject(), \"\", authorities);\n\n        return new UsernamePasswordAuthenticationToken(principal, token, authorities);\n    }", "timestamp": "2020-03-17T15:32:32.764375Z", "repo_name": "hartmanjan/jhipsterSampleApplication", "path": "/src/main/java/com/inetpsa/pct00/pct00demo/security/jwt/TokenProvider.java", "source": "the-stack-v2", "method_name": "getAuthentication", "class_name": "TokenProvider", "index": 1912, "label": 1}
{"input": "@Override\r\n    public byte[] toTpm() \r\n    {\r\n        OutByteBuf buf = new OutByteBuf();\r\n        toTpm(buf);\r\n        return buf.buffer();\r\n    }", "timestamp": "2022-11-07T09:56:44.953339Z", "repo_name": "keke8273/TSS.MSR", "path": "/TSS.Java/src/tss/tpm/TPM2B_PUBLIC_KEY_RSA.java", "source": "the-stack-v2", "method_name": "toTpm", "class_name": "TPM2B_PUBLIC_KEY_RSA", "index": 1913, "label": 1}
{"input": "public UpdatePatchBaselineResult withGlobalFilters(PatchFilterGroup globalFilters) {\n        setGlobalFilters(globalFilters);\n        return this;\n    }", "timestamp": "2021-01-25T05:50:39.073013Z", "repo_name": "erbrito/aws-java-sdk", "path": "/aws-java-sdk-ssm/src/main/java/com/amazonaws/services/simplesystemsmanagement/model/UpdatePatchBaselineResult.java", "source": "the-stack-v2", "method_name": "withGlobalFilters", "class_name": "UpdatePatchBaselineResult", "index": 1914, "label": 1}
{"input": "@java.lang.Override\n    public Builder addRepeatedField(\n        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {\n      return super.addRepeatedField(field, value);\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "addRepeatedField", "class_name": "Builder", "index": 1915, "label": 1}
{"input": "@Override\n        public void changeSavedPasswordEntry(int index, String newUsername, String newPassword) {\n            mSavedPasswords.set(index,\n                    new SavedPasswordEntry(\n                            mSavedPasswords.get(index).getUrl(), newUsername, newPassword));\n            updatePasswordLists();\n        }", "timestamp": "2022-12-08T04:12:54.583056Z", "repo_name": "yeahhhhhhhh/chromium_quic", "path": "/src/chrome/android/javatests/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferencesTest.java", "source": "the-stack-v2", "method_name": "changeSavedPasswordEntry", "class_name": "FakePasswordManagerHandler", "index": 1916, "label": 1}
{"input": "private int parseType(XmlPullParser parser) throws ParserException {\r\n      String value = parser.getAttributeValue(null, KEY_TYPE);\r\n      if (value != null) {\r\n        if (KEY_TYPE_AUDIO.equalsIgnoreCase(value)) {\r\n          return C.TRACK_TYPE_AUDIO;\r\n        } else if (KEY_TYPE_VIDEO.equalsIgnoreCase(value)) {\r\n          return C.TRACK_TYPE_VIDEO;\r\n        } else if (KEY_TYPE_TEXT.equalsIgnoreCase(value)) {\r\n          return C.TRACK_TYPE_TEXT;\r\n        } else {\r\n          throw new ParserException(\"Invalid key value[\" + value + \"]\");\r\n        }\r\n      }\r\n      throw new MissingFieldException(KEY_TYPE);\r\n    }", "timestamp": "2020-12-10T15:15:05.202410Z", "repo_name": "AhabweEmmanuel/Marlia", "path": "/TMessagesProj/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java", "source": "the-stack-v2", "method_name": "parseType", "class_name": "StreamIndexParser", "index": 1917, "label": 1}
{"input": "public static void main(String[] args){\n\t\tint[] a = {23,4,76,-7,-4};\n\t\tmerg_helper(a);\n\t\tfor(int m=0 ; m<a.length; m++){\n\t\t\tSystem.out.print(a[m]+\",\");\n\t\t}\n\t}", "timestamp": "2021-01-13T03:13:20.109566Z", "repo_name": "azimshaik/dspract", "path": "/src/com/ds/azim/m_sort.java", "source": "the-stack-v2", "method_name": "main", "class_name": "m_sort", "index": 1918, "label": 1}
{"input": "@Test\n  public void case98() {\n    int[] revenues = { 869, 857, -938, -290, 79, -901, 32, -907, 256, -167, 510, -965, -826, 808, 890, -233, -881, 255, -709, 506, 334, -184, 726, -406, 204, -912, 325, -445, 440, -368, 222, 222, 222, 222, 222, 222, 222, 222, 222, 111, 111, 111, 222, 222, 111, 222, 111, 222, 111, 111 };\n    int k = 2;\n    assertEquals(857.4143047050397, mergersdivtwo.findMaximum(revenues, k), DELTA * 857.4143047050397);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case98", "class_name": "MergersDivTwoTest", "index": 1919, "label": 1}
{"input": "private void addFontTriplet(StringBuffer result, FontTriplet fontTriplet) {\n\t    result.append(\"<font-triplet name=\\\"\" + fontTriplet.getName() + \"\\\"\"\n\t\t\t\t+ \" style=\\\"\" + fontTriplet.getStyle() + \"\\\"\"\n\t\t\t\t+ \" weight=\\\"\" + weightToCSS2FontWeight(fontTriplet.getWeight()) + \"\\\"\"\n\t\t\t\t\t\t+ \"/>\" );\t\t\n\t}", "timestamp": "2020-04-03T02:05:51.304271Z", "repo_name": "ermanishks/docx4j", "path": "/src/main/java/org/docx4j/convert/out/pdf/viaXSLFO/Conversion.java", "source": "the-stack-v2", "method_name": "addFontTriplet", "class_name": "Conversion", "index": 1920, "label": 1}
{"input": "public void drawAIPlayers(int numberOfAIPlayers) {\n        gamePanel.drawAIPlayers(numberOfAIPlayers);\n    }", "timestamp": "2021-05-03T16:14:34.164836Z", "repo_name": "stephb23/CP2406Assignment", "path": "/src/gui/GameFrame.java", "source": "the-stack-v2", "method_name": "drawAIPlayers", "class_name": "GameFrame", "index": 1921, "label": 1}
{"input": "@Override\n      public Insert set(String parameterName, Object value) {\n        return (Insert) super.set(parameterName, value);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "set", "class_name": "Insert", "index": 1922, "label": 1}
{"input": "@Override\n    public Function<Map<String, Object>, PlaceholderData> fromMap()\n    {\n        return map -> new PlaceholderData();\n    }", "timestamp": "2020-07-22T11:27:15.670230Z", "repo_name": "CrevolutionRoboticsProgramming/VisionCommunicatorPlugin", "path": "/src/main/java/org/frc2851/data/type/PlaceholderType.java", "source": "the-stack-v2", "method_name": "fromMap", "class_name": "PlaceholderType", "index": 1923, "label": 1}
{"input": "public Criteria andVdef8NotLike(String value) {\r\n            addCriterion(\"VDEF8 not like\", value, \"vdef8\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef8NotLike", "class_name": "GeneratedCriteria", "index": 1924, "label": 1}
{"input": "public void setInvoiceContent(String invoiceContent) {\n        this.invoiceContent = invoiceContent;\n    }", "timestamp": "2021-01-10T07:10:13.758215Z", "repo_name": "nieshr/xjr", "path": "/src/main/java/com/ynyes/kjxjr/entity/TdOrder.java", "source": "the-stack-v2", "method_name": "setInvoiceContent", "class_name": "TdOrder", "index": 1925, "label": 1}
{"input": "public void setFuture(final ScheduledFuture<?> future) {\r\n\t\tqtThreadFuture = Objects.requireNonNull(future, \"future is null\");\r\n\t}", "timestamp": "2023-07-03T22:35:13.204983Z", "repo_name": "sdankbar/jaqumal", "path": "/library/src/main/java/com/github/sdankbar/qml/persistence/QMLThreadPersistanceTask.java", "source": "the-stack-v2", "method_name": "setFuture", "class_name": "QMLThreadPersistanceTask", "index": 1926, "label": 1}
{"input": "public Criteria andVdef20LessThan(String value) {\r\n            addCriterion(\"VDEF20 <\", value, \"vdef20\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef20LessThan", "class_name": "GeneratedCriteria", "index": 1927, "label": 1}
{"input": "@RequestMapping(\"upload3\")\n    public String upload3(@RequestParam(\"photo\") MultipartFile[] photo){\n        System.out.println(photo[0].getOriginalFilename());\n        System.out.println(photo[1].getOriginalFilename());\n        return \"index\";\n    }", "timestamp": "2022-06-24T13:13:32.340799Z", "repo_name": "ssn9/springboot_319", "path": "/src/main/java/com/aaa/controller/UploadController.java", "source": "the-stack-v2", "method_name": "upload3", "class_name": "UploadController", "index": 1928, "label": 1}
{"input": "public final FieldDeclarationContext fieldDeclaration() throws RecognitionException {\n\t\tFieldDeclarationContext _localctx = new FieldDeclarationContext(_ctx, getState());\n\t\tenterRule(_localctx, 50, RULE_fieldDeclaration);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(453);\n\t\t\ttype();\n\t\t\tsetState(454);\n\t\t\tvariableDeclarators();\n\t\t\tsetState(455);\n\t\t\tmatch(T__1);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "fieldDeclaration", "class_name": "JavaParser", "index": 1929, "label": 1}
{"input": "public void testBug211872_ws() throws CoreException, IOException {\n\taddLibraryEntry(JAVA_PROJECT, \"/JavaSearchBugs/lib/b211872_ws.jar\", false);\n\ttry {\n\t\tIType type = getClassFile(\"JavaSearchBugs\", \"lib/b211872_ws.jar\", \"test\", \"Bug.class\").getType();\n\t\tsearch(type, REFERENCES);\n\t\tassertSearchResults(\n\t\t\t\"lib/b211872_ws.jar pack.Test EXACT_MATCH\\n\" +\n\t\t\t\"lib/b211872_ws.jar pack.Test EXACT_MATCH\\n\" +\n\t\t\t\"lib/b211872_ws.jar pack.TestMembers.field EXACT_MATCH\\n\" +\n\t\t\t\"lib/b211872_ws.jar void pack.TestMembers.method(java.lang.Object, java.lang.String) EXACT_MATCH\\n\" +\n\t\t\t\"lib/b211872_ws.jar pack.TestMembers$Member EXACT_MATCH\"\n\t\t);\n\t}\n\tfinally {\n\t\tremoveClasspathEntry(JAVA_PROJECT, new Path(\"/JavaSearchBugs/lib/b211872_ws.jar\"));\n\t}\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug211872_ws", "class_name": "JavaSearchBugsTests", "index": 1930, "label": 1}
{"input": "public final DocumentsGetDocumentsResponse next(Onshape onshape) throws OnshapeException {\n    return (next==null ? null : onshape.get(next, DocumentsGetDocumentsResponse.class));\n  }", "timestamp": "2022-11-23T18:17:24.783431Z", "repo_name": "onshape-public/java-client", "path": "/src/main/java/com/onshape/api/responses/DocumentsGetDocumentsResponse.java", "source": "the-stack-v2", "method_name": "next", "class_name": "DocumentsGetDocumentsResponse", "index": 1931, "label": 1}
{"input": "public static Vector3D getMaximum(Vector3D vec1, Vector3D vec2)\n    {\n        return new Vector3D(Math.max(vec1.x, vec2.x), Math.max(vec1.y, vec2.y), Math.max(vec1.z, vec2.z));\n    }", "timestamp": "2023-06-11T12:13:10.631017Z", "repo_name": "gjz010-Archive/VoxelGuest", "path": "/src/main/java/com/thevoxelbox/voxelguest/regions/Vector3D.java", "source": "the-stack-v2", "method_name": "getMaximum", "class_name": "Vector3D", "index": 1932, "label": 1}
{"input": "@Override\n    protected void onStop() {\n        Log.d(TAG,\"onStop is called\");\n        mGoogleApiClient.disconnect();\n        super.onStop();\n    }", "timestamp": "2021-01-10T05:30:07.032885Z", "repo_name": "pdroid84/LocationByPlacesAPI", "path": "/app/src/main/java/com/pdroid84/deb/locationbyplacesapi/MainActivity.java", "source": "the-stack-v2", "method_name": "onStop", "class_name": "MainActivity", "index": 1933, "label": 1}
{"input": "private static double TimeClip(double d)\n    {\n        if (d != d ||\n            d == Double.POSITIVE_INFINITY ||\n            d == Double.NEGATIVE_INFINITY ||\n            Math.abs(d) > HalfTimeDomain)\n        {\n            return ScriptRuntime.NaN;\n        }\n        if (d > 0.0)\n            return Math.floor(d + 0.);\n        else\n            return Math.ceil(d + 0.);\n    }", "timestamp": "2016-09-05T17:02:01.575534Z", "repo_name": "thegreatape/slim", "path": "/yuicompressor-2.4.2/rhino1_6R7/src/org/yuimozilla/javascript/NativeDate.java", "source": "the-stack-v2", "method_name": "TimeClip", "class_name": "NativeDate", "index": 1934, "label": 1}
{"input": "@Override\n    public void setIgnoreAnnotations(boolean ignoreAnnotations) {\n        boolean oldIgnoreAnnotations = this.ignoreAnnotations;\n        this.ignoreAnnotations = ignoreAnnotations;\n        support.firePropertyChange(\"ignoreAnnotations\", oldIgnoreAnnotations,\n                this.ignoreAnnotations);\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setIgnoreAnnotations", "class_name": "StandardContext", "index": 1935, "label": 1}
{"input": "public static SharedPreferences getPref(Context context){\n\t\treturn PreferenceManager.getDefaultSharedPreferences(context);\n\t}", "timestamp": "2021-01-10T05:58:16.052064Z", "repo_name": "orasystems/OrasystemsUtilLibrary", "path": "/src/main/java/com/orasystems/libs/utils/preferences/PreferencesUtil.java", "source": "the-stack-v2", "method_name": "getPref", "class_name": "PreferencesUtil", "index": 1936, "label": 1}
{"input": "@Override\n      public Insert setUploadType(java.lang.String uploadType) {\n        return (Insert) super.setUploadType(uploadType);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setUploadType", "class_name": "Insert", "index": 1937, "label": 1}
{"input": "public  void add22(String item, String _delimiter, Bitmap bm) {\n\t\tjListItemRow info = new jListItemRow(controls.activity);\n\t\tdelimiter = _delimiter; \n\t\tinfo.label = item;\n\t\tinfo.delimiter=  delimiter;\n\t\tinfo.leftDelimiter = leftDelimiter;\n\t\tinfo.rightDelimiter = rightDelimiter;\t\t\n\t\tinfo.id = alist.size();\n\t\tinfo.checked = false;\n\t\tinfo.widget = widgetItem;\n\t\tinfo.widgetText= widgetText;\n\t\tinfo.checked = false;\n\t\tinfo.textSize= textSize;\n\t\tinfo.textColor= textColor;\n\t\tinfo.widgetTextColor= widgetTextColor;\n\t\tinfo.bmp = bm;\n\n\t\tinfo.textDecorated = textDecorated;\n\t\tinfo.itemLayout =itemLayout;\n\t\tinfo.textSizeDecorated = textSizeDecorated;\n\t\tinfo.textAlign = textAlign;\n\t\tinfo.textPosition = textPosition;\n\t\t\n\t\tinfo.typeFace = this.typeFace;\n\t\tinfo.tagString = \"\";\n\n\t\talist.add(info);\n\t\taadapter.notifyDataSetChanged();\n\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "add22", "class_name": "jListView", "index": 1938, "label": 1}
{"input": "@java.lang.Override\n    public int getAttackComplexityValue() {\n      return attackComplexity_;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "getAttackComplexityValue", "class_name": "Builder", "index": 1939, "label": 1}
{"input": "@java.lang.Override\n    public Builder setField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        java.lang.Object value) {\n      return super.setField(field, value);\n    }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "setField", "class_name": "Builder", "index": 1940, "label": 1}
{"input": "protected ResponseEntity<?> newWebrtcConnection(Session session, ConnectionProperties connectionProperties) {\n\n\t\tfinal String REQUEST_PATH = \"/sessions/\" + session.getSessionId() + \"/connection\";\n\n\t\t\n\t\t\t\t\tHttpStatus.NOT_FOUND);\n\t\t}\n\t}", "timestamp": "2023-03-08T08:12:59.242585Z", "repo_name": "CJK406/openvidu", "path": "/openvidu-server/src/main/java/io/openvidu/server/rest/SessionRestController.java", "source": "the-stack-v2", "method_name": "newWebrtcConnection", "class_name": "SessionRestController", "index": 1941, "label": 1}
{"input": "@Test\n    public void test2x3() {\n        int[][] inMatrix  = { {1, 2, 3}, {4, 5, 6} };\n        int[][] expOutput = { {1, 2, 3}, {6,5,4} };\n        assertTrue(testEqual(expOutput, MatrixHelixMorph.helix(inMatrix)));\n    }", "timestamp": "2023-03-28T05:11:03.621410Z", "repo_name": "Piyush1077/Junit-Assignment", "path": "/JavaJunitAssignment-master/src/test/java/helix/MatrixHelixMorphTest.java", "source": "the-stack-v2", "method_name": "test2x3", "class_name": "MatrixHelixMorphTest", "index": 1942, "label": 1}
{"input": "public static void main(final String[] args) {\n         final SimulationDrawerTest battleDrawerTest = new SimulationDrawerTest();\n \n         final List<Strategy> strategies = new ArrayList<>();\n         strategies.add( new TestStrategy() );\n         strategies.add( new TestStrategy() );\n \n         final Simulation battle = new Simulation(strategies, 800, 600, 4000);\n \n         battleDrawerTest.setBattle(battle);\n \n        battleDrawerTest.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n         battleDrawerTest.setVisible(true);\n         battleDrawerTest.setSize(500,500);\n \n         battle.run();\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/2/2_72e68e61b02e49c520d242215ab3aa42c54da42a/SimulationDrawerTest/2_72e68e61b02e49c520d242215ab3aa42c54da42a_SimulationDrawerTest_s.java", "source": "the-stack-v2", "method_name": "main", "class_name": "SimulationDrawerTest", "index": 1943, "label": 1}
{"input": "@RequestMapping(value=\"/updateinfo\")\n    public ModelAndView updateUser(Cux_users cux_users, HttpSession session){\n        ModelAndView modelAndView = new ModelAndView(\"info\");\n        String user_name = (String)session.getAttribute(\"user_name\");\n        System.out.println(\"开始更新\");\n        userdao.updateuser_name(cux_users);\n        System.out.println(\"更新完毕\");\n        \n        modelAndView.addObject(\"user_name\",cux_users.getUser_name());\n        modelAndView.addObject(\"password\",cux_users.getPassword());\n        modelAndView.addObject(\"sex\",cux_users.getSex());\n        modelAndView.addObject(\"age\",cux_users.getAge());\n        modelAndView.addObject(\"phone_number\",cux_users.getPhone_number());\n        modelAndView.addObject(\"info\"0,cux_users.getCreation_date());\n        modelAndView.addObject(\"info\"1,cux_users.getLast_update_date());\n        modelAndView.addObject(\"info\"2,cux_users.getComments());\n        System.out.println(\"info\"3);\n        return modelAndView;\n    }", "timestamp": "2020-03-25T04:00:18.175902Z", "repo_name": "abcnull/RoughWebProject", "path": "/src/main/java/com/example/transaction/controller/Control.java", "source": "the-stack-v2", "method_name": "updateUser", "class_name": "Control", "index": 1944, "label": 1}
{"input": "public int getWindState(){\n        try{\n            SQLiteDatabase db = this.getReadableDatabase();\n            Cursor res =  db.rawQuery( \"select * from prefs \",null );\n            res.moveToFirst();\n            return res.getInt(res.getColumnIndex(DBHelper.PREFS_COLUMN_WINDSTATE));}\n        catch (Exception e ){Log.d(\"BTWeatherget-WindState\", String.valueOf(e));}\n        return 1;\n    }", "timestamp": "2020-03-22T13:09:56.343529Z", "repo_name": "JamesHarley/BTWeatherStation", "path": "/app/src/main/java/gnosisdevelopment/arduinobtweatherstation/DBHelper.java", "source": "the-stack-v2", "method_name": "getWindState", "class_name": "DBHelper", "index": 1945, "label": 1}
{"input": "public Criteria andVdef10Between(String value1, String value2) {\r\n            addCriterion(\"VDEF10 between\", value1, value2, \"vdef10\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef10Between", "class_name": "GeneratedCriteria", "index": 1946, "label": 1}
{"input": "@Override\n    public Field<String[]> field13() {\n        return TypeMeaningWord.WORD_TYPE_CODES;\n    }", "timestamp": "2020-12-23T02:30:44.911257Z", "repo_name": "tonisnurk/ekilex", "path": "/ekilex-app/src/main/java/eki/ekilex/data/db/udt/records/TypeMeaningWordRecord.java", "source": "the-stack-v2", "method_name": "field13", "class_name": "TypeMeaningWordRecord", "index": 1947, "label": 1}
{"input": "public JSONObject getReportDatasetData(String tmpMappingId, JSONObject paramJson) {\n\t\tJSONObject reportDataJson = new JSONObject();\n\n\t\tReportTmpDataSetMappingQuery query = new ReportTmpDataSetMappingQuery();\n\t\tquery.setTmpMappingId(tmpMappingId);\n\t\tList<ReportTmpDataSetMapping> dataSets = this.reportTmpDataSetMappingService.list(query);\n\t\tif (CollectionUtils.isNotEmpty(dataSets)) {\n\t\t\tfor (ReportTmpDataSetMapping dataSet : dataSets) {\n\t\t\t\tString dataSetId = dataSet.getMappingDataSetId();\n\t\t\t\tString dataSetCode = dataSet.getDataSetCode();\n\t\t\t\tif (StringUtils.isNotBlank(dataSetId)) {\n\t\t\t\t\tDataSetBuilder builder = new DataSetBuilder();\n\t\t\t\t\t\n\t\t\t\t\tObject rows = builder.getJsonArray(dataSetId, paramJson.getJSONObject(dataSetCode));\n\t\t\t\t\treportDataJson.put(dataSetCode, rows);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn reportDataJson;\n\t}", "timestamp": "2021-05-08T16:38:30.406098Z", "repo_name": "eosite/openyourarm", "path": "/glaf-web/src/main/java/com/glaf/report/core/service/ReportTmpMappingServiceImpl.java", "source": "the-stack-v2", "method_name": "getReportDatasetData", "class_name": "ReportTmpMappingServiceImpl", "index": 1948, "label": 1}
{"input": "private static boolean hasSnowNeighbours(IBlockAccess blockAccess, BlockPos pos) {\r\n        Block blockSnow = Blocks.snow_layer;\r\n        return blockAccess.getBlockState(pos.north()).getBlock() != blockSnow && blockAccess.getBlockState(pos.south()).getBlock() != blockSnow && blockAccess.getBlockState(pos.west()).getBlock() != blockSnow && blockAccess.getBlockState(pos.east()).getBlock() != blockSnow ? false : blockAccess.getBlockState(pos.down()).getBlock().isOpaqueCube();\r\n    }", "timestamp": "2020-04-02T18:47:52.047731Z", "repo_name": "MicrowaveClient/Clarinet", "path": "/src/net/minecraft/src/BetterSnow.java", "source": "the-stack-v2", "method_name": "hasSnowNeighbours", "class_name": "BetterSnow", "index": 1949, "label": 1}
{"input": "public static void main(String[] args){\n        File file = new File(\"C:\\\\Users\\\\raksh\\\\IdeaProjects\\\\Practice\\\\src\\\\protect_oiler\\\\p022_names.txt\");\n\n    }", "timestamp": "2020-04-13T02:05:36.248753Z", "repo_name": "rakshendra/Practice", "path": "/src/protect_oiler/Problem22.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Problem22", "index": 1950, "label": 1}
{"input": "@Test\n    public void registerBadRequest() {\n        \n        final String invalidContent = \"{ \\\"$id\\\": \\\"https://example.com/person.schema.json\\\", \\\"$schema\\\": \\\"https://json-schema.org/draft/2020-12/schema\\\", \\\"title\\\": 5\\\"Person2\\\", \\\"type\\\": \\\"object\\\", \\\"properties\\\": { \\\"firstName\\\": { \\\"type\\\": \\\"string\\\", \\\"description\\\": \\\"The person's first name.\\\" }, \\\"lastName\\\": { \\\"type\\\": \\\"string\\\", \\\"description\\\": \\\"The person's last name.\\\" }, \\\"age\\\": { \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\", \\\"type\\\": \\\"integer\\\", \\\"minimum\\\": 0 } } }\";\n        final String schemaName = testResourceNamer.randomName(\"sch\", RESOURCE_LENGTH);\n        final SchemaRegistryAsyncClient client1 = builder.buildAsyncClient();\n\n        \n        testBase.registerBadRequest(client1, schemaName, invalidContent);\n    }", "timestamp": "2023-09-01T00:13:48.628043Z", "repo_name": "alzimmermsft/azure-sdk-for-java", "path": "/sdk/schemaregistry/azure-data-schemaregistry/src/test/java/com/azure/data/schemaregistry/SchemaRegistryAsyncClientJsonTests.java", "source": "the-stack-v2", "method_name": "registerBadRequest", "class_name": "SchemaRegistryAsyncClientJsonTests", "index": 1951, "label": 1}
{"input": "@Override\r\n    public TelegramDispatch findOneByChatId(String chatId) {\r\n        return findAll()\r\n                .stream()\r\n                .filter(telegramDispatch -> telegramDispatch.getChatId().equals(chatId))\r\n                .findFirst().get();\r\n    }", "timestamp": "2021-07-18T17:14:51.250343Z", "repo_name": "rtolik/LoalityProgram", "path": "/web/src/main/java/photopolis/loalityprogram/service/impl/TelegramDispatchServiceImpl.java", "source": "the-stack-v2", "method_name": "findOneByChatId", "class_name": "TelegramDispatchServiceImpl", "index": 1952, "label": 1}
{"input": "private void evictMobFilesIfNecessary(Set<String> mobFileNames, int limit) {\n    if (mobFileNames.size() < limit) {\n      return;\n    }\n    int index = 0;\n    int evict = limit / 2;\n    Iterator<String> fileNamesItr = mobFileNames.iterator();\n    while (index < evict && fileNamesItr.hasNext()) {\n      fileNamesItr.next();\n      fileNamesItr.remove();\n      index++;\n    }\n  }", "timestamp": "2021-07-01T04:05:15.247476Z", "repo_name": "canglang1973/hbase", "path": "/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java", "source": "the-stack-v2", "method_name": "evictMobFilesIfNecessary", "class_name": "HFilePrettyPrinter", "index": 1953, "label": 1}
{"input": "public void testBug110060_MethodPattern08_SamePartCount() throws CoreException {\n\tsetUpBug110060_MethodPattern();\n\tsearch(\"aMW1D\", METHOD, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);\n\tassertSearchResults(\n\t\t\"src/b110060/Test.java void b110060.Test.aMethodWith1Digit() [aMethodWith1Digit] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java void b110060.Test.testReferences() [aMethodWith1Digit()] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_MethodPattern08_SamePartCount", "class_name": "JavaSearchBugsTests", "index": 1954, "label": 1}
{"input": "@Override\r\n  public void eUnset(int featureID)\r\n  {\r\n    switch (featureID)\r\n    {\r\n      case AsmetaLPackage.FUNCTION_INITIALIZATION__INIZIALIZED_FUNCTION_NAME:\r\n        setInizializedFunctionName(INIZIALIZED_FUNCTION_NAME_EDEFAULT);\r\n        return;\r\n      case AsmetaLPackage.FUNCTION_INITIALIZATION__VARIABLES:\r\n        getVariables().clear();\r\n        return;\r\n      case AsmetaLPackage.FUNCTION_INITIALIZATION__DOMAIN:\r\n        getDomain().clear();\r\n        return;\r\n      case AsmetaLPackage.FUNCTION_INITIALIZATION__BODY:\r\n        setBody((Term)null);\r\n        return;\r\n    }\r\n    super.eUnset(featureID);\r\n  }", "timestamp": "2023-05-25T04:51:25.190702Z", "repo_name": "Favio-Quinteros/Quinteros-WebEditor", "path": "/org.xtext.asmetal.parent/org.xtext.asmetal/src/main/xtext-gen/org/xtext/asmetal/asmetaL/impl/FunctionInitializationImpl.java", "source": "the-stack-v2", "method_name": "eUnset", "class_name": "FunctionInitializationImpl", "index": 1955, "label": 1}
{"input": "@Override \n        public void getFacilityLockForAppResponse(RadioResponseInfo info, int response) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            _hidl_request.writeInt32(response);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(40, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "getFacilityLockForAppResponse", "class_name": "Proxy", "index": 1956, "label": 1}
{"input": "public static void main(String[] args) {\n    TreeNode root = new TreeNode(1);\n    root.left = new TreeNode(2);\n    root.left.right = new TreeNode(5);\n    root.right = new TreeNode(3);\n\n    Solution s = new Solution();\n    System.out.println(Arrays.toString(s.binaryTreePaths(root).toArray()));\n  }", "timestamp": "2023-08-09T20:45:29.740162Z", "repo_name": "jmazala/leetcode", "path": "/binary-tree-paths/Solution.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Solution", "index": 1957, "label": 1}
{"input": "@Test\n    public void verifyEmptyAgent() throws Exception {\n        val context = new MockRequestContext();\n        val request = new MockHttpServletRequest();\n        val response = new MockHttpServletResponse();\n        context.setExternalContext(new ServletExternalContext(new MockServletContext(), request, response));\n        assertEquals(CasWebflowConstants.TRANSITION_ID_ERROR, negociateSpnegoAction.execute(context).getId());\n\n        request.addHeader(\"User-Agent\", \"UnknownBrowser\");\n        assertEquals(CasWebflowConstants.TRANSITION_ID_ERROR, negociateSpnegoAction.execute(context).getId());\n    }", "timestamp": "2023-01-07T08:34:26.200966Z", "repo_name": "fogbeam/cas_mirror", "path": "/support/cas-server-support-spnego-webflow/src/test/java/org/apereo/cas/web/flow/SpnegoNegotiateCredentialsActionTests.java", "source": "the-stack-v2", "method_name": "verifyEmptyAgent", "class_name": "SpnegoNegotiateCredentialsActionTests", "index": 1958, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n\tpublic ActionForward toDjjcfkView(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\t\tString APPLICATIONID = ParamUtil.get(request, \"APPLICATIONID\");\n\t\tMap params = new HashMap();\n\t\tParamUtil.putStr2Map(request, \"APPLICATIONID\", params);\n\t\tMap entry = zfdjService.djjcfkload(APPLICATIONID);\n\n\t\trequest.setAttribute(\"rst\", entry);\n\t\treturn mapping.findForward(\"djjcfkview\");\n\t}", "timestamp": "2021-01-12T15:41:00.492001Z", "repo_name": "MoonLuckSir/MoonRepository", "path": "/src/java/com/yitong/app/action/judicial/dxzpzfdj/ZfdjAction.java", "source": "the-stack-v2", "method_name": "toDjjcfkView", "class_name": "ZfdjAction", "index": 1959, "label": 1}
{"input": "public static List<ProductSale> get_products_sales() {\n\t  List<ProductSale> products_list = Ebean.find(ProductSale.class).findList();\n\n\t  return products_list;\n  }", "timestamp": "2021-01-10T19:17:11.751315Z", "repo_name": "Neozaru/Play_Shop", "path": "/app/controllers/Application.java", "source": "the-stack-v2", "method_name": "get_products_sales", "class_name": "Application", "index": 1960, "label": 1}
{"input": "@Transactional\n\tpublic Response addAttachment(long id, Request request) {\n\t\tResponse response = new Response();\n\t\tMap<String, Object> data = request.getData();\n\t\tMap<String, Object> map = Maps.newHashMap();\n\n\t\tModel fileBean = (Model) JPA.find(MetaFile.class, Long.valueOf(data.get(\"id\").toString()));\n\n\t\tmap.put(\"metaFile\", fileBean);\n\t\tmap.put(\"objectId\", id);\n\t\tmap.put(\"objectName\", request.getModel());\n\n\t\tObject attBean = Mapper.toBean(MetaAttachment.class, map);\n\t\tJPA.manage( (Model) attBean);\n\n\t\tresponse.setData(attBean);\n\t\tresponse.setStatus(Response.STATUS_SUCCESS);\n\n\t\treturn response;\n\t}", "timestamp": "2020-03-14T23:38:40.669916Z", "repo_name": "zuloloxi/adk3_demo3", "path": "/logss/axelor-core-342save/src/main/java/com/axelor/meta/service/MetaService.java", "source": "the-stack-v2", "method_name": "addAttachment", "class_name": "MetaService", "index": 1961, "label": 1}
{"input": "@Override\n\tpublic void saveOrUpdate(Category category) throws ServiceException {\n\t\t\n\t\t\n\t\tInputStream inputStream = category.getFile();\n\t\tInputContentFile cmsContentImage = new InputContentFile();\n        cmsContentImage.setFileName( category.getCategoryImage() );\n        cmsContentImage.setFile( inputStream );\n        cmsContentImage.setFileContentType(FileContentType.IMAGE);\n        contentService.addContentFile(category.getMerchantStore().getCode(), cmsContentImage);\n\t\t\n\t\t\n\t\tif(category.getId()!=null && category.getId()>0) {\n\t\t\t\n\t\t\tsuper.update(category);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tsuper.save(category);\n\t\t\t\n\t\t}\n\t\t\n\t}", "timestamp": "2021-05-11T22:33:13.512901Z", "repo_name": "joshLV/laVetrina", "path": "/sm-core/src/main/java/com/salesmanager/core/business/catalog/category/service/CategoryServiceImpl.java", "source": "the-stack-v2", "method_name": "saveOrUpdate", "class_name": "CategoryServiceImpl", "index": 1962, "label": 1}
{"input": "@Override\n    public int getItemViewType(int position) {\n        if (position < businesses.size()) {\n            return TYPE_IMAGE;\n        } else {\n            return TYPE_MORE_BUTTON;\n        }\n    }", "timestamp": "2020-04-27T08:23:29.216219Z", "repo_name": "madhavc/HelloSearch", "path": "/app/src/main/java/com/example/hellosearch/ImagesAdapter.java", "source": "the-stack-v2", "method_name": "getItemViewType", "class_name": "ImagesAdapter", "index": 1963, "label": 1}
{"input": "public final VariableModifiersContext variableModifiers() throws RecognitionException {\n\t\tVariableModifiersContext _localctx = new VariableModifiersContext(_ctx, getState());\n\t\tenterRule(_localctx, 166, RULE_variableModifiers);\n\t\tint _la;\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(884);\n\t\t\t_errHandler.sync(this);\n\t\t\t_la = _input.LA(1);\n\t\t\twhile (_la==T__13 || _la==T__48) {\n\t\t\t\t{\n\t\t\t\t{\n\t\t\t\tsetState(881);\n\t\t\t\tvariableModifier();\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetState(886);\n\t\t\t\t_errHandler.sync(this);\n\t\t\t\t_la = _input.LA(1);\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "variableModifiers", "class_name": "JavaParser", "index": 1964, "label": 1}
{"input": "public Criteria andVdef7LessThan(String value) {\r\n            addCriterion(\"VDEF7 <\", value, \"vdef7\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef7LessThan", "class_name": "GeneratedCriteria", "index": 1965, "label": 1}
{"input": "public void Comprados(){\n        try {\n            tabp.setModel(upDAO.getTabelaComprados());\n        } catch (Exception ex) {\n            Logger.getLogger(TelaEscolhaPato.class.getName()).log(Level.SEVERE, null, ex);\n        }\n    }", "timestamp": "2020-03-19T08:54:56.873611Z", "repo_name": "Brunohvc/TCCPatos", "path": "/Tcc/src/br/senai/sc/Telas/TelaEscolhaPato.java", "source": "the-stack-v2", "method_name": "Comprados", "class_name": "TelaEscolhaPato", "index": 1966, "label": 1}
{"input": "private static int SecFromTime(double t)\n    {\n        double result;\n        result = Math.floor(t / msPerSecond) % SecondsPerMinute;\n        if (result < 0)\n            result += SecondsPerMinute;\n        return (int) result;\n    }", "timestamp": "2016-09-05T17:02:01.575534Z", "repo_name": "thegreatape/slim", "path": "/yuicompressor-2.4.2/rhino1_6R7/src/org/yuimozilla/javascript/NativeDate.java", "source": "the-stack-v2", "method_name": "SecFromTime", "class_name": "NativeDate", "index": 1967, "label": 1}
{"input": "@Override\r\n  public EList<Domain> getDomain()\r\n  {\r\n    if (domain == null)\r\n    {\r\n      domain = new EObjectContainmentEList<Domain>(Domain.class, this, AsmetaLPackage.FUNCTION_INITIALIZATION__DOMAIN);\r\n    }\r\n    return domain;\r\n  }", "timestamp": "2023-05-25T04:51:25.190702Z", "repo_name": "Favio-Quinteros/Quinteros-WebEditor", "path": "/org.xtext.asmetal.parent/org.xtext.asmetal/src/main/xtext-gen/org/xtext/asmetal/asmetaL/impl/FunctionInitializationImpl.java", "source": "the-stack-v2", "method_name": "getDomain", "class_name": "FunctionInitializationImpl", "index": 1968, "label": 1}
{"input": "private void prepare(String path) throws ReadOnlyFileException, IOException, TagException, InvalidAudioFrameException, CannotReadException {\n\n\n\n\n        this.fileName = path.substring(path.lastIndexOf('/') + 1);\n        String musicName = this.fileName.substring(0, this.fileName.lastIndexOf('.'));\n        BottomLeft left = (BottomLeft) MainFrame.getBottom().getFileName();\n        left.setTitle(musicName);\n        this.length = mp3Length(path);\n        byte[] coverByte = getMp3Img(path);\n        ByteArrayInputStream bais = new ByteArrayInputStream(coverByte);\n        cover = ImageIO.read(bais);\n        ViewPanel view = MainFrame.getView();\n        view.getCover().setCover(cover);\n        File mp3 = new File(path);\n        FileInputStream fileInputStream = new FileInputStream(mp3);\n        this.musicBytes = streamToByte(fileInputStream); \n        this.bufferedInputStream = new BufferedInputStream(Objects.requireNonNull(byteToStream(this.musicBytes)));\n    }", "timestamp": "2023-04-15T13:53:26.916349Z", "repo_name": "wang-kui-die/MediaPlayer", "path": "/src/main/java/com/player/Player/AudioPlayer.java", "source": "the-stack-v2", "method_name": "prepare", "class_name": "AudioPlayer", "index": 1969, "label": 1}
{"input": "@Override\r\n    public DvrScheduleManager getDvrScheduleManager() {\r\n        return mDvrScheduleManager;\r\n    }", "timestamp": "2020-03-31T22:30:02.802799Z", "repo_name": "johnjcool/TV", "path": "/app/src/main/java/com/android/tv/TvApplication.java", "source": "the-stack-v2", "method_name": "getDvrScheduleManager", "class_name": "TvApplication", "index": 1970, "label": 1}
{"input": "@Override\n    public void getData(final int page, int type) {\n        BaseApi.getRetrofit()\n                .create(StoreApi.class)\n                .goodsList(page, type)\n                .compose(RxSchedulers.<BaseModel<StoreModel>>compose())\n                .subscribe(new BaseObserver<StoreModel>() {\n                    @Override\n                    protected void onHandleSuccess(StoreModel model, String msg, int code) {\n                        if (page == 1)\n                            view.refreshData(model);\n                        else if (model.getData().size()>0)\n                            view.loadMoreData(model,1);\n                        else\n                            view.loadMoreData(model,2);\n\n\n                    }\n\n                    @Override\n                    protected void onHandleError(String msg) {\n                        view.error(msg);\n                    }\n                });\n\n\n    }", "timestamp": "2021-05-05T20:37:21.070922Z", "repo_name": "zhengyiheng123/susong_special", "path": "/app/src/main/java/com/xyd/susong/store/StorePresenter.java", "source": "the-stack-v2", "method_name": "getData", "class_name": "StorePresenter", "index": 1971, "label": 1}
{"input": "private boolean find() {\n        for (int[] BOM : BOMS) {\n            if (matches(BOM)) {\n                return true;\n            }\n        }\n        return false;\n    }", "timestamp": "2023-08-24T22:10:09.132179Z", "repo_name": "apache/creadur-rat", "path": "/apache-rat-core/src/main/java/org/apache/rat/annotation/AbstractLicenseAppender.java", "source": "the-stack-v2", "method_name": "find", "class_name": "BOMInputStream", "index": 1972, "label": 1}
{"input": "@Override\r\n\tprotected void setUp() throws Exception {\r\n\t\tsuper.setUp();\r\n\t\tsetActivityIntent(new Intent());\r\n\t}", "timestamp": "2016-09-06T15:54:26.692099Z", "repo_name": "jacknoerror/lehuoRepo", "path": "/Test/com/lehuo/ui/ScoreMarketActivityTest.java", "source": "the-stack-v2", "method_name": "setUp", "class_name": "ScoreMarketActivityTest", "index": 1973, "label": 1}
{"input": "@BeforeClass\n    void classSetup() throws Exception {\n        executor = OrderedScheduler.newSchedulerBuilder().numThreads(1).name(\"ZookeeperCacheTest\").build();\n        scheduledExecutor = Executors.newSingleThreadScheduledExecutor();\n    }", "timestamp": "2021-06-22T04:11:29.154786Z", "repo_name": "kafkaesque-io/pulsar", "path": "/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZookeeperCacheTest.java", "source": "the-stack-v2", "method_name": "classSetup", "class_name": "ZookeeperCacheTest", "index": 1974, "label": 1}
{"input": "@Override\r\n\t\tpublic boolean canInsertItem(int index, ItemStack stack, @Nullable Direction direction) {\r\n\t\t\treturn this.isItemValidForSlot(index, stack);\r\n\t\t}", "timestamp": "2023-08-24T17:39:59.738030Z", "repo_name": "ChrisCraddock/Crates-and-Containers", "path": "/src/main/java/net/mcreator/blocktesting/block/SnowyRedContainer2Block.java", "source": "the-stack-v2", "method_name": "canInsertItem", "class_name": "CustomTileEntity", "index": 1975, "label": 1}
{"input": "@Override\n  public EmailAddressParsedResult parse(Result result) {\n    String rawText = getMassagedText(result);\n    if (!rawText.startsWith(\"MATMSG:\")) {\n      return null;\n    }\n    String[] tos = matchDoCoMoPrefixedField(\"TO:\", rawText, true);\n    if (tos == null) {\n      return null;\n    }\n    for (String to : tos) {\n      if (!isBasicallyValidEmailAddress(to)) {\n        return null;\n      }\n    }\n    String subject = matchSingleDoCoMoPrefixedField(\"SUB:\", rawText, false);\n    String body = matchSingleDoCoMoPrefixedField(\"BODY:\", rawText, false);\n    return new EmailAddressParsedResult(tos, null, null, subject, body);\n  }", "timestamp": "2023-02-15T20:34:56.254858Z", "repo_name": "hxxyyangyong/rover-android", "path": "/sdk/src/main/java/io/rover/shaded/zxing/com/google/zxing/client/result/EmailDoCoMoResultParser.java", "source": "the-stack-v2", "method_name": "parse", "class_name": "EmailDoCoMoResultParser", "index": 1976, "label": 1}
{"input": "public BlockAssignment getBlockAssignment(int index)\n  {\n    BlockAssignment aBlockAssignment = blockAssignments.get(index);\n    return aBlockAssignment;\n  }", "timestamp": "2020-09-27T06:19:22.075701Z", "repo_name": "mustafain117/Block-Breaker-Game", "path": "/Block223v2/src/ca/mcgill/ecse223/block/model/Game.java", "source": "the-stack-v2", "method_name": "getBlockAssignment", "class_name": "Game", "index": 1977, "label": 1}
{"input": "public ExpressionListContext expressionList() {\n\t\t\treturn getRuleContext(ExpressionListContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "expressionList", "class_name": "ForUpdateContext", "index": 1978, "label": 1}
{"input": "List<Student> getStudents(File file, FileFormat format) throws Exception {\n\t\treturn format.unmarshal(file);\n\t}", "timestamp": "2021-01-08T06:21:28.526534Z", "repo_name": "hukai9200/design-patterns-exercises", "path": "/DesignPatternsExercisesSolutions/src/com/orangeandbronze/strategy/alt/StudentService.java", "source": "the-stack-v2", "method_name": "getStudents", "class_name": "StudentService", "index": 1979, "label": 1}
{"input": "public Vector3D subtract(Vector3D vec)\n    {\n        return new Vector3D(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n    }", "timestamp": "2023-06-11T12:13:10.631017Z", "repo_name": "gjz010-Archive/VoxelGuest", "path": "/src/main/java/com/thevoxelbox/voxelguest/regions/Vector3D.java", "source": "the-stack-v2", "method_name": "subtract", "class_name": "Vector3D", "index": 1980, "label": 1}
{"input": "@GraphProperty(interceptor = HybrisEnumValueToStringConverter.class)\n\tpublic void setErrorMode(final String errorMode)\n\t{\n\t\tthis.modifiedPropsSet.add(\"errorMode\");\n\t\tthis.errorMode = errorMode;\n\t}", "timestamp": "2022-11-28T12:15:32.049256Z", "repo_name": "BaggaShivanshu2/hybris-bookstore-tutorial", "path": "/hybris/bin/ext-platform-optional/platformwebservices/custom/src/de/hybris/platform/cronjob/customdto/CronJobDTO.java", "source": "the-stack-v2", "method_name": "setErrorMode", "class_name": "CronJobDTO", "index": 1981, "label": 1}
{"input": "@Override\n    @PostMapping(value = \"/repository/{participationId}/commit\", produces = MediaType.APPLICATION_JSON_VALUE)\n    @FeatureToggle(Feature.PROGRAMMING_EXERCISES)\n    public ResponseEntity<Void> commitChanges(@PathVariable Long participationId) {\n        return super.commitChanges(participationId);\n    }", "timestamp": "2023-08-17T07:15:10.039202Z", "repo_name": "raphaelal/Artemis", "path": "/src/main/java/de/tum/in/www1/artemis/web/rest/repository/RepositoryProgrammingExerciseParticipationResource.java", "source": "the-stack-v2", "method_name": "commitChanges", "class_name": "RepositoryProgrammingExerciseParticipationResource", "index": 1982, "label": 1}
{"input": "protected void drawDataSet(double x, double y, double scale, int size) {\r\n\t\tGraphics2D graphics = getGraphics();\r\n\r\n\t\t\n\t\tgraphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\r\n\t\tgraphics.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\r\n\r\n\t\t\n\t\tgraphics.scale(scale, scale);\r\n\r\n\t\t\n\t\tgraphics.translate(-x, -y);\r\n\r\n\t\tgraphics.fillRect((int) (x), (int) (y), (int) (size / scale), (int) (size / scale));\r\n\r\n\t\tRectangle rect = new Rectangle((int) x - 10, (int) y - 10, (int) (size / scale) + 20, (int) (size / scale) + 20);\r\n\r\n\t\tfor (Sequence sequence : dataSet.getSequences()) {\r\n\t\t\tif (rect.contains(sequence.getLocation()))\r\n\t\t\t\tdrawSequence(sequence);\r\n\t\t}\r\n\t}", "timestamp": "2023-04-12T19:09:50.801225Z", "repo_name": "ra2003/VizBin", "path": "/src/interface/VizBin/src/lu/uni/lcsb/vizbin/graphics/GraphicsConverter.java", "source": "the-stack-v2", "method_name": "drawDataSet", "class_name": "GraphicsConverter", "index": 1983, "label": 1}
{"input": "public void setGuidelines(int guidelinesMode) {\n        mGuidelinesMode = guidelinesMode;\n        invalidate(); \n    }", "timestamp": "2022-05-06T21:27:51.136578Z", "repo_name": "Jelly0726/JellyBase", "path": "/library/baselibrary/src/main/java/com/jelly/baselibrary/cropper/CropImageView.java", "source": "the-stack-v2", "method_name": "setGuidelines", "class_name": "CropImageView", "index": 1984, "label": 1}
{"input": "private static void displayIncorrectResponse(SecureRandom rand) {\n\nString incorrect[] = { \"No. Please try again.\", \"Wrong. Try once more.\", \"Don't give up!\", \"No. Keep trying.\" };\n\n\n\nint index = rand.nextInt(incorrect.length);\n\nSystem.out.println(incorrect[index]);\n\n}", "timestamp": "2021-01-15T06:45:38.681176Z", "repo_name": "aryanjharwal/jharwal_assignment3", "path": "/jharwal_problem1/src/jharwal_problem1/CAI5.java", "source": "the-stack-v2", "method_name": "displayIncorrectResponse", "class_name": "CAI5", "index": 1985, "label": 1}
{"input": "@Test\n \tpublic final void testReadLocalSchema() throws MalformedURLException, ClassCastException, ClassNotFoundException, InstantiationException, IllegalAccessException {\n \t\tString url = \"file://\" + this.getClass().getResource(\"./HydroPhysicalwaters.xsd\").getFile();\n \t\tgmlHandler.setSchemaUrl(url);\n \t\t\n \t\t\n \t\tgmlHandler.readSchema();\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/1/1_53fde7739b00630f9767bb7163ae554d28cbb320/GmlHandlerTest/1_53fde7739b00630f9767bb7163ae554d28cbb320_GmlHandlerTest_t.java", "source": "the-stack-v2", "method_name": "testReadLocalSchema", "class_name": "GmlHandlerTest", "index": 1986, "label": 1}
{"input": "@Test\n  public void jsr107ExpiryGetsRegistered() {\n    MutableConfiguration<Object, Object> configuration = new MutableConfiguration<>();\n    RecordingFactory<CreatedExpiryPolicy> factory = factoryOf(new CreatedExpiryPolicy(javax.cache.expiry.Duration.FIVE_MINUTES));\n    configuration.setExpiryPolicyFactory(factory);\n\n    ConfigurationMerger.ConfigHolder<Object, Object> configHolder = merger.mergeConfigurations(\"Cache\", configuration);\n\n    assertThat(factory.called, is(true));\n    Expiry resourcesExpiry = configHolder.cacheResources.getExpiryPolicy();\n    Expiry configExpiry = configHolder.cacheConfiguration.getExpiry();\n    assertThat(configExpiry, sameInstance(resourcesExpiry));\n  }", "timestamp": "2021-08-23T22:08:57.063756Z", "repo_name": "leespy/ehcache3", "path": "/107/src/test/java/org/ehcache/jsr107/ConfigurationMergerTest.java", "source": "the-stack-v2", "method_name": "jsr107ExpiryGetsRegistered", "class_name": "ConfigurationMergerTest", "index": 1987, "label": 1}
{"input": "private void sleep(long millis) {\n        try {\n            Thread.sleep(millis);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }", "timestamp": "2020-03-22T09:17:09.151284Z", "repo_name": "biteeniu/java-base-example", "path": "/redis-delay-queue/src/main/java/io/biteeniu/redis/delay/queue/Consumer.java", "source": "the-stack-v2", "method_name": "sleep", "class_name": "Consumer", "index": 1988, "label": 1}
{"input": "private void jBDelKeyPressed(java.awt.event.KeyEvent evt) {\n        \n        \n        vKeyPreEsc(evt);\n        \n    }", "timestamp": "2020-06-10T12:22:45.426839Z", "repo_name": "njmube/SOSDev", "path": "/Electricos/src/cats/SerNotVent.java", "source": "the-stack-v2", "method_name": "jBDelKeyPressed", "class_name": "SerNotVent", "index": 1989, "label": 1}
{"input": "public ReportTmpMappingEntity getReportTmpDatasetMapping(String tmpMappingId) {\n\t\tReportTmpMappingEntity reportTmpMappingEntity = new ReportTmpMappingEntity();\n\t\tMap<String, String> dataSetMappingMap = reportTmpDataSetMappingService\n\t\t\t\t.getReportTmpDataSetMappingMap(tmpMappingId);\n\t\treportTmpMappingEntity.setDatasetMapping(dataSetMappingMap);\n\t\tMap<String, Map<String, String>> colMappingMap = reportTmpColMappingService\n\t\t\t\t.getReportTmpColMappingMap(tmpMappingId);\n\t\treportTmpMappingEntity.setDatasetColMapping(colMappingMap);\n\t\treturn reportTmpMappingEntity;\n\t}", "timestamp": "2021-05-08T16:38:30.406098Z", "repo_name": "eosite/openyourarm", "path": "/glaf-web/src/main/java/com/glaf/report/core/service/ReportTmpMappingServiceImpl.java", "source": "the-stack-v2", "method_name": "getReportTmpDatasetMapping", "class_name": "ReportTmpMappingServiceImpl", "index": 1990, "label": 1}
{"input": "private List<LogFile> getAllFilesInDirectory(LogFileDirectory logFileDir, File path)\r\n\t{\r\n\t\tReadOrder order = ReadOrder.DESC;\r\n\t\tFilterKeyword filterKeyword = new FilterKeyword(keyword);\r\n\t\tList<LogFile> logFileList;\r\n\t\t\r\n\t\tif (orderBy == 0)\r\n\t\t{\r\n\t\t\torder = ReadOrder.ASC;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif (nLines > 0)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tlogFileList = logFileDir.getAllFiles(path, nLines, order, filterKeyword);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t\r\n\t\t\tlogFileList = logFileDir.getAllFiles(path, order, filterKeyword);\r\n\t\t}\r\n\t\t\r\n\t\treturn logFileList;\r\n\t}", "timestamp": "2023-04-05T19:49:19.305775Z", "repo_name": "tecalex01/logfiles", "path": "/src/main/java/com/logfiles/entrypoint/LogFileResource.java", "source": "the-stack-v2", "method_name": "getAllFilesInDirectory", "class_name": "LogFileResource", "index": 1991, "label": 1}
{"input": "@DeleteMapping(\"/{id}\")\n    @ResponseStatus(HttpStatus.NO_CONTENT)\n    public boolean delete(@PathVariable(\"id\") int idReservation) {\n        return\n                reservationServices.deleteReservation(idReservation);\n    }", "timestamp": "2023-08-25T17:19:03.155974Z", "repo_name": "RedmiRei/Reto3_4", "path": "/src/main/java/com/usa/ciclo3/reto3/web/ReservationControllerWeb.java", "source": "the-stack-v2", "method_name": "delete", "class_name": "ReservationControllerWeb", "index": 1992, "label": 1}
{"input": "private void renderScore(Painter g){\n\t\tg.setFont(Typeface.SANS_SERIF, 25);\n\t\tg.setColor(Color.GREEN);\n\t\tg.drawString(\"\"+playerScore, 20, 30);\n\t}", "timestamp": "2020-05-15T20:09:09.580480Z", "repo_name": "wcmaclean/home-repo", "path": "/android/experiments/SpaceMermaid/src/com/toymoon/game/state/PlayState.java", "source": "the-stack-v2", "method_name": "renderScore", "class_name": "PlayState", "index": 1993, "label": 1}
{"input": "public Criteria andVdef10GreaterThan(String value) {\r\n            addCriterion(\"VDEF10 >\", value, \"vdef10\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef10GreaterThan", "class_name": "GeneratedCriteria", "index": 1994, "label": 1}
{"input": "@Override \n        public void getAvailableNetworksResponse(RadioResponseInfo info, ArrayList<OperatorInfo> networkInfos) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            OperatorInfo.writeVectorToParcel(_hidl_request, networkInfos);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(46, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "getAvailableNetworksResponse", "class_name": "Proxy", "index": 1995, "label": 1}
{"input": "public void setFans_total(String fans_total) {\n                this.fans_total = fans_total;\n            }", "timestamp": "2021-01-13T07:12:09.987566Z", "repo_name": "acmlgogo/one_kotlin", "path": "/app/src/main/java/com/storm/cftest/base/Question.java", "source": "the-stack-v2", "method_name": "setFans_total", "class_name": "AnswererBean", "index": 1996, "label": 1}
{"input": "private void saveAsFile(Frame_class f1) {\n        if (!lentest()) {\n            showErrorDialog(\"There is no Text  to Save\");\n        } else {\n            String filename;\n            saveDialog.setVisible(true);\n            filename = saveDialog.getFile();\n\n            if (filename != null) {\n                filename = check(filename);\n                if (write(filename)) {\n                    fileName = filename;\n                    f1.setTitle(\" Text Editor 1.0 By  Rajagopal Neelakantan  : \" + heading + \" : \" + fileName + \"                    \" + st);\n\n                }\n            }\n\n            tx1.requestFocus();\n        }\n\n    }", "timestamp": "2020-05-06T15:49:29.551449Z", "repo_name": "gokcse/Go-Cloud", "path": "/Go Cloud Source Code/Netbeans 6.1 - Virtual Machine/CloudComputingServer/src/org/cit/CloudComputing/T_Editor.java", "source": "the-stack-v2", "method_name": "saveAsFile", "class_name": "Frame_class", "index": 1997, "label": 1}
{"input": "public Criteria andUserIdLessThanOrEqualTo(Integer value) {\n            addCriterion(\"user_id <=\", value, \"userId\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andUserIdLessThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 1998, "label": 1}
{"input": "public boolean match(SimpleType node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 1999, "label": 1}
{"input": "@Override \n        public void sendBurstDtmfResponse(RadioResponseInfo info) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(76, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "sendBurstDtmfResponse", "class_name": "Proxy", "index": 2000, "label": 1}
{"input": "public Criteria andOwnerIdLessThan(Long value) {\r\n            addCriterion(\"owner_id <\", value, \"ownerId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andOwnerIdLessThan", "class_name": "GeneratedCriteria", "index": 2001, "label": 1}
{"input": "public static String encode(byte[] data) {\n\t\tchar[] out = new char[((data.length + 2) / 3) * 4];\n\t\tfor (int i = 0, index = 0; i < data.length; i += 3, index += 4) {\n\t\t\tboolean quad = false;\n\t\t\tboolean trip = false;\n\n\t\t\tint val = (0xFF & data[i]);\n\t\t\tval <<= 8;\n\t\t\tif ((i + 1) < data.length) {\n\t\t\t\tval |= (0xFF & data[i + 1]);\n\t\t\t\ttrip = true;\n\t\t\t}\n\t\t\tval <<= 8;\n\t\t\tif ((i + 2) < data.length) {\n\t\t\t\tval |= (0xFF & data[i + 2]);\n\t\t\t\tquad = true;\n\t\t\t}\n\t\t\tout[index + 3] = alphabet[(quad ? (val & 0x3F) : 64)];\n\t\t\tval >>= 6;\n\t\t\tout[index + 2] = alphabet[(trip ? (val & 0x3F) : 64)];\n\t\t\tval >>= 6;\n\t\t\tout[index + 1] = alphabet[val & 0x3F];\n\t\t\tval >>= 6;\n\t\t\tout[index + 0] = alphabet[val & 0x3F];\n\t\t}\n\t\tif (out != null) {\n\t\t\treturn new String(out);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}", "timestamp": "2022-12-16T23:22:16.021917Z", "repo_name": "shaochanglei/ep-core", "path": "/src/main/java/com/zhrenjie04/alex/util/Base64Util.java", "source": "the-stack-v2", "method_name": "encode", "class_name": "Base64Util", "index": 2002, "label": 1}
{"input": "@GetMapping(\"/report-clients\")\n    public List<CounterClients> getClients() {\n        return reservationServices.getTopClients();\n\n\n    }", "timestamp": "2023-08-25T17:19:03.155974Z", "repo_name": "RedmiRei/Reto3_4", "path": "/src/main/java/com/usa/ciclo3/reto3/web/ReservationControllerWeb.java", "source": "the-stack-v2", "method_name": "getClients", "class_name": "ReservationControllerWeb", "index": 2003, "label": 1}
{"input": "private void jBTab1ActionPerformed(java.awt.event.ActionEvent evt) {\n\n        \n        Star.vMaxTab(jTab);       \n\n    }", "timestamp": "2020-06-10T12:22:45.426839Z", "repo_name": "njmube/SOSDev", "path": "/Electricos/src/cats/SerNotVent.java", "source": "the-stack-v2", "method_name": "jBTab1ActionPerformed", "class_name": "SerNotVent", "index": 2004, "label": 1}
{"input": "private void initData(){\n        for (int i = 0; i < 20; i++){\n            data.add(\"Item\"+i);\n        }\n    }", "timestamp": "2020-03-23T19:40:26.009149Z", "repo_name": "mars0925/RecyclerViewRefresh", "path": "/app/src/main/java/shd/com/myapplication/MainActivity.java", "source": "the-stack-v2", "method_name": "initData", "class_name": "MainActivity", "index": 2005, "label": 1}
{"input": "private void setUpBug82208() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b82208/Test.java\",\n\t\t\"package b82208;\\n\" +\n\t\t\"interface B82208_I {}\\n\" +\n\t\t\"enum B82208_E {}\\n\" +\n\t\t\"@interface B82208_A {}\\n\" +\n\t\t\"public class B82208 {}\\n\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "setUpBug82208", "class_name": "JavaSearchBugsTests", "index": 2006, "label": 1}
{"input": "public void adicionarItens(List<ItemPedido> itens) {\n\t\tthis.itens = itens;\n\t\tthis.itens.forEach(i -> i.setPedido(this));\n\t}", "timestamp": "2021-01-13T05:23:47.336037Z", "repo_name": "Beleboni/spring-project", "path": "/src/main/java/com/algaworks/brewer/model/Pedido.java", "source": "the-stack-v2", "method_name": "adicionarItens", "class_name": "Pedido", "index": 2007, "label": 1}
{"input": "public void testBug84727b() throws CoreException {\n\tthis.resultCollector.showRule();\n\tsetUpBug84727();\n\tIMethod[] methods = this.workingCopies[0].getType(\"A\").getMethods();\n\tassertEquals(\"Invalid number of methods\", 2, methods.length);\n\tsearch(methods[1], REFERENCES);\n\tassertSearchResults(\n\t\t\"src/b84727/X.java void b84727.X.foo() [getXYZ(\\\"\\\")] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug84727b", "class_name": "JavaSearchBugsTests", "index": 2008, "label": 1}
{"input": "@Test\n  public void case35() {\n    int[] revenues = { 550, -651, -50, -652, -36, -189, 35, 295, -57, 7, 5, -57, -79, -657, -652, -49, 5, -652, 11, 550, 247, -59, 253, -10, -818, 42, 8, -948, 246, -649, -648, -9, -7, -6, 253, 250, -1, -68, -68, -242, 689 };\n    int k = 14;\n    assertEquals(241.18469387755104, mergersdivtwo.findMaximum(revenues, k), DELTA * 241.18469387755104);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case35", "class_name": "MergersDivTwoTest", "index": 2009, "label": 1}
{"input": "public int searchInsert(int[] A, int target) {\n        int res = 0;\n        if(A == null || A.length == 0) return 0;\n        \n        \n        int left = 0;\n        int right = A.length - 1;\n        while(left <= right){\n            int mid = (left + right) / 2;\n            if(A[mid] == target) return mid;\n            else if(A[mid] > target) right = mid - 1;\n            else left = mid + 1;\n        }\n        return left;\n    }", "timestamp": "2021-01-10T20:06:47.575068Z", "repo_name": "gongzitao/algorithm-problem", "path": "/search insert position.java", "source": "the-stack-v2", "method_name": "searchInsert", "class_name": "Solution", "index": 2010, "label": 1}
{"input": "@Override\r\n    public boolean unscheduleJob(TriggerKey triggerKey) {\r\n        boolean opResult = true;\r\n        try {\r\n            opResult = clusterScheduler.checkExists(triggerKey);\r\n            if (opResult) {\r\n                opResult = clusterScheduler.unscheduleJob(triggerKey);\r\n            }\r\n        } catch (SchedulerException e) {\r\n            logger.error(e.getMessage(), e);\r\n            opResult = false;\r\n        }\r\n        return opResult;\r\n    }", "timestamp": "2023-05-19T18:05:27.974761Z", "repo_name": "MarkYaot/cachecloud", "path": "/cachecloud-web/src/main/java/com/sohu/cache/schedule/impl/SchedulerCenterImpl.java", "source": "the-stack-v2", "method_name": "unscheduleJob", "class_name": "SchedulerCenterImpl", "index": 2011, "label": 1}
{"input": "protected QueueFragment getQueueFragment() {\n        return (QueueFragment)getSupportFragmentManager().findFragmentById(R.id.queueFragment);\n    }", "timestamp": "2020-04-13T03:12:46.332070Z", "repo_name": "Forsakenrox/Eleven", "path": "/src/main/java/org/lineageos/eleven/ui/activities/SlidingPanelActivity.java", "source": "the-stack-v2", "method_name": "getQueueFragment", "class_name": "SlidingPanelActivity", "index": 2012, "label": 1}
{"input": "public boolean NumeoPrimo(){\n        int cont = 0;\n        for (int i = 1; i <= num; i++) {\n            if (num % i == 0) {\n\n                cont++;\n            }\n        }\n        return cont == 2; \n    }", "timestamp": "2023-04-02T16:30:40.882770Z", "repo_name": "SebastianCP95/Pr-ctica_ENDES_GIT", "path": "/Numero.java", "source": "the-stack-v2", "method_name": "NumeoPrimo", "class_name": "Numero", "index": 2013, "label": 1}
{"input": "private static void swapNumbers(int prev, int next, int[] array) {\n\t\tint temp;\n\t\ttemp = array[prev];\n\t\tarray[prev] = array[next];\n\t\tarray[next] = temp;\n\t}", "timestamp": "2021-01-21T17:45:58.823354Z", "repo_name": "voleynik/lab-java", "path": "/src/lab/sortpackage/BubbleSort.java", "source": "the-stack-v2", "method_name": "swapNumbers", "class_name": "BubbleSort", "index": 2014, "label": 1}
{"input": "@Override\n    public void deleteByKey(String... keys) {\n        spannerTemplate.delete(REPOSITORY_CLASS, Key.of(keys));\n    }", "timestamp": "2022-06-09T18:31:42.193080Z", "repo_name": "yuliiakorabelska/data-jdbc", "path": "/src/main/java/com/korabelska/demo/repository/impl/DoctorRepositoryImpl.java", "source": "the-stack-v2", "method_name": "deleteByKey", "class_name": "DoctorRepositoryImpl", "index": 2015, "label": 1}
{"input": "@Override\n        protected long beforeAppend(DecoratedKey decoratedKey)\n        {\n            return dataFile.position();\n        }", "timestamp": "2022-05-31T23:56:44.066378Z", "repo_name": "ealonsodb/cassandra", "path": "/test/unit/org/apache/cassandra/db/ScrubTest.java", "source": "the-stack-v2", "method_name": "beforeAppend", "class_name": "TestWriter", "index": 2016, "label": 1}
{"input": "public EnumTest enumInteger(EnumIntegerEnum enumInteger) {\n    this.enumInteger = enumInteger;\n    return this;\n  }", "timestamp": "2023-03-07T19:55:29.765168Z", "repo_name": "docusign/old_swagger-codegen", "path": "/samples/client/petstore/java/okhttp-gson-parcelableModel/src/main/java/io/swagger/client/model/EnumTest.java", "source": "the-stack-v2", "method_name": "enumInteger", "class_name": "EnumTest", "index": 2017, "label": 1}
{"input": "public static void main(String arg[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n =sc.nextInt();\n        int s=0,r=0;\n        while(n>1)\n        {\n            r=n%10;\n            s=s/10;\n            n=(r*r)+(s*s);\n        }\n            if(n==1)\n            {\n                System.out.println(\"HAPPY NUMBER\");\n            }\n            else{\n                System.out.println(\"NO HAPPY NUMBER\");\n            }\n        \n    }", "timestamp": "2021-01-25T08:07:50.063794Z", "repo_name": "vidhy15/vidhya1", "path": "/Happy.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Happy", "index": 2018, "label": 1}
{"input": "@Override\n        public boolean getUseDeveloperSupport() {\n          return BuildConfig.DEBUG;\n        }", "timestamp": "2022-12-28T17:24:06.222261Z", "repo_name": "crowdbotics-apps/smiles-21366", "path": "/android/app/src/main/java/com/smiles_21366/MainApplication.java", "source": "the-stack-v2", "method_name": "getUseDeveloperSupport", "class_name": "MainApplication", "index": 2019, "label": 1}
{"input": "private void resetAddSettings() {\n        cb_type.getSelectionModel().selectFirst();\n        tf_name.clear(); tf_ean.clear(); tf_exp_date.clear(); tf_quantity.clear();\n    }", "timestamp": "2021-01-09T20:46:21.815125Z", "repo_name": "GiveMeMyMoney/SIwZ5", "path": "/src/controller/ResourcesController.java", "source": "the-stack-v2", "method_name": "resetAddSettings", "class_name": "ResourcesController", "index": 2020, "label": 1}
{"input": "@Test\n\tpublic void testLoop() throws Exception {\n\t\t\n\t\tTBoxReasoner dag = TBoxReasonerImpl.create(onto);\n\t}", "timestamp": "2021-09-09T03:36:14.054981Z", "repo_name": "anaolicosta/ontop", "path": "/quest-owlapi3/src/test/java/it/unibz/inf/ontop/quest/dag/DAGLoopTest.java", "source": "the-stack-v2", "method_name": "testLoop", "class_name": "DAGLoopTest", "index": 2021, "label": 1}
{"input": "private void checkOrderByNulls(CalciteAssert.Config clone) {\n    checkOrderByDescNullsFirst(clone);\n    checkOrderByNullsFirst(clone);\n    checkOrderByDescNullsLast(clone);\n    checkOrderByNullsLast(clone);\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "checkOrderByNulls", "class_name": "JdbcTest", "index": 2022, "label": 1}
{"input": "public void globalParameterControlChange(int[] slothpath, long param,\n            long value) {\n    }", "timestamp": "2022-12-10T03:47:06.173067Z", "repo_name": "HectorRicardo/gervill-control", "path": "/output/src/gervill/com/sun/media/sound/SoftLimiter.java", "source": "the-stack-v2", "method_name": "globalParameterControlChange", "class_name": "SoftLimiter", "index": 2023, "label": 1}
{"input": "@Override\n    public GlossaryViewHolder<T> create(ViewGroup parent) {\n        return mFactory.create(parent);\n    }", "timestamp": "2021-01-10T16:44:18.794113Z", "repo_name": "Kritarie/Glossator", "path": "/glossator/src/main/java/com/kritarie/glossator/binder/FactoryBinder.java", "source": "the-stack-v2", "method_name": "create", "class_name": "FactoryBinder", "index": 2024, "label": 1}
{"input": "@Override\n      public Insert setFields(java.lang.String fields) {\n        return (Insert) super.setFields(fields);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setFields", "class_name": "Insert", "index": 2025, "label": 1}
{"input": "private void removeCommanders()\n\t{\n\t\tif ((_commanders != null) && !_commanders.isEmpty())\n\t\t{\n\t\t\t\n\t\t\tfor (L2Spawn spawn : _commanders)\n\t\t\t{\n\t\t\t\tif (spawn != null)\n\t\t\t\t{\n\t\t\t\t\tspawn.stopRespawn();\n\t\t\t\t\tif (spawn.getLastSpawn() != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tspawn.getLastSpawn().deleteMe();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t_commanders.clear();\n\t\t}\n\t}", "timestamp": "2021-01-10T03:42:04.091432Z", "repo_name": "soultobe/L2JOlivia_EpicEdition", "path": "/java/com/l2jolivia/gameserver/model/entity/FortSiege.java", "source": "the-stack-v2", "method_name": "removeCommanders", "class_name": "FortSiege", "index": 2026, "label": 1}
{"input": "public List<County9> loadCounty(String cityPyName){\n        List<County9> list = new ArrayList<>();\n        Cursor cursor = db.query(\"County\", null, \"city_pyname = ?\", new String[]{cityPyName}, null, null, null);\n        if(cursor.moveToFirst()){\n            do{\n                County9 county = new County9();\n                county.setId(cursor.getInt(cursor.getColumnIndex(\"id\")));\n                county.setCountyName(cursor.getString(cursor.getColumnIndex(\"county_name\")));\n                county.setCountyWeatherCode(cursor.getString(cursor.getColumnIndex(\"county_weather_code\")));\n                county.setCityPyName(cursor.getString(cursor.getColumnIndex(\"city_pyname\")));\n                list.add(county);\n            }while (cursor.moveToNext());\n        }\n        return list;\n    }", "timestamp": "2021-01-01T04:30:52.824953Z", "repo_name": "YJWWZHANG/XDWeather", "path": "/src/main/java/com/zqbweather/app/model9/XDWeatherDB.java", "source": "the-stack-v2", "method_name": "loadCounty", "class_name": "XDWeatherDB", "index": 2027, "label": 1}
{"input": "@Test\n    public void testScrubOneRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n        Keyspace keyspace = Keyspace.open(KEYSPACE);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);\n        cfs.clearUnsafe();\n\n        \n        fillCF(cfs, 1);\n        assertOrderedAll(cfs, 1);\n\n        CompactionManager.instance.performScrub(cfs, false, true, false, 2);\n\n        \n        assertOrderedAll(cfs, 1);\n    }", "timestamp": "2022-05-31T23:56:44.066378Z", "repo_name": "ealonsodb/cassandra", "path": "/test/unit/org/apache/cassandra/db/ScrubTest.java", "source": "the-stack-v2", "method_name": "testScrubOneRow", "class_name": "ScrubTest", "index": 2028, "label": 1}
{"input": "public static void assertOrderedEquals(@NotNull int[] actual, @NotNull int[] expected) {\n    if (actual.length != expected.length) {\n      fail(\"Expected size: \"+expected.length+\"; actual: \"+actual.length+\"\\nexpected: \"+Arrays.toString(expected)+\"\\nactual  : \"+Arrays.toString(actual));\n    }\n    for (int i = 0; i < actual.length; i++) {\n      int a = actual[i];\n      int e = expected[i];\n      assertEquals(\"not equals at index: \"+i, e, a);\n    }\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "assertOrderedEquals", "class_name": "UsefulTestCase", "index": 2029, "label": 1}
{"input": "private String popisVeci(){\n        String vracenyText = \"věci:\";\n        for (String nazev : veci.keySet()) {\n            vracenyText += \" \" + nazev;\n        }\n        return vracenyText;\n    }", "timestamp": "2021-04-06T00:49:51.527463Z", "repo_name": "stepankalensky/mojeAdventura", "path": "/src/main/java/com/github/stepankalensky/mojeAdventura/logika/Prostor.java", "source": "the-stack-v2", "method_name": "popisVeci", "class_name": "Prostor", "index": 2030, "label": 1}
{"input": "public static void drawBorderedRectReliant(float x2, float y2, float x1, float y1, float lineWidth, int inside, int border)\n  {\n    enableGL2D();\n    drawRect(x2, y2, x1, y1, inside);\n    glColor(border);\n    GL11.glEnable(3042);\n    GL11.glDisable(3553);\n    GL11.glBlendFunc(770, 771);\n    GL11.glLineWidth(lineWidth);\n    GL11.glBegin(3);\n    GL11.glVertex2f(x2, y2);\n    GL11.glVertex2f(x2, y1);\n    GL11.glVertex2f(x1, y1);\n    GL11.glVertex2f(x1, y2);\n    GL11.glVertex2f(x2, y2);\n    GL11.glEnd();\n    GL11.glEnable(3553);\n    GL11.glDisable(3042);\n    disableGL2D();\n  }", "timestamp": "2023-07-23T11:39:57.368099Z", "repo_name": "SuperS123/SpicyClient", "path": "/minecraft/info/spicyclient/ui/Jello/RenderSystem.java", "source": "the-stack-v2", "method_name": "drawBorderedRectReliant", "class_name": "RenderSystem", "index": 2031, "label": 1}
{"input": "@Override\r\n    public void registerObserver(Observer observer) {\r\n        if(observer != null) {\r\n            this.registeredObservers.add(observer);\r\n        }\r\n    }", "timestamp": "2020-05-17T23:05:08.022297Z", "repo_name": "TrueIchiro/SS4", "path": "/SWP4VO/Java programs/SWP4_NIEDERMAYR_UE02/Übung02/Beispiel_01/Blocks/Implementations/DifferentialBlock.java", "source": "the-stack-v2", "method_name": "registerObserver", "class_name": "DifferentialBlock", "index": 2032, "label": 1}
{"input": "@PostMapping\n    public Result add(@RequestBody Album album){\n        albumService.add(album);\n        return new Result(true,StatusCode.OK,\"添加成功\");\n    }", "timestamp": "2023-02-18T11:24:34.921036Z", "repo_name": "LoveRabbit007/mangguo", "path": "/mangguo_service/mangguo_service_goods/src/main/java/com/mangguo/goods/controller/AlbumController.java", "source": "the-stack-v2", "method_name": "add", "class_name": "AlbumController", "index": 2033, "label": 1}
{"input": "public void testBug97120() throws CoreException {\n\tIType type = getClassFile(\"JavaSearchBugs\", getExternalJCLPathString(\"1.5\"), \"java.lang\", \"Throwable.class\").getType();\n\tIJavaSearchScope scope = SearchEngine.createHierarchyScope(type);\n\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();\n\tnew SearchEngine().searchAllTypeNames(\n\t\tnull,\n\t\tSearchPattern.R_EXACT_MATCH,\n\t\t\"E*\".toCharArray(),\n\t\tSearchPattern.R_PATTERN_MATCH,\n\t\tTYPE,\n\t\tscope,\n\t\trequestor,\n\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,\n\t\tnull\n\t);\n\tassertSearchResults(\n\t\t\"Unexpected all type names\",\n\t\t\"java.lang.Error\\n\" +\n\t\t\"java.lang.Exception\",\n\t\trequestor\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug97120", "class_name": "JavaSearchBugsTests", "index": 2034, "label": 1}
{"input": "public CompletableFuture<Void> closeSession(SessionId sessionId) {\n    RaftProxyState state = sessions.get(sessionId.id());\n    if (state == null) {\n      return Futures.exceptionalFuture(new RaftException.UnknownSession(\"Unknown session: \" + sessionId));\n    }\n\n    log.info(\"Closing session {}\", sessionId);\n    CloseSessionRequest request = CloseSessionRequest.newBuilder()\n        .withSession(sessionId.id())\n        .build();\n\n    CompletableFuture<Void> future = new CompletableFuture<>();\n    connection.closeSession(request).whenComplete((response, error) -> {\n      if (error == null) {\n        if (response.status() == RaftResponse.Status.OK) {\n          sessions.remove(sessionId.id());\n          future.complete(null);\n        } else {\n          future.completeExceptionally(response.error().createException());\n        }\n      } else {\n        future.completeExceptionally(error);\n      }\n    });\n    return future;\n  }", "timestamp": "2021-01-02T08:55:42.350924Z", "repo_name": "maniacs-ops/atomix", "path": "/protocols/raft/src/main/java/io/atomix/protocols/raft/proxy/impl/RaftProxyManager.java", "source": "the-stack-v2", "method_name": "closeSession", "class_name": "RaftProxyManager", "index": 2035, "label": 1}
{"input": "private boolean startPseudoServer() throws Exception {\n        try {\n            ServerSocket listener = new ServerSocket(4212);\n            startPseudoClient();\n            startPseudoClient();\n            Socket playerOne = listener.accept();\n            Socket playerTwo = listener.accept();\n            new ServerGameManager(playerOne, playerTwo, 0);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }", "timestamp": "2021-01-10T12:23:16.846051Z", "repo_name": "dwmille3/SER216-Stratego", "path": "/src/edu/asu/stratego/tests/ClientGameManagerTest.java", "source": "the-stack-v2", "method_name": "startPseudoServer", "class_name": "ClientGameManagerTest", "index": 2036, "label": 1}
{"input": "public void testBug82208_TYPE() throws CoreException {\n\tthis.resultCollector.showRule();\n\tsetUpBug82208();\n\tsearch(\"B82208*\", TYPE, ALL_OCCURRENCES);\n\tassertSearchResults(\n\t\t\"src/b82208/Test.java b82208.B82208_I [B82208_I] EXACT_MATCH\\n\" +\n\t\t\"src/b82208/Test.java b82208.B82208_E [B82208_E] EXACT_MATCH\\n\" +\n\t\t\"src/b82208/Test.java b82208.B82208_A [B82208_A] EXACT_MATCH\\n\" +\n\t\t\"src/b82208/Test.java b82208.B82208 [B82208] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug82208_TYPE", "class_name": "JavaSearchBugsTests", "index": 2037, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        signDegree = getResources().getString(R.string.sign_degree);\n        signMinute = getResources().getString(R.string.sign_minute);\n        northSouth = getResources().getStringArray(R.array.spin_ns);\n        eastWest = getResources().getStringArray(R.array.spin_ew);\n\n        initViews();\n        setListeners();\n\n        Toast.makeText(this, getResources().getString(R.string.err_empty_field), Toast.LENGTH_SHORT).show();\n    }", "timestamp": "2020-12-01T15:56:26.463589Z", "repo_name": "cytangjoseph/CelestialNavCalc", "path": "/app/src/main/java/com/anmas/star/calculation/MainActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "MainActivity", "index": 2038, "label": 1}
{"input": "public static ImageTrainer getInstance() {\n\t\tif (instance == null)\n\t\t\tinstance = new ImageTrainer();\n\t\treturn instance;\n\t}", "timestamp": "2021-01-22T16:45:15.355124Z", "repo_name": "ndrd/visual-cosmic-rainbown", "path": "/src/mx/unam/ciencias/cv/utils/trainer/ImageTrainer.java", "source": "the-stack-v2", "method_name": "getInstance", "class_name": "ImageTrainer", "index": 2039, "label": 1}
{"input": "public ChessPiece[][] getPieces() {\n\t\tChessPiece[][] mat = new ChessPiece[board.getRows()][board.getColumns()];\n\t\tfor (int i=0; i<board.getRows(); i++) {\n\t\t\tfor (int j=0; j<board.getColumns(); j++) {\n\t\t\t\tmat[i][j] = (ChessPiece) board.piece(i, j);\n\t\t\t}\n\t\t}\n\t\treturn mat;\n\t}", "timestamp": "2020-06-28T18:28:29.367248Z", "repo_name": "DylanPachecoCoder/jogoXadrez", "path": "/src/chess/ChessMatch.java", "source": "the-stack-v2", "method_name": "getPieces", "class_name": "ChessMatch", "index": 2040, "label": 1}
{"input": "public boolean startTurn()\n    {\n        int count = 0;\n        count = Client.INSTANCE.getPlantCount();\n        plants = new Plant[count];\n        for(int i = 0; i < count; i++)\n        {\n            plants[i] = new Plant(Client.INSTANCE.getPlant(i));\n        }\n\n        iteration++;\n\n        if(!initialized)\n        {\n          initialized = true;\n          init();\n        }\n        return run();\n    }", "timestamp": "2021-01-22T08:23:29.114202Z", "repo_name": "siggame/MegaMinerAI-5", "path": "/codegen/output/java/BaseAI.java", "source": "the-stack-v2", "method_name": "startTurn", "class_name": "BaseAI", "index": 2041, "label": 1}
{"input": "@Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        \n        getMenuInflater().inflate(R.menu.menu_main, menu);\n        return true;\n    }", "timestamp": "2020-06-05T18:44:02.459485Z", "repo_name": "Kelbirk/spotifyplayer", "path": "/app/src/main/java/com/ostentatious/spotify/MainActivity.java", "source": "the-stack-v2", "method_name": "onCreateOptionsMenu", "class_name": "MainActivity", "index": 2042, "label": 1}
{"input": "public final LocalVariableDeclarationContext localVariableDeclaration() throws RecognitionException {\n\t\tLocalVariableDeclarationContext _localctx = new LocalVariableDeclarationContext(_ctx, getState());\n\t\tenterRule(_localctx, 164, RULE_localVariableDeclaration);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(877);\n\t\t\tvariableModifiers();\n\t\t\tsetState(878);\n\t\t\ttype();\n\t\t\tsetState(879);\n\t\t\tvariableDeclarators();\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "localVariableDeclaration", "class_name": "JavaParser", "index": 2043, "label": 1}
{"input": "public DefaultMutableTreeNode addChild(DefaultMutableTreeNode parent, Object child) {\n\t\tDefaultMutableTreeNode childNode = new DefaultMutableTreeNode(child);\n\n\t\tif (parent == null) {\n\t\t\tlog.warning(\"No parent specified. Setting parent to root.\");\n\t\t\tparent = root;\n\t\t}\n\n\t\t\n\t\t\n\t\ttreeModel.insertNodeInto(childNode, parent, parent.getChildCount());\n\n\t\t\n\t\ttree.scrollPathToVisible(new TreePath(childNode.getPath()));\n\t\treturn childNode;\n\t}", "timestamp": "2021-01-18T01:40:35.930601Z", "repo_name": "BenKettlewell/couchburp", "path": "/src/main/java/com/prevsec/couchburp/controller/BurpController.java", "source": "the-stack-v2", "method_name": "addChild", "class_name": "BurpController", "index": 2044, "label": 1}
{"input": "public String getRackUpScript(File root) throws IOException {\n         return this.rackUpScript;\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/33/33_9d556bb155b90787a532ff5f8246d892165619a8/RackMetaData/33_9d556bb155b90787a532ff5f8246d892165619a8_RackMetaData_t.java", "source": "the-stack-v2", "method_name": "getRackUpScript", "class_name": "RackMetaData", "index": 2045, "label": 1}
{"input": "private void setStyle(WebFeatureServiceLayer wfs, double opacity,\n             String fillColor, String strokeColor, double pointRadius,\n             double strokeWidth) {\n         Style style = new Style();\n         style.extendCoreStyle(\"default\");\n         style.setFillColor(fillColor);\n         style.setStrokeColor(strokeColor);\n         style.setStrokeWidth(strokeWidth);\n         style.setPointRadius(pointRadius);\n         style.setFillOpacity(opacity);\n         StyleMap styleMap = new StyleMap(style);\n         styleMap.setExtendDefault(true);\n         wfs.setStyleMap(styleMap);\n \n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/19/19_5fb2f00edba1f1f7c2c7a63a283131ac855da05a/WebFeatureServiceLayerTest2/19_5fb2f00edba1f1f7c2c7a63a283131ac855da05a_WebFeatureServiceLayerTest2_s.java", "source": "the-stack-v2", "method_name": "setStyle", "class_name": "WebFeatureServiceLayerTest2", "index": 2046, "label": 1}
{"input": "@Autowired\n    public void setJsoupConnectFactory(JsoupConnectFactory jsoupConnectFactory)\n    {\n        this.jsoupConnectFactory = jsoupConnectFactory;\n    }", "timestamp": "2022-11-26T19:35:30.152581Z", "repo_name": "balazskrizsan/weather-snapshot", "path": "/src/main/java/com/kbalazsworks/weathersnapshot/service/DownloaderService.java", "source": "the-stack-v2", "method_name": "setJsoupConnectFactory", "class_name": "DownloaderService", "index": 2047, "label": 1}
{"input": "@Override\n        public String getMimeType(String file) {\n            return sc.getMimeType(file);\n        }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "getMimeType", "class_name": "NoPluggabilityServletContext", "index": 2048, "label": 1}
{"input": "@Override\n    public PageInfo<Sku> findPage(int page, int size){\n        \n        PageHelper.startPage(page,size);\n        \n        return new PageInfo<Sku>(skuMapper.selectAll());\n    }", "timestamp": "2022-06-29T20:21:53.160752Z", "repo_name": "a76037385a/changgou-parent", "path": "/changgou-service/changgou-service-goods/src/main/java/com/changgou/goods/service/impl/SkuServiceImpl.java", "source": "the-stack-v2", "method_name": "findPage", "class_name": "SkuServiceImpl", "index": 2049, "label": 1}
{"input": "@Override\n      public String toString() {\n         return String.format(\"%s (%s)\", name, guid);\n      }", "timestamp": "2017-12-02T03:32:05.216742Z", "repo_name": "earthships/osee", "path": "/plugins/org.eclipse.osee.framework.core.message/src/org/eclipse/osee/framework/core/message/ArtifactTypeCacheUpdateResponse.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "ArtifactTypeRow", "index": 2050, "label": 1}
{"input": "public static org.datacontract.schemas._2004._07.microsoft_practices_enterpriselibrary_validation_integration_wcf.ValidationDetail parse(java.io.InputStream is) throws org.apache.xmlbeans.XmlException, java.io.IOException {\n          return (org.datacontract.schemas._2004._07.microsoft_practices_enterpriselibrary_validation_integration_wcf.ValidationDetail) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( is, type, null ); }", "timestamp": "2021-05-31T07:40:57.713006Z", "repo_name": "OLINSolutions/eiservices", "path": "/utote/wsdl2java/programservice/xmlbeans/src/org/datacontract/schemas/_2004/_07/microsoft_practices_enterpriselibrary_validation_integration_wcf/ValidationDetail.java", "source": "the-stack-v2", "method_name": "parse", "class_name": "Factory", "index": 2051, "label": 1}
{"input": "@Override\n    public boolean equals(Object obj)\n    {\n        if (obj == null) {\n            return false;\n        }\n\n        if (getClass() != obj.getClass()) {\n            return false;\n        }\n\n        final Vector3D other = (Vector3D) obj;\n\n        if (Double.doubleToLongBits(this.x) != Double.doubleToLongBits(other.x)) {\n            return false;\n        }\n\n        if (Double.doubleToLongBits(this.y) != Double.doubleToLongBits(other.y)) {\n            return false;\n        }\n\n        if (Double.doubleToLongBits(this.z) != Double.doubleToLongBits(other.z)) {\n            return false;\n        }\n\n        return true;\n    }", "timestamp": "2023-06-11T12:13:10.631017Z", "repo_name": "gjz010-Archive/VoxelGuest", "path": "/src/main/java/com/thevoxelbox/voxelguest/regions/Vector3D.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "Vector3D", "index": 2052, "label": 1}
{"input": "private static URI getEffectiveURI(final URI uri) {\n        URI effectiveURI;\n        try {\n            effectiveURI = new URI(\"http\", uri.getHost(), uri.getPath(), null, null);\n        } catch (URISyntaxException e) {\n            effectiveURI = uri;\n        }\n        return effectiveURI;\n    }", "timestamp": "2022-11-19T20:23:13.197728Z", "repo_name": "ibaozi-cn/Net", "path": "/kalle/src/main/java/com/yanzhenjie/kalle/cookie/DBCookieStore.java", "source": "the-stack-v2", "method_name": "getEffectiveURI", "class_name": "DBCookieStore", "index": 2053, "label": 1}
{"input": "public static boolean SetObjFieldValue(Object obj, \n\t  String field_name, Object val) \n  {\n    java.lang.reflect.Method method;\n    java.lang.reflect.Field field;\n    Class<? extends Object> class_type;\n    Object[] params;\n\t\tboolean res=false;\n\n    if (obj!=null && rs.android.Util.NotEmpty(field_name))\n    {\n      class_type=obj.getClass();\n\n      field=FindClassField(class_type, field_name);\n      if (rs.android.Util.NotEmpty(field))\n      {\n\t\t\t\ttry {field.set(obj, val); res=true;}\n\t\t\t\tcatch (Exception e) { res=false; }\n      }\n      else\n      {\n        method=FindClassMethod(class_type, \"set\"+field_name);\n        if (rs.android.Util.NotEmpty(method))\n        {\n          params=new Object[1];\n          params[0]=val;\n          try {method.invoke(obj, params); res=true;}\n\t\t\t\t\tcatch (Exception e) {res=false;}\n        }\n      }\n    }\n\t\treturn res;\n  }", "timestamp": "2021-07-04T15:23:27.511120Z", "repo_name": "netssrmrz/coralracer", "path": "/AppTemplate/src/main/java/rs/android/util/Type.java", "source": "the-stack-v2", "method_name": "SetObjFieldValue", "class_name": "Type", "index": 2054, "label": 1}
{"input": "private void processInput(String input) {\n        \n        Dropping dropping;\n        \n        dropping = VOPUtils.unwrapDelivery(input);\n        Log.d(\"VOPServer r_server\", \"dropped: \" + dropping.getURL());\n\n        \n        if (dropping.getPw().equals(Prefs.getPassword())) {\n\n            \n            Prefs.saveString(Prefs.KEY_IP_ADR, server.getConnectedIPAddress());\n\n            switch (dropping.getType()) {\n\n                \n                case Dropping.TYPE_NULL:\n                    Log.d(\"VOPServer\", \"input invalid: \" + input);\n                    break;\n\n                \n                case Dropping.TYPE_URL:\n                    VOPUtils.openUrl(dropping.getURL(), this);\n                    break;\n\n                \n                case Dropping.TYPE_IMG:\n                    String filepath = VOPUtils.saveImage(dropping.getImage());\n                    VOPUtils.openImg(filepath, this);\n                    break;\n            }\n        }\n    }", "timestamp": "2021-07-17T15:25:52.359676Z", "repo_name": "ronidee/ViewOnPhone", "path": "/VOPServer.java", "source": "the-stack-v2", "method_name": "processInput", "class_name": "VOPServer", "index": 2055, "label": 1}
{"input": "@Test\n\tpublic void testCookie() {\n\t\tDisposableServer context =\n\t\t\t\tHttpServer.create()\n\t\t\t\t          .host(\"localhost\")\n\t\t\t\t          .route(r -> r.get(\"/201\",\n\t\t\t\t                  (req, res) -> res.addHeader(\"test\",\n\t\t\t\t                                              req.cookies()\n\t\t\t\t                                                 .get(\"test\")\n\t\t\t\t                                                 .stream()\n\t\t\t\t                                                 .findFirst()\n\t\t\t\t                                                 .get()\n\t\t\t\t                                                 .value())\n\t\t\t\t                                   .status(HttpResponseStatus.CREATED)\n\t\t\t\t                                   .sendHeaders()))\n\t\t\t\t          .bindNow();\n\n\t\tcreateHttpClientForContextWithAddress(context)\n\t\t        .cookie(\"test\", c -> c.setValue(\"lol\"))\n\t\t        .get()\n\t\t        .uri(\"/201\")\n\t\t        .responseContent()\n\t\t        .blockLast();\n\n\t\tcontext.disposeNow();\n\t}", "timestamp": "2020-05-04T21:11:25.751515Z", "repo_name": "hhy5277/reactor-netty", "path": "/src/test/java/reactor/netty/http/client/HttpClientTest.java", "source": "the-stack-v2", "method_name": "testCookie", "class_name": "HttpClientTest", "index": 2056, "label": 1}
{"input": "private void setUpBug84100() throws CoreException {\n\tthis.resultCollector.showRule();\n\tthis.workingCopies = new ICompilationUnit[2];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b84100/X.java\",\n\t\t\"package b84100;\\n\" +\n\t\t\"public class X {\\n\" +\n\t\t\"\tvoid foo() {}\\n\" +\n\t\t\"\tvoid foo(String s) {}\\n\" +\n\t\t\"\tvoid foo(String... xs) {}\\n\" +\n\t\t\"\tvoid foo(int x, String... xs) {}\\n\" +\n\t\t\"\tvoid foo(String s, int x, String... xs) {}\\n\" +\n\t\t\"}\\n\"\n\t\t);\n\tthis.workingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/b84100/Z.java\",\n\t\t\"package b84100;\\n\" +\n\t\t\"package b84100;\\n\"1 +\n\t\t\"package b84100;\\n\"2 +\n\t\t\"package b84100;\\n\"3 +\n\t\t\"package b84100;\\n\"4 +\n\t\t\"package b84100;\\n\"5 +\n\t\t\"package b84100;\\n\"6 +\n\t\t\"package b84100;\\n\"7 +\n\t\t\"package b84100;\\n\"8 +\n\t\t\"package b84100;\\n\"9 +\n\t\t\"public class X {\\n\"0 +\n\t\t\"}\\n\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "setUpBug84100", "class_name": "JavaSearchBugsTests", "index": 2057, "label": 1}
{"input": "private static int findMax(int[] nums) {\n\t        int index = 0;\n\t        for (int i = 0; i < nums.length; i++) {\n\t            index = nums[i] > nums[index] ? i : index;\n\t        }\n\t        return index;\n\t    }", "timestamp": "2022-11-28T11:39:03.002767Z", "repo_name": "thrent/pixel-dungeon-gdx", "path": "/core/src/com/watabou/pixeldungeon/MLClassifier.java", "source": "the-stack-v2", "method_name": "findMax", "class_name": "GameplayClassifier", "index": 2058, "label": 1}
{"input": "private JButton getJBNuevoContacto() {\r\n\t\tif (jBNuevoContacto == null) {\r\n\t\t\tjBNuevoContacto = new JButton();\r\n\t\t\tjBNuevoContacto.setText(\"Nuevo Contacto\");\r\n\t\t\tjBNuevoContacto\r\n\t\t\t\t\t.addActionListener(new java.awt.event.ActionListener() {\r\n\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\r\n\t\t\t\t\t\t\tnuevoContacto();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t}\r\n\t\treturn jBNuevoContacto;\r\n\t}", "timestamp": "2020-04-25T11:57:36.747920Z", "repo_name": "larremano/thebighandtheory", "path": "/src/vista/PanelInicio.java", "source": "the-stack-v2", "method_name": "getJBNuevoContacto", "class_name": "PanelInicio", "index": 2059, "label": 1}
{"input": "@Override\n  public <T> T sendSequenceAction(OSequenceAction action) throws ExecutionException, InterruptedException {\n    throw new UnsupportedOperationException(\"Not supported yet.\"); \n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "sendSequenceAction", "class_name": "ODatabaseDocumentEmbedded", "index": 2060, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n\tpublic ActionForward toAjjb(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\t\t\n\t\treturn mapping.findForward(\"toAjjb\");\n\t}", "timestamp": "2021-01-12T15:41:00.492001Z", "repo_name": "MoonLuckSir/MoonRepository", "path": "/src/java/com/yitong/app/action/judicial/dxzpzfdj/ZfdjAction.java", "source": "the-stack-v2", "method_name": "toAjjb", "class_name": "ZfdjAction", "index": 2061, "label": 1}
{"input": "@Override\n    public void addToRequestQueue() {\n        Log.d(\"check_gblogin\",\"4.addToRequestQueue called\");\n        if(Config.HARDCODED_ENABLE)\n        {\n            Log.d(\"check_gblogin\",\"4.1.Configuration.hardcore enabled=true\");\n            onSuccess(getFromAssetsFolder(\"loginresponse.json\",LoginResponse.class));\n\n\n        }\n        else {\n            Log.d(\"check_gblogin\",\"hardcorenot enabled!!! addTorequestqueue called\");\n            super.addToRequestQueue();\n            Log.d(\"check_gblogin\",\"request successfully added\");\n        }\n    }", "timestamp": "2021-01-19T13:05:46.388914Z", "repo_name": "ramkumartrk/GossipsBolo", "path": "/app/src/main/java/com/example/yogi/gossipsbolo/ChatRoom/manager/operation/UserLoginOperation.java", "source": "the-stack-v2", "method_name": "addToRequestQueue", "class_name": "UserLoginOperation", "index": 2062, "label": 1}
{"input": "private static boolean bpm(final Tile tile, final Set<TownSite> visited, final Map<TownSite, List<Tile>> matching) {\n    \tfor (final TownSite neighbor : tile.getTownSites()) {\n    \t\tif (visited.add(neighbor)) {\n    \t\t\tfinal List<Tile> assigned = matching.get(neighbor);\n    \t\t\tif (assigned == null) {\n    \t\t\t\t\n    \t\t\t\tcontinue;\n    \t\t\t}\n    \t\t\tif (assigned.size() < neighbor.size()) {\n    \t\t\t\tassigned.add(tile);\n    \t\t\t\treturn true;\n    \t\t\t}\n    \t\t\t\n    \t\t\tfor (final Tile assignedTile : assigned) {\n    \t\t\t\tif (bpm(assignedTile, visited, matching)) {\n    \t\t\t\t\tassigned.remove(assignedTile);\n    \t\t\t\t\tassigned.add(tile);\n    \t\t\t\t\treturn true;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t}\n    \treturn false;\n    }", "timestamp": "2021-01-20T18:33:43.125350Z", "repo_name": "pjsavola/doe", "path": "/java_src/HarvestAlgorithm.java", "source": "the-stack-v2", "method_name": "bpm", "class_name": "HarvestAlgorithm", "index": 2063, "label": 1}
{"input": "@Test\n  public void case17() {\n    int[] revenues = { -647, 40, -3, -4, -56, -890, -389, 95, 8, 616, 93, 1, -50, -52, 249, 243, -1, -955, -53, 94, 63, -93, -652, -57, -4, -54, 45, 543, -650, 88, 10, -57, 642, -950, -355, -222, 544, -353, 545, -55, -53, 553, -951, 3, 7 };\n    int k = 9;\n    assertEquals(443.60229766803843, mergersdivtwo.findMaximum(revenues, k), DELTA * 443.60229766803843);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case17", "class_name": "MergersDivTwoTest", "index": 2064, "label": 1}
{"input": "public void testBug100772_ProjectScope_ClassAndSubclass02() throws CoreException {\n\tsetUpBug100772_ProjectScope_ClassAndSubclass();\n\tIType type = this.workingCopies[0].getType(\"Test\");\n\tIMethod method = type.getMethod(\"foo\", new String[] { \"QT;\" });\n\tsearch(method, DECLARATIONS);\n\tassertSearchResults(\n\t\t\"src/b100772/Sub.java void b100772.Sub.foo(String) [foo] EXACT_MATCH\\n\" +\n\t\t\"src/b100772/Test.java void b100772.Test.foo(T) [foo] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug100772_ProjectScope_ClassAndSubclass02", "class_name": "JavaSearchBugsTests", "index": 2065, "label": 1}
{"input": "public void validateState() {\n        if (!matcherStack.isEmpty()) {\n            ArrayList lastMatchers = new ArrayList<LocalizedMatcher>(matcherStack);\n            matcherStack.clear();\n            new Reporter().misplacedArgumentMatcher(lastMatchers);\n        }\n    }", "timestamp": "2023-03-18T20:12:02.923428Z", "repo_name": "ozzydong/CapGen", "path": "/newEvaluatedBugs/Mockito_24_buggy/mutated/45/ArgumentMatcherStorageImpl.java", "source": "the-stack-v2", "method_name": "validateState", "class_name": "ArgumentMatcherStorageImpl", "index": 2066, "label": 1}
{"input": "public void testBug83304_TypeParameterizedElementPattern() throws CoreException {\n\tthis.resultCollector.showRule();\n\tsetUpBug83304_TypeParameterizedElementPattern();\n\tIType type = selectType(this.workingCopies[0], \"Generic\", 4);\n\tsearch(type, REFERENCES, ERASURE_RULE);\n\tassertSearchResults(\n\t\t\"src/b83304/Types.java [g1.t.s.def.Generic] EQUIVALENT_RAW_MATCH\\n\" +\n\t\t\"src/b83304/Types.java b83304.Types.gen [Generic] EQUIVALENT_RAW_MATCH\\n\" +\n\t\t\"src/b83304/Types.java b83304.Types.gen_obj [Generic] ERASURE_MATCH\\n\" +\n\t\t\"src/b83304/Types.java b83304.Types.gen_exc [Generic] EXACT_MATCH\\n\" +\n\t\t\"src/b83304/Types.java b83304.Types.gen_wld [Generic] EQUIVALENT_MATCH\\n\" +\n\t\t\"src/b83304/Types.java b83304.Types.gen_thr [Generic] EQUIVALENT_MATCH\\n\" +\n\t\t\"src/b83304/Types.java b83304.Types.gen_run [Generic] EQUIVALENT_MATCH\\n\" +\n\t\t\"lib/JavaSearch15.jar g1.t.s.def.Generic<T> g1.t.s.def.Generic.foo() ERASURE_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug83304_TypeParameterizedElementPattern", "class_name": "JavaSearchBugsTests", "index": 2067, "label": 1}
{"input": "private void clear() {\n            lastUsageDates.clear();\n            cacheSize.set(0);\n            File[] files = cacheDir.listFiles();\n            if (files != null) {\n                for (File f : files) {\n                    f.delete();\n                }\n            }\n        }", "timestamp": "2020-08-02T18:42:07.551582Z", "repo_name": "zhuyu3126/WuyiProject", "path": "/WuyiProject/commonapi/src/main/java/com/danmo/commonapi/base/cache/ACache.java", "source": "the-stack-v2", "method_name": "clear", "class_name": "ACacheManager", "index": 2068, "label": 1}
{"input": "private JCheckBox getJCheckBoxHideWindowUI() {\n\t\tif (jCheckBoxHideWindowUI == null) {\n\t\t\tjCheckBoxHideWindowUI = new JCheckBox();\n\t\t\tjCheckBoxHideWindowUI.setBounds(new Rectangle(10, 140, 341, 21));\n\t\t\tjCheckBoxHideWindowUI.setFont(new Font(\"Dialog\", Font.PLAIN, 12));\n\t\t\tjCheckBoxHideWindowUI.setText(getMessages().getString(\"Page_HIDEWINDOWUI\"));\n\t\t\tjCheckBoxHideWindowUI.setEnabled(false);\n\t\t\tjCheckBoxHideWindowUI.setSelected(MelangeJFrame.prefHideWindowUI);\n\t\t}\n\t\treturn jCheckBoxHideWindowUI;\n\t}", "timestamp": "2021-01-01T05:50:38.878341Z", "repo_name": "dertoki/jPDFmelange", "path": "/jPDFmelange/JPanelViewPrefs.java", "source": "the-stack-v2", "method_name": "getJCheckBoxHideWindowUI", "class_name": "JPanelViewPrefs", "index": 2069, "label": 1}
{"input": "public void SetWidgetFontFromAssets(String _customFontName) {   \n        aadapter.SetWidgetFontFromAssets(_customFontName);\t\t\n    }", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "SetWidgetFontFromAssets", "class_name": "jListView", "index": 2070, "label": 1}
{"input": "@TypeConverter\n    public static Long toTimestamp(Date date) {\n        if (date == null) {\n            return 0L;\n        }\n\n        return date.getTime();\n    }", "timestamp": "2020-03-27T18:40:50.581438Z", "repo_name": "ksdrof500/movies", "path": "/app/src/main/java/br/com/movies_tek/data/db/Converters.java", "source": "the-stack-v2", "method_name": "toTimestamp", "class_name": "Converters", "index": 2071, "label": 1}
{"input": "public Criteria andVdef15Like(String value) {\r\n            addCriterion(\"VDEF15 like\", value, \"vdef15\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef15Like", "class_name": "GeneratedCriteria", "index": 2072, "label": 1}
{"input": "public Criteria andVdef6GreaterThanOrEqualTo(String value) {\r\n            addCriterion(\"VDEF6 >=\", value, \"vdef6\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef6GreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 2073, "label": 1}
{"input": "public void\n \tstart()\n \t{\n \t\tif ( remoteServerIsStartable() )\n \t\t{\n \t\t\tstartRemoteServer();\n \t\t}\n \t\telse\n \t\t{\n\t\t\tthrow new RuntimeException(\"server is not in a startable state\");\n \t\t}\n \t}", "timestamp": "2021-05-28T12:55:06.267463Z", "repo_name": "dmatej/Glassfish-SVN-Patched", "path": "/v2/admin/mbeanapi-impl/src/java/com/sun/enterprise/management/j2ee/DASJ2EEServerImpl.java", "source": "the-stack-v2", "method_name": "start", "class_name": "DASJ2EEServerImpl", "index": 2074, "label": 1}
{"input": "@Override \n        public final ArrayList<byte[]> getHashChain() {\n            return new ArrayList<>(Arrays.asList(new byte[]{5, -86, 61, -26, 19, 10, -105, -120, -3, -74, -12, -45, -52, 87, -61, -22, MidiConstants.STATUS_NOTE_ON, -16, 103, -25, 122, 94, 9, -42, -89, 114, -20, Byte.MAX_VALUE, 107, -54, 51, -46}, new byte[]{29, 74, 87, 118, 97, 76, 8, -75, -41, -108, -91, -20, 90, MidiConstants.STATUS_CONTROL_CHANGE, 70, -105, 38, 12, -67, 75, 52, 65, -43, -109, 92, -43, 62, -25, 29, 25, -38, 2}, new byte[]{-20, Byte.MAX_VALUE, -41, -98, MidiConstants.STATUS_CHANNEL_PRESSURE, 45, -6, -123, -68, 73, -108, 38, -83, -82, 62, -66, 35, -17, 5, 36, MidiConstants.STATUS_SONG_SELECT, -51, 105, 87, 19, -109, 36, -72, 59, 24, -54, 76}));\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "getHashChain", "class_name": "Stub", "index": 2075, "label": 1}
{"input": "@Override\r\n\tpublic String getChildActiveSignal(Doable doable) {\r\n\t\treturn getActiveWireName( doable );\r\n\t}", "timestamp": "2021-06-01T23:40:47.953614Z", "repo_name": "JEdward7777/VerilogExpress", "path": "/eclipse/VerilogExpress/src/verilogExpress/SequentualDoer.java", "source": "the-stack-v2", "method_name": "getChildActiveSignal", "class_name": "SequentualDoer", "index": 2076, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n  private void initApp(final ApplicationId appId, String user,\n      Credentials credentials, ContainerLogsRetentionPolicy logRetentionPolicy,\n      Map<ApplicationAccessType, String> appAcls,\n      LogAggregationContext logAggregationContext) {\n    ApplicationEvent eventResponse;\n    try {\n      verifyAndCreateRemoteLogDir(getConfig());\n      initAppAggregator(appId, user, credentials, logRetentionPolicy, appAcls,\n          logAggregationContext);\n      eventResponse = new ApplicationEvent(appId,\n          ApplicationEventType.APPLICATION_LOG_HANDLING_INITED);\n    } catch (YarnRuntimeException e) {\n      LOG.warn(\"Application failed to init aggregation\", e);\n      eventResponse = new ApplicationEvent(appId,\n          ApplicationEventType.APPLICATION_LOG_HANDLING_FAILED);\n    }\n    this.dispatcher.getEventHandler().handle(eventResponse);\n  }", "timestamp": "2023-01-22T01:16:51.642516Z", "repo_name": "qtt-bigdata/hadoop", "path": "/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java", "source": "the-stack-v2", "method_name": "initApp", "class_name": "LogAggregationService", "index": 2077, "label": 1}
{"input": "public static void closeConnection(Connection con, PreparedStatement stmt) {\n\t\tcloseConnection(con);\n\t\tif(stmt!=null) {\n\t\t\ttry {\n\t\t\t\tstmt.close();\n\t\t\t}catch(SQLException e) {\n\t\t\t\tJOptionPane.showMessageDialog(null, \"Erro ao finalizar a conx„o\", \"Erro\",2);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}", "timestamp": "2023-01-19T08:53:47.640734Z", "repo_name": "josias84/Candidato", "path": "/src/connection/ConnectionFactory.java", "source": "the-stack-v2", "method_name": "closeConnection", "class_name": "ConnectionFactory", "index": 2078, "label": 1}
{"input": "private void bfs(int x0, int y0, char[][] board) {\n        if (board[x0][y0] != 'O') {\n            return;\n        }\n        int m = board.length, n = board[0].length;\n        int[] dx = {-1, 1, 0, 0};\n        int[] dy = {0, 0, -1, 1};\n        Queue<Pair> q = new LinkedList<>();\n        q.offer(new Pair(x0, y0));\n        board[x0][y0] = 'W';\n        while (!q.isEmpty()) {\n            Pair temp = q.poll();\n            int x = temp.x, y = temp.y;\n            for (int k = 0; k < 4; k++) {\n                int nx = x + dx[k];\n                int ny = y + dy[k];\n                if (nx >= 0 && nx < m && ny >= 0 && ny < n && board[nx][ny] == 'O') {\n                    board[nx][ny] = 'W';\n                    q.offer(new Pair(nx, ny));\n                }\n            }\n        }\n    }", "timestamp": "2021-01-12T09:51:32.618362Z", "repo_name": "akb46mayu/Data-Structures-and-Algorithms", "path": "/JavaPartI/le130_surroundedRegions.java", "source": "the-stack-v2", "method_name": "bfs", "class_name": "Solution", "index": 2079, "label": 1}
{"input": "public void start() {\n        Log.d(TAG, \"start orientation listener.\");\n        sm.registerListener(listener, sensor, SensorManager.SENSOR_DELAY_UI);\n    }", "timestamp": "2020-12-30T17:10:54.683360Z", "repo_name": "jxzhung/AndroidCodes", "path": "/AndroidDemos/app/src/main/java/com/jzhung/demos/utils/ScreenSwitchUtils.java", "source": "the-stack-v2", "method_name": "start", "class_name": "ScreenSwitchUtils", "index": 2080, "label": 1}
{"input": "public static void updateCloseProbability(Double val,Long mdtaskid) throws FactoryException {\n\t\tLOGGER.info(\"mdtaskid=\"+mdtaskid+\", val=\"+val);\n\t\tTaskFacadeLocal taskEJB = com.vtb.util.EjbLocator.getInstance().getReference(TaskFacadeLocal.class);\n\t\tPipelineJPA p = taskEJB.getPipeline(mdtaskid);\n\t\tp.setClose_probability(val);\n\t\tList<String> ftlist = taskEJB.getPipelineFinTarget(mdtaskid);\n\t\ttaskEJB.updatePipeline(p, ftlist.toArray(new String[ftlist.size()]));\n\t}", "timestamp": "2022-01-23T00:43:43.495448Z", "repo_name": "bellmit/java-zk-pipeline-spo", "path": "/spo/flexWorkflow/src/ru/md/controller/PipelineController.java", "source": "the-stack-v2", "method_name": "updateCloseProbability", "class_name": "PipelineController", "index": 2081, "label": 1}
{"input": "void flushMetaData(final List<MetaData> metaDataList) {\n        if (CollectionUtils.isEmpty(metaDataList)) {\n            LOGGER.info(\"clear all metaDataList cache, old cache:{}\", AUTH_MAP);\n            META_DATA.clear();\n        } else {\n            META_DATA.clear();\n            metaDataList.forEach(metaData -> META_DATA.put(metaData.getPath(), metaData));\n        }\n    }", "timestamp": "2020-09-20T02:12:13.480092Z", "repo_name": "zhouyanggs/soul", "path": "/soul-web/src/main/java/org/dromara/soul/web/cache/HttpCacheHandler.java", "source": "the-stack-v2", "method_name": "flushMetaData", "class_name": "HttpCacheHandler", "index": 2082, "label": 1}
{"input": "private void operatorChanged( OperatorSelection selection ) {\n        String operator = selection.getValue();\n        if ( CEPOracle.isCEPOperator( operator ) ) {\n            container.setVisible( true );\n            btnAddCEPOperators.setVisible( true );\n            parameterSets = CEPOracle.getCEPOperatorParameterSets( operator );\n            hop.setParameter( SharedConstants.OPERATOR_PARAMETER_GENERATOR,\n                              CEP_OPERATOR_PARAMETER_GENERATOR );\n        } else {\n            visibleParameterSet = 0;\n            container.setVisible( false );\n            btnAddCEPOperators.setVisible( false );\n            parameterSets = Collections.emptyList();\n            hop.clearParameters();\n        }\n        displayParameters();\n    }", "timestamp": "2021-01-17T21:55:31.542359Z", "repo_name": "Brianxia/guvnor", "path": "/drools-wb/drools-wb-screens/drools-wb-guided-rule-editor/drools-wb-guided-rule-editor-client/src/main/java/org/drools/workbench/screens/guided/rule/client/editor/CEPOperatorsDropdown.java", "source": "the-stack-v2", "method_name": "operatorChanged", "class_name": "CEPOperatorsDropdown", "index": 2083, "label": 1}
{"input": "@Test public void testSimple() {\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.FOODMART_CLONE)\n        .query(\"SELECT 1\")\n        .returns(\"EXPR$0=1\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testSimple", "class_name": "JdbcTest", "index": 2084, "label": 1}
{"input": "public void addStudent(Student student) {\n    Student[] tmp = new Student[students.length + 1];\n    System.arraycopy(students, 0, tmp, 0, students.length);\n    tmp[students.length] = student;\n    students = tmp;\n  }", "timestamp": "2021-01-12T16:14:18.791767Z", "repo_name": "igorkorunets/homework", "path": "/lesson5/mvakarchuk/src/jelementary/Group.java", "source": "the-stack-v2", "method_name": "addStudent", "class_name": "Group", "index": 2085, "label": 1}
{"input": "public static String getStackTraceAsString(Throwable e) {\n\t\tif (e == null){\n\t\t\treturn \"\";\n\t\t}\n\t\tStringWriter stringWriter = new StringWriter();\n\t\te.printStackTrace(new PrintWriter(stringWriter));\n\t\treturn stringWriter.toString();\n\t}", "timestamp": "2022-04-06T12:37:57.431079Z", "repo_name": "chocoai/firsthinkis", "path": "/thinkis-core/src/main/java/com/thinkis/common/utils/Exceptions.java", "source": "the-stack-v2", "method_name": "getStackTraceAsString", "class_name": "Exceptions", "index": 2086, "label": 1}
{"input": "@Test\n  public void case47() {\n    int[] revenues = { 360, 10, 76, -57, 312, -953, -708, 364, -351, -356, -347, 428, -57, -954, 513, -53, 544, -10, -69, 501, -653, 4, -3, 546, -50, -49, 247, 7, 69, 97, -119, -2, 79, -654, -7, 6, -248, 6, -49, -50, -50, -16, 0, -351, 54, -41, 4 };\n    int k = 9;\n    assertEquals(404.23624338624336, mergersdivtwo.findMaximum(revenues, k), DELTA * 404.23624338624336);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case47", "class_name": "MergersDivTwoTest", "index": 2087, "label": 1}
{"input": "public Criteria andVdef20GreaterThan(String value) {\r\n            addCriterion(\"VDEF20 >\", value, \"vdef20\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef20GreaterThan", "class_name": "GeneratedCriteria", "index": 2088, "label": 1}
{"input": "@Test\n    @SmallTest\n    @Feature({\"Preferences\"})\n    public void testExportMenuEnabled() throws Exception {\n        setPasswordSource(new SavedPasswordEntry(\"https://example.com\", \"test user\", \"password\"));\n\n        ReauthenticationManager.setApiOverride(ReauthenticationManager.OverrideState.AVAILABLE);\n\n        final Preferences preferences =\n                PreferencesTest.startPreferences(InstrumentationRegistry.getInstrumentation(),\n                        SavePasswordsPreferences.class.getName());\n\n        checkExportMenuItemState(MenuItemState.ENABLED);\n    }", "timestamp": "2022-12-08T04:12:54.583056Z", "repo_name": "yeahhhhhhhh/chromium_quic", "path": "/src/chrome/android/javatests/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferencesTest.java", "source": "the-stack-v2", "method_name": "testExportMenuEnabled", "class_name": "SavePasswordsPreferencesTest", "index": 2089, "label": 1}
{"input": "@Test\n    public void testInvokeOnItemWithRunnable() {\n        AtomicBoolean called = new AtomicBoolean();\n\n        int r = one.onItem().invoke(() -> called.set(true))\n                .await().indefinitely();\n\n        assertThat(r).isEqualTo(1);\n        assertThat(called).isTrue();\n    }", "timestamp": "2022-11-30T09:32:52.267405Z", "repo_name": "lamtrhieu/smallrye-mutiny", "path": "/implementation/src/test/java/io/smallrye/mutiny/operators/UniOnItemInvokeTest.java", "source": "the-stack-v2", "method_name": "testInvokeOnItemWithRunnable", "class_name": "UniOnItemInvokeTest", "index": 2090, "label": 1}
{"input": "public static void main(String[] args) {\n\t\t\tfor (int i = 0; i < 100; i++) {\n\t\t\t\tSystem.out.println(Thread.currentThread().getName() + \" \" + i);\n\t\t\t\tif (i == 30) {\n\t\t\t\t\tRunnable myRunnable = new MyRunnable();\n\t\t\t\t\tThread thread = new MyThread(myRunnable);\n\t\t\t\t\tthread.start();\n\t\t\t\t}\n\t\t\t}\n\t\t}", "timestamp": "2021-01-11T10:37:27.269138Z", "repo_name": "y928qx/warehouseYqx", "path": "/Java/src/Thread/Text3.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Text3", "index": 2091, "label": 1}
{"input": "@Test public void testUnnestArray() {\n    CalciteAssert.that()\n        .query(\"select*from unnest(array[1,2])\")\n        .returnsUnordered(\"EXPR$0=1\",\n            \"EXPR$0=2\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testUnnestArray", "class_name": "JdbcTest", "index": 2092, "label": 1}
{"input": "@Override\n  public <S, R> CompletableFuture<R> coprocessorService(Function<RpcChannel, S> stubMaker,\n      ServiceCaller<S, R> callable, byte[] row) {\n    return coprocessorService(stubMaker, callable, null, row);\n  }", "timestamp": "2020-03-21T15:28:16.237120Z", "repo_name": "siwuxietang/hbase", "path": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncTableImpl.java", "source": "the-stack-v2", "method_name": "coprocessorService", "class_name": "RawAsyncTableImpl", "index": 2093, "label": 1}
{"input": "public void put(String key, Serializable value, int saveTime) {\n        ByteArrayOutputStream baos = null;\n        ObjectOutputStream oos = null;\n        try {\n            baos = new ByteArrayOutputStream();\n            oos = new ObjectOutputStream(baos);\n            oos.writeObject(value);\n            byte[] data = baos.toByteArray();\n            if (saveTime != -1) {\n                put(key, data, saveTime);\n            } else {\n                put(key, data);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                oos.close();\n            } catch (IOException e) {\n            }\n        }\n    }", "timestamp": "2020-08-02T18:42:07.551582Z", "repo_name": "zhuyu3126/WuyiProject", "path": "/WuyiProject/commonapi/src/main/java/com/danmo/commonapi/base/cache/ACache.java", "source": "the-stack-v2", "method_name": "put", "class_name": "ACache", "index": 2094, "label": 1}
{"input": "@Override\n      public Get setCallback(java.lang.String callback) {\n        return (Get) super.setCallback(callback);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setCallback", "class_name": "Get", "index": 2095, "label": 1}
{"input": "private static VisitorOrganoid obtainPure() {\r\n\t\tif (GlobalConstants.POOL)\r\n\t\t\tsynchronized (VisitorOrganoid.class) {\r\n\t\t\t\treturn sPool.size() == 0 ? new VisitorOrganoid()\r\n\t\t\t\t\t\t: (VisitorOrganoid) sPool.pop();\r\n\t\t\t}\r\n\t\treturn new VisitorOrganoid();\r\n\t}", "timestamp": "2021-01-20T03:06:56.221206Z", "repo_name": "Barricade/TeeRain", "path": "/core/src/com/gaskarov/teerain/core/VisitorOrganoid.java", "source": "the-stack-v2", "method_name": "obtainPure", "class_name": "VisitorOrganoid", "index": 2096, "label": 1}
{"input": "@Test\n    public void TestCompareEqualRandom(){\n        Random rand = new Random();\n        Assignment num1 = new Assignment(\"num1\", Numeral.generate(rand, 0, 99));\n        Assert.assertNotNull(num1);\n        System.out.print(\"num1 = \" + num1.expression + \"\\n\");\n\n        Assignment num2 = new Assignment(\"num2\", Numeral.generate(rand, 100, 199));\n        Assert.assertNotNull(num2);\n        System.out.print(\"num2 = \" + num2.expression + \"\\n\");\n        CompareEqual compareEq = new CompareEqual(num1.expression,num2.expression);\n        Boolean evaluate = (Boolean) compareEq.evaluate(new HashMap<String, Object>());\n        Assert.assertFalse(evaluate);\n    }", "timestamp": "2020-04-24T02:55:43.735910Z", "repo_name": "nachogarrone/while", "path": "/src/test/java/TestCompareEqual.java", "source": "the-stack-v2", "method_name": "TestCompareEqualRandom", "class_name": "TestCompareEqual", "index": 2097, "label": 1}
{"input": "@Override\n    public void marshal(final Object source, final HierarchicalStreamWriter writer, final MarshallingContext context) {\n        final ActivationDataFlavor dataFlavor = ActivationDataFlavor.class.cast(source);\n        final String mimeType = dataFlavor.getMimeType();\n        if (mimeType != null) {\n            writer.startNode(\"mimeType\");\n            writer.setValue(mimeType);\n            writer.endNode();\n        }\n        final String name = dataFlavor.getHumanPresentableName();\n        if (name != null) {\n            writer.startNode(\"humanRepresentableName\");\n            writer.setValue(name);\n            writer.endNode();\n        }\n        final Class<?> representationClass = dataFlavor.getRepresentationClass();\n        if (representationClass != null) {\n            writer.startNode(\"representationClass\");\n            context.convertAnother(representationClass);\n            writer.endNode();\n        }\n    }", "timestamp": "2021-02-14T09:33:15.275733Z", "repo_name": "zeshuai007/xstream", "path": "/xstream/src/java/com/thoughtworks/xstream/converters/extended/ActivationDataFlavorConverter.java", "source": "the-stack-v2", "method_name": "marshal", "class_name": "ActivationDataFlavorConverter", "index": 2098, "label": 1}
{"input": "@Override\r\n    public ArrayList<Seat> getFirstClassSeats(String flightNo){\r\n    \n       ArrayList<Aeroplane> list = bookingSystem.getFlights();\r\n       for(Aeroplane ai : list)\r\n        {\r\n            if(ai.getFlightNo().equals(flightNo)) {\r\n                return ai.getFirstClassSeats();\r\n            }\r\n        }\r\n       \n       return null;\r\n    }", "timestamp": "2021-01-20T19:26:17.826818Z", "repo_name": "GitAirline/GitAirline", "path": "/src/Manager/BookingSystemManager.java", "source": "the-stack-v2", "method_name": "getFirstClassSeats", "class_name": "BookingSystemManager", "index": 2099, "label": 1}
{"input": "private double[][] copyOut() {\n        final int nRows = org.apache.commons.math.linear.RealMatrixImpl.this.getRowDimension();\n        final double[][] out = new double[nRows][org.apache.commons.math.linear.RealMatrixImpl.this.getColumnDimension()];\n        for (int i = 0 ; i < nRows ; i++) {\n            java.lang.System.arraycopy(data[i], 0, out[i], 0, data[i].length);\n        }\n        return out;\n    }", "timestamp": "2021-05-07T00:07:06.345617Z", "repo_name": "SajjadZaidi/AutoRepair", "path": "/RawExperiments/Math/math98/1/AstorMain-math_98/src/variant-208/org/apache/commons/math/linear/RealMatrixImpl.java", "source": "the-stack-v2", "method_name": "copyOut", "class_name": "RealMatrixImpl", "index": 2100, "label": 1}
{"input": "public UDPSender setNotifyNumber(int notifyNumber) {\n        this.notifyNumber = notifyNumber;\n        return this;\n    }", "timestamp": "2020-06-13T19:22:44.762210Z", "repo_name": "SheStealsMyPenta/test", "path": "/PDOnlineConfig/app/src/main/java/com/pd/config/pdonlineconfig/net/UDPSender.java", "source": "the-stack-v2", "method_name": "setNotifyNumber", "class_name": "UDPSender", "index": 2101, "label": 1}
{"input": "private void comer() {\n        pecaSelecionada.comer(pecaASerComida);\n        partida.getJogadorAdversario().getPecas().remove(pecaASerComida);\n        pecaASerComida = null;\n    }", "timestamp": "2021-01-17T07:28:41.295754Z", "repo_name": "lfnascimento/Dama", "path": "/src/dama/Dama.java", "source": "the-stack-v2", "method_name": "comer", "class_name": "Dama", "index": 2102, "label": 1}
{"input": "@Override\n      public List setPrettyPrint(java.lang.Boolean prettyPrint) {\n        return (List) super.setPrettyPrint(prettyPrint);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setPrettyPrint", "class_name": "List", "index": 2103, "label": 1}
{"input": "@Override\n    public void onConfigurationChanged(Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n        \n        mDrawerToggle.onConfigurationChanged(newConfig);\n    }", "timestamp": "2021-01-17T07:08:24.227897Z", "repo_name": "Aman-B/newsreader", "path": "/app/src/main/java/com/amanb/aman/feedreader/NavigationDrawerFragment.java", "source": "the-stack-v2", "method_name": "onConfigurationChanged", "class_name": "NavigationDrawerFragment", "index": 2104, "label": 1}
{"input": "@Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        \n        getMenuInflater().inflate(R.menu.loader, menu);\n    return true;\n    }", "timestamp": "2020-05-19T19:43:20.840381Z", "repo_name": "nikolozka/Move.Project", "path": "/src/com/triskelion/move/Loader.java", "source": "the-stack-v2", "method_name": "onCreateOptionsMenu", "class_name": "Loader", "index": 2105, "label": 1}
{"input": "public void setHaveNewMessages(boolean haveNewMessages) {\n        this.haveNewMessages = haveNewMessages;\n    }", "timestamp": "2020-05-16T17:59:49.170119Z", "repo_name": "alexni/customs", "path": "/src/main/java/ru/customs/entity/ClaimEntity.java", "source": "the-stack-v2", "method_name": "setHaveNewMessages", "class_name": "ClaimEntity", "index": 2106, "label": 1}
{"input": "public void testBug97322() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b97322/Test.java\",\n\t\t\"package b97322;\\n\" +\n\t\t\"class Test {\\n\" +\n\t\t\"\tstatic void myMethod(int a, String b) {}\\n\" +\n\t\t\"\tvoid call() {\\n\" +\n\t\t\"\t\tmyMethod(12);\\n\" +\n\t\t\"\t}\\n\" +\n\t\t\"}\"\n\t);\n\tIType type = this.workingCopies[0].getType(\"Test\");\n\tIMethod method= type.getMethods()[0];\n\tsearch(method, REFERENCES);\n\tassertSearchResults(\"\"); \n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug97322", "class_name": "JavaSearchBugsTests", "index": 2107, "label": 1}
{"input": "public void testBug142044_And01() throws CoreException {\n\tSearchPattern leftPattern = createPattern(\"X*\", CLASS, DECLARATIONS, true);\n\tIType iType = getCompilationUnit(\"JavaSearchBugs\", \"src\", \"b142044\", \"I142044_A.java\").getType(\"I142044_A\");\n\tSearchPattern rightPattern = SearchPattern.createPattern(iType, IMPLEMENTORS);\n\tsearch(SearchPattern.createAndPattern(leftPattern, rightPattern), getJavaSearchScope(), this.resultCollector);\n\tassertSearchResults(\"\"); \n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug142044_And01", "class_name": "JavaSearchBugsTests", "index": 2108, "label": 1}
{"input": "public static org.datacontract.schemas._2004._07.microsoft_practices_enterpriselibrary_validation_integration_wcf.ValidationDetail parse(java.lang.String xmlAsString) throws org.apache.xmlbeans.XmlException {\n          return (org.datacontract.schemas._2004._07.microsoft_practices_enterpriselibrary_validation_integration_wcf.ValidationDetail) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( xmlAsString, type, null ); }", "timestamp": "2021-05-31T07:40:57.713006Z", "repo_name": "OLINSolutions/eiservices", "path": "/utote/wsdl2java/programservice/xmlbeans/src/org/datacontract/schemas/_2004/_07/microsoft_practices_enterpriselibrary_validation_integration_wcf/ValidationDetail.java", "source": "the-stack-v2", "method_name": "parse", "class_name": "Factory", "index": 2109, "label": 1}
{"input": "public int GetItemsChecked(){\n\t\tint count = 0;\n\t\t\n\t\tfor( int i = 0; i < alist.size(); i++ )\n\t\t if( alist.get(i).checked )\n\t\t\t count++;\n\t\t\n\t\treturn count;\t\t\t\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "GetItemsChecked", "class_name": "jListView", "index": 2110, "label": 1}
{"input": "@Override\n    public CheckAndMutateBuilder ifMatches(CompareOperator compareOp, byte[] value) {\n      this.op = Preconditions.checkNotNull(compareOp, \"compareOp is null\");\n      this.value = Preconditions.checkNotNull(value, \"value is null\");\n      return this;\n    }", "timestamp": "2020-03-21T15:28:16.237120Z", "repo_name": "siwuxietang/hbase", "path": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncTableImpl.java", "source": "the-stack-v2", "method_name": "ifMatches", "class_name": "CheckAndMutateBuilderImpl", "index": 2111, "label": 1}
{"input": "public Criteria andVdef17IsNotNull() {\r\n            addCriterion(\"VDEF17 is not null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef17IsNotNull", "class_name": "GeneratedCriteria", "index": 2112, "label": 1}
{"input": "public void testReflectionHashCodeEx1() {\n        try {\n            HashCodeBuilder.reflectionHashCode(0, 0, new TestObject(0), true);\n        } catch (IllegalArgumentException ex) {\n            return;\n        }\n        fail();\n    }", "timestamp": "2022-02-13T19:44:43.869060Z", "repo_name": "SpoonLabs/nopol-experiments", "path": "/dataset/cl1/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java", "source": "the-stack-v2", "method_name": "testReflectionHashCodeEx1", "class_name": "HashCodeBuilderTest", "index": 2113, "label": 1}
{"input": "@Override\n        public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\n\n\n\n\n            \n            App appInfo = (App) mSpinner.getTag();\n\n            if(isWifi){\n                mWiflSelectedMap.put(appInfo.getId(),position);\n\n                if(appInfo.getWifiType()!=position){\n                    appInfo.setWifiType(position);\n                    appInfo.save();\n                }\n\n            }else{\n                mMobileSelectedMap.put(appInfo.getId(),position);\n                if(appInfo.getMobileDataType()!=position){\n                    appInfo.setMobileDataType(position);\n                    appInfo.save();\n                }\n\n            }\n\n\n        }", "timestamp": "2021-08-14T18:00:21.876776Z", "repo_name": "litangyu/NetKnight", "path": "/app/src/main/java/com/pencilbox/netknight/presentor/AppInfoAdapter.java", "source": "the-stack-v2", "method_name": "onItemSelected", "class_name": "OnSpinnerItemListener", "index": 2114, "label": 1}
{"input": "@Override\n  public List<CompletableFuture<Result>> get(List<Get> gets) {\n    return batch(gets, readRpcTimeoutNs);\n  }", "timestamp": "2020-03-21T15:28:16.237120Z", "repo_name": "siwuxietang/hbase", "path": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncTableImpl.java", "source": "the-stack-v2", "method_name": "get", "class_name": "RawAsyncTableImpl", "index": 2115, "label": 1}
{"input": "@Override\n  public boolean onCreateOptionsMenu(Menu menu) {\n    getMenuInflater().inflate(R.menu.npc_main, menu);\n    return true;\n  }", "timestamp": "2021-01-17T15:47:42.916793Z", "repo_name": "jaychang0917/nPhotoCropper", "path": "/library/src/main/java/com/jaychang/npc/CropperActivity.java", "source": "the-stack-v2", "method_name": "onCreateOptionsMenu", "class_name": "CropperActivity", "index": 2116, "label": 1}
{"input": "@Test public void testStartOfGroupLeadStep1() {\n    startOfGroupStep1(\"val = lead(val, -1) over (order by rn)\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testStartOfGroupLeadStep1", "class_name": "JdbcTest", "index": 2117, "label": 1}
{"input": "public String getMethodName()\r\n\t{\r\n\t\tString method_name = (String)getAuxData(AUX_MethodName);\r\n\t\treturn (method_name != null) ? method_name : \"\";\r\n\t}", "timestamp": "2016-09-06T00:09:42.383260Z", "repo_name": "weeeBox/oldies-flex-parser", "path": "/src/macromedia/asc/semantics/VariableSlot.java", "source": "the-stack-v2", "method_name": "getMethodName", "class_name": "VariableSlot", "index": 2118, "label": 1}
{"input": "@Override\r\n\t\tpublic ITextComponent getDefaultName() {\r\n\t\t\treturn new StringTextComponent(\"snowy_red_container_2\");\r\n\t\t}", "timestamp": "2023-08-24T17:39:59.738030Z", "repo_name": "ChrisCraddock/Crates-and-Containers", "path": "/src/main/java/net/mcreator/blocktesting/block/SnowyRedContainer2Block.java", "source": "the-stack-v2", "method_name": "getDefaultName", "class_name": "CustomTileEntity", "index": 2119, "label": 1}
{"input": "public static org.datacontract.schemas._2004._07.microsoft_practices_enterpriselibrary_validation_integration_wcf.ValidationDetail parse(org.w3c.dom.Node node) throws org.apache.xmlbeans.XmlException {\n          return (org.datacontract.schemas._2004._07.microsoft_practices_enterpriselibrary_validation_integration_wcf.ValidationDetail) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( node, type, null ); }", "timestamp": "2021-05-31T07:40:57.713006Z", "repo_name": "OLINSolutions/eiservices", "path": "/utote/wsdl2java/programservice/xmlbeans/src/org/datacontract/schemas/_2004/_07/microsoft_practices_enterpriselibrary_validation_integration_wcf/ValidationDetail.java", "source": "the-stack-v2", "method_name": "parse", "class_name": "Factory", "index": 2120, "label": 1}
{"input": "@Override\n    public int getItemCount() {\n        if (items != null) {\n            return items.getCount();\n        }\n        return 0;\n    }", "timestamp": "2021-01-11T01:50:53.488192Z", "repo_name": "breinergonza/conexion_serv", "path": "/app/src/main/java/com/feedhenry/armark/Adaptadores/Adaptador_Almacen.java", "source": "the-stack-v2", "method_name": "getItemCount", "class_name": "Adaptador_Almacen", "index": 2121, "label": 1}
{"input": "public BasicBeanDescription forDeserializationWithBuilder(DeserializationConfig deserializationConfig, JavaType javaType, ClassIntrospector.MixInResolver mixInResolver) {\n        return BasicBeanDescription.forDeserialization(collectPropertiesWithBuilder(deserializationConfig, javaType, mixInResolver, false));\n    }", "timestamp": "2023-01-09T08:37:22.062350Z", "repo_name": "TheWizard91/Album_base_source_from_JADX", "path": "/sources/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java", "source": "the-stack-v2", "method_name": "forDeserializationWithBuilder", "class_name": "BasicClassIntrospector", "index": 2122, "label": 1}
{"input": "@Test public void testWinAggPartitionByConstant() {\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.REGULAR)\n        .query(\"\"\n            \n            \n            \n            + \"select max(\\\"empid\\\"*0) over (partition by 42\\n\"\n            + \"  order by \\\"empid\\\") as m\\n\"\n            + \"from \\\"hr\\\".\\\"emps\\\"\")\n        .returnsUnordered(\n            \"M=0\",\n            \"M=0\",\n            \"M=0\",\n            \"M=0\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testWinAggPartitionByConstant", "class_name": "JdbcTest", "index": 2123, "label": 1}
{"input": "public Criteria andIdLessThan(String value) {\n            addCriterion(\"ID <\", value, \"id\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andIdLessThan", "class_name": "GeneratedCriteria", "index": 2124, "label": 1}
{"input": "public HashMap <Integer, ArrayList<String>> getHashMapUserPlayer(){\n        return userdeckClassfic_ingame;\n    }", "timestamp": "2022-04-05T08:05:37.146346Z", "repo_name": "dart-bird/ERICA_LOL", "path": "/leagueofjava/ClassSet/Content/UserContent.java", "source": "the-stack-v2", "method_name": "getHashMapUserPlayer", "class_name": "UserContent", "index": 2125, "label": 1}
{"input": "private void MULTActionPerformed(java.awt.event.ActionEvent evt) {\n        double N1, N2, R;\n        N1= Double.parseDouble(NUM1.getText());\n        N2 = Double.parseDouble(NUM2.getText());\n        R= N1 * N2;RESULTADO.setText(String.valueOf(R));\n    }", "timestamp": "2023-06-22T16:51:24.691992Z", "repo_name": "Guizal/Java", "path": "/src/ExemploCalculadora.java", "source": "the-stack-v2", "method_name": "MULTActionPerformed", "class_name": "ExemploCalculadora", "index": 2126, "label": 1}
{"input": "public void SetHighLightSelectedItem(boolean _value)  {  \n\t\t\n\t\tif (highLightColor == Color.TRANSPARENT) highLightColor = Color.parseColor(\"#e6e6fa\"); \n\t\t\n\t\thighLightSelectedItem = _value;\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "SetHighLightSelectedItem", "class_name": "jListView", "index": 2127, "label": 1}
{"input": "@Override\n\tpublic Timestamp convertToDatabaseColumn(LocalDateTime locDateTime) {\n\t\t return locDateTime == null ? null : Timestamp.valueOf(locDateTime);\n\t}", "timestamp": "2020-07-13T07:00:49.732072Z", "repo_name": "Shirankl/postsProjRep", "path": "/post/src/main/java/com/exercise/post/LocalDateTimeAttributeConverter.java", "source": "the-stack-v2", "method_name": "convertToDatabaseColumn", "class_name": "LocalDateTimeAttributeConverter", "index": 2128, "label": 1}
{"input": "public boolean padawan_the_ring_02_condition__defaultCondition(obj_id player, obj_id npc) throws InterruptedException\n    {\n        return true;\n    }", "timestamp": "2020-04-06T11:18:36.110302Z", "repo_name": "geralex/SWG-NGE", "path": "/dsrc/sku.0/sys.server/compiled/game/script/conversation/padawan_the_ring_02.java", "source": "the-stack-v2", "method_name": "padawan_the_ring_02_condition__defaultCondition", "class_name": "padawan_the_ring_02", "index": 2129, "label": 1}
{"input": "public Criteria andIdIsNull() {\n            addCriterion(\"id is null\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andIdIsNull", "class_name": "GeneratedCriteria", "index": 2130, "label": 1}
{"input": "public void output(NodeList nodeList) {    \n        int size = nodeList.getLength();\n        for (int k = 0; k < size; k++) {\n            Node node = nodeList.item(k);\n            if (node.getNodeType() == Node.TEXT_NODE) {\n                Text textNode = (Text) node;\n                String content = textNode.getWholeText();\n                m++;\n                System.out.print(content);\n            }\n            if (node.getNodeType() == Node.ELEMENT_NODE) {\n                Element elementNode = (Element) node;\n                String name = elementNode.getNodeName();\n                System.out.print(name + \":\");\n                NodeList nodes = elementNode.getChildNodes();\n                output(nodes);\n            }\n        }\n    }", "timestamp": "2021-01-18T16:01:45.465010Z", "repo_name": "EastLord/parse-xml", "path": "/src/JAXP/JAXPFour.java", "source": "the-stack-v2", "method_name": "output", "class_name": "GiveData", "index": 2131, "label": 1}
{"input": "@Test\n    public void testCalculateOpacityTransform_zeroOpacity() {\n        assertEquals(Color.WHITE, ThemeUtils.calculateOpacityTransform(0, Color.BLUE, Color.WHITE));\n    }", "timestamp": "2022-01-15T12:16:50.544880Z", "repo_name": "one3chens/digits-android", "path": "/digits/src/test/java/com/digits/sdk/android/ThemeUtilsTest.java", "source": "the-stack-v2", "method_name": "testCalculateOpacityTransform_zeroOpacity", "class_name": "ThemeUtilsTest", "index": 2132, "label": 1}
{"input": "@Benchmark\n    public int testMarketEncode() throws IOException {\n        final CodedOutputStream output = CodedOutputStream.newInstance(encodeBuffer);\n        buildMarketData(marketData).writeTo(output);\n        return output.getTotalBytesWritten();\n    }", "timestamp": "2023-08-16T00:56:34.729730Z", "repo_name": "HebiRobotics/QuickBuffers", "path": "/benchmarks/src/main/java/us/hebi/quickbuf/benchmarks/comparison/SbeThroughputBenchmarkProtobuf.java", "source": "the-stack-v2", "method_name": "testMarketEncode", "class_name": "SbeThroughputBenchmarkProtobuf", "index": 2133, "label": 1}
{"input": "@Override\n    public void onCacheUnpaused() {\n        super.onCacheUnpaused();\n\n        \n        mBlurScrimImage.loadBlurImage(ElevenUtils.getImageFetcher(this));\n    }", "timestamp": "2020-04-13T03:12:46.332070Z", "repo_name": "Forsakenrox/Eleven", "path": "/src/main/java/org/lineageos/eleven/ui/activities/SlidingPanelActivity.java", "source": "the-stack-v2", "method_name": "onCacheUnpaused", "class_name": "SlidingPanelActivity", "index": 2134, "label": 1}
{"input": "private void selectItem(int position) {\n        mCurrentSelectedPosition = position;\n        if (mDrawerListView != null) {\n            mDrawerListView.setItemChecked(position, true);\n        }\n        if (mDrawerLayout != null) {\n            mDrawerLayout.closeDrawer(mFragmentContainerView);\n        }\n        if (mCallbacks != null) {\n            mCallbacks.onNavigationDrawerItemSelected(position);\n        }\n    }", "timestamp": "2021-01-17T07:08:24.227897Z", "repo_name": "Aman-B/newsreader", "path": "/app/src/main/java/com/amanb/aman/feedreader/NavigationDrawerFragment.java", "source": "the-stack-v2", "method_name": "selectItem", "class_name": "NavigationDrawerFragment", "index": 2135, "label": 1}
{"input": "private void StartNewWindow() {\n\n        ++window_counter;\n        ++window_no;\n\n        st = Integer.toString(window_no);\n\n        Frame_class f = new Frame_class(\"Text Editor 1.0 By Rajagopal Neelakantan : New Window  \" + st);\n\n        f.setSize(700, 600);\n    }", "timestamp": "2020-05-06T15:49:29.551449Z", "repo_name": "gokcse/Go-Cloud", "path": "/Go Cloud Source Code/Netbeans 6.1 - Virtual Machine/CloudComputingServer/src/org/cit/CloudComputing/T_Editor.java", "source": "the-stack-v2", "method_name": "StartNewWindow", "class_name": "Frame_class", "index": 2136, "label": 1}
{"input": "public int getVehiculosCount() {\n        EntityManager em = getEntityManager();\n        try {\n            CriteriaQuery cq = em.getCriteriaBuilder().createQuery();\n            Root<Vehiculos> rt = cq.from(Vehiculos.class);\n            cq.select(em.getCriteriaBuilder().count(rt));\n            Query q = em.createQuery(cq);\n            return ((Long) q.getSingleResult()).intValue();\n        } finally {\n            em.close();\n        }\n    }", "timestamp": "2022-12-02T11:31:39.644405Z", "repo_name": "Dakkar05/Prueba-Bimestral", "path": "/src/java/controller/VehiculosJpaController.java", "source": "the-stack-v2", "method_name": "getVehiculosCount", "class_name": "VehiculosJpaController", "index": 2137, "label": 1}
{"input": "public static boolean contains(Rectangle2D rect1, Rectangle2D rect2) {\n\n        double x0 = rect1.getX();\n        double y0 = rect1.getY();\n        double x = rect2.getX();\n        double y = rect2.getY();\n        double w = rect2.getWidth();\n        double h = rect2.getHeight();\n\n        return ((x >= x0) && (y >= y0)\n                && ((x + w) <= (x0 + rect1.getWidth()))\n                && ((y + h) <= (y0 + rect1.getHeight())));\n\n    }", "timestamp": "2021-04-17T05:37:48.393527Z", "repo_name": "wuhongjun15/overfitting-study", "path": "/DiffTGen-result/output/Chart_11_1_capgen/patch/instru1/ShapeUtilities.java", "source": "the-stack-v2", "method_name": "contains", "class_name": "ShapeUtilities", "index": 2138, "label": 1}
{"input": "public static String getDeviceIMSI(Context context) {\n        if (!TextUtils.isEmpty(deviceIMSI)) {\n            return deviceIMSI;\n        }\n        if (context == null) {\n            return \"\";\n        }\n        try {\n            TelephonyManager telephonyManager = (TelephonyManager) context.getSystemService(\"phone\");\n            if (telephonyManager != null) {\n                String subscriberId = telephonyManager.getSubscriberId();\n                deviceIMSI = subscriberId;\n                if (subscriberId == null) {\n                    deviceIMSI = \"\";\n                }\n                return deviceIMSI;\n            }\n        } catch (Throwable th) {\n        }\n        return \"\";\n    }", "timestamp": "2022-01-27T12:48:43.446804Z", "repo_name": "jambestwick/HackWechat", "path": "/app/src/main/java/com/tencent/qqvideo/proxy/common/VcSystemInfo.java", "source": "the-stack-v2", "method_name": "getDeviceIMSI", "class_name": "VcSystemInfo", "index": 2139, "label": 1}
{"input": "public static String getCurrentTime() {\n\t\t\treturn getFormatDateTime(new Date(), \"yyyy-MM-dd HH:mm:ss\");\n\t\t}", "timestamp": "2020-04-03T19:08:02.936008Z", "repo_name": "xhly521/AAHelper", "path": "/app/src/main/java/com/xhly/godutch/utility/DateTools.java", "source": "the-stack-v2", "method_name": "getCurrentTime", "class_name": "DateTools", "index": 2140, "label": 1}
{"input": "@Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      SimpleNode simpleNode0 = new SimpleNode(0);\n      SimpleNode simpleNode1 = new SimpleNode(0);\n      simpleNode0.jjtAddChild(simpleNode1, 0);\n      simpleNode0.jjtGetChild(0);\n      assertEquals(1, simpleNode0.jjtGetNumChildren());\n  }", "timestamp": "2023-04-17T20:05:40.560943Z", "repo_name": "bellmit/termite-replication", "path": "/tests/time/mosa/tests/s1007/19_jmca/evosuite-tests/com/soops/CEN4010/JMCA/JParser/SimpleNode_ESTest.java", "source": "the-stack-v2", "method_name": "test03", "class_name": "SimpleNode_ESTest", "index": 2141, "label": 1}
{"input": "public boolean isLinkEditDisplayed() {\n\t\ttry {\n\t\t\tif (driver.findElement(linkEdit).isDisplayed() == true) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch (Exception e) {\n\n\t\t\treturn false;\n\t\t}\n\t}", "timestamp": "2023-04-28T20:07:48.832750Z", "repo_name": "JohnTo88/Wize_L-D", "path": "/src/main/java/talentwize/pages/TimesheetConfigurations_Task.java", "source": "the-stack-v2", "method_name": "isLinkEditDisplayed", "class_name": "TimesheetConfigurations_Task", "index": 2142, "label": 1}
{"input": "public void getFour(View view){\n        operation  +=\"4\";\n        editText.setText(operation);\n    }", "timestamp": "2021-05-31T01:02:53.417110Z", "repo_name": "phndavid/calculator", "path": "/Calculator/app/src/main/java/com/master/ndavid/calculator/MainActivity.java", "source": "the-stack-v2", "method_name": "getFour", "class_name": "MainActivity", "index": 2143, "label": 1}
{"input": "public static String getDaySelect(String selectName, String value,\n\t\t\t\tboolean hasBlank, String js) {\n\t\t\tStringBuffer sb = new StringBuffer(\"\");\n\t\t\tsb.append(\"<select name=\\\"\" + selectName + \"\\\" \" + js + \">\");\n\t\t\tif (hasBlank) {\n\t\t\t\tsb.append(\"<option value=\\\"\\\"></option>\");\n\t\t\t}\n\t\t\tfor (int i = 1; i <= 31; i++) {\n\t\t\t\tif (!value.trim().equals(\"\") && i == Integer.parseInt(value)) {\n\t\t\t\t\tsb.append(\"<option value=\\\"\" + i + \"\\\" selected>\" + i\n\t\t\t\t\t\t\t+ \"</option>\");\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(\"<option value=\\\"\" + i + \"\\\">\" + i + \"</option>\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tsb.append(\"<select name=\\\"\"2);\n\t\t\treturn sb.toString();\n\t\t}", "timestamp": "2020-04-03T19:08:02.936008Z", "repo_name": "xhly521/AAHelper", "path": "/app/src/main/java/com/xhly/godutch/utility/DateTools.java", "source": "the-stack-v2", "method_name": "getDaySelect", "class_name": "DateTools", "index": 2144, "label": 1}
{"input": "@Override\r\n    public void unregisterObserver(Observer observer) {\r\n        if(observer != null) {\r\n            this.registeredObservers.remove(observer);\r\n        }\r\n    }", "timestamp": "2020-05-17T23:05:08.022297Z", "repo_name": "TrueIchiro/SS4", "path": "/SWP4VO/Java programs/SWP4_NIEDERMAYR_UE02/Übung02/Beispiel_01/Blocks/Implementations/DifferentialBlock.java", "source": "the-stack-v2", "method_name": "unregisterObserver", "class_name": "DifferentialBlock", "index": 2145, "label": 1}
{"input": "@GraphProperty(interceptor = StringToHybrisEnumValueConverter.class)\n\tpublic String getLogLevelDatabase()\n\t{\n\t\treturn logLevelDatabase;\n\t}", "timestamp": "2022-11-28T12:15:32.049256Z", "repo_name": "BaggaShivanshu2/hybris-bookstore-tutorial", "path": "/hybris/bin/ext-platform-optional/platformwebservices/custom/src/de/hybris/platform/cronjob/customdto/CronJobDTO.java", "source": "the-stack-v2", "method_name": "getLogLevelDatabase", "class_name": "CronJobDTO", "index": 2146, "label": 1}
{"input": "@Test\n    @Transactional\n    public void createUnit() throws Exception {\n        int databaseSizeBeforeCreate = unitRepository.findAll().size();\n\n        \n        restUnitMockMvc.perform(post(\"/api/units\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(unit)))\n            .andExpect(status().isCreated());\n\n        \n        List<Unit> unitList = unitRepository.findAll();\n        assertThat(unitList).hasSize(databaseSizeBeforeCreate + 1);\n        Unit testUnit = unitList.get(unitList.size() - 1);\n        assertThat(testUnit.getUnitType()).isEqualTo(DEFAULT_UNIT_TYPE);\n    }", "timestamp": "2022-12-21T12:20:33.195209Z", "repo_name": "bahmetpalanci/katilimcivatandas", "path": "/src/test/java/com/municipality/katilimcivatandas/web/rest/UnitResourceIT.java", "source": "the-stack-v2", "method_name": "createUnit", "class_name": "UnitResourceIT", "index": 2147, "label": 1}
{"input": "@Override\n        public Object getItem(int position){\n            return data.get(position);\n        }", "timestamp": "2020-04-12T22:38:44.941612Z", "repo_name": "l1000965431/moneyclient", "path": "/app/src/main/java/com/dragoneye/wjjt/activity/base/ImageMulSelectedActivity.java", "source": "the-stack-v2", "method_name": "getItem", "class_name": "ImageSelectAdapter", "index": 2148, "label": 1}
{"input": "@Override\n        public JspConfigDescriptor getJspConfigDescriptor() {\n            throw new UnsupportedOperationException(\n                    sm.getString(\"noPluggabilityServletContext.notAllowed\"));\n        }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "getJspConfigDescriptor", "class_name": "NoPluggabilityServletContext", "index": 2149, "label": 1}
{"input": "public static void main(String[] args) {\n        double v = myPow(2, -2);\n        System.out.println(v);\n    }", "timestamp": "2020-03-28T01:07:39.116842Z", "repo_name": "ShawFengZ/swordToOffer", "path": "/src/leetcode2/math/middle/T50_myPow.java", "source": "the-stack-v2", "method_name": "main", "class_name": "T50_myPow", "index": 2150, "label": 1}
{"input": "@Test public void testNotInEmptyQuery() {\n    \n    \n    final String sql = \"select deptno from emp where deptno not in (\\n\"\n        + \"select deptno from dept where deptno = -1)\";\n    withEmpDept(sql)\n\n\n\n\n\n        .returnsUnordered(\"DEPTNO=null\",\n            \"DEPTNO=10\",\n            \"DEPTNO=10\",\n            \"select deptno from dept where deptno = -1)\"0,\n            \"select deptno from dept where deptno = -1)\"1,\n            \"select deptno from dept where deptno = -1)\"1,\n            \"select deptno from dept where deptno = -1)\"3,\n            \"select deptno from dept where deptno = -1)\"3,\n            \"select deptno from dept where deptno = -1)\"5);\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testNotInEmptyQuery", "class_name": "JdbcTest", "index": 2151, "label": 1}
{"input": "public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n        if (requestCode == REQUEST_CODE) {\n            if (grantResults.length > 0) {\n                for (int i = 0; i < grantResults.length; i++) {\n                    if (grantResults[i] != PackageManager.PERMISSION_GRANTED) {\n                        return;\n                    }\n                    else\n                        mLocationPermissionGranted = true;\n                }\n            }\n        }\n    }", "timestamp": "2022-11-11T01:16:25.347455Z", "repo_name": "FawwazFaisal/BloodDotNet", "path": "/app/src/main/java/com/omnitech/blooddonationnetwork/MainActivity.java", "source": "the-stack-v2", "method_name": "onRequestPermissionsResult", "class_name": "MainActivity", "index": 2152, "label": 1}
{"input": "public void getBinVor(int a) {\r\n\t\tgetBin(a);\r\n\t\tString sZahl;\r\n\t\tString s = Bin.replaceAll(\" \", \"\");\r\n\t\tString sZeichen = s.substring(0, 1);\r\n\t\tSystem.out.println(sZeichen);\r\n\t\tif(a == 0) {\r\n\t\t\tsZahl = s.substring(1, 16);\r\n\t\t}else {\r\n\t\t\tsZahl = s.substring(1, 32);\r\n\t\t}\r\n\t\tSystem.out.println(sZahl);\r\n\t\tint dualZahl = Integer.parseInt(sZahl, 2);\r\n\t\tString sVorzeichen;\r\n\t\tif(sZeichen.charAt(0) == '0') {\r\n\t\t\tsVorzeichen = \"+\";\r\n\t\t}else {\r\n\t\t\tsVorzeichen = \"-\";\r\n\t\t}\r\n\t\tJOptionPane.showMessageDialog(null, \"Die Zahl in Vorzeichen-Betrag-Darstellung lautet: \" + sVorzeichen + dualZahl);\r\n\t}", "timestamp": "2023-02-07T15:33:45.591851Z", "repo_name": "MrTwinkleMoon/Grundlagen-der-Informatik", "path": "/BinaryString.java", "source": "the-stack-v2", "method_name": "getBinVor", "class_name": "BinaryString", "index": 2153, "label": 1}
{"input": "private void configureColumns(ScannerBase scanner) {\n      families.forEach(scanner::fetchColumnFamily);\n      qualifiers.forEach(col -> col.fetch(scanner));\n      if (families.isEmpty() && qualifiers.isEmpty()) {\n        fetchedCols = EnumSet.allOf(ColumnType.class);\n      }\n    }", "timestamp": "2023-08-31T07:35:03.455133Z", "repo_name": "ctubbsii/accumulo", "path": "/core/src/main/java/org/apache/accumulo/core/metadata/schema/TabletsMetadata.java", "source": "the-stack-v2", "method_name": "configureColumns", "class_name": "Builder", "index": 2154, "label": 1}
{"input": "@Test\n    @SmallTest\n    @Feature({\"Preferences\"})\n    @Features.EnableFeatures(ChromeFeatureList.PASSWORD_EDITING_ANDROID)\n    public void testSelectedStoredPasswordDataIsSameAsEditedPasswordData() throws Exception {\n        setPasswordSourceWithMultipleEntries( \n                new SavedPasswordEntry[] {new SavedPasswordEntry(\"https://example.com\",\n                                                  \"example user\", \"example password\"),\n                        new SavedPasswordEntry(\"https://test.com\", \"test user\", \"test password\")});\n\n        PreferencesTest.startPreferences(InstrumentationRegistry.getInstrumentation(),\n                SavePasswordsPreferences.class.getName());\n\n        Espresso.onView(withText(containsString(\"test user\"))).perform(click());\n\n        Espresso.onView(withEditMenuIdOrText()).perform(click());\n\n        Espresso.onView(withId(R.id.site_edit)).check(matches(withText(\"https://test.com\")));\n    }", "timestamp": "2022-12-08T04:12:54.583056Z", "repo_name": "yeahhhhhhhh/chromium_quic", "path": "/src/chrome/android/javatests/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferencesTest.java", "source": "the-stack-v2", "method_name": "testSelectedStoredPasswordDataIsSameAsEditedPasswordData", "class_name": "SavePasswordsPreferencesTest", "index": 2155, "label": 1}
{"input": "private void goodG2B2() throws Throwable\n    {\n        float data;\n        if (true)\n        {\n            \n            data = 2.0f;\n        }\n        else\n        {\n            \n            data = 0.0f;\n        }\n\n        if (true)\n        {\n            \n            int result = (int)(100.0 / data);\n            IO.writeLine(result);\n        }\n    }", "timestamp": "2023-06-02T00:37:24.532638Z", "repo_name": "rubengomez97/juliet", "path": "/src/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__float_zero_divide_02.java", "source": "the-stack-v2", "method_name": "goodG2B2", "class_name": "CWE369_Divide_by_Zero__float_zero_divide_02", "index": 2156, "label": 1}
{"input": "@Override\r\n    public InetSocketAddress getLocalAddress() {\r\n        return channel.getLocalAddress();\r\n    }", "timestamp": "2021-05-10T13:47:01.148671Z", "repo_name": "archerda/dubbo", "path": "/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/header/HeaderExchangeClient.java", "source": "the-stack-v2", "method_name": "getLocalAddress", "class_name": "HeaderExchangeClient", "index": 2157, "label": 1}
{"input": "private boolean shouldGuidelinesBeShown() {\n        return ((mGuidelinesMode == GUIDELINES_ON)\n                || ((mGuidelinesMode == GUIDELINES_ON_TOUCH) && (mPressedHandle != null)));\n    }", "timestamp": "2022-05-06T21:27:51.136578Z", "repo_name": "Jelly0726/JellyBase", "path": "/library/baselibrary/src/main/java/com/jelly/baselibrary/cropper/CropImageView.java", "source": "the-stack-v2", "method_name": "shouldGuidelinesBeShown", "class_name": "CropImageView", "index": 2158, "label": 1}
{"input": "@Test public void testJoinManyWay() {\n    \n    \n    \n    \n    \n    \n    \n    \n    checkJoinNWay(1);\n    checkJoinNWay(3);\n    checkJoinNWay(6);\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testJoinManyWay", "class_name": "JdbcTest", "index": 2159, "label": 1}
{"input": "static void searchWord(TrieNode root, boolean Hash[],\n                           String str)\n    {\n        \n        if (root.leaf == true)\n            System.out.println(str);\n\n        \n\n                \n                \n                searchWord(root.Child[K], Hash, str + c);\n            }\n        }\n    }", "timestamp": "2020-04-12T22:38:36.898976Z", "repo_name": "swapnilbagadia/practice", "path": "/src/main/java/tries/ValidWordsFromDictionary.java", "source": "the-stack-v2", "method_name": "searchWord", "class_name": "ValidWordsFromDictionary", "index": 2160, "label": 1}
{"input": "@Override\n\tpublic Node getEditor() {\n\t\treturn new AccessButton(AccessFlag.Type.METHOD, getValue().intValue()) {\n\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\t@Override\n\t\t\tpublic void setAccess(int access) {\n\t\t\t\tsuper.setAccess(access);\n\t\t\t\tsetValue((T) Integer.valueOf(access));\n\t\t\t}\n\t\t};\n\t}", "timestamp": "2020-04-23T19:55:19.090354Z", "repo_name": "zgkxzx/Recaf", "path": "/src/me/coley/recaf/ui/component/editor/AccessMethodEditor.java", "source": "the-stack-v2", "method_name": "getEditor", "class_name": "AccessMethodEditor", "index": 2161, "label": 1}
{"input": "public void setStatementDate(String statementDate) {\n        this.statementDate = statementDate;\n    }", "timestamp": "2023-08-29T22:45:42.523774Z", "repo_name": "alexcarrdev/azure-demo-poc", "path": "/src/main/java/models/Meta.java", "source": "the-stack-v2", "method_name": "setStatementDate", "class_name": "Meta", "index": 2162, "label": 1}
{"input": "public void unbindCustomTabsService(@NonNull Context context) {\n        if (isDisconnected()) {\n            return;\n        }\n\n        try {\n            context.unbindService(serviceConnection);\n        } catch (IllegalArgumentException iae) {\n            Log.e(\"SimpleChromeCustomTabs\", \"There was a problem unbinding from a CustomTabs service. :/\", iae);\n        } finally {\n            serviceConnection.onServiceDisconnected(null);\n            serviceConnection = null;\n        }\n    }", "timestamp": "2021-01-21T12:58:24.642241Z", "repo_name": "meierjan/simple-chrome-custom-tabs", "path": "/library/src/main/java/com/novoda/simplechromecustomtabs/connection/Binder.java", "source": "the-stack-v2", "method_name": "unbindCustomTabsService", "class_name": "Binder", "index": 2163, "label": 1}
{"input": "public void criarTabela(String nomeTabela){\n        try{\n            String sql=\"CREATE TABLE \"+nomeTabela+\"(matricula integer NOT NULL,\\n\" +\n            \"  nome character varying(45), curso character varying(45),\\n\" +\n            \"  disciplina character varying(45), turma integer, ano integer,\\n\" +\n            \"  semestre integer, CONSTRAINT \"+nomeTabela+\"_pkey PRIMARY KEY (matricula))\";            \n            PreparedStatement ps=conectarBanco().prepareStatement(sql);\n            ps.execute();\n            System.out.println(\"Tabela \"+nomeTabela+\" criada com sucesso!\");\n            ps.close();\n            desconectarBanco();\n            \n        }catch(SQLException e){\n            \n        }\n    }", "timestamp": "2016-09-05T09:25:30.232129Z", "repo_name": "ChristianARamos/JAVA-BancoArq", "path": "/Banco/Banco.java", "source": "the-stack-v2", "method_name": "criarTabela", "class_name": "Banco", "index": 2164, "label": 1}
{"input": "@Override \n        public void iccCloseLogicalChannelResponse(RadioResponseInfo info) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(106, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "iccCloseLogicalChannelResponse", "class_name": "Proxy", "index": 2165, "label": 1}
{"input": "public ArrayList<String> getAllPrefs() {\n        ArrayList<String> array_list = new ArrayList<String>();\n\n        \n        SQLiteDatabase db = this.getReadableDatabase();\n        Cursor res =  db.rawQuery( \"select * from prefs\", null );\n        res.moveToFirst();\n\n        while(res.isAfterLast() == false){\n            array_list.add(res.getString(res.getColumnIndex(PREFS_COLUMN_ID)));\n            res.moveToNext();\n        }\n        return array_list;\n    }", "timestamp": "2020-03-22T13:09:56.343529Z", "repo_name": "JamesHarley/BTWeatherStation", "path": "/app/src/main/java/gnosisdevelopment/arduinobtweatherstation/DBHelper.java", "source": "the-stack-v2", "method_name": "getAllPrefs", "class_name": "DBHelper", "index": 2166, "label": 1}
{"input": "@Override\n      public Request setUploadType(java.lang.String uploadType) {\n        return (Request) super.setUploadType(uploadType);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setUploadType", "class_name": "Request", "index": 2167, "label": 1}
{"input": "void checkIsSimpleName() throws HsqlException {\n\n        if (!isSimpleName()) {\n            throw unexpectedToken();\n        }\n    }", "timestamp": "2023-09-03T10:33:34.963710Z", "repo_name": "svn2github/hsqldb", "path": "/base/branches/odbcproto1/src/org/hsqldb/ParserBase.java", "source": "the-stack-v2", "method_name": "checkIsSimpleName", "class_name": "ParserBase", "index": 2168, "label": 1}
{"input": "@Test\r\n\tpublic void checkEqual() {\r\n\r\n\t\tString name=\"Sanjay\";\r\n\r\n\t\t\n\r\n\t\t\n\r\n\t\t\n\r\n\t\t\n\r\n\t\t\n\t\t\n\t\t\r\n\t\t\n\t\t\r\n\t\t\r\n\t\tAssert.assertEquals(name, \"Sanjay\");\r\n\r\n\r\n\r\n\r\n\t}", "timestamp": "2022-11-30T12:47:54.873255Z", "repo_name": "SANJAY-46/SeleniumTutorials", "path": "/SeleniumTutorials/src/testNG/AssertionsExample.java", "source": "the-stack-v2", "method_name": "checkEqual", "class_name": "AssertionsExample", "index": 2169, "label": 1}
{"input": "public Set<TVar> ftv(){\n\t\tType l = ((TArr)this).getLtype();\n\t\tType r = ((TArr)this).getRtype();\n\t\tSet<TVar> s = new TreeSet<TVar>();\n\t\t\n\t\ts.addAll(l.ftv());\n\t\ts.addAll(r.ftv());\n\t\treturn s;\n\t}", "timestamp": "2021-01-02T23:11:24.582721Z", "repo_name": "Schkrabi/HindleyMiller", "path": "/src/types/TArr.java", "source": "the-stack-v2", "method_name": "ftv", "class_name": "TArr", "index": 2170, "label": 1}
{"input": "protected final long parseRequiredLong(XmlPullParser parser, String key)\r\n        throws ParserException {\r\n      String value = parser.getAttributeValue(null, key);\r\n      if (value != null) {\r\n        try {\r\n          return Long.parseLong(value);\r\n        } catch (NumberFormatException e) {\r\n          throw new ParserException(e);\r\n        }\r\n      } else {\r\n        throw new MissingFieldException(key);\r\n      }\r\n    }", "timestamp": "2020-12-10T15:15:05.202410Z", "repo_name": "AhabweEmmanuel/Marlia", "path": "/TMessagesProj/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java", "source": "the-stack-v2", "method_name": "parseRequiredLong", "class_name": "ElementParser", "index": 2171, "label": 1}
{"input": "@Test\n  public void case57() {\n    int[] revenues = { -352, -653, -75, 5, -5, 23, -347, 9, 544, -354, -10, -35, -96, -5, -954, -994, -348, -618, -353, 3, 7, -977, -51, -68, -9, 249, 344, -785, 90, 543, 36, -14, 0, -350, -8, -952, 552, -650, -1, 249, 543, 248, 543, -655, 546, -7, -34 };\n    int k = 13;\n    assertEquals(342.7385114885115, mergersdivtwo.findMaximum(revenues, k), DELTA * 342.7385114885115);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case57", "class_name": "MergersDivTwoTest", "index": 2172, "label": 1}
{"input": "public void testBug137087j_CamelCase() throws CoreException {\n\tint matchRule = SearchPattern.R_CAMELCASE_MATCH;\n\tString pattern = \"ClonenotSupportedexc\";\n\tsearch(pattern, TYPE, DECLARATIONS, matchRule);\n\tassertSearchResults(\n\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug137087j_CamelCase", "class_name": "JavaSearchBugsTests", "index": 2173, "label": 1}
{"input": "private void loadFile() {\n        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {\n            \n            String line = reader.readLine();\n            while (line.startsWith(\"#\")) {\n                if (line.startsWith(\"#chrom\")) {\n                    headers = line.substring(1).split(\"\\t\");\n                    break;\n                }\n                line = reader.readLine();\n            }\n            if (headers == null) headers = line.split(\"\\t\");\n            generateColumns();\n            reader.lines().forEachOrdered(line1 -> table.getItems().add(line1.split(\"\\t\")));\n            totalLines.set(table.getItems().size());\n            currentLines.set(totalLines.get());\n        } catch (Exception e) {\n            Logger.getLogger(getClass().getName()).log(Level.SEVERE, null, e);\n        }\n        setInfo();\n    }", "timestamp": "2022-12-10T15:14:46.882345Z", "repo_name": "uichuimi/Coat", "path": "/src/main/java/org/uichuimi/coat/view/tsv/TsvFileReader.java", "source": "the-stack-v2", "method_name": "loadFile", "class_name": "TsvFileReader", "index": 2174, "label": 1}
{"input": "public static bu a(av paramav, w paramw)\n  {\n    if (paramw == null) {}\n    String str1;\n    String str2;\n    do\n    {\n      do\n      {\n        do\n        {\n          return null;\n        } while ((paramw.m() != 101) || (!\"websocket\".equalsIgnoreCase(paramw.f_().a(\"Upgrade\"))));\n        str1 = paramw.f_().a(\"Sec-WebSocket-Accept\");\n      } while (str1 == null);\n      str2 = paramav.a(\"Sec-WebSocket-Key\");\n    } while ((str2 == null) || (!str1.equalsIgnoreCase(c(str2 + \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\").trim())));\n    paramav = paramav.a(\"Sec-WebSocket-Extensions\");\n    boolean bool2 = false;\n    boolean bool1 = bool2;\n    if (paramav != null)\n    {\n      bool1 = bool2;\n      if (paramav.equals(\"x-webkit-deflate-frame\")) {\n        bool1 = true;\n      }\n    }\n    paramav = new bz(paramw.c());\n    paramav.a(true, bool1);\n    return paramav;\n  }", "timestamp": "2020-05-29T08:54:50.751842Z", "repo_name": "waterwitness/dazhihui", "path": "/classes/com/d/a/c/bz.java", "source": "the-stack-v2", "method_name": "a", "class_name": "bz", "index": 2175, "label": 1}
{"input": "@Override\n\tpublic ShopExecution modifyShop(Shop shop, ImageHolder thumbnail)\n\t\t\tthrows ProductCategoryOperationException {\n\t\tif(shop ==null ||shop.getShopId() ==null) {\n\t\t\treturn new ShopExecution(ShopStateEnum.NULL_SHOP);\n\t\t}else {\n\t\t\t\n\t\t\ttry {\n\t\t\tif(thumbnail.getImage() !=null && thumbnail.getImageName() != null && !\"\" .equals(thumbnail.getImageName())) {\n\t\t\t\t\n\t\t\t\tShop tempShop = shopDao.queryByShopId(shop.getShopId());\n\t\t\t\tif(tempShop.getShopImg() !=null) {\n\t\t\t\t\t\n\t\t\t\t\tImageUtil.deleteFileOrPath(tempShop.getShopImg());\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\taddShopImg(shop, thumbnail); \n\t\t\t}\n\t\t\t\n\t\t\tshop.setLastEditTime(new Date());\n\t\t\tint effectedNum = shopDao.updateShop(shop);\n\t\t\tif(effectedNum <=0) {\n\t\t\t\treturn new ShopExecution(ShopStateEnum.INNER_ERROR);\n\t\t\t}else {\n\t\t\t\tshop = shopDao.queryByShopId(shop.getShopId());\n\t\t\t\treturn new ShopExecution(ShopStateEnum.SUCCESS,shop);\n\t\t\t}}catch(Exception e) {\n\t\t\t\tthrow new ProductCategoryOperationException(\"modifyShop error:\" + e.getMessage());\n\t\t\t}\n\t\t}\n\t}", "timestamp": "2020-03-24T20:23:10.895275Z", "repo_name": "dengcong139/o2o", "path": "/src/main/java/com/deng/o2o/service/impl/ShopServiceImpl.java", "source": "the-stack-v2", "method_name": "modifyShop", "class_name": "ShopServiceImpl", "index": 2176, "label": 1}
{"input": "public static CommonResult handlerException(BlockException exception){\n        return new CommonResult(4444,\"自定义，global handlerException----1\");\n    }", "timestamp": "2023-04-09T17:20:10.317072Z", "repo_name": "ProudMuBai/springCloud", "path": "/cloudal-sentinel-service8401/src/main/java/com/cloud/myhandler/CustomerBlockHandler.java", "source": "the-stack-v2", "method_name": "handlerException", "class_name": "CustomerBlockHandler", "index": 2177, "label": 1}
{"input": "private JTextPane getJTextPanePageMode() {\n\t\tif (jTextPanePageMode == null) {\n\t\t\tjTextPanePageMode = new JTextPane();\n\t\t\tjTextPanePageMode.setBounds(new Rectangle(10, 10, 101, 21));\n\t\t\tjTextPanePageMode.setForeground(Color.GRAY);\n\t\t\tjTextPanePageMode.setText(getMessages().getString(\"PageMode\"));\n\t\t\tjTextPanePageMode.setBackground(new Color(238, 238, 238));\n\t\t\tjTextPanePageMode.setEditable(false);\n\t\t}\n\t\treturn jTextPanePageMode;\n\t}", "timestamp": "2021-01-01T05:50:38.878341Z", "repo_name": "dertoki/jPDFmelange", "path": "/jPDFmelange/JPanelViewPrefs.java", "source": "the-stack-v2", "method_name": "getJTextPanePageMode", "class_name": "JPanelViewPrefs", "index": 2178, "label": 1}
{"input": "public void setTextDecorated(int value, int index){\n\t\talist.get(index).textDecorated = value;\n\t\taadapter.notifyDataSetChanged();\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "setTextDecorated", "class_name": "jListView", "index": 2179, "label": 1}
{"input": "public boolean validate() {\n        boolean valid = true;\n\n        EditText emailEditText = findViewById(R.id.fieldEmail);\n        String email = emailEditText.getText().toString();\n\n        EditText passwordEditText = findViewById(R.id.fieldPassword);\n        String password = passwordEditText.getText().toString();\n\n        if (email.isEmpty() || !android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()) {\n            emailEditText.setError(\"enter a valid email address\");\n            valid = false;\n        } else {\n            emailEditText.setError(null);\n        }\n\n        if (password.isEmpty() || password.length() < 6 || password.length() > 10) {\n            passwordEditText.setError(\"between 6 and 10 alphanumeric characters\");\n            valid = false;\n        } else {\n            passwordEditText.setError(null);\n        }\n\n        return valid;\n    }", "timestamp": "2022-06-10T17:57:08.381357Z", "repo_name": "wilsonmwiti/FirebaseUiSignin", "path": "/app/src/main/java/com/spiritledinc/firebaseuisignin/MainActivity.java", "source": "the-stack-v2", "method_name": "validate", "class_name": "MainActivity", "index": 2180, "label": 1}
{"input": "@Column(name =\"CREATE_DATE\",nullable=true,length=20)\n\tpublic java.util.Date getCreateDate(){\n\t\treturn this.createDate;\n\t}", "timestamp": "2022-12-28T08:28:08.585073Z", "repo_name": "289222346/dianshang", "path": "/src/main/java/org/jeecgframework/web/superquery/entity/SuperQueryHistoryEntity.java", "source": "the-stack-v2", "method_name": "getCreateDate", "class_name": "SuperQueryHistoryEntity", "index": 2181, "label": 1}
{"input": "private static int add(int first, int second, int i) {\n\nSystem.out.println(\"Q.\"+i+\" how much is \" + first + \" + \" + second + \"?\");\n\nint correctAns = first + second;\n\nreturn correctAns;\n\n}", "timestamp": "2021-01-15T06:45:38.681176Z", "repo_name": "aryanjharwal/jharwal_assignment3", "path": "/jharwal_problem1/src/jharwal_problem1/CAI5.java", "source": "the-stack-v2", "method_name": "add", "class_name": "CAI5", "index": 2182, "label": 1}
{"input": "private static Pattern createRegexp(final String pattern) {\n      final String replace = pattern.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n      try {\n        return Pattern.compile(replace);\n      }\n      catch (PatternSyntaxException e) {\n        return null;\n      }\n    }", "timestamp": "2020-09-01T20:17:15.244967Z", "repo_name": "lakshit1/intellij-community", "path": "/java/java-analysis-impl/src/com/intellij/codeInspection/ex/EntryPointsManagerBase.java", "source": "the-stack-v2", "method_name": "createRegexp", "class_name": "ClassPattern", "index": 2183, "label": 1}
{"input": "@Test public void testOrderStarByExpr() {\n    CalciteAssert.hr()\n        .query(\"select * from \\\"hr\\\".\\\"emps\\\"\\n\"\n            + \"order by - \\\"empid\\\"\")\n        .explainContains(\"EnumerableSort(sort0=[$5], dir0=[ASC])\\n\"\n            + \"  EnumerableCalc(expr#0..4=[{inputs}], expr#5=[-($t0)], proj#0..5=[{exprs}])\\n\"\n            + \"    EnumerableTableScan(table=[[hr, emps]])\")\n        .returns(\"\"\n            + \"empid=200; deptno=20; name=Eric; salary=8000.0; commission=500\\n\"\n            + \"empid=150; deptno=10; name=Sebastian; salary=7000.0; commission=null\\n\"\n            + \"empid=110; deptno=10; name=Theodore; salary=11500.0; commission=250\\n\"\n            + \"empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testOrderStarByExpr", "class_name": "JdbcTest", "index": 2184, "label": 1}
{"input": "@java.lang.Override\n    public final Builder mergeUnknownFields(\n        final com.google.protobuf.UnknownFieldSet unknownFields) {\n      return super.mergeUnknownFields(unknownFields);\n    }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "mergeUnknownFields", "class_name": "Builder", "index": 2185, "label": 1}
{"input": "public String getKeyPageLayout(){\n\t\tString localkey = (String) jComboBoxPageLayout.getSelectedItem();\n\t\tfor (String key: MelangeJFrame.PageLayout.keySet())\n\t\t\tif (getMessages().getString(key).equals(localkey)){\n\t\t\t\treturn key;\n\t\t}\t\t\n\t\treturn null;\n\t}", "timestamp": "2021-01-01T05:50:38.878341Z", "repo_name": "dertoki/jPDFmelange", "path": "/jPDFmelange/JPanelViewPrefs.java", "source": "the-stack-v2", "method_name": "getKeyPageLayout", "class_name": "JPanelViewPrefs", "index": 2186, "label": 1}
{"input": "public Builder setUserInteractionValue(int value) {\n\n      userInteraction_ = value;\n      onChanged();\n      return this;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "setUserInteractionValue", "class_name": "Builder", "index": 2187, "label": 1}
{"input": "public void testBug156340() throws CoreException {\n\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();\n\tIPackageFragment fragment = getPackageFragment(\"JavaSearchBugs\", getExternalJCLPathString(\"1.5\"), \"java.lang\");\n\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] { fragment });\n\tnew SearchEngine().searchAllTypeNames(\n\t   null,\n\t\tSearchPattern.R_EXACT_MATCH,\n\t\tCharOperation.NO_CHAR,\n\t\tSearchPattern.R_PREFIX_MATCH,\n\t\tIJavaSearchConstants.TYPE,\n\t\tscope,\n\t\trequestor,\n\t\tWAIT_UNTIL_READY_TO_SEARCH,\n\t\tnull\n   );\n\tassertSearchResults(\n\t\t\"Unexpected all type names\",\n\t\t\"java.lang.CharSequence\\n\" +\n\t\t\"java.lang.Class\\n\" +\n\t\t\"java.lang.CloneNotSupportedException\\n\" +\n\t\t\"java.lang.Comparable\\n\" +\n\t\t\"java.lang.Deprecated\\n\" +\n\t\t\"java.lang.Enum\\n\" +\n\t\t\"1.5\"0 +\n\t\t\"1.5\"1 +\n\t\t\"1.5\"2 +\n\t\t\"1.5\"3 +\n\t\t\"1.5\"4 +\n\t\t\"1.5\"5 +\n\t\t\"1.5\"6 +\n\t\t\"1.5\"7,\n\t\trequestor);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug156340", "class_name": "JavaSearchBugsTests", "index": 2188, "label": 1}
{"input": "public Employee addEmployee(Employee employee) {\n\t\temployee.setEmployeeCode(UUID.randomUUID().toString());\n\t\treturn employeeRepo.save(employee);\n\t}", "timestamp": "2023-07-17T07:57:43.753524Z", "repo_name": "t2dstudio/AdminDashboard", "path": "/src/main/java/com/t2dstudio/admin/service/EmployeeService.java", "source": "the-stack-v2", "method_name": "addEmployee", "class_name": "EmployeeService", "index": 2189, "label": 1}
{"input": "private <T> Factory<T> throwingFactory() {\n    return (Factory<T>) () -> {\n      throw new UnsupportedOperationException(\"Boom\");\n    };\n  }", "timestamp": "2021-08-23T22:08:57.063756Z", "repo_name": "leespy/ehcache3", "path": "/107/src/test/java/org/ehcache/jsr107/ConfigurationMergerTest.java", "source": "the-stack-v2", "method_name": "throwingFactory", "class_name": "ConfigurationMergerTest", "index": 2190, "label": 1}
{"input": "public void testBug96761() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b96761/Generic.java\",\n\t\t\"package b96761;\\n\" +\n\t\t\"public class Generic<G> {\\n\" +\n\t\t\"\tvoid take(G g) {\\n\" +\n\t\t\"\t}\\n\" +\n\t\t\"}\\n\" +\n\t\t\"class Impl extends Generic<RuntimeException> {\\n\" +\n\t\t\"\tvoid take(InterruptedException g) {\\n\" +\n\t\t\"\t}\\n\" +\n\t\t\"\tvoid take(RuntimeException g) {\\n\" +\n\t\t\"\t}\\n\" +\n\t\t\"package b96761;\\n\"1\n\t);\n\tIType type = this.workingCopies[0].getType(\"package b96761;\\n\"2);\n\tIMethod method= type.getMethods()[0];\n\tsearch(method, REFERENCES);\n\tassertSearchResults(\"package b96761;\\n\"3); \n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug96761", "class_name": "JavaSearchBugsTests", "index": 2191, "label": 1}
{"input": "@Test public void testJsonType() {\n    CalciteAssert.that()\n        .query(\"SELECT JSON_TYPE(v) AS c1\\n\"\n            + \",JSON_TYPE(JSON_VALUE(v, 'lax $.b' ERROR ON ERROR)) AS c2\\n\"\n            + \",JSON_TYPE(JSON_VALUE(v, 'strict $.a[0]' ERROR ON ERROR)) AS c3\\n\"\n            + \",JSON_TYPE(JSON_VALUE(v, 'strict $.a[1]' ERROR ON ERROR)) AS c4\\n\"\n            + \"FROM (VALUES ('{\\\"a\\\": [10, true],\\\"b\\\": \\\"[10, true]\\\"}')) AS t(v)\\n\"\n            + \"limit 10\")\n        .returns(\"C1=OBJECT; C2=ARRAY; C3=INTEGER; C4=BOOLEAN\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testJsonType", "class_name": "JdbcTest", "index": 2192, "label": 1}
{"input": "public Collection<EJDataRecord> getInsertedRecords()\n    {\n        return getDataBlock().getInsertedRecords();\n    }", "timestamp": "2023-02-18T11:13:58.949927Z", "repo_name": "entirej/core", "path": "/entirej-core/src/org/entirej/framework/core/data/controllers/EJEditableBlockController.java", "source": "the-stack-v2", "method_name": "getInsertedRecords", "class_name": "EJEditableBlockController", "index": 2193, "label": 1}
{"input": "private void buildTypeVariables() {\n\t    \n\t    SourceTypeBinding sourceType = referenceContext.binding;\n\t\tTypeParameter[] typeParameters = referenceContext.typeParameters;\n\t\t\n\t    \n\t\tif (typeParameters == null || compilerOptions().sourceLevel < ClassFileConstants.JDK1_5) {\n\t\t    sourceType.typeVariables = Binding.NO_TYPE_VARIABLES;\n\t\t    return;\n\t\t}\n\t\tsourceType.typeVariables = Binding.NO_TYPE_VARIABLES; \n\n\t\tif (sourceType.id == T_JavaLangObject) { \n\t\t\tproblemReporter().objectCannotBeGeneric(referenceContext);\n\t\t\treturn; \n\t\t}\n\t\tsourceType.typeVariables = createTypeVariables(typeParameters, sourceType);\n\t\tsourceType.modifiers |= ExtraCompilerModifiers.AccGenericSignature;\n\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/16417/src_0.java", "source": "the-stack-v2", "method_name": "buildTypeVariables", "class_name": "ClassScope", "index": 2194, "label": 1}
{"input": "@Override\n    public SingleItemRowHolder onCreateViewHolder(ViewGroup viewGroup, int i) {\n        View v = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.list_single_card, null);\n        SingleItemRowHolder mh = new SingleItemRowHolder(v);\n        return mh;\n    }", "timestamp": "2021-04-09T13:47:27.059805Z", "repo_name": "vivek34/Early", "path": "/HomePage/app/src/main/java/com/example/vivekpatel/homepage/Adapters/CommunityAdapter.java", "source": "the-stack-v2", "method_name": "onCreateViewHolder", "class_name": "CommunityAdapter", "index": 2195, "label": 1}
{"input": "final RuntimeStatus\n    getRuntimeStatus(final String serverName )\n    {\n        final MBeanServer mbeanServer = getMBeanServer();\n        final OldServersMBean oldServers =\n            OldConfigProxies.getInstance( mbeanServer ).getOldServersMBean( );\n            \n        final RuntimeStatus status = oldServers.getRuntimeStatus( serverName );\n        \n        return status;\n    }", "timestamp": "2021-05-28T12:55:06.267463Z", "repo_name": "dmatej/Glassfish-SVN-Patched", "path": "/v2/admin/mbeanapi-impl/src/java/com/sun/enterprise/management/j2ee/DASJ2EEServerImpl.java", "source": "the-stack-v2", "method_name": "getRuntimeStatus", "class_name": "DASJ2EEServerImpl", "index": 2196, "label": 1}
{"input": "@Contract(\"null, _ -> fail\")\n  public static <T> T assertInstanceOf(Object o, Class<T> aClass) {\n    Assert.assertNotNull(\"Expected instance of: \" + aClass.getName() + \" actual: \" + null, o);\n    Assert.assertTrue(\"Expected instance of: \" + aClass.getName() + \" actual: \" + o.getClass().getName(), aClass.isInstance(o));\n    @SuppressWarnings(\"unchecked\") T t = (T)o;\n    return t;\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "assertInstanceOf", "class_name": "UsefulTestCase", "index": 2197, "label": 1}
{"input": "public void setMappedImage(Body body, RubeImage image)\n    {\n       Array<RubeImage> images = mBodyImageMap.get(body);\n       \n       \n          images = new Array<RubeImage>(false,1); \n          images.add(image);\n          mBodyImageMap.put(body, images);\n       }\n       else\n       {\n          \n          images.add(image);\n       }\n    }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/8/8_c35c0071965ffa2a49cabadc2a29a69aa9158202/RubeScene/8_c35c0071965ffa2a49cabadc2a29a69aa9158202_RubeScene_s.java", "source": "the-stack-v2", "method_name": "setMappedImage", "class_name": "RubeScene", "index": 2198, "label": 1}
{"input": "private View a(View paramView, ViewGroup paramViewGroup)\n  {\n    if (e != null)\n    {\n      paramViewGroup = e;\n      return paramViewGroup;\n    }\n    if (paramView == null)\n    {\n      if (paramViewGroup == null) {\n        throw new IllegalArgumentException(\"If convertView is null a parent must be supplied\");\n      }\n      paramView = new TextView(paramViewGroup.getContext(), null, d);\n    }\n    for (;;)\n    {\n      TextView localTextView = (TextView)paramView;\n      localTextView.setText(b);\n      paramViewGroup = paramView;\n      if (c == null) {\n        break;\n      }\n      localTextView.setCompoundDrawablesWithIntrinsicBounds(c[0], c[1], c[2], c[3]);\n      return paramView;\n    }\n  }", "timestamp": "2021-01-19T02:07:25.997811Z", "repo_name": "reverseengineeringer/com.yelp.android", "path": "/src/com/yelp/android/ui/util/aj$b.java", "source": "the-stack-v2", "method_name": "a", "class_name": "aj$b", "index": 2199, "label": 1}
{"input": "@Test\n    public void execute_invalidSlotIndexFilteredList_failure() {\n        showSlotAtIndex(model, INDEX_FIRST_SLOT);\n        Index outOfBoundIndex = INDEX_SECOND_SLOT;\n\n        \n        assertTrue(outOfBoundIndex.getZeroBased() < model.getPetTracker().getSlotList().size());\n\n        EditSlotCommand editCommand = new EditSlotCommand(outOfBoundIndex,\n                new EditSlotDescriptorBuilder().withPet(VALID_NAME_COCO).build(), \"\");\n\n        assertCommandFailure(editCommand, model, MESSAGE_INVALID_SLOT_DISPLAYED_INDEX);\n    }", "timestamp": "2021-01-02T01:55:13.999232Z", "repo_name": "AY1920S2-CS2103-W15-4/main", "path": "/src/test/java/clzzz/helper/logic/commands/slot/EditSlotCommandTest.java", "source": "the-stack-v2", "method_name": "execute_invalidSlotIndexFilteredList_failure", "class_name": "EditSlotCommandTest", "index": 2200, "label": 1}
{"input": "public boolean match(ParenthesizedExpression node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 2201, "label": 1}
{"input": "@PostConstruct\n    public void init() {\n        locale = FacesContext.getCurrentInstance().getExternalContext().getRequestLocale();\n    }", "timestamp": "2021-06-11T07:55:08.736540Z", "repo_name": "phajder/TravelAgency", "path": "/src/main/java/com/hajder/travelagency/bean/LocaleBean.java", "source": "the-stack-v2", "method_name": "init", "class_name": "LocaleBean", "index": 2202, "label": 1}
{"input": "@Override\n\tpublic String generateGoal() {\n\t\tString goal = \"\";\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tint random = (int) (Math.random() * 10);\n\t\t\tString randomDigit = \"\" + random;\n\t\t\twhile (goal.contains(randomDigit)) {\n\t\t\t\trandom = (int) (Math.random() * 10);\n\t\t\t\trandomDigit = \"\" + random;\n\t\t\t}\n\t\t\tgoal = goal + randomDigit;\n\t\t}\n\t\treturn goal;\n\t}", "timestamp": "2023-01-24T15:18:32.998671Z", "repo_name": "PatrikFreij/Clean-Code-Examination", "path": "/model/MooGameLogic.java", "source": "the-stack-v2", "method_name": "generateGoal", "class_name": "MooGameLogic", "index": 2203, "label": 1}
{"input": "@Test(timeout = 10000)\n     public void testArrayRemove() throws ConfigCompileException {\n         SRun(\"assign(@a, array(1, 2, 3)) array_remove(@a, 1) msg(@a)\", fakePlayer);\n         verify(fakePlayer).sendMessage(\"{1, 3}\");\n         SRun(\"assign(@a, array(a: a, b: b, c: c)) array_remove(@a, 'b') msg(@a)\", fakePlayer);\n         verify(fakePlayer).sendMessage(\"{a: a, c: c}\");\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/19/19_3b3438a24e33893035d2c602198d49ca13a35845/ArrayHandlingTest/19_3b3438a24e33893035d2c602198d49ca13a35845_ArrayHandlingTest_s.java", "source": "the-stack-v2", "method_name": "testArrayRemove", "class_name": "ArrayHandlingTest", "index": 2204, "label": 1}
{"input": "@Override\n\t\tpublic Set<MethodMetadata> getMethods() {\n\t\t\treturn Collections.unmodifiableSet(methodMetadataSet);\n\t\t}", "timestamp": "2023-09-01T12:19:32.846147Z", "repo_name": "2635064692/source-code-mytest", "path": "/source-code-lib/spring-data-commons-2.2.3.RELEASE-sources/org/springframework/data/type/classreading/DefaultMethodsMetadataReader.java", "source": "the-stack-v2", "method_name": "getMethods", "class_name": "MethodsMetadataReadingVisitor", "index": 2205, "label": 1}
{"input": "private void openTray() {\n\t\tleftMasterDetailPane.resetDividerPosition();\n\t\tleftMasterDetailPane.setShowDetailNode(true);\n\t}", "timestamp": "2020-03-24T17:58:06.467751Z", "repo_name": "GabrielZulian/CalendarFX", "path": "/CalendarFXView/src/main/java/impl/com/calendarfx/view/CalendarViewSkin.java", "source": "the-stack-v2", "method_name": "openTray", "class_name": "CalendarViewSkin", "index": 2206, "label": 1}
{"input": "@Nullable\n    public Pattern getRegexp() {\n      if (regexp == null && pattern.contains(\"*\")) {\n        regexp = createRegexp(pattern);\n      }\n      return regexp;\n    }", "timestamp": "2020-09-01T20:17:15.244967Z", "repo_name": "lakshit1/intellij-community", "path": "/java/java-analysis-impl/src/com/intellij/codeInspection/ex/EntryPointsManagerBase.java", "source": "the-stack-v2", "method_name": "getRegexp", "class_name": "ClassPattern", "index": 2207, "label": 1}
{"input": "public void testBug160323() throws CoreException {\n\t\n\tTypeNameMatchCollector collector = new TypeNameMatchCollector() {\n\t\tpublic String toString(){\n\t\t\treturn toFullyQualifiedNamesString();\n\t\t}\n\t};\n\tnew SearchEngine().searchAllTypeNames(\n\t\tnull,\n\t\tSearchPattern.R_EXACT_MATCH,\n\t\tnull,\n\t\tSearchPattern.R_PREFIX_MATCH,\n\t\tIJavaSearchConstants.TYPE,\n\t\tgetJavaSearchScope(),\n\t\tcollector,\n\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,\n\t\tnull);\n\t\n\tTypeNameRequestor requestor = new SearchTests.SearchTypeNameRequestor();\n\tnew SearchEngine().searchAllTypeNames(\n\t\tnull,\n\t\tSearchPattern.R_EXACT_MATCH,\n\t\tnull,\n\t\tSearchPattern.R_PREFIX_MATCH,\n\t\tIJavaSearchConstants.TYPE,\n\t\tgetJavaSearchScope(),\n\t\trequestor,\n\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,\n\t\tnull);\n\t\n\tassertTrue(\"We should get some types!\", collector.size() > 0);\n\tassertEquals(\"Found types sounds not to be correct\", requestor.toString(), collector.toString());\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug160323", "class_name": "JavaSearchBugsTests", "index": 2208, "label": 1}
{"input": "@Override\n\tprotected double computePrefHeight(double width, double topInset,\n\t\t\tdouble rightInset, double bottomInset, double leftInset) {\n\t\tdouble dayHeight = dayPage.prefHeight(-1);\n\t\tdouble weekHeight = weekPage.prefHeight(-1);\n\t\tdouble monthHeight = monthPage.prefHeight(-1);\n\t\tdouble yearHeight = yearPage.prefHeight(-1);\n\t\treturn Math.max(dayHeight,\n\t\t\t\tMath.max(weekHeight, Math.max(monthHeight, yearHeight)));\n\t}", "timestamp": "2020-03-24T17:58:06.467751Z", "repo_name": "GabrielZulian/CalendarFX", "path": "/CalendarFXView/src/main/java/impl/com/calendarfx/view/CalendarViewSkin.java", "source": "the-stack-v2", "method_name": "computePrefHeight", "class_name": "CalendarViewSkin", "index": 2209, "label": 1}
{"input": "public Criteria andStatusGreaterThan(Integer value) {\r\n            addCriterion(\"status >\", value, \"status\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andStatusGreaterThan", "class_name": "GeneratedCriteria", "index": 2210, "label": 1}
{"input": "@Override\n    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n\n        super.onLayout(changed, left, top, right, bottom);\n\n        mBitmapRect = getBitmapRect();\n        initCropWindow(mBitmapRect);\n    }", "timestamp": "2022-05-06T21:27:51.136578Z", "repo_name": "Jelly0726/JellyBase", "path": "/library/baselibrary/src/main/java/com/jelly/baselibrary/cropper/CropImageView.java", "source": "the-stack-v2", "method_name": "onLayout", "class_name": "CropImageView", "index": 2211, "label": 1}
{"input": "private void addInjectionTarget(Injectable resource, Map<String, Map<String, String>> injectionMap) {\n        List<InjectionTarget> injectionTargets = resource.getInjectionTargets();\n        if (injectionTargets != null && injectionTargets.size() > 0) {\n            String jndiName = resource.getName();\n            for (InjectionTarget injectionTarget: injectionTargets) {\n                String clazz = injectionTarget.getTargetClass();\n                Map<String, String> injections = injectionMap.get(clazz);\n                if (injections == null) {\n                    injections = new HashMap<String, String>();\n                    injectionMap.put(clazz, injections);\n                }\n                injections.put(injectionTarget.getTargetName(), jndiName);\n            }\n        }\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "addInjectionTarget", "class_name": "StandardContext", "index": 2212, "label": 1}
{"input": "private static String getFormatDate() {\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd HH-mm-ss\");\n        return simpleDateFormat.format(new Date());\n    }", "timestamp": "2022-10-31T14:41:14.720225Z", "repo_name": "toberole/android_base_demo", "path": "/baselib/src/main/java/com/cat/zeus/utils/CrashHandler.java", "source": "the-stack-v2", "method_name": "getFormatDate", "class_name": "CrashHandler", "index": 2213, "label": 1}
{"input": "public final PackageOrTypeNameContext packageOrTypeName() throws RecognitionException {\n\t\tPackageOrTypeNameContext _localctx = new PackageOrTypeNameContext(_ctx, getState());\n\t\tenterRule(_localctx, 88, RULE_packageOrTypeName);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(607);\n\t\t\tqualifiedName();\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "packageOrTypeName", "class_name": "JavaParser", "index": 2214, "label": 1}
{"input": "@Test\n    public void addTest() {\n        redisUtil.set(\"test\", \"zqz\");\n\n        String test = redisUtil.getStrVal(\"test\");\n\n        System.out.println(\"val->\" + test);\n\n    }", "timestamp": "2022-11-20T17:09:11.492210Z", "repo_name": "zhangqingzhou1024/springboot-basic", "path": "/springboot-basic-util/src/test/java/com/liziyuan/hope/util/redis/RedisTest.java", "source": "the-stack-v2", "method_name": "addTest", "class_name": "RedisTest", "index": 2215, "label": 1}
{"input": "@Test public void testSelectDistinctComposite() {\n    CalciteAssert.hr()\n        .query(\"select distinct \\\"empid\\\" > 140 as c, \\\"deptno\\\"\\n\"\n            + \"from \\\"hr\\\".\\\"emps\\\"\\n\")\n        .returnsUnordered(\n            \"C=false; deptno=10\",\n            \"C=true; deptno=10\",\n            \"C=true; deptno=20\")\n        .planContains(\".distinct(\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testSelectDistinctComposite", "class_name": "JdbcTest", "index": 2216, "label": 1}
{"input": "public Builder setBaseScore(double value) {\n\n      baseScore_ = value;\n      onChanged();\n      return this;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "setBaseScore", "class_name": "Builder", "index": 2217, "label": 1}
{"input": "public void setDeliverTypeId(Long deliverTypeId) {\n        this.deliverTypeId = deliverTypeId;\n    }", "timestamp": "2021-01-10T07:10:13.758215Z", "repo_name": "nieshr/xjr", "path": "/src/main/java/com/ynyes/kjxjr/entity/TdOrder.java", "source": "the-stack-v2", "method_name": "setDeliverTypeId", "class_name": "TdOrder", "index": 2218, "label": 1}
{"input": "public String getInitialObjectName() {\n\t\t\tString label = initialObjectField.getText();\n\n\t\t\tfor (String name : getInitialObjectNames()) {\n\t\t\t\tif (getLabel(name).equals(label)) {\n\t\t\t\t\treturn name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "timestamp": "2023-04-26T07:53:49.502057Z", "repo_name": "layornos/mPCM_build", "path": "/mpcm.paradigm.base.editor/src/base/presentation/BaseModelWizard.java", "source": "the-stack-v2", "method_name": "getInitialObjectName", "class_name": "BaseModelWizardInitialObjectCreationPage", "index": 2219, "label": 1}
{"input": "public void setApprovalRules(PatchRuleGroup approvalRules) {\n        this.approvalRules = approvalRules;\n    }", "timestamp": "2021-01-25T05:50:39.073013Z", "repo_name": "erbrito/aws-java-sdk", "path": "/aws-java-sdk-ssm/src/main/java/com/amazonaws/services/simplesystemsmanagement/model/UpdatePatchBaselineResult.java", "source": "the-stack-v2", "method_name": "setApprovalRules", "class_name": "UpdatePatchBaselineResult", "index": 2220, "label": 1}
{"input": "@Override\n  public void setMembers(FoodMembers newMembers)\n  {\n    if (newMembers != members)\n    {\n      NotificationChain msgs = null;\n      if (members != null)\n        msgs = ((InternalEObject)members).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GreedySnakePackage.INITIAL_FOOD_SPECIFICATIN__MEMBERS, null, msgs);\n      if (newMembers != null)\n        msgs = ((InternalEObject)newMembers).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GreedySnakePackage.INITIAL_FOOD_SPECIFICATIN__MEMBERS, null, msgs);\n      msgs = basicSetMembers(newMembers, msgs);\n      if (msgs != null) msgs.dispatch();\n    }\n    else if (eNotificationRequired())\n      eNotify(new ENotificationImpl(this, Notification.SET, GreedySnakePackage.INITIAL_FOOD_SPECIFICATIN__MEMBERS, newMembers, newMembers));\n  }", "timestamp": "2023-04-11T06:06:46.490724Z", "repo_name": "Landy7/MDD", "path": "/org.xtext.example.group16.GreedySnake/src-gen/org/xtext/example/mydsl2/group16/greedySnake/impl/InitialFoodSpecificatinImpl.java", "source": "the-stack-v2", "method_name": "setMembers", "class_name": "InitialFoodSpecificatinImpl", "index": 2221, "label": 1}
{"input": "public void launchHome(View view) {\n        Intent intent = new Intent(UploadActivity.this, MainActivity.class);\n        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);\n        startActivity(intent);\n    }", "timestamp": "2020-08-03T03:29:17.700731Z", "repo_name": "SunilKeshri1998/StuHub", "path": "/app/src/main/java/com/decimals/stuhub/UploadActivity.java", "source": "the-stack-v2", "method_name": "launchHome", "class_name": "UploadActivity", "index": 2222, "label": 1}
{"input": "private static double[][] Gaussian(double[][] cc,double[] acc, boolean mode){\n\t\t\n\t\tdouble[] val={0,1};\n\t\tDouble[][] classmean=getMeanbyClass(featurestrain, labelstrain, trainlen, featlen, val);\n\t\tDouble[][] classvar=getCommonVarbyClass(featurestrain, labelstrain, trainlen, featlen, val, classmean);\n        \n\t\t\n\t\t\n\t\t\n\t\t\n\t\tint spamcount=0;\n\t\tfor (int j = 0; j < trainlen; j++) {\n\t\t\tspamcount+=labelstrain[j];\n\t\t}\n\t\t\n\t\tdouble spam=((double) spamcount)/((double) trainlen),ham=1-spam;\n\t\t\n\t\tif(!mode)\n\t\t{\n\t\t\tacc[0]=evaluateGaussian(featurestrain, labelstrain, classmean, classvar, cc[0], spam, ham, trainlen,0.0);\n\t\t\tacc[1]=evaluateGaussian(featurestest, labelstest, classmean, classvar, cc[1], spam, ham, testlen,0.0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn ROCGaussian(featurestest, labelstest, classmean, classvar, spam, ham, testlen);\n\t\t}\n\t\treturn null;\n\t}", "timestamp": "2020-04-04T15:40:39.822854Z", "repo_name": "rangsansith/Machine-Learning-2", "path": "/generative/naivebayes/NaiveBayesGaussian.java", "source": "the-stack-v2", "method_name": "Gaussian", "class_name": "NaiveBayesGaussian", "index": 2223, "label": 1}
{"input": "@AfterClass\n    public static void cleanupClient() throws EventHubException {\n        if (ehClient != null) {\n            ehClient.closeSync();\n        }\n    }", "timestamp": "2022-09-16T12:39:16.876783Z", "repo_name": "shawnweisfeld/azure-sdk-for-java", "path": "/eventhubs/data-plane/azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/sendrecv/SendTest.java", "source": "the-stack-v2", "method_name": "cleanupClient", "class_name": "SendTest", "index": 2224, "label": 1}
{"input": "@JavascriptInterface\n    public void setVideoDimensions(final int c, final int d, final int a, final int b) {\n        if (!this.isInterstitial) {\n            Logging.log(\"ADMARVEL.setVideoDimensions \" + c + \" \" + d + \" \" + a + \" \" + b);\n            final m m = (m)this.adMarvelWebViewReference.get();\n            if (m != null && Version.getAndroidSDKVersion() >= 14) {\n                m.A = a;\n                m.B = b;\n                m.C = c;\n                m.D = d;\n                final d d2 = (d)this.adMarvelInternalWebViewReference.get();\n                if (d2 != null && !d2.b()) {\n                    new Handler(Looper.getMainLooper()).post((Runnable)new m$x(m, d2, c, d, a, b));\n                }\n            }\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "setVideoDimensions", "class_name": "AdMarvelWebViewJSInterface", "index": 2225, "label": 1}
{"input": "public void testBug216875g() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[2];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/pack/Test.java\",\n\t\t\"package pack;\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"\tpublic int field;\\n\" +\n\t\t\"}\\n\"\n\t);\n\tthis.workingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/test/X.java\",\n\t\t\"package test;\\n\" +\n\t\t\"import pack.Test;\\n\" +\n\t\t\"public class X {\\n\" +\n\t\t\"\tvoid foo(Test t1, Test t2) {\\n\" +\n\t\t\"package pack;\\n\"0 +\n\t\t\"package pack;\\n\"1 +\n\t\t\"package pack;\\n\"2 +\n\t\t\"package pack;\\n\"3 +\n\t\t\"}\\n\"\n\t);\n\tthis.resultCollector.showSelection();\n\tthis.resultCollector.showAccess();\n\tthis.resultCollector.showAccuracy(false);\n\tILocalVariable variable = selectLocalVariable(this.workingCopies[1], \"package pack;\\n\"5);\n\tsearch(variable, REFERENCES, getJavaSearchWorkingCopiesScope(), this.resultCollector);\n\tassertSearchResults(\n\t\t\"package pack;\\n\"6 +\n\t\t\"package pack;\\n\"7 +\n\t\t\"package pack;\\n\"8 +\n\t\t\"package pack;\\n\"9\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug216875g", "class_name": "JavaSearchBugsTests", "index": 2226, "label": 1}
{"input": "public Criteria andNameNotEqualTo(String value) {\r\n            addCriterion(\"name <>\", value, \"name\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2021-05-08T12:41:18.691106Z", "repo_name": "suoyiguke/weixinparent", "path": "/weixinpojo/src/main/java/com/yinkai/entities/ImageExample.java", "source": "the-stack-v2", "method_name": "andNameNotEqualTo", "class_name": "GeneratedCriteria", "index": 2227, "label": 1}
{"input": "public Criteria andVdef1IsNull() {\r\n            addCriterion(\"VDEF1 is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef1IsNull", "class_name": "GeneratedCriteria", "index": 2228, "label": 1}
{"input": "public static void main (String s[]) {\n      SubSupper ss = new SubSupper();\n      ss.method();\n\n      }", "timestamp": "2021-01-01T18:15:25.733262Z", "repo_name": "AshwinRajvanshi/Basic-java", "path": "/SubSupper.java", "source": "the-stack-v2", "method_name": "main", "class_name": "SubSupper", "index": 2229, "label": 1}
{"input": "private void rafraichirContinuer(boolean siContinuerPartiePrecedente) {\n        GLog.appel(this);\n\n        switchContinuerPartie.setChecked(siContinuerPartiePrecedente);\n\n    }", "timestamp": "2022-03-22T04:34:48.642441Z", "repo_name": "GoldenKain/Connect-Four", "path": "/app/src/main/java/ca/cours5b5/nicolasparr/vues/pages/PParametres.java", "source": "the-stack-v2", "method_name": "rafraichirContinuer", "class_name": "PParametres", "index": 2230, "label": 1}
{"input": "@Test\n    @Transactional\n    public void getAllAuthoritiesByOrderIsEqualToSomething() throws Exception {\n        \n        authorityRepository.saveAndFlush(authority);\n\n        \n        defaultAuthorityShouldBeFound(\"order.equals=\" + DEFAULT_ORDER);\n\n        \n        defaultAuthorityShouldNotBeFound(\"order.equals=\" + UPDATED_ORDER);\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "getAllAuthoritiesByOrderIsEqualToSomething", "class_name": "AuthorityResourceIT", "index": 2231, "label": 1}
{"input": "@Override\n    @Transactional\n    public ServiceResult<List<CompetitionDocumentResource>> findByCompetitionId(long competitionId) {\n        List<CompetitionDocument> competitionDocuments = competitionDocumentConfigRepository.findByCompetitionId(competitionId);\n        return serviceSuccess(simpleMap(competitionDocuments, competitionDocument -> competitionDocumentMapper.mapToResource(competitionDocument)));\n    }", "timestamp": "2022-09-11T11:06:47.452881Z", "repo_name": "adambirse/innovation-funding-service", "path": "/ifs-data-layer/ifs-data-service/src/main/java/org/innovateuk/ifs/competitionsetup/transactional/CompetitionSetupDocumentServiceImpl.java", "source": "the-stack-v2", "method_name": "findByCompetitionId", "class_name": "CompetitionSetupDocumentServiceImpl", "index": 2232, "label": 1}
{"input": "@Test public void testValuesCompositeRenamedSameNames() {\n    CalciteAssert.that()\n        .query(\"select EXPR$0 q, EXPR$1 q from (values (1, 'a'), (2, 'abc'))\")\n        .explainContains(\n            \"PLAN=EnumerableValues(tuples=[[{ 1, 'a  ' }, { 2, 'abc' }]])\\n\")\n        .returnsUnordered(\n            \"Q=1; Q=a  \",\n            \"Q=2; Q=abc\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testValuesCompositeRenamedSameNames", "class_name": "JdbcTest", "index": 2233, "label": 1}
{"input": "@Test\n    public void testShouldGiveTheLastNameOfPerson() throws Exception {\n        Person person = new Person(name, gender, age, address);\n        assertEquals(\"Ram\",person.getLastName());\n    }", "timestamp": "2021-01-10T07:02:07.328196Z", "repo_name": "navyasrib/java", "path": "/records/test/guestTest/PersonTest.java", "source": "the-stack-v2", "method_name": "testShouldGiveTheLastNameOfPerson", "class_name": "PersonTest", "index": 2234, "label": 1}
{"input": "private AxisOptionsRecord createAxisOptionsRecord()\n    {\n        AxisOptionsRecord r = new AxisOptionsRecord();\n        r.setMinimumCategory( (short) -28644 );\n        r.setMaximumCategory( (short) -28715 );\n        r.setMajorUnitValue( (short) 2 );\n        r.setMajorUnit( (short) 0 );\n        r.setMinorUnitValue( (short) 1 );\n        r.setMinorUnit( (short) 0 );\n        r.setBaseUnit( (short) 0 );\n        r.setCrossingPoint( (short) -28644 );\n        r.setDefaultMinimum( true );\n        r.setDefaultMaximum( true );\n        r.setDefaultMajor( true );\n        r.setDefaultMinorUnit( true );\n        r.setIsDate( true );\n        r.setDefaultBase( true );\n        r.setDefaultCross( true );\n        r.setDefaultDateSettings( true );\n        return r;\n    }", "timestamp": "2023-01-11T02:29:36.328694Z", "repo_name": "DXYyang/SDP", "path": "/sourcedata/poi-REL_3_0/src/scratchpad/src/org/apache/poi/hssf/usermodel/HSSFChart.java", "source": "the-stack-v2", "method_name": "createAxisOptionsRecord", "class_name": "HSSFChart", "index": 2235, "label": 1}
{"input": "public synchronized static XDWeatherDB getIntance(){\n        if(xdWeatherDB == null){\n            xdWeatherDB = new XDWeatherDB(MyApplication.getContext());\n        }\n        return xdWeatherDB;\n    }", "timestamp": "2021-01-01T04:30:52.824953Z", "repo_name": "YJWWZHANG/XDWeather", "path": "/src/main/java/com/zqbweather/app/model9/XDWeatherDB.java", "source": "the-stack-v2", "method_name": "getIntance", "class_name": "XDWeatherDB", "index": 2236, "label": 1}
{"input": "@Override\n    public void visit(Path relativizedPath, InputStream stream) throws IOException {\n      String fileName = relativizedPath.toString();\n      if (!fileName.endsWith(\".class\")) {\n        return;\n      }\n\n      ByteSource stubClassBytes = getStubClassBytes(stream, fileName);\n      writeToJar(fileName, stubClassBytes);\n      recordHash(fileName, stubClassBytes);\n    }", "timestamp": "2021-01-18T08:33:02.435393Z", "repo_name": "bocon13/buck", "path": "/src/com/facebook/buck/jvm/java/abi/StubJar.java", "source": "the-stack-v2", "method_name": "visit", "class_name": "CreateStubAction", "index": 2237, "label": 1}
{"input": "public ExpressionListContext expressionList() {\n\t\t\treturn getRuleContext(ExpressionListContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "expressionList", "class_name": "ExpressionContext", "index": 2238, "label": 1}
{"input": "@RequestMapping(value = \"/brand/detail/{brandCode}\", produces = MediaType.APPLICATION_JSON_VALUE, method = RequestMethod.GET)\n\t@ResponseBody\n\tpublic Map<String, Object> getBrandDetail(@PathVariable int brandCode) {\n\t\tlog.info(String.format(\"getBrandDetail with param 'brandCode' in class: %s\", getClass()));\n\t\ttry {\n\t\t\tlog.debug(\"getting brand's detail by its brandCode and return json\");\n\t\t\tMap<String, Object> result = new HashMap<String, Object>();\n\t\t\tBrandModel en = service.findBrandById(brandCode);\n\t\t\tresult.put(\"currentbrand\", en);\n\t\t\tresult.put(\"status\", \"ok\");\n\t\t\tlog.debug(\"getbrandDetail successful\");\n\t\t\treturn result;\n\t\t} catch (Exception e) {\n\t\t\tlog.error(String.format(\"getBrandDetail with param 'lotNumber' in class %s has error: %s\", getClass(),\n\t\t\t\t\te.getMessage()));\n\t\t\tthrow e;\n\t\t}\n\t}", "timestamp": "2020-04-28T08:30:30.309932Z", "repo_name": "15110081/Chori", "path": "/chori/src/main/java/com/chori/controller/BrandController.java", "source": "the-stack-v2", "method_name": "getBrandDetail", "class_name": "BrandController", "index": 2239, "label": 1}
{"input": "public void setSavedPasswordExceptions(ArrayList<String> savedPasswordExceptions) {\n            mSavedPasswordExeptions = savedPasswordExceptions;\n        }", "timestamp": "2022-12-08T04:12:54.583056Z", "repo_name": "yeahhhhhhhh/chromium_quic", "path": "/src/chrome/android/javatests/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferencesTest.java", "source": "the-stack-v2", "method_name": "setSavedPasswordExceptions", "class_name": "FakePasswordManagerHandler", "index": 2240, "label": 1}
{"input": "public Criteria andUserStIdGreaterThan(Integer value) {\r\n            addCriterion(\"user_st_id >\", value, \"userStId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2022-12-10T20:39:24.451742Z", "repo_name": "TangHui-ops/myProject", "path": "/后端/weixingxiaocx/src/main/java/cn/bdqn/mbg/model/UserStateTypeExample.java", "source": "the-stack-v2", "method_name": "andUserStIdGreaterThan", "class_name": "GeneratedCriteria", "index": 2241, "label": 1}
{"input": "public User login(String username, String password) throws RemoteException {\n        if (getUser() != null) {\n            \n            return null;\n        }\n        User user = server.login(username, password);\n\n        if (user == null) {\n            logger.log(Level.WARNING, String.format(\"%s tried to login\", username));\n            \n            return null;\n        }\n\n        registeredUser = (User) user;\n        logger.log(Level.INFO, String.format(\"%s logged in\", user.getUsername()));\n        return registeredUser;\n        \n    }", "timestamp": "2021-09-04T04:38:48.038600Z", "repo_name": "Heikum/Jam.Guess", "path": "/Jam.Guess/src/main/Jam/Guess/Jam/Guess/rmi/ClientManager.java", "source": "the-stack-v2", "method_name": "login", "class_name": "ClientManager", "index": 2242, "label": 1}
{"input": "private static void assertOrderedAll(ColumnFamilyStore cfs, int expectedSize)\n    {\n        assertOrdered(Util.cmd(cfs).build(), expectedSize);\n    }", "timestamp": "2022-05-31T23:56:44.066378Z", "repo_name": "ealonsodb/cassandra", "path": "/test/unit/org/apache/cassandra/db/ScrubTest.java", "source": "the-stack-v2", "method_name": "assertOrderedAll", "class_name": "ScrubTest", "index": 2243, "label": 1}
{"input": "@Test public void testSelectWithoutFrom() {\n    CalciteAssert.that()\n        .query(\"select 2+2\")\n        .returns(\"EXPR$0=4\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testSelectWithoutFrom", "class_name": "JdbcTest", "index": 2244, "label": 1}
{"input": "private void sendFinishedEvent(String token) {\n        String namespace = ApiConstants.NAMESPACE;\n        String name = ApiConstants.Events.SpeechFinished.NAME;\n        MessageIdHeader header = new MessageIdHeader(namespace, name);\n        Event event = new Event(header, new SpeechLifecyclePayload(token));\n        messageSender.sendEvent(event, new IResponseListener() {\n            @Override\n            public void onSucceed(int statusCode) {\n                \n                if (statusCode == 204) {\n                    mediaPlayer.setActive(false);\n                } else {\n                    mediaPlayer.setActive(true);\n                }\n            }\n\n            @Override\n            public void onFailed(String errorMessage) {\n                mediaPlayer.setActive(false);\n            }\n        });\n    }", "timestamp": "2020-03-18T20:34:35.302007Z", "repo_name": "exiaoqu/BluetoothDemo", "path": "/app/src/main/java/com/baidu/duer/dcs/devicemodule/voiceoutput/VoiceOutputDeviceModule.java", "source": "the-stack-v2", "method_name": "sendFinishedEvent", "class_name": "VoiceOutputDeviceModule", "index": 2245, "label": 1}
{"input": "public int hashCode() {\n\t\t return new HashCodeBuilder(17, 77).append(id)\n\t\t\t\t\t\t\t\t\t       .append(date)\n\t\t\t\t\t\t\t\t\t       .toHashCode();\n\t}", "timestamp": "2021-01-25T10:11:45.309547Z", "repo_name": "horiam/ResourceManager", "path": "/Model/src/main/java/org/horiam/ResourceManager/model/Model.java", "source": "the-stack-v2", "method_name": "hashCode", "class_name": "Model", "index": 2246, "label": 1}
{"input": "public static <E extends Exception> void invokeAndWaitIfNeeded(@NotNull final ThrowableRunnable<E> runnable) throws Exception {\n    if (SwingUtilities.isEventDispatchThread()) {\n      runnable.run();\n    }\n    else {\n      final Ref<Exception> ref = Ref.create();\n      SwingUtilities.invokeAndWait(new Runnable() {\n        @Override\n        public void run() {\n          try {\n            runnable.run();\n          }\n          catch (Exception e) {\n            ref.set(e);\n          }\n        }\n      });\n      if (!ref.isNull()) throw ref.get();\n    }\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "invokeAndWaitIfNeeded", "class_name": "UsefulTestCase", "index": 2247, "label": 1}
{"input": "@Override\n    public void registerViewCallback(ITicketPagerCallback callback) {\n        this.mCallback = callback;\n        if (mCurrentState != LoadState.NONE) {\n            \n            \n            if (mCurrentState == LoadState.SUCCESS) {\n                onTicketLoadSuccess();\n            } else if (mCurrentState == LoadState.ERROR) {\n                onLoadTickError();\n            } else if (mCurrentState == LoadState.LOADING) {\n                onTicketLoading();\n            }\n        }\n    }", "timestamp": "2022-10-16T14:53:54.911853Z", "repo_name": "tttttz/TicketUnion", "path": "/app/src/main/java/com/example/ticketunion/presenter/impl/TicketPresentImpl.java", "source": "the-stack-v2", "method_name": "registerViewCallback", "class_name": "TicketPresentImpl", "index": 2248, "label": 1}
{"input": "public void testBug100695a() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b100695/Test.java\",\n\t\t\"package b100695;\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"\tClass<Class>[] foo;\\n\" +\n\t\t\"\tClass<Class>[] bar = foo;\\n\" +\n\t\t\"\tTest() {\\n\" +\n\t\t\"\t\tfoo = null;\\n\" +\n\t\t\"\t}\\n\" +\n\t\t\"}\\n\"\n\t);\n\tIField field = this.workingCopies[0].getType(\"Test\").getField(\"package b100695;\\n\"0);\n\tsearch(field, ALL_OCCURRENCES);\n\tassertSearchResults(\n\t\t\"package b100695;\\n\"1 +\n\t\t\"package b100695;\\n\"2 +\n\t\t\"package b100695;\\n\"3\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug100695a", "class_name": "JavaSearchBugsTests", "index": 2249, "label": 1}
{"input": "public Criteria andVdef15GreaterThanOrEqualTo(String value) {\r\n            addCriterion(\"VDEF15 >=\", value, \"vdef15\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef15GreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 2250, "label": 1}
{"input": "@Test public void subtypeOf() throws Exception {\n    Type listOfWildcardType = TypesTest.class.getDeclaredField(\"listSubtype\").getGenericType();\n    Type expected = Types.collectionElementType(listOfWildcardType, List.class);\n    assertThat(Types.subtypeOf(CharSequence.class)).isEqualTo(expected);\n  }", "timestamp": "2021-04-27T09:37:55.346570Z", "repo_name": "nedtwigg/moshi", "path": "/moshi/src/test/java/com/squareup/moshi/TypesTest.java", "source": "the-stack-v2", "method_name": "subtypeOf", "class_name": "TypesTest", "index": 2251, "label": 1}
{"input": "@StartBeforeNativeResult\n    protected abstract int onStartTaskBeforeNativeLoaded(\n            Context context, TaskParameters taskParameters, TaskFinishedCallback callback);", "timestamp": "2023-03-21T03:20:15.377034Z", "repo_name": "otcshare/chromium-src", "path": "/components/background_task_scheduler/android/java/src/org/chromium/components/background_task_scheduler/NativeBackgroundTask.java", "source": "the-stack-v2", "method_name": "onStartTaskBeforeNativeLoaded", "class_name": "NativeBackgroundTask", "index": 2252, "label": 1}
{"input": "@Override\n  public CompletableFuture<Void> mutateRow(RowMutations mutation) {\n    return this.<Void> newCaller(mutation, writeRpcTimeoutNs).action((controller, loc,\n        stub) -> RawAsyncTableImpl.<Void> mutateRow(controller, loc, stub, mutation, (rn, rm) -> {\n          RegionAction.Builder regionMutationBuilder = RequestConverter.buildRegionAction(rn, rm);\n          regionMutationBuilder.setAtomic(true);\n          return MultiRequest.newBuilder().addRegionAction(regionMutationBuilder.build()).build();\n        }, resp -> null)).call();\n  }", "timestamp": "2020-03-21T15:28:16.237120Z", "repo_name": "siwuxietang/hbase", "path": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncTableImpl.java", "source": "the-stack-v2", "method_name": "mutateRow", "class_name": "RawAsyncTableImpl", "index": 2253, "label": 1}
{"input": "@java.lang.Override\n    public Builder clearField(\n        com.google.protobuf.Descriptors.FieldDescriptor field) {\n      return super.clearField(field);\n    }", "timestamp": "2023-08-19T07:39:40.744879Z", "repo_name": "googleads/google-ads-java", "path": "/google-ads-stubs-v14/src/main/java/com/google/ads/googleads/v14/enums/CustomAudienceTypeEnum.java", "source": "the-stack-v2", "method_name": "clearField", "class_name": "Builder", "index": 2254, "label": 1}
{"input": "public TypeArgumentContext typeArgument(int i) {\n\t\t\treturn getRuleContext(TypeArgumentContext.class,i);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "typeArgument", "class_name": "TypeArgumentsContext", "index": 2255, "label": 1}
{"input": "@Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        \n        \n        \n        int id = item.getItemId();\n\n        \n        if (id == R.id.action_settings) {\n            return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }", "timestamp": "2021-01-10T05:30:07.032885Z", "repo_name": "pdroid84/LocationByPlacesAPI", "path": "/app/src/main/java/com/pdroid84/deb/locationbyplacesapi/MainActivity.java", "source": "the-stack-v2", "method_name": "onOptionsItemSelected", "class_name": "MainActivity", "index": 2256, "label": 1}
{"input": "@Override\n    public void setCanvasSize(int width, int height) {\n        mWidth = width;\n        mHeigth = height;\n\n        mMoveModel.setRange(width, height);\n\n        mMoveModel.setPosition(width / 2f, height / 2f, Direction.RIGHT);\n\n    }", "timestamp": "2022-10-24T13:02:51.156909Z", "repo_name": "holyace/RandomGame", "path": "/app/src/main/java/com/chad/demo/random/render/impl/RandomRender.java", "source": "the-stack-v2", "method_name": "setCanvasSize", "class_name": "RandomRender", "index": 2257, "label": 1}
{"input": "public Criteria andPkpsndocBetween(String value1, String value2) {\r\n            addCriterion(\"PKPSNDOC between\", value1, value2, \"pkpsndoc\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andPkpsndocBetween", "class_name": "GeneratedCriteria", "index": 2258, "label": 1}
{"input": "@Override\n\t\n\tpublic List<UsersRanking> getUsersRanking() {\n\t\t\n\t\ttry {\n\t\t\treturn\tdao.getUsersRanking();\n\t\t} catch (Exception e) {\n\t\t\t\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\treturn null;\n\t}", "timestamp": "2021-08-20T02:43:02.675295Z", "repo_name": "swaggerduo/yongluocun1", "path": "/src/com/service/impl/UsersServiceImpl.java", "source": "the-stack-v2", "method_name": "getUsersRanking", "class_name": "UsersServiceImpl", "index": 2259, "label": 1}
{"input": "public BigDecimal getCreditFee() {\n        return isNullFee(creditFeeSpec) ? null : GuaranteesHelper.calculateFee(validity, amount, creditFeeSpec);\n    }", "timestamp": "2021-06-16T09:55:00.426309Z", "repo_name": "zemuldo/Cyclos_3.7", "path": "/src/nl/strohalm/cyclos/entities/accounts/guarantees/Guarantee.java", "source": "the-stack-v2", "method_name": "getCreditFee", "class_name": "Guarantee", "index": 2260, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n\tpublic ActionForward toDjTaskList(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\n\t\tMap params = new HashMap();\n\t\tParamUtil.putStr2Map(request, \"APPLICATIONID\", params);\n\t\tParamUtil.putStr2Map(request, \"ACCOUNTNUMBER\", params);\n\t\tParamUtil.putStr2Map(request, \"STATUS\", params);\n\t\tParamUtil.putStr2Map(request, \"ksr\", params);\n\t\tParamUtil.putStr2Map(request, \"jsr\", params);\n\t\tint pageNo = ParamUtil.getInt(request, \"pageNo\", 1);\n\t\tIListPage page = zfdjService.pageQueryDjTask(params, pageNo);\n\t\trequest.setAttribute(\"page\", page);\n\t\treturn mapping.findForward(\"djlist\");\n\t}", "timestamp": "2021-01-12T15:41:00.492001Z", "repo_name": "MoonLuckSir/MoonRepository", "path": "/src/java/com/yitong/app/action/judicial/dxzpzfdj/ZfdjAction.java", "source": "the-stack-v2", "method_name": "toDjTaskList", "class_name": "ZfdjAction", "index": 2261, "label": 1}
{"input": "public void mymain(String[] args) throws IOException  {\n\t\tSystem.out.println(\"=======BEGIN======\");  \n\n\t\tString getUrl = \"http://www.yihaodian.com/product/16082_1\"; \n\t\tDocument doc =  Jsoup.connect(getUrl).userAgent(\"\") \n\t\t                .timeout(3000) \n\t\t                .get();\n\t\t\n\t\t\n\t\n\t\t\tElement link=doc.select(\".wrap>.produce.clearfix\").first(); \n\t\t\tSystem.out.println(link.toString()); \n\n\t}", "timestamp": "2020-04-12T22:21:25.206499Z", "repo_name": "xueshijun/Tesseract-OCR-Java-Demo", "path": "/src/test/Interesting.java", "source": "the-stack-v2", "method_name": "mymain", "class_name": "Interesting", "index": 2262, "label": 1}
{"input": "public final ExplicitGenericInvocationContext explicitGenericInvocation() throws RecognitionException {\n\t\tExplicitGenericInvocationContext _localctx = new ExplicitGenericInvocationContext(_ctx, getState());\n\t\tenterRule(_localctx, 208, RULE_explicitGenericInvocation);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(1245);\n\t\t\tnonWildcardTypeArguments();\n\t\t\tsetState(1246);\n\t\t\tmatch(Identifier);\n\t\t\tsetState(1247);\n\t\t\targuments();\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "explicitGenericInvocation", "class_name": "JavaParser", "index": 2263, "label": 1}
{"input": "@Override\n        public void onSubscribe(Flow.Subscription subscription) {\n            logger.finest(() -> \"onSubscribe: \" + subscription);\n\n            this.subscription = subscription;\n            subscription.request(Long.MAX_VALUE);\n        }", "timestamp": "2021-06-12T20:52:56.747999Z", "repo_name": "vanajaguru/helidon", "path": "/config/config/src/main/java/io/helidon/config/ConfigHelper.java", "source": "the-stack-v2", "method_name": "onSubscribe", "class_name": "OnNextFunctionSubscriber", "index": 2264, "label": 1}
{"input": "private String getOperator(String number) {\n        if (number.startsWith(\"093\") || number.startsWith(\"090\")) {\n            return \"MTN\";\n        } else if (number.startsWith(\"094\")) {\n            return \"WiMax\";\n        } else if (number.startsWith(\"091\") || number.startsWith(\"0990\")) {\n            return \"MCI\";\n        } else if (number.startsWith(\"0921\") || number.startsWith(\"0922\")) {\n            return \"090\"0;\n        }\n        return null;\n    }", "timestamp": "2021-10-28T22:28:27.287477Z", "repo_name": "mehrdadbahri/charge-app-android", "path": "/app/src/main/java/ir/android_developing/chargeapp/GiftcardPurchaseFragment.java", "source": "the-stack-v2", "method_name": "getOperator", "class_name": "GiftcardPurchaseFragment", "index": 2265, "label": 1}
{"input": "@Override\n    public TypeMeaningWordRecord value4(String value) {\n        setMwLexComplexity(value);\n        return this;\n    }", "timestamp": "2020-12-23T02:30:44.911257Z", "repo_name": "tonisnurk/ekilex", "path": "/ekilex-app/src/main/java/eki/ekilex/data/db/udt/records/TypeMeaningWordRecord.java", "source": "the-stack-v2", "method_name": "value4", "class_name": "TypeMeaningWordRecord", "index": 2266, "label": 1}
{"input": "public void employeeByFilter() {\n        EmployeeFilter filter = new EmployeeFilter();\n        filter.setPositionId(1);\n        System.out.println(employeeMapper.selectEmployeeByFilter(filter));;\n\n    }", "timestamp": "2021-01-23T07:26:42.730334Z", "repo_name": "FreeTimeWork/CommodityDiscount", "path": "/src/test/java/EmployeeMapperTest.java", "source": "the-stack-v2", "method_name": "employeeByFilter", "class_name": "EmployeeMapperTest", "index": 2267, "label": 1}
{"input": "private void scanNode()\n    {\n        if (getCurrentChar() == '('){       \n            scanInternalNode();\n            \n        }\n        else if (getCurrentChar() != ';'){     \n            getLeafLabel();\n            \n            \n        }\n        else {                                 \n            System.out.println(\"Found a ; in the wrong place in tree\");\n            System.exit(1);\n        }\n    }", "timestamp": "2021-06-26T12:36:00.754838Z", "repo_name": "gatechatl/STRAW", "path": "/src/TreeVector/NewickParser.java", "source": "the-stack-v2", "method_name": "scanNode", "class_name": "NewickParser", "index": 2268, "label": 1}
{"input": "public void updateDataDictDocuments(List<DQDocument> documents) {\n        ensureDataDictIndexAccess();\n        operationDataDictDocuments(documents, customDataDictIndexAccess::insertOrUpdateDocument);\n    }", "timestamp": "2021-05-01T16:06:31.746782Z", "repo_name": "MarkChappell/data-quality", "path": "/dataquality-semantic/src/main/java/org/talend/dataquality/semantic/api/CustomDictionaryHolder.java", "source": "the-stack-v2", "method_name": "updateDataDictDocuments", "class_name": "CustomDictionaryHolder", "index": 2269, "label": 1}
{"input": "public static int getScreenWidth(Context context)\n\t{\n\t\tWindowManager wm = (WindowManager) context\n\t\t\t\t.getSystemService(Context.WINDOW_SERVICE);\n\t\tDisplayMetrics outMetrics = new DisplayMetrics();\n\t\twm.getDefaultDisplay().getMetrics(outMetrics);\n\t\treturn outMetrics.widthPixels;\n\t}", "timestamp": "2016-09-07T18:41:53.249204Z", "repo_name": "knightneo/heart_rate_android", "path": "/ProjectExample/src/com/example/utils/ScreenUtils.java", "source": "the-stack-v2", "method_name": "getScreenWidth", "class_name": "ScreenUtils", "index": 2270, "label": 1}
{"input": "@Test\n \tpublic final void testWriteFC() throws XMLParsingException, FileNotFoundException, ClassCastException, XMLStreamException, UnknownCRSException, TransformationException, FactoryConfigurationError, IOException, ClassNotFoundException, InstantiationException, IllegalAccessException {\n \t\t\n \t\t\n \t\tgmlHandler.writeFC(gmlHandler.readFC());\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/1/1_53fde7739b00630f9767bb7163ae554d28cbb320/GmlHandlerTest/1_53fde7739b00630f9767bb7163ae554d28cbb320_GmlHandlerTest_t.java", "source": "the-stack-v2", "method_name": "testWriteFC", "class_name": "GmlHandlerTest", "index": 2271, "label": 1}
{"input": "public void testBug110060_MethodPattern01() throws CoreException {\n\tsetUpBug110060_MethodPattern();\n\tsearch(\"MWD\", METHOD, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);\n\tassertSearchResults(\"\");\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_MethodPattern01", "class_name": "JavaSearchBugsTests", "index": 2272, "label": 1}
{"input": "public void setMessageListener(Object obj) {\n        if (this.pushHandler != null) {\n            this.pushHandler.setMessageListener(obj);\n        }\n    }", "timestamp": "2020-07-22T15:46:54.149313Z", "repo_name": "cmFodWx5YWRhdjEyMTA5/Gaana2", "path": "/sources/com/moengage/push/PushManager.java", "source": "the-stack-v2", "method_name": "setMessageListener", "class_name": "PushManager", "index": 2273, "label": 1}
{"input": "public void setMoreImagesCallback(MoreImagesCallback callback) {\n        this.moreImagesCallback = callback;\n    }", "timestamp": "2020-04-27T08:23:29.216219Z", "repo_name": "madhavc/HelloSearch", "path": "/app/src/main/java/com/example/hellosearch/ImagesAdapter.java", "source": "the-stack-v2", "method_name": "setMoreImagesCallback", "class_name": "ImagesAdapter", "index": 2274, "label": 1}
{"input": "@RequestMapping(value = \"\", method = RequestMethod.POST)\n     @ResponseBody\n     public List<WordAtom> post(@RequestBody String sentence) {\n        System.out.println(sentence);\n         SegmentWorker worker = SegmentEngine.getInstance().getSegmentWorker();\n         SegmentResult result = worker.segment(sentence);\n        System.out.println(result);\n         return result.getWordAtoms();\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/33/33_496c4ee9d62e080fc5095887a14746bac471ccd1/SegmentController/33_496c4ee9d62e080fc5095887a14746bac471ccd1_SegmentController_s.java", "source": "the-stack-v2", "method_name": "post", "class_name": "SegmentController", "index": 2275, "label": 1}
{"input": "public boolean match(SingleMemberAnnotation node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 2276, "label": 1}
{"input": "@Override\n   public boolean equals(Object o)\n   {\n      if(o == null)\n      {\n         return false;\n      }\n      \n      if(this.getClass() != o.getClass())\n      {\n         return false;\n      }\n      \n      if(this.a.x != ((Triangle)o).a.x)\n      {\n         return false;\n      }\n      \n      if(this.a.y != ((Triangle)o).a.y)\n      {\n         return false;\n      }\n      \n      if(this.b.x != ((Triangle)o).b.x)\n      {\n         return false;\n      }\n      \n      if(this.b.y != ((Triangle)o).b.y)\n      {\n         return false;\n      }\n      \n      if(this.c.x != ((Triangle)o).c.x)\n      {\n         return false;\n      }\n      \n      if(this.c.y != ((Triangle)o).c.y)\n      {\n         return false;\n      }\n      \n      if(this.color.getRGB() != ((Triangle)o).color.getRGB())\n      {\n         return false;\n      }\n      \n      if(this.filled != ((Triangle)o).filled)\n      {\n         return false;\n      }\n      \n      return true;\n   }", "timestamp": "2021-04-18T22:28:05.611678Z", "repo_name": "Ademello25/Poly-CS-backups", "path": "/CPE102/program3/Triangle.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "Triangle", "index": 2277, "label": 1}
{"input": "private void checkResultSetMetaData(Connection connection, String sql)\n      throws SQLException {\n    try (Statement statement = connection.createStatement();\n         ResultSet resultSet = statement.executeQuery(sql)) {\n      ResultSetMetaData metaData = resultSet.getMetaData();\n      assertEquals(3, metaData.getColumnCount());\n      assertEquals(\"empid\", metaData.getColumnLabel(1));\n      assertEquals(\"empid\", metaData.getColumnName(1));\n      assertEquals(\"emps\", metaData.getTableName(1));\n      assertEquals(\"X\", metaData.getColumnLabel(2));\n      assertEquals(\"deptno\", metaData.getColumnName(2));\n      assertEquals(\"emps\", metaData.getTableName(2));\n      assertEquals(\"Y\", metaData.getColumnLabel(3));\n      assertEquals(\"Y\", metaData.getColumnName(3));\n      assertEquals(null, metaData.getTableName(3));\n    }\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "checkResultSetMetaData", "class_name": "JdbcTest", "index": 2278, "label": 1}
{"input": "public ArrayInitializerContext arrayInitializer() {\n\t\t\treturn getRuleContext(ArrayInitializerContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "arrayInitializer", "class_name": "VariableInitializerContext", "index": 2279, "label": 1}
{"input": "@Override \n        public void stopKeepaliveResponse(RadioResponseInfo info) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(135, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "stopKeepaliveResponse", "class_name": "Proxy", "index": 2280, "label": 1}
{"input": "@Test(timeout = 4000)\n  public void test34()  throws Throwable  {\n      SimpleNode simpleNode0 = new SimpleNode(47);\n      simpleNode0.setIdentifier(\";\");\n      StringWriter stringWriter0 = new StringWriter();\n      simpleNode0.dump(\";\", stringWriter0);\n      assertEquals(\"<InstanceOfExpression>\\n</InstanceOfExpression>\\n\", stringWriter0.toString());\n  }", "timestamp": "2023-04-17T20:05:40.560943Z", "repo_name": "bellmit/termite-replication", "path": "/tests/time/mosa/tests/s1007/19_jmca/evosuite-tests/com/soops/CEN4010/JMCA/JParser/SimpleNode_ESTest.java", "source": "the-stack-v2", "method_name": "test34", "class_name": "SimpleNode_ESTest", "index": 2281, "label": 1}
{"input": "public static Object getCache(String key, Object defaultValue) {\n\n\t\tObject obj = getSession().getAttribute(key);\n\t\treturn obj==null?defaultValue:obj;\n\t}", "timestamp": "2022-11-07T06:10:16.559471Z", "repo_name": "moutainhigh/suppplychain", "path": "/src/main/java/com/jeeplus/modules/sys/utils/UserUtils.java", "source": "the-stack-v2", "method_name": "getCache", "class_name": "UserUtils", "index": 2282, "label": 1}
{"input": "public static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tSystem.out.println(\"How many numbers you need?\");\n\t\tint nums = in.nextInt();\n\t\t\n\t\tSystem.out.println(\"How long the Lottery is?\");\n\t\tint len = in.nextInt();\n\t\t\n\t\tBigInteger lotteryOdds = BigInteger.valueOf(1);\n\t\tfor(int i = 1; i <= len; i++) {\n\t\t\tlotteryOdds = lotteryOdds.multiply(BigInteger.valueOf(nums - i + 1)).divide(BigInteger.valueOf(i));\n\t\t}\n\t\tSystem.out.println(\"Your odds is 1 in \" + lotteryOdds);\n\t}", "timestamp": "2021-03-01T15:01:13.500907Z", "repo_name": "rainyrun/practice", "path": "/Java/corejava(Java核心技术)/src/v1ch03/bigIntegerTest/BigIntegerTest.java", "source": "the-stack-v2", "method_name": "main", "class_name": "BigIntegerTest", "index": 2283, "label": 1}
{"input": "private void startClient(CIMServerResponseVo.ServerInfo cimServer) {\n        Bootstrap bootstrap = new Bootstrap();\n        bootstrap.group(group)\n                .channel(NioSocketChannel.class)\n                .handler(new CIMClientHandlerInitializer());\n\n        ChannelFuture channelFuture = null;\n        try {\n            channelFuture = bootstrap.connect(cimServer.getIp(), cimServer.getCimServerPort()).sync();\n        } catch (Exception e) {\n            errorCount++;\n            if (errorCount >= appConfiguration.getErrorCount()) {\n                log.error(\"连接失败次数达到上限[{}]次\", errorCount);\n                msgHandler.shutdown();\n            }\n            log.error(\"Connect fail!\", e);\n        }\n        if (channelFuture.isSuccess()) {\n            echoService.echo(\"Start cim client success!\");\n            log.info(\"启动 cim client 成功\");\n        }\n        socketChannel = ((SocketChannel) channelFuture.channel());\n    }", "timestamp": "2023-04-07T13:42:19.684531Z", "repo_name": "bellmit/jiang-mall-cloud", "path": "/chat-system/chat-client/src/main/java/org/jiang/chat/client/client/CIMClient.java", "source": "the-stack-v2", "method_name": "startClient", "class_name": "CIMClient", "index": 2284, "label": 1}
{"input": "private void addLocalManagementPortPropertyAlias(\n\t\t\tfinal ConfigurableEnvironment environment) {\n\t\tenvironment.getPropertySources().addLast(\n\t\t\t\tnew PropertySource<Object>(\"Management Server\") {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic Object getProperty(String name) {\n\t\t\t\t\t\tif (\"local.management.port\".equals(name)) {\n\t\t\t\t\t\t\treturn environment.getProperty(\"local.server.port\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t});\n\t}", "timestamp": "2021-01-18T14:54:31.844603Z", "repo_name": "Zoltin/spring-boot", "path": "/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java", "source": "the-stack-v2", "method_name": "addLocalManagementPortPropertyAlias", "class_name": "EndpointWebMvcAutoConfiguration", "index": 2285, "label": 1}
{"input": "@Override\n  public OResultSet command(String query, Object[] args) {\n    checkOpenness();\n    checkIfActive();\n\n    OStatement statement = OSQLEngine.parse(query, this);\n    OResultSet original = statement.execute(this, args, true);\n    OLocalResultSetLifecycleDecorator result;\n    if (!statement.isIdempotent()) {\n      \n      OInternalResultSet prefetched = new OInternalResultSet();\n      original.forEachRemaining(x -> prefetched.add(x));\n      original.close();\n      result = new OLocalResultSetLifecycleDecorator(prefetched);\n    } else {\n      \n      result = new OLocalResultSetLifecycleDecorator(original);\n      this.queryStarted(result.getQueryId(), result);\n      result.addLifecycleListener(this);\n    }\n    return result;\n\n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "command", "class_name": "ODatabaseDocumentEmbedded", "index": 2286, "label": 1}
{"input": "public Criteria andUserStNameIn(List<String> values) {\r\n            addCriterion(\"user_st_name in\", values, \"userStName\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2022-12-10T20:39:24.451742Z", "repo_name": "TangHui-ops/myProject", "path": "/后端/weixingxiaocx/src/main/java/cn/bdqn/mbg/model/UserStateTypeExample.java", "source": "the-stack-v2", "method_name": "andUserStNameIn", "class_name": "GeneratedCriteria", "index": 2287, "label": 1}
{"input": "@Override \n        public boolean unlinkToDeath(IHwBinder.DeathRecipient recipient) throws RemoteException {\n            return this.mRemote.unlinkToDeath(recipient);\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "unlinkToDeath", "class_name": "Proxy", "index": 2288, "label": 1}
{"input": "@RequestMapping(value = \"update/{id}\", method = RequestMethod.GET)\n\tpublic String update(@PathVariable(\"id\") Long id, Model model) {\n\t\tYHPC_CheckPlanEntity bcrw = wghglXjszService.findById(id);\n\t\tList<YHPC_CheckPlan_Time> rwsjlist = yhpcCheckPlanService.rwsjList(id);\n\t\tmodel.addAttribute(\"rwsjlist\", JsonMapper.getInstance().toJson(rwsjlist));\n\t\tmodel.addAttribute(\"bcrw\", bcrw);\n\t\tmodel.addAttribute(\"action\", \"update\");\n\t\treturn \"wghgl/xjsz/form\";\n\t}", "timestamp": "2022-12-21T12:28:37.800274Z", "repo_name": "wuyufei2019/test110", "path": "/src/main/java/com/cczu/model/controller/PageWghglXjszController.java", "source": "the-stack-v2", "method_name": "update", "class_name": "PageWghglXjszController", "index": 2289, "label": 1}
{"input": "@Override\n    public void setPrivileged(boolean privileged) {\n\n        boolean oldPrivileged = this.privileged;\n        this.privileged = privileged;\n        support.firePropertyChange(\"privileged\",\n                                   oldPrivileged,\n                                   this.privileged);\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setPrivileged", "class_name": "StandardContext", "index": 2290, "label": 1}
{"input": "public void toggleMethodBreakpoints(IWorkbenchPart part, ISelection selection) throws CoreException {\r\n\t}", "timestamp": "2016-09-05T17:26:54.796391Z", "repo_name": "NDGuthrie/bposs", "path": "/src/com.mentor.nucleus.bp.debug.ui/src/com/mentor/nucleus/bp/debug/ui/BPLineBreakpointAdapter.java", "source": "the-stack-v2", "method_name": "toggleMethodBreakpoints", "class_name": "BPLineBreakpointAdapter", "index": 2291, "label": 1}
{"input": "public void setProviderImageId(String providerImageId) {\n        this.providerImageId = providerImageId;\n    }", "timestamp": "2023-04-27T16:24:27.422581Z", "repo_name": "TheWeatherCompany/dasein-cloud-core", "path": "/src/main/java/org/dasein/cloud/compute/LaunchConfiguration.java", "source": "the-stack-v2", "method_name": "setProviderImageId", "class_name": "LaunchConfiguration", "index": 2292, "label": 1}
{"input": "@Test\n\tpublic void testObterFonteRendaPessoaInstituicao() throws BancoobException{\n\t\tInteger idPessoa = 1;\n\t\tInteger idInstituicao = 2;\n\t\t\n\t\tCapesIntegracaoServicoEJB ejb = new CapesIntegracaoServicoEJB();\n\t\tList<FonteRendaPessoaVO> lstfonteRendaVO = new ArrayList();\n\t\tFonteRendaPessoaVO fonteRendaPessoaVO = new FonteRendaPessoaVO();\n\t\tlstfonteRendaVO.add(fonteRendaPessoaVO);\n\t\t\n\t\tFonteRendaPessoaDelegate mockFonteRendaPessoaDelegate = EasyMock.createMock(FonteRendaPessoaDelegate.class);\n\t\tEasyMock.expect(mockFonteRendaPessoaDelegate.obterPorPessoaInstituicao(EasyMock.anyInt(), EasyMock.anyInt())).andReturn(lstfonteRendaVO);\n\t\t\n\t\tejb.setFonteRendaPessoaDelegate(mockFonteRendaPessoaDelegate);\n\t\t\n\t\tEasyMock.replay(mockFonteRendaPessoaDelegate);\n\t\tFonteRendaPessoaIntegracaoDTO fonteRendaPessoaIntegracaoDTO = ejb.obterFonteRendaPessoaInstituicao(idPessoa, idInstituicao);\n\t\tAssert.assertNotNull(fonteRendaPessoaIntegracaoDTO);\n\t\tEasyMock.verify(mockFonteRendaPessoaDelegate);\n\t}", "timestamp": "2022-12-01T05:20:26.998529Z", "repo_name": "pabllo007/cca", "path": "/Integracao/ContaCapitalIntegracaoEJB/src/test/java/br/com/sicoob/sisbr/cca/integracao/negocio/servicos/ejb/CapesIntegracaoServicoEJBTest.java", "source": "the-stack-v2", "method_name": "testObterFonteRendaPessoaInstituicao", "class_name": "CapesIntegracaoServicoEJBTest", "index": 2293, "label": 1}
{"input": "@Override\r\n    public void parseStartTag(XmlPullParser parser) throws ParserException {\r\n      if (TAG_STREAM_FRAGMENT.equals(parser.getName())) {\r\n        parseStreamFragmentStartTag(parser);\r\n      } else {\r\n        parseStreamElementStartTag(parser);\r\n      }\r\n    }", "timestamp": "2020-12-10T15:15:05.202410Z", "repo_name": "AhabweEmmanuel/Marlia", "path": "/TMessagesProj/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java", "source": "the-stack-v2", "method_name": "parseStartTag", "class_name": "StreamIndexParser", "index": 2294, "label": 1}
{"input": "public Object getValueAt(int row, int column) {\r\n\t\tVector<Object> rowVector = data.get(row);\r\n\t\treturn rowVector.get(column);\r\n\t}", "timestamp": "2022-07-01T16:52:01.783312Z", "repo_name": "JaroslawHryszko/MISTA", "path": "/src/edit/GeneralTableModel.java", "source": "the-stack-v2", "method_name": "getValueAt", "class_name": "GeneralTableModel", "index": 2295, "label": 1}
{"input": "public Criteria andSuperiorVerifiUserIdIsNotNull() {\r\n            addCriterion(\"superior_verifi_user_id is not null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andSuperiorVerifiUserIdIsNotNull", "class_name": "GeneratedCriteria", "index": 2296, "label": 1}
{"input": "@Test\n    public void testLogWithAllEmptyByteArrays() {\n        Log log = Log.topicsAndData(new byte[0], Collections.singletonList(new byte[0]), new byte[0]);\n        assertArrayEquals(new byte[0], log.copyOfAddress());\n        assertArrayEquals(new byte[0], log.copyOfData());\n        assertListsEqual(Collections.singletonList(new byte[0]), log.copyOfTopics());\n    }", "timestamp": "2020-06-03T14:12:10.752160Z", "repo_name": "aionnetwork/aion_types", "path": "/test/org/aion/types/LogTest.java", "source": "the-stack-v2", "method_name": "testLogWithAllEmptyByteArrays", "class_name": "LogTest", "index": 2297, "label": 1}
{"input": "@RequestMapping(value=\"index\")\n\tpublic String index(Model model) {\n\t\tif(\"0\".equals(UserUtil.getCurrentShiroUser().getUsertype())){\n\t\t\treturn \"wghgl/xjsz/index\";\n\t\t}else{\n\t\t\treturn \"../error/403\";\n\t\t}\n\t}", "timestamp": "2022-12-21T12:28:37.800274Z", "repo_name": "wuyufei2019/test110", "path": "/src/main/java/com/cczu/model/controller/PageWghglXjszController.java", "source": "the-stack-v2", "method_name": "index", "class_name": "PageWghglXjszController", "index": 2298, "label": 1}
{"input": "@Test\n    public void testJunit()\n    {\n        version.configure( unpack() )\n                .executeTest()\n                .verifyErrorFree( 1 );\n    }", "timestamp": "2023-01-07T02:20:09.881872Z", "repo_name": "wessam1292/finalcertificates", "path": "/surefire-3.0.0-M5/surefire-its/src/test/java/org/apache/maven/surefire/its/JUnit4VersionsIT.java", "source": "the-stack-v2", "method_name": "testJunit", "class_name": "JUnit4VersionsIT", "index": 2299, "label": 1}
{"input": "static void assertEquals(int x, int y, IntVector v) {\n\t\tassert v.getX() == x;\n\t\tassert v.getY() == y;\n\t}", "timestamp": "2023-06-17T03:00:53.904887Z", "repo_name": "AdiBad/drawit", "path": "/drawit/tests/shapegroups2/ShapeGroupTest_Nonleaves_2Levels.java", "source": "the-stack-v2", "method_name": "assertEquals", "class_name": "ShapeGroupTest_Nonleaves_2Levels", "index": 2300, "label": 1}
{"input": "@Test\n    public void equalsVerifier() throws Exception {\n        TestUtil.equalsVerifier(EntryCategory.class);\n        EntryCategory entryCategory1 = new EntryCategory();\n        entryCategory1.setId(\"id1\");\n        EntryCategory entryCategory2 = new EntryCategory();\n        entryCategory2.setId(entryCategory1.getId());\n        assertThat(entryCategory1).isEqualTo(entryCategory2);\n        entryCategory2.setId(\"id2\");\n        assertThat(entryCategory1).isNotEqualTo(entryCategory2);\n        entryCategory1.setId(null);\n        assertThat(entryCategory1).isNotEqualTo(entryCategory2);\n    }", "timestamp": "2021-06-26T15:26:23.855027Z", "repo_name": "stupant/timesheet", "path": "/src/test/java/com/wbs/web/rest/EntryCategoryResourceIntTest.java", "source": "the-stack-v2", "method_name": "equalsVerifier", "class_name": "EntryCategoryResourceIntTest", "index": 2301, "label": 1}
{"input": "public void close() {\n\n\t\ttry {\n\n\t\t\toutStream.close();\n\t\t\tinStream.close();\n\n\t\t\tsocket.close();\n\t\t} catch (IOException ex) {\n\n\t\t\tSystem.out.println(\"Connection: \" + ex.getMessage());\n\t\t\tex.printStackTrace();\n\t\t}\n\t}", "timestamp": "2020-04-20T20:18:52.517940Z", "repo_name": "nikitazaicev/Nettverk", "path": "/dat110-oblig/src/no/hvl/dat110/messaging/Connection.java", "source": "the-stack-v2", "method_name": "close", "class_name": "Connection", "index": 2302, "label": 1}
{"input": "@Test\n  public void case24() {\n    int[] revenues = { 69, 3, 4, -349, -649, 547, -651, -355, 9, 3, 5, 253, 424, -57, 8, -45, 249, -67, -6, -3, -347, -4, -647, -1, -352, 69, -815, 551, -7, -59, -235, -51, 106, -35, -4, -648, -48, 9, -352, -653, 262, 246, -48, 75, -45, 97, -957, -654 };\n    int k = 9;\n    assertEquals(297.18513031550066, mergersdivtwo.findMaximum(revenues, k), DELTA * 297.18513031550066);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case24", "class_name": "MergersDivTwoTest", "index": 2303, "label": 1}
{"input": "@Test\n    public void shouldCalculateWithPromotionsAndPrintResultsToSystemOut() {\n        App.main(new String[]{\"Apple,Apple,Orange\",\"buy1get1free:Apple,get3for2:Orange\"});\n        assertThat(outContent.toString(), equalTo(\"£0.85\"));\n    }", "timestamp": "2020-05-31T07:02:24.239980Z", "repo_name": "vacant78/javaBasics20150708", "path": "/src/test/java/msz/javabasics/AppIT.java", "source": "the-stack-v2", "method_name": "shouldCalculateWithPromotionsAndPrintResultsToSystemOut", "class_name": "AppIT", "index": 2304, "label": 1}
{"input": "public int getWeakPower(IBlockState blockState, IBlockAccess blockAccess, BlockPos pos, EnumFacing side)\n    {\n        return this.getRedstoneStrength(blockState);\n    }", "timestamp": "2022-04-25T21:12:53.403324Z", "repo_name": "SkidJava/Orbit-1.12.2", "path": "/src/main/java/net/minecraft/block/BlockBasePressurePlate.java", "source": "the-stack-v2", "method_name": "getWeakPower", "class_name": "BlockBasePressurePlate", "index": 2305, "label": 1}
{"input": "public static String getDateTime(long microsecond) {\n\t\t\treturn getFormatDateTime(new Date(microsecond), \"yyyy-MM-dd HH:mm:ss\");\n\t\t}", "timestamp": "2020-04-03T19:08:02.936008Z", "repo_name": "xhly521/AAHelper", "path": "/app/src/main/java/com/xhly/godutch/utility/DateTools.java", "source": "the-stack-v2", "method_name": "getDateTime", "class_name": "DateTools", "index": 2306, "label": 1}
{"input": "protected static void createFoAttributes(TcPr tcPr, Element foBlockElement){\n    \t\n    \t\n\t\tif (tcPr==null) {\n\t\t\treturn;\n\t\t}\n    \tapplyFoAttributes(PropertyFactory.createProperties(tcPr), foBlockElement);\n    }", "timestamp": "2020-04-03T02:05:51.304271Z", "repo_name": "ermanishks/docx4j", "path": "/src/main/java/org/docx4j/convert/out/pdf/viaXSLFO/Conversion.java", "source": "the-stack-v2", "method_name": "createFoAttributes", "class_name": "Conversion", "index": 2307, "label": 1}
{"input": "public void applyLineWidth(float lineWidth) {\r\n        if (!isValid() || this.width != lineWidth) {\r\n            GL11.glLineWidth(lineWidth);\r\n            this.width = lineWidth;\r\n        }\r\n    }", "timestamp": "2021-02-11T15:25:47.199953Z", "repo_name": "lihak/fairytale-soulfire-svn-to-git", "path": "/trunk/src/com/jme/scene/state/lwjgl/records/LineRecord.java", "source": "the-stack-v2", "method_name": "applyLineWidth", "class_name": "LineRecord", "index": 2308, "label": 1}
{"input": "@Override\n        public Builder<T> setExtensible(boolean extensible) {\n            this.isExtensible = extensible;\n            return this;\n        }", "timestamp": "2020-12-14T02:11:21.814429Z", "repo_name": "fawnapp/aura", "path": "/aura-impl/src/main/java/org/auraframework/impl/root/component/BaseComponentDefImpl.java", "source": "the-stack-v2", "method_name": "setExtensible", "class_name": "Builder", "index": 2309, "label": 1}
{"input": "public Builder setConfidentialityImpactValue(int value) {\n\n      confidentialityImpact_ = value;\n      onChanged();\n      return this;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "setConfidentialityImpactValue", "class_name": "Builder", "index": 2310, "label": 1}
{"input": "private void updateView()  {\n\n        try {\n            chatDialogAdapter = new ChatDialogAdapter(getContext(), meetingId);\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        chatDialogAdapter.setHasStableIds(true);\n        recyclerView.setAdapter(chatDialogAdapter);\n        chatDialogAdapter.notifyDataSetChanged();\n    }", "timestamp": "2023-06-05T01:01:48.196610Z", "repo_name": "Vonalex99/ZoomPlus", "path": "/app/src/main/java/com/example/zoom/db/ChatDialog.java", "source": "the-stack-v2", "method_name": "updateView", "class_name": "ChatDialog", "index": 2311, "label": 1}
{"input": "@Test\n    @SmallTest\n    @Feature({\"Preferences\"})\n    public void testExportCancelOnWarningDismissal() throws Exception {\n        setPasswordSource(new SavedPasswordEntry(\"https://example.com\", \"test user\", \"password\"));\n\n        ReauthenticationManager.setApiOverride(ReauthenticationManager.OverrideState.AVAILABLE);\n        ReauthenticationManager.setScreenLockSetUpOverride(\n                ReauthenticationManager.OverrideState.AVAILABLE);\n\n        final Preferences preferences =\n                PreferencesTest.startPreferences(InstrumentationRegistry.getInstrumentation(),\n                        SavePasswordsPreferences.class.getName());\n\n        reauthenticateAndRequestExport(preferences);\n\n        \n        \n        Espresso.onView(withText(R.string.save_password_preferences_export_action_title))\n                .check(matches(isDisplayed()));\n        Espresso.pressBack();\n\n        \n        \n        checkExportMenuItemState(MenuItemState.ENABLED);\n    }", "timestamp": "2022-12-08T04:12:54.583056Z", "repo_name": "yeahhhhhhhh/chromium_quic", "path": "/src/chrome/android/javatests/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferencesTest.java", "source": "the-stack-v2", "method_name": "testExportCancelOnWarningDismissal", "class_name": "SavePasswordsPreferencesTest", "index": 2312, "label": 1}
{"input": "@Test\n\tpublic void testObterReferenciaPessoaInstituicaoEmpty() throws BancoobException{\n\t\tInteger idPessoa = 1;\n\t\tInteger idInstituicao = 2;\n\t\t\n\t\tCapesIntegracaoServicoEJB ejb = new CapesIntegracaoServicoEJB();\n\t\tList<ReferenciaPessoaVO> referenciaPessoaVO = new ArrayList();\n\t\t\n\t\tReferenciaPessoaDelegate mockReferenciaPessoaDelegate = EasyMock.createMock(ReferenciaPessoaDelegate.class);\n\t\tEasyMock.expect(mockReferenciaPessoaDelegate.obterPorPessoaInstituicao(EasyMock.anyInt(), EasyMock.anyInt())).andReturn(referenciaPessoaVO);\n\t\t\n\t\tejb.setReferenciaPessoaDelegate(mockReferenciaPessoaDelegate);\n\t\t\n\t\tEasyMock.replay(mockReferenciaPessoaDelegate);\n\t\tReferenciaPessoaIntegracaoDTO referenciaPessoa = ejb.obterReferenciaPessoaInstituicao(idPessoa, idInstituicao);\n\t\tAssert.assertNotNull(referenciaPessoa);\n\t\tEasyMock.verify(mockReferenciaPessoaDelegate);\n\t}", "timestamp": "2022-12-01T05:20:26.998529Z", "repo_name": "pabllo007/cca", "path": "/Integracao/ContaCapitalIntegracaoEJB/src/test/java/br/com/sicoob/sisbr/cca/integracao/negocio/servicos/ejb/CapesIntegracaoServicoEJBTest.java", "source": "the-stack-v2", "method_name": "testObterReferenciaPessoaInstituicaoEmpty", "class_name": "CapesIntegracaoServicoEJBTest", "index": 2313, "label": 1}
{"input": "public static int getAppVersionCode(Context context) {\n        try {\n            \n            PackageManager pm = context.getPackageManager();\n            PackageInfo pi = pm.getPackageInfo(context.getPackageName(), 0);\n            versioncode = pi.versionCode;\n        } catch (Exception e) {\n            Log.e(\"VersionInfo\", \"Exception\", e);\n        }\n        return versioncode;\n    }", "timestamp": "2021-05-04T06:28:00.061787Z", "repo_name": "BuptCAD/Medical_Android", "path": "/app/src/main/java/cn/wydewy/medicalapp/util/VersionUtil.java", "source": "the-stack-v2", "method_name": "getAppVersionCode", "class_name": "VersionUtil", "index": 2314, "label": 1}
{"input": "@Override\n    public void addRoleMapping(String role, String link) {\n\n        synchronized (roleMappings) {\n            roleMappings.put(role, link);\n        }\n        fireContainerEvent(\"addRoleMapping\", role);\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "addRoleMapping", "class_name": "StandardContext", "index": 2315, "label": 1}
{"input": "public void testBug77093constructor() throws CoreException {\n\tsetUpBug77093();\n\tIType type = this.workingCopies[0].getType(\"X\");\n\tIMethod method = type.getMethod(\"X\", new String[] {\"[[QZ;\"});\n\t\n\tsearch(method, ALL_OCCURRENCES);\n\tassertSearchResults(\n\t\t\"src/b77093/X.java b77093.X() [this(new Z[10][]);] EXACT_MATCH\\n\"+\n\t\t\"src/b77093/X.java b77093.X(Z[][]) [X] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug77093constructor", "class_name": "JavaSearchBugsTests", "index": 2316, "label": 1}
{"input": "public void addAll(LinkedSequence<T> seq) throws java.lang.NullPointerException {\n    \t\n    \tif(seq == null) {\n    \t\tthrow new java.lang.NullPointerException(\"the sequence provided is null \");\n\n    \t}\n    \t\n    \twhile(seq.next != null) {\n    \t\tthis.addAfter(seq.next.value);\n    \t\tseq = seq.next;\n    \t}\n    \t\n    }", "timestamp": "2020-03-07T00:45:31.868890Z", "repo_name": "abstructs/DS_assignment1", "path": "/src/task2/LinkedSequence.java", "source": "the-stack-v2", "method_name": "addAll", "class_name": "LinkedSequence", "index": 2317, "label": 1}
{"input": "@Test\n    @Transactional\n    void checkAddToReportsIsRequired() throws Exception {\n        int databaseSizeBeforeTest = transactionRepository.findAll().size();\n        \n        transaction.setAddToReports(null);\n\n        \n\n        restTransactionMockMvc\n            .perform(\n                post(ENTITY_API_URL)\n                    .with(csrf())\n                    .contentType(MediaType.APPLICATION_JSON)\n                    .content(TestUtil.convertObjectToJsonBytes(transaction))\n            )\n            .andExpect(status().isBadRequest());\n\n        List<Transaction> transactionList = transactionRepository.findAll();\n        assertThat(transactionList).hasSize(databaseSizeBeforeTest);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "checkAddToReportsIsRequired", "class_name": "TransactionResourceIT", "index": 2318, "label": 1}
{"input": "@Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        super.onOptionsItemSelected(item);\n\n        switch (item.getItemId()){\n            case R.id.search_menu:\n                ;\n        }\n        return true;\n    }", "timestamp": "2020-05-24T22:49:45.368657Z", "repo_name": "jwngma/Startup-Ideas", "path": "/app/src/main/java/com/startupideas/startupideas/MainActivity.java", "source": "the-stack-v2", "method_name": "onOptionsItemSelected", "class_name": "MainActivity", "index": 2319, "label": 1}
{"input": "@Test\n  public void getServiceExceptionTest() throws Exception {\n    StatusRuntimeException exception = new StatusRuntimeException(io.grpc.Status.INVALID_ARGUMENT);\n    mockServiceMonitoringService.addException(exception);\n\n    try {\n      ServiceName name = ServiceName.ofProjectServiceName(\"[PROJECT]\", \"[SERVICE]\");\n      client.getService(name);\n      Assert.fail(\"No exception raised\");\n    } catch (InvalidArgumentException e) {\n      \n    }\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-monitoring/google-cloud-monitoring/src/test/java/com/google/cloud/monitoring/v3/ServiceMonitoringServiceClientTest.java", "source": "the-stack-v2", "method_name": "getServiceExceptionTest", "class_name": "ServiceMonitoringServiceClientTest", "index": 2320, "label": 1}
{"input": "public void initializeMedium(Medium medium) {\n        JpaUtil.creerContextePersistance();\n        try {\n            JpaUtil.ouvrirTransaction();\n            mediumDao.create(medium);\n            JpaUtil.validerTransaction();\n            System.out.println(\"Medium initilization successfull\");\n        } catch (Exception ex) {\n            \n        } finally {\n            JpaUtil.fermerContextePersistance();\n        }\n    }", "timestamp": "2023-05-04T20:25:05.351761Z", "repo_name": "Lezzio/PROJET-DASI", "path": "/src/main/java/com/mycompany/td2/dasi/metier/services/EntityService.java", "source": "the-stack-v2", "method_name": "initializeMedium", "class_name": "EntityService", "index": 2321, "label": 1}
{"input": "int getDotStartX(int columnIndex, int columnWidth) {\r\n\tGC gc;\r\n\tTable parent = getParent();\r\n\tString label = getText(columnIndex);\r\n\tint dotStartX = -1;\r\n\tint maxWidth;\r\n\r\n\tif (label != null) {\r\n\t\tgc = new GC(parent);\r\n\t\tmaxWidth = getMaxTextWidth(columnIndex, columnWidth);\r\n\t\tlabel = parent.trimItemText(label, maxWidth, gc);\r\n\t\tif (label.endsWith(Table.DOT_STRING) == true) {\r\n\t\t\tdotStartX = gc.stringExtent(label).x - parent.getDotsWidth(gc);\r\n\t\t\t\n\t\t\tdotStartX += getImageStopX(columnIndex);\r\n\t\t\tdotStartX += getTextIndent(columnIndex);\r\n\t\t}\r\n\t\tgc.dispose();\t\t\r\n\t}\r\n\treturn dotStartX;\r\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipseswt_cluster/56034/tar_1.java", "source": "the-stack-v2", "method_name": "getDotStartX", "class_name": "TableItem", "index": 2322, "label": 1}
{"input": "public UnidadInvestigacion getUnidadInvestigacionCreada() {\n        return unidadInvestigacion;\n    }", "timestamp": "2021-06-04T03:02:13.867648Z", "repo_name": "victornavelino/ProyectoUno", "path": "/src/vista/panelControl/diagUnidadInvestigacion.java", "source": "the-stack-v2", "method_name": "getUnidadInvestigacionCreada", "class_name": "diagUnidadInvestigacion", "index": 2323, "label": 1}
{"input": "public void recover(ProposalID promisedID, ProposalID acceptedID, Object acceptedValue) {\n\t\tacceptor.recover(promisedID, acceptedID, acceptedValue);\n\t}", "timestamp": "2021-01-17T22:48:04.114401Z", "repo_name": "kjorg50/paxos", "path": "/src/main/java/cocagne/paxos/practical/PracticalNode.java", "source": "the-stack-v2", "method_name": "recover", "class_name": "PracticalNode", "index": 2324, "label": 1}
{"input": "public Criteria andImageIdLessThan(Integer value) {\r\n            addCriterion(\"image_id <\", value, \"imageId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2021-05-08T12:41:18.691106Z", "repo_name": "suoyiguke/weixinparent", "path": "/weixinpojo/src/main/java/com/yinkai/entities/ImageExample.java", "source": "the-stack-v2", "method_name": "andImageIdLessThan", "class_name": "GeneratedCriteria", "index": 2325, "label": 1}
{"input": "private ChessPiece king(Color color) {\n\t\tList<Piece> list = piecesOnTheBoard.stream().filter(x -> ((ChessPiece)x).getColor() == color).collect(Collectors.toList());\n\t\tfor (Piece p : list) {\n\t\t\tif (p instanceof King) {\n\t\t\t\treturn (ChessPiece)p;\n\t\t\t}\n\t\t}\n\t\tthrow new IllegalStateException(\"There is no \" + color + \" king on the board\");\n\t}", "timestamp": "2020-06-28T18:28:29.367248Z", "repo_name": "DylanPachecoCoder/jogoXadrez", "path": "/src/chess/ChessMatch.java", "source": "the-stack-v2", "method_name": "king", "class_name": "ChessMatch", "index": 2326, "label": 1}
{"input": "@Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        switch (requestCode) {\r\n            case CLOSEJOBTASK:\r\n                if (resultCode == 1) {\r\n                    Log.d(\"CH12\", \"Good Close!\");\r\n                    \n                    Intent resultIntent = new Intent();\r\n                    resultIntent.putExtras(data.getExtras());\r\n                    this.setResult(1, resultIntent);\r\n                    \n                    finish();\r\n                }\r\n                break;\r\n        }\r\n\r\n    }", "timestamp": "2018-12-27T23:30:46.988404Z", "repo_name": "psh667/android", "path": "/unLock/ch12/android/src/com/msi/manning/UnlockingAndroid/ShowJob.java", "source": "the-stack-v2", "method_name": "onActivityResult", "class_name": "ShowJob", "index": 2327, "label": 1}
{"input": "@Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"class ResponseErrorList {\\n\");\n\n    sb.append(\"    errors: \").append(toIndentedString(errors)).append(\"\\n\");\n    sb.append(\"}\");\n    return sb.toString();\n  }", "timestamp": "2020-11-27T18:56:35.376340Z", "repo_name": "FaizRasool/openbanking-aspsp", "path": "/forgerock-openbanking-cdr-aspsp-rs/forgerock-openbanking-cdr-aspsp-rs-model/src/main/java/com/forgerock/openbanking/aspsp/rs/model/v0_9/ResponseErrorList.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "ResponseErrorList", "index": 2328, "label": 1}
{"input": "@Test public void testMultisetConstructor() {\n    CalciteAssert.that()\n        .query(\"select multiset[1,2] as a from (values (1))\")\n        .returnsUnordered(\"A=[1, 2]\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testMultisetConstructor", "class_name": "JdbcTest", "index": 2329, "label": 1}
{"input": "public static List<Office> getOfficeAllList(){\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tList<Office> officeList = (List<Office>)getCache(CACHE_OFFICE_ALL_LIST);\n\t\tif (officeList == null){\n\t\t\tofficeList = officeDao.findAllList(new Office());\n\t\t}\n\t\treturn officeList;\n\t}", "timestamp": "2022-11-07T06:10:16.559471Z", "repo_name": "moutainhigh/suppplychain", "path": "/src/main/java/com/jeeplus/modules/sys/utils/UserUtils.java", "source": "the-stack-v2", "method_name": "getOfficeAllList", "class_name": "UserUtils", "index": 2330, "label": 1}
{"input": "public static JSONObject formatToJson(String strManifest) throws Exception {\n\t\tJSONObject manifest = new JSONObject(strManifest);\n\t\tManifestValidator.validate(manifest);\n\t\treturn manifest;\n\t}", "timestamp": "2021-01-19T13:33:30.889171Z", "repo_name": "l3303/BrowserApp", "path": "/datastore-adapter/src/ken/datastore/manifest/ManifestJsonFormator.java", "source": "the-stack-v2", "method_name": "formatToJson", "class_name": "ManifestJsonFormator", "index": 2331, "label": 1}
{"input": "@Override\r\n    public ArrayList<String> getReadyFlights() {\r\n        List<? extends AeroplaneInterface> list = bookingSystem.getFlights();\r\n        ArrayList<String> readyFlights = new ArrayList<>();\r\n        for(AeroplaneInterface ai : list)\r\n        {\r\n            if(ai.isReady()) {\r\n                readyFlights.add(ai.getFlightNo());\r\n            }\r\n        }\r\n        return readyFlights;\r\n    }", "timestamp": "2021-01-20T19:26:17.826818Z", "repo_name": "GitAirline/GitAirline", "path": "/src/Manager/BookingSystemManager.java", "source": "the-stack-v2", "method_name": "getReadyFlights", "class_name": "BookingSystemManager", "index": 2332, "label": 1}
{"input": "public void setUsersLike(String post_key) {\n\n\n            like_ref.child(post_key).addValueEventListener(new ValueEventListener() {\n                @Override\n                public void onDataChange(DataSnapshot dataSnapshot) {\n                    long userNumber = dataSnapshot.getChildrenCount();\n                \n                    usersLike.setText(String.valueOf(userNumber));\n\n                }\n\n                @Override\n                public void onCancelled(DatabaseError databaseError) {\n\n                }\n            });\n        }", "timestamp": "2021-01-20T16:10:02.437775Z", "repo_name": "adamfils/SchoolAssistant", "path": "/app/src/main/java/com/adamapps/coursealert/HomeActivity.java", "source": "the-stack-v2", "method_name": "setUsersLike", "class_name": "PostViewHolder", "index": 2333, "label": 1}
{"input": "private List<HttpRequestResponse> getAllHttps() {\n\t\treturn getAllDocs().stream().filter(e -> e.get(\"type\").getAsString().equals(\"http\"))\n\t\t\t\t.map(e -> new HttpRequestResponse(e)).collect(Collectors.toList());\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t}", "timestamp": "2021-01-18T01:40:35.930601Z", "repo_name": "BenKettlewell/couchburp", "path": "/src/main/java/com/prevsec/couchburp/controller/BurpController.java", "source": "the-stack-v2", "method_name": "getAllHttps", "class_name": "BurpController", "index": 2334, "label": 1}
{"input": "@Override\n\tpublic void breakBlock(World world, BlockPos pos, IBlockState state) {\n\t\tBlockPosHelper helper = new BlockPosHelper(pos);\n\t\tfor (BlockPos blockPos : helper.squareRing(1, 0)) setAir(world, blockPos);\n\t\tfor (BlockPos blockPos : helper.cuboid(-1, 1, -1, 1, 2, 1)) setAir(world, blockPos);\n\t\tworld.removeTileEntity(pos);\n\t}", "timestamp": "2020-03-25T08:56:26.322487Z", "repo_name": "remclave/NuclearCraft", "path": "/src/main/java/nc/block/tile/generator/BlockFusionCore.java", "source": "the-stack-v2", "method_name": "breakBlock", "class_name": "BlockFusionCore", "index": 2335, "label": 1}
{"input": "public void testBug122442c() throws CoreException {\n\tsetUpBug122442a();\n\tsearch(\"I\", CLASS, IMPLEMENTORS);\n\tassertSearchResults(\n\t\t\"src/b122442/X.java b122442.X [I] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug122442c", "class_name": "JavaSearchBugsTests", "index": 2336, "label": 1}
{"input": "public void create(Vehiculos vehiculos) throws PreexistingEntityException, RollbackFailureException, Exception {\n        EntityManager em = null;\n        try {\n            utx.begin();\n            em = getEntityManager();\n            em.persist(vehiculos);\n            utx.commit();\n        } catch (Exception ex) {\n            try {\n                utx.rollback();\n            } catch (Exception re) {\n                throw new RollbackFailureException(\"An error occurred attempting to roll back the transaction.\", re);\n            }\n            if (findVehiculos(vehiculos.getIdvehiculos()) != null) {\n                throw new PreexistingEntityException(\"Vehiculos \" + vehiculos + \" already exists.\", ex);\n            }\n            throw ex;\n        } finally {\n            if (em != null) {\n                em.close();\n            }\n        }\n    }", "timestamp": "2022-12-02T11:31:39.644405Z", "repo_name": "Dakkar05/Prueba-Bimestral", "path": "/src/java/controller/VehiculosJpaController.java", "source": "the-stack-v2", "method_name": "create", "class_name": "VehiculosJpaController", "index": 2337, "label": 1}
{"input": "private short[] getUserCodeToWave(short userCode) {\n\t\tArrayList<short[]> wave_list = new ArrayList<short[]>();\n\t\tint totalLength = 0;\n\t\tfor (int i = 0; i < 16; ++i) { \n\t\t\tif (((userCode >> (15 - i)) & 0x1) == 1) { \n\t\t\t\twave_list.add(getHigh());\n\t\t\t} else { \n\t\t\t\twave_list.add(getLow());\n\t\t\t}\n\t\t\ttotalLength += wave_list.get(i).length;\n\t\t}\n\n\t\tint currentPosition = 0;\n\t\tshort userCodeWaveArray[] = new short[totalLength];\n\n\t\tfor (short[] byteArray : wave_list) {\n\t\t\tSystem.arraycopy(byteArray, 0, userCodeWaveArray, currentPosition, byteArray.length);\n\t\t\tcurrentPosition += byteArray.length;\n\t\t}\n\n\t\treturn userCodeWaveArray;\n\t}", "timestamp": "2021-09-14T07:02:53.037353Z", "repo_name": "wardensky/wardensky-demo", "path": "/java/audioplayer/src/main/java/com/hhtd/audioplayer/App.java", "source": "the-stack-v2", "method_name": "getUserCodeToWave", "class_name": "App", "index": 2338, "label": 1}
{"input": "public Criteria andVdef11NotEqualTo(String value) {\r\n            addCriterion(\"VDEF11 <>\", value, \"vdef11\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef11NotEqualTo", "class_name": "GeneratedCriteria", "index": 2339, "label": 1}
{"input": "@Test public void testCustomSchemaDirectConnection() throws Exception {\n    final String url = \"jdbc:calcite:\"\n        + \"schemaFactory=\" + MySchemaFactory.class.getName()\n        + \"; schema.tableName=ELVIS\";\n    checkCustomSchema(url, \"adhoc\"); \n    checkCustomSchema(url + \"; schema=xyz\", \"xyz\"); \n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testCustomSchemaDirectConnection", "class_name": "JdbcTest", "index": 2340, "label": 1}
{"input": "@SubscribeEvent\n\tpublic void registerSounds(RegistryEvent.Register<net.minecraft.util.SoundEvent> event) {\n\t\telements.registerSounds(event);\n\t}", "timestamp": "2023-06-01T01:05:39.099062Z", "repo_name": "shadowforce78/ScriptorMod", "path": "/src/main/java/net/mcreator/scriptor/ScriptorMod.java", "source": "the-stack-v2", "method_name": "registerSounds", "class_name": "ScriptorMod", "index": 2341, "label": 1}
{"input": "private void createCache(javax.cache.CacheManager cm, String cacheName) {\n        javax.cache.Cache<Object, Object> cache = cm.getCache(cacheName);\n        if (cache == null) {\n            cm.createCache(cacheName, jcacheConfiguration);\n        }\n    }", "timestamp": "2022-12-21T23:39:24.412381Z", "repo_name": "mbobadilla/jhipster-wateway-application", "path": "/src/main/java/com/cda/gateway/config/CacheConfiguration.java", "source": "the-stack-v2", "method_name": "createCache", "class_name": "CacheConfiguration", "index": 2342, "label": 1}
{"input": "public static com.google.ads.googleads.v14.enums.CustomAudienceTypeEnum parseFrom(byte[] data)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data);\n  }", "timestamp": "2023-08-19T07:39:40.744879Z", "repo_name": "googleads/google-ads-java", "path": "/google-ads-stubs-v14/src/main/java/com/google/ads/googleads/v14/enums/CustomAudienceTypeEnum.java", "source": "the-stack-v2", "method_name": "parseFrom", "class_name": "CustomAudienceTypeEnum", "index": 2343, "label": 1}
{"input": "@RequestMapping(\"/delete-permission\")\n    @ResponseBody\n    public String delete(long id) {\n        try {\n            Permission permission = new Permission(id);\n            permissionDao.delete(permission);\n        }\n        catch (Exception ex) {\n            return \"Error deleting permission: \" + ex.toString();\n        }\n        return \"Permission succesfully deleted!\";\n    }", "timestamp": "2021-05-06T11:32:56.602276Z", "repo_name": "jedrek18/Kluczify", "path": "/server/src/main/java/pl/kluczify/server/controllers/PermissionController.java", "source": "the-stack-v2", "method_name": "delete", "class_name": "PermissionController", "index": 2344, "label": 1}
{"input": "public String getRackApplicationFactoryName() {\n         return this.rackApplicationFactoryName;\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/33/33_9d556bb155b90787a532ff5f8246d892165619a8/RackMetaData/33_9d556bb155b90787a532ff5f8246d892165619a8_RackMetaData_t.java", "source": "the-stack-v2", "method_name": "getRackApplicationFactoryName", "class_name": "RackMetaData", "index": 2345, "label": 1}
{"input": "@Test\n  public void case6() {\n    int[] revenues = { 300, -800, 700, -89, -82, -97, 100, -89, -89, -94, -89, -89, -1000, -500, -800, -86, -86, -700, -87, -80, -89, -81, 300, -87, -100, -96, -99, -87, -93, 100 };\n    int k = 7;\n    assertEquals(189.87845804988663, mergersdivtwo.findMaximum(revenues, k), DELTA * 189.87845804988663);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case6", "class_name": "MergersDivTwoTest", "index": 2346, "label": 1}
{"input": "@Override \n        public void getModemActivityInfoResponse(RadioResponseInfo info, ActivityStatsInfo activityInfo) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            activityInfo.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(123, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "getModemActivityInfoResponse", "class_name": "Proxy", "index": 2347, "label": 1}
{"input": "public void start() {\n        if(carmaker==null){\n            System.out.println(\"Car is Starting\");\n        }\n        if(carmaker!=null && carmodel==null){\n            System.out.println(\"Car make \"+ carmaker + \" is strating\");\n        }\n        if(carmaker!=null && carmodel!=null){\n            System.out.println(\"Car make\"+ carmaker +\", model:\"+carmodel+ \" is strating\");\n        }\n    }", "timestamp": "2022-03-16T02:59:57.550380Z", "repo_name": "rafinrabbi/cse111theory", "path": "/src/Test/Car.java", "source": "the-stack-v2", "method_name": "start", "class_name": "Car", "index": 2348, "label": 1}
{"input": "@Override \n        public void nvWriteItemResponse(RadioResponseInfo info) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(109, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "nvWriteItemResponse", "class_name": "Proxy", "index": 2349, "label": 1}
{"input": "@Override\n    public void requestPermissions(String[] permissions, int requestCode, PermissionListener listener) {\n        JitsiMeetActivityDelegate.requestPermissions(this, permissions, requestCode, listener);\n    }", "timestamp": "2023-02-17T05:06:30.003456Z", "repo_name": "amit27592/jitsi-meet", "path": "/android/sdk/src/main/java/org/jitsi/meet/sdk/JitsiMeetActivity.java", "source": "the-stack-v2", "method_name": "requestPermissions", "class_name": "JitsiMeetActivity", "index": 2350, "label": 1}
{"input": "@Override\n  public boolean equals(Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ResponseErrorList responseErrorList = (ResponseErrorList) o;\n    return Objects.equals(this.errors, responseErrorList.errors);\n  }", "timestamp": "2020-11-27T18:56:35.376340Z", "repo_name": "FaizRasool/openbanking-aspsp", "path": "/forgerock-openbanking-cdr-aspsp-rs/forgerock-openbanking-cdr-aspsp-rs-model/src/main/java/com/forgerock/openbanking/aspsp/rs/model/v0_9/ResponseErrorList.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "ResponseErrorList", "index": 2351, "label": 1}
{"input": "protected void createMetadata(OSharedContext shared) {\n    metadata.init(shared);\n    ((OSharedContextEmbedded) shared).create(this);\n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "createMetadata", "class_name": "ODatabaseDocumentEmbedded", "index": 2352, "label": 1}
{"input": "private static void appendFile(OutputStream output, File source) throws Exception {\n    \ttry (InputStream input = new BufferedInputStream(new FileInputStream(source))) {\n            IOUtils.copy(input, output);\n        } \n    }", "timestamp": "2023-04-13T21:05:23.834729Z", "repo_name": "qiudaoke/flowable-userguide", "path": "/sql/flowable-sql-6.2.0/src/main/java/org/flowable/sql/CombineUpgradeSqlGenerator.java", "source": "the-stack-v2", "method_name": "appendFile", "class_name": "CombineUpgradeSqlGenerator", "index": 2353, "label": 1}
{"input": "public AxisAlignedBB getBoundingBox(IBlockState state, IBlockAccess source, BlockPos pos)\n    {\n        boolean flag = this.getRedstoneStrength(state) > 0;\n        return flag ? PRESSED_AABB : UNPRESSED_AABB;\n    }", "timestamp": "2022-04-25T21:12:53.403324Z", "repo_name": "SkidJava/Orbit-1.12.2", "path": "/src/main/java/net/minecraft/block/BlockBasePressurePlate.java", "source": "the-stack-v2", "method_name": "getBoundingBox", "class_name": "BlockBasePressurePlate", "index": 2354, "label": 1}
{"input": "private Collection<GrantedAuthority> getAuthorities(User user) {\n\t\t\n\t\tList<GrantedAuthority> authList = new ArrayList<GrantedAuthority>();\n\t\tif (user.getRole() != null) {\n\t\t\tauthList.add(new SimpleGrantedAuthority(user.getRole().getName()));\n\t\t} else {\n\t\t\tauthList.add(new SimpleGrantedAuthority(\"guest\"));\n\t\t}\n\t\treturn authList;\n\t}", "timestamp": "2021-01-18T05:21:15.872933Z", "repo_name": "roxolan/vlethyme", "path": "/vlethyme/src/in/kmbs/vlethyme/security/VlethymeUserService.java", "source": "the-stack-v2", "method_name": "getAuthorities", "class_name": "VlethymeUserService", "index": 2355, "label": 1}
{"input": "@JSFProperty(tagExcluded=true)\n    @Override\n    public String getId()\n    {\n        \n        return super.getId();\n    }", "timestamp": "2021-01-10T19:09:03.293299Z", "repo_name": "lu4242/ext-myfaces-2.0.2-patch", "path": "/trunk/myfaces-impl-2021override/src/main/java/org/apache/myfaces/ov2021/view/facelets/tag/ui/UIDebug.java", "source": "the-stack-v2", "method_name": "getId", "class_name": "UIDebug", "index": 2356, "label": 1}
{"input": "public int formatStringToNumber(String string){\n        return Integer.parseInt(string.substring(2,5));\n    }", "timestamp": "2020-09-25T07:28:16.233549Z", "repo_name": "jdmaury94/qaAutomationCarnival", "path": "/src/test/java/helpers/Helpers.java", "source": "the-stack-v2", "method_name": "formatStringToNumber", "class_name": "Helpers", "index": 2357, "label": 1}
{"input": "@Override\n    public void onError(String errMsg) {\n        Toast.makeText(this, errMsg, Toast.LENGTH_SHORT).show();\n    }", "timestamp": "2023-02-15T01:44:35.345193Z", "repo_name": "umairqidwai/Check24Products", "path": "/app/src/main/java/com/example/check24products/presentation/MainActivity.java", "source": "the-stack-v2", "method_name": "onError", "class_name": "MainActivity", "index": 2358, "label": 1}
{"input": "@RequestMapping(\"upload2\")\n    public String upload2(MultipartFile photo,MultipartFile photo2){\n        System.out.println(photo.getOriginalFilename());\n        System.out.println(photo2.getOriginalFilename());\n        return \"index\";\n    }", "timestamp": "2022-06-24T13:13:32.340799Z", "repo_name": "ssn9/springboot_319", "path": "/src/main/java/com/aaa/controller/UploadController.java", "source": "the-stack-v2", "method_name": "upload2", "class_name": "UploadController", "index": 2359, "label": 1}
{"input": "public static String removeAccent(String s) {\n\t\tStringBuilder sb = new StringBuilder(s);\n\t\tfor (int i = 0; i < sb.length(); i++) {\n\t\t\tsb.setCharAt(i, removeAccent(sb.charAt(i)));\n\t\t}\n\t\treturn sb.toString();\n\t}", "timestamp": "2021-01-10T04:47:01.704295Z", "repo_name": "quandt162/Jsp_Servlet", "path": "/news-jsp-mysql/src/java/com/news/util/DaiCaThang.java", "source": "the-stack-v2", "method_name": "removeAccent", "class_name": "DaiCaThang", "index": 2360, "label": 1}
{"input": "public Criteria andVdef7Like(String value) {\r\n            addCriterion(\"VDEF7 like\", value, \"vdef7\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef7Like", "class_name": "GeneratedCriteria", "index": 2361, "label": 1}
{"input": "@Step(\"The dealer click on validate\")\n    public void clickOnValidate() {\n        topBarTabs.clickOnValidate();\n    }", "timestamp": "2022-12-16T16:56:59.827137Z", "repo_name": "ambasonic/KINTO", "path": "/KINTO/Kinto_France_Italy/src/test/java/e2eTests/stepdefinitions/milesRia/GlobalMrSteps.java", "source": "the-stack-v2", "method_name": "clickOnValidate", "class_name": "GlobalMrSteps", "index": 2362, "label": 1}
{"input": "@Before\n    public void setUp() throws Exception {\n        name = new Name(\"Chaitanya\", \"Ram\");\n        age = new Age(12);\n        gender = new Gender(\"male\");\n        City city = new City(\"Jamshedpur\");\n        State state = new State(\"Jharkhand\");\n        Country country = new Country(\"India\");\n        address = new Address(city, state, country);\n    }", "timestamp": "2021-01-10T07:02:07.328196Z", "repo_name": "navyasrib/java", "path": "/records/test/guestTest/PersonTest.java", "source": "the-stack-v2", "method_name": "setUp", "class_name": "PersonTest", "index": 2363, "label": 1}
{"input": "public boolean removePeer(Peer p) {\n         if(this.peersData.contains(p)) {\n             this.peersData.remove(p);\n             numPeers--;\n \n             if(p.isSeed())\n                 return this.removeSeed(p);\n             else\n                 return this.removeLeecher(p);\n         }\n         else\n             return(false);\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/33/33_f0eab8ff38d525893cd4aad3b5c31f0416b5676e/Torrent/33_f0eab8ff38d525893cd4aad3b5c31f0416b5676e_Torrent_s.java", "source": "the-stack-v2", "method_name": "removePeer", "class_name": "Torrent", "index": 2364, "label": 1}
{"input": "@Override\n    public void visitInnerClass(String name, String outerName, String innerName, int access) {\n      innerClasses.add(new InnerClassNode(name, outerName, innerName, access));\n    }", "timestamp": "2020-12-02T11:04:47.801319Z", "repo_name": "johnblaze321/buck", "path": "/src/com/facebook/buck/jvm/java/abi/StubJarClassEntry.java", "source": "the-stack-v2", "method_name": "visitInnerClass", "class_name": "InnerClassSortingClassVisitor", "index": 2365, "label": 1}
{"input": "private boolean\n    isDASJ2EEServer()\n    {\n        return DAS_SERVER_NAME.equals( getName() );\n    }", "timestamp": "2021-05-28T12:55:06.267463Z", "repo_name": "dmatej/Glassfish-SVN-Patched", "path": "/v2/admin/mbeanapi-impl/src/java/com/sun/enterprise/management/j2ee/DASJ2EEServerImpl.java", "source": "the-stack-v2", "method_name": "isDASJ2EEServer", "class_name": "DASJ2EEServerImpl", "index": 2366, "label": 1}
{"input": "public static String get_post( String key ) {\n\t  \n\t  String[] post = request().body().asFormUrlEncoded().get( key );\n\t  if ( post != null && post.length > 0 ) {\n\t\t  return post[0];\n\t  }\n\t  \n\t  return null;\n\t  \n  }", "timestamp": "2021-01-10T19:17:11.751315Z", "repo_name": "Neozaru/Play_Shop", "path": "/app/controllers/Application.java", "source": "the-stack-v2", "method_name": "get_post", "class_name": "Application", "index": 2367, "label": 1}
{"input": "public java.lang.String toString() {\n        java.lang.StringBuffer res = new java.lang.StringBuffer();\n        res.append(\"RealMatrixImpl{\");\n        if ((data) != null) {\n            for (int i = 0 ; i < (data.length) ; i++) {\n                if (i > 0) {\n                    res.append(\",\");\n                } \n                res.append(\"{\");\n                for (int j = 0 ; j < (data[0].length) ; j++) {\n                    if (j > 0) {\n                        res.append(\",\");\n                    } \n                    res.append(data[i][j]);\n                }\n                res.append(\"}\");\n            }\n        } \n        res.append(\"}\");\n        return res.toString();\n    }", "timestamp": "2021-05-07T00:07:06.345617Z", "repo_name": "SajjadZaidi/AutoRepair", "path": "/RawExperiments/Math/math98/1/AstorMain-math_98/src/variant-208/org/apache/commons/math/linear/RealMatrixImpl.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "RealMatrixImpl", "index": 2368, "label": 1}
{"input": "public Criteria andIdEqualTo(Integer value) {\n            addCriterion(\"id =\", value, \"id\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andIdEqualTo", "class_name": "GeneratedCriteria", "index": 2369, "label": 1}
{"input": "public int getTotalHeight() {\n\t    int totalHeight = 0;\n\t    for (int i = 0; i < aadapter.getCount(); i++) {\n\t        View listItem = aadapter.getView(i, null, this);\n\t        listItem.measure(0, 0);\n\t        totalHeight += listItem.getMeasuredHeight();\n\t    }\n\t\treturn totalHeight;\n   }", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "getTotalHeight", "class_name": "jListView", "index": 2370, "label": 1}
{"input": "public void testBug80194string3() throws CoreException, JavaModelException {\n\tsetUpBug80194();\n\tsearch(\"doSomething(Map<String,Object>,boolean)\", METHOD, ALL_OCCURRENCES);\n\tassertSearchResults(\n\t\t\"src/b80194/Test.java void b80194.Test.callDoSomething() [doSomething(map, true)] EXACT_MATCH\\n\" +\n\t\t\"src/b80194/Test.java void b80194.Test.doSomething(Map<String,Object>, boolean) [doSomething] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug80194string3", "class_name": "JavaSearchBugsTests", "index": 2371, "label": 1}
{"input": "public void sendMail(String receiveMail, String sendContent) throws Exception{\r\n    \tthis.receiveMail = receiveMail;\r\n    \tthis.sendContent = sendContent;\r\n    \t \n    \tProperties props = new Properties();\r\n       \tprops.setProperty(\"a\", \"b\");\r\n        props.setProperty(\"mail.transport.protocol\", \"smtp\"); \n        props.setProperty(\"mail.smtp.host\", SMTPSERVER); \n        props.setProperty(\"mail.smtp.port\", SMTPPORT); \r\n        props.put(\"mail.smtp.socketFactory.class\", \"javax.net.ssl.SSLSocketFactory\");\r\n        props.setProperty(\"mail.smtp.auth\", \"true\"); \n        props.setProperty(\"b\"0, \"true\");\n\r\n\r\n        \n        Session session = Session.getDefaultInstance(props);\r\n        \n        \n        \n        MimeMessage message = createEmail(session);\r\n        \n        Transport transport = session.getTransport();\r\n        transport.connect(SMTPSERVER, ACCOUT, PWD);\r\n        \n        transport.sendMessage(message, message.getAllRecipients());\r\n        transport.close();\r\n    }", "timestamp": "2020-03-12T22:42:10.083604Z", "repo_name": "laisanxin/witkeyServer", "path": "/src/com/witkey/service/MailService.java", "source": "the-stack-v2", "method_name": "sendMail", "class_name": "MailService", "index": 2372, "label": 1}
{"input": "@Test\n    public void testArgumentWithSaneLength() throws Exception\n    {\n        AlchemyAssertion<String> assertion = BlackNectarAssertions.argumentWithSaneLength();\n        assertThat(assertion, notNullValue());\n\n        assertion.check(normalString);\n\n        assertThrows(() -> assertion.check(longString)).isInstanceOf(FailedAssertionException.class);\n\n    }", "timestamp": "2021-06-18T06:05:39.558041Z", "repo_name": "BlackSourceLabs/BlackNectar-Service", "path": "/src/test/java/tech/blacksource/blacknectar/service/BlackNectarAssertionsTest.java", "source": "the-stack-v2", "method_name": "testArgumentWithSaneLength", "class_name": "BlackNectarAssertionsTest", "index": 2373, "label": 1}
{"input": "public Criteria andTopicIdEqualTo(Integer value) {\r\n            addCriterion(\"topic_id =\", value, \"topicId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2021-05-08T12:41:18.691106Z", "repo_name": "suoyiguke/weixinparent", "path": "/weixinpojo/src/main/java/com/yinkai/entities/ImageExample.java", "source": "the-stack-v2", "method_name": "andTopicIdEqualTo", "class_name": "GeneratedCriteria", "index": 2374, "label": 1}
{"input": "public static boolean isOnline(Context context) {\n        ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);\n        NetworkInfo wifi = cm.getNetworkInfo(ConnectivityManager.TYPE_WIFI);\n        NetworkInfo mobile = cm.getNetworkInfo(ConnectivityManager.TYPE_MOBILE);\n        NetworkInfo bluetooth = cm.getNetworkInfo(ConnectivityManager.TYPE_BLUETOOTH);\n        NetworkInfo lte = cm.getNetworkInfo(ConnectivityManager.TYPE_WIMAX);\n\n        boolean isConnected = false;\n        if ((wifi != null && wifi.isConnected()) || (mobile != null && mobile.isConnected()) || (bluetooth != null && bluetooth.isConnected()) || (lte != null && lte.isConnected())) {\n            isConnected = true;\n        }\n\n        return isConnected;\n    }", "timestamp": "2023-08-23T07:14:31.704097Z", "repo_name": "tddyko/HealthCareSolution", "path": "/app/src/main/java/com/greencross/greencare/util/DeviceUtil.java", "source": "the-stack-v2", "method_name": "isOnline", "class_name": "DeviceUtil", "index": 2375, "label": 1}
{"input": "@Override\n     public int hashCode() {\n         int hash = 0;\n         for(int i = 0; i < 20; i++) {\n             hash += infoHash.getBytes()[i] ^ 0x4F;\n         }\n         return hash;\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/33/33_f0eab8ff38d525893cd4aad3b5c31f0416b5676e/Torrent/33_f0eab8ff38d525893cd4aad3b5c31f0416b5676e_Torrent_s.java", "source": "the-stack-v2", "method_name": "hashCode", "class_name": "Torrent", "index": 2376, "label": 1}
{"input": "public void stopPlayLoop() {\n        if (mTimer != null) {\n            mTimer.cancel();\n            mTimer = null;\n        }\n    }", "timestamp": "2021-01-11T00:02:57.212147Z", "repo_name": "ranyiran/fulicenter", "path": "/app/src/main/java/cn/ran/flicenter/views/SlideAutoLoopView.java", "source": "the-stack-v2", "method_name": "stopPlayLoop", "class_name": "SlideAutoLoopView", "index": 2377, "label": 1}
{"input": "public Criteria andUserStIdIn(List<Integer> values) {\r\n            addCriterion(\"user_st_id in\", values, \"userStId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2022-12-10T20:39:24.451742Z", "repo_name": "TangHui-ops/myProject", "path": "/后端/weixingxiaocx/src/main/java/cn/bdqn/mbg/model/UserStateTypeExample.java", "source": "the-stack-v2", "method_name": "andUserStIdIn", "class_name": "GeneratedCriteria", "index": 2378, "label": 1}
{"input": "@Override\n    public boolean equals(Object obj) {\n        if (this == obj)\n            return true;\n        if (obj == null)\n            return false;\n\n        if (obj instanceof SearchDevicesResult == false)\n            return false;\n        SearchDevicesResult other = (SearchDevicesResult) obj;\n        if (other.getDevices() == null ^ this.getDevices() == null)\n            return false;\n        if (other.getDevices() != null && other.getDevices().equals(this.getDevices()) == false)\n            return false;\n        if (other.getNextToken() == null ^ this.getNextToken() == null)\n            return false;\n        if (other.getNextToken() != null && other.getNextToken().equals(this.getNextToken()) == false)\n            return false;\n        if (other.getTotalCount() == null ^ this.getTotalCount() == null)\n            return false;\n        if (other.getTotalCount() != null && other.getTotalCount().equals(this.getTotalCount()) == false)\n            return false;\n        return true;\n    }", "timestamp": "2021-05-14T17:18:16.335069Z", "repo_name": "gopinathrsv/aws-sdk-java", "path": "/aws-java-sdk-alexaforbusiness/src/main/java/com/amazonaws/services/alexaforbusiness/model/SearchDevicesResult.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "SearchDevicesResult", "index": 2379, "label": 1}
{"input": "public int getNodeEnd()\n    {\n        int comma = newick.indexOf(',',position);   \n        int semicolon = newick.indexOf(';',position);\n        int rightbracket = newick.indexOf(')',position);\n        int leftbracket = newick.indexOf('(',position);\n        int location = newick.length();             \n        \n        if (comma >= 0){    \n            location = comma;    \n        }\n        \n        if(semicolon >= 0 && semicolon < location){      \n            location = semicolon;\n        }\n        \n        if (rightbracket >= 0 && rightbracket < location){  \n            location = rightbracket;\n        }\n        \n        if (leftbracket >= 0 && leftbracket < location) {\n               System.out.println(\"Found opening bracket in wrong place when detecting node end\");\n               System.exit(1);\n        }\n        return location;\n    }", "timestamp": "2021-06-26T12:36:00.754838Z", "repo_name": "gatechatl/STRAW", "path": "/src/TreeVector/NewickParser.java", "source": "the-stack-v2", "method_name": "getNodeEnd", "class_name": "NewickParser", "index": 2380, "label": 1}
{"input": "@Ignore\n\tpublic void testObterPessoaInstituicaoError() throws BancoobException {\n\t\tInteger idPessoa = 1;\n\t\tInteger idInstituicao = 2;\n\t\t\n\t\tCapesIntegracaoServicoEJB ejb = new CapesIntegracaoServicoEJB();\n\t\t\n\t\tboolean exception = true;\n\t\ttry{\n\t\t\tejb.obterPessoaInstituicao(idPessoa, idInstituicao);\n\t\t\tAssert.fail(\"Erro\");\n\t\t}catch(Exception e){\n\t\t\texception = false;\n\t\t\tAssert.assertEquals(IntegracaoCapesNegocioException.class, e.getClass());\n\t\t}\n\t\tAssert.assertFalse(exception);\n\t}", "timestamp": "2022-12-01T05:20:26.998529Z", "repo_name": "pabllo007/cca", "path": "/Integracao/ContaCapitalIntegracaoEJB/src/test/java/br/com/sicoob/sisbr/cca/integracao/negocio/servicos/ejb/CapesIntegracaoServicoEJBTest.java", "source": "the-stack-v2", "method_name": "testObterPessoaInstituicaoError", "class_name": "CapesIntegracaoServicoEJBTest", "index": 2381, "label": 1}
{"input": "@PostMapping(\"/save\")\n    public void save(@RequestBody Menu menu){\n        menuRepository.save(menu);\n    }", "timestamp": "2020-09-25T16:48:33.897717Z", "repo_name": "zhangzihao0123/orderingSystem", "path": "/microservice/menu/src/main/java/com/zzh/menu/Controller/MenuHandler.java", "source": "the-stack-v2", "method_name": "save", "class_name": "MenuHandler", "index": 2382, "label": 1}
{"input": "public void updateCheckboxVisibility(boolean visible) {\n        if (visible) {\n            mSelectAllBox.setOnCheckedChangeListener(this);\n        } else {\n            mCheckboxContainer.setVisibility(GONE);\n        }\n    }", "timestamp": "2023-01-13T08:15:21.509899Z", "repo_name": "imfht/chromium", "path": "/chrome/android/java/src/org/chromium/chrome/browser/contacts_picker/TopView.java", "source": "the-stack-v2", "method_name": "updateCheckboxVisibility", "class_name": "TopView", "index": 2383, "label": 1}
{"input": "public Builder setIntegrityImpactValue(int value) {\n\n      integrityImpact_ = value;\n      onChanged();\n      return this;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "setIntegrityImpactValue", "class_name": "Builder", "index": 2384, "label": 1}
{"input": "@Override\n    public int getItemCount() {\n        return (null != itemsList ? itemsList.size() : 0);\n    }", "timestamp": "2021-04-09T13:47:27.059805Z", "repo_name": "vivek34/Early", "path": "/HomePage/app/src/main/java/com/example/vivekpatel/homepage/Adapters/CommunityAdapter.java", "source": "the-stack-v2", "method_name": "getItemCount", "class_name": "CommunityAdapter", "index": 2385, "label": 1}
{"input": "public void addCategory(VatLy1Category category){\n        db = getWritableDatabase();\n        insertCategory(category);\n    }", "timestamp": "2023-01-18T20:19:28.045856Z", "repo_name": "DongPhamBK/DaiCuongBachKhoa2", "path": "/DaiCuongFirstApp - v1.1/app/src/main/java/com/project/daicuongbachkhoa/ui/vatly1/VatLy1QuizDbHelper.java", "source": "the-stack-v2", "method_name": "addCategory", "class_name": "VatLy1QuizDbHelper", "index": 2386, "label": 1}
{"input": "@Test\n  public void case1() {\n    int[] revenues = { 5, -7, 3 };\n    int k = 2;\n    assertEquals(1.5, mergersdivtwo.findMaximum(revenues, k), DELTA * 1.5);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case1", "class_name": "MergersDivTwoTest", "index": 2387, "label": 1}
{"input": "@java.lang.Override\n  public void writeTo(com.google.protobuf.CodedOutputStream output)\n                      throws java.io.IOException {\n    getUnknownFields().writeTo(output);\n  }", "timestamp": "2023-08-19T07:39:40.744879Z", "repo_name": "googleads/google-ads-java", "path": "/google-ads-stubs-v14/src/main/java/com/google/ads/googleads/v14/enums/CustomAudienceTypeEnum.java", "source": "the-stack-v2", "method_name": "writeTo", "class_name": "CustomAudienceTypeEnum", "index": 2388, "label": 1}
{"input": "public float getWinLossRatio() {\n        if (this.totalLosses == 0) {\n            return this.totalWins == 0 ? 0 : 1;\n        } else {\n            return ((float) this.totalWins) / this.totalLosses;\n        }\n    }", "timestamp": "2023-06-13T23:41:45.910609Z", "repo_name": "tomporat247/college-sportracker", "path": "/app/src/main/java/com/example/sportracker/Models/UserStatistics.java", "source": "the-stack-v2", "method_name": "getWinLossRatio", "class_name": "UserStatistics", "index": 2389, "label": 1}
{"input": "protected void processNumberField(Row row)\r\n   {\r\n      processField(row, \"NUM_FIELD_ID\", \"NUM_REF_UID\", row.getDouble(\"NUM_VALUE\"));\r\n   }", "timestamp": "2023-08-17T13:13:07.711932Z", "repo_name": "heekye/ProjectLibre", "path": "/projectlibre_exchange/src/net/sf/mpxj/mpd/MPD9AbstractReader.java", "source": "the-stack-v2", "method_name": "processNumberField", "class_name": "MPD9AbstractReader", "index": 2390, "label": 1}
{"input": "@Test\n  public void updateServiceExceptionTest() throws Exception {\n    StatusRuntimeException exception = new StatusRuntimeException(io.grpc.Status.INVALID_ARGUMENT);\n    mockServiceMonitoringService.addException(exception);\n\n    try {\n      Service service = Service.newBuilder().build();\n      client.updateService(service);\n      Assert.fail(\"No exception raised\");\n    } catch (InvalidArgumentException e) {\n      \n    }\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-monitoring/google-cloud-monitoring/src/test/java/com/google/cloud/monitoring/v3/ServiceMonitoringServiceClientTest.java", "source": "the-stack-v2", "method_name": "updateServiceExceptionTest", "class_name": "ServiceMonitoringServiceClientTest", "index": 2391, "label": 1}
{"input": "public void testClone() {\n\t\tASTNode x = SampleASTs.oneOfEach(ast);\n\t\tassignSourceRanges(x);\n\t\tassertTrue(x.subtreeMatch(new CheckPositionsMatcher(), x));\n\t\t\n\t\t\n\t\tASTNode y = ASTNode.copySubtree(ast, x);\n\t\tassertTrue(x.subtreeMatch(new CheckPositionsMatcher(), y));\n\t\tassertTrue(y.subtreeMatch(new CheckPositionsMatcher(), x));\n\t\t\n\t\t\n\t\tAST newAST = AST.newAST(ast.apiLevel());\n\t\tASTNode z = ASTNode.copySubtree(newAST, x);\n\t\tassertTrue(x.subtreeMatch(new CheckPositionsMatcher(), z));\n\t\tassertTrue(z.subtreeMatch(new CheckPositionsMatcher(), x));\n\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "testClone", "class_name": "ASTTest", "index": 2392, "label": 1}
{"input": "public void setIntrumentoSelecionado(By intrumentoSelecionado) {\n\t\tthis.intrumentoSelecionado = intrumentoSelecionado;\n\t}", "timestamp": "2023-08-22T18:06:19.145278Z", "repo_name": "Guilherme2309/Master", "path": "/TesteOlx/src/test/java/Elementos/elementos.java", "source": "the-stack-v2", "method_name": "setIntrumentoSelecionado", "class_name": "elementos", "index": 2393, "label": 1}
{"input": "@Test\n  public void case51() {\n    int[] revenues = { -8, -53, -55, -947, 248, -53, -686, -955, -55, 766, -9, 544, -354, 253, 546, -648, -957, -5, 7, 250, 1, -52, 2, 8, 31, -16, -656, 5, -647, -357, -129, -65, -348, 9, -4, 249, -890, -7, 543, 245, -955, 237, 2 };\n    int k = 12;\n    assertEquals(323.1608974358974, mergersdivtwo.findMaximum(revenues, k), DELTA * 323.1608974358974);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case51", "class_name": "MergersDivTwoTest", "index": 2394, "label": 1}
{"input": "private boolean checkBrackets()         \n    {\n        int bracketcounter = 0;\n        for (int i=0; i<newick.length();i++){\n            char c = newick.charAt(i);\n            if(c == '('){\n                bracketcounter++;\n            }\n            else if(c==')'){\n                bracketcounter--;   \n            }\n            if (bracketcounter < 0){            \n                return false;\n            }\n        }\n        if (bracketcounter > 0){          \n            return false;\n        }\n        return true;   \n    }", "timestamp": "2021-06-26T12:36:00.754838Z", "repo_name": "gatechatl/STRAW", "path": "/src/TreeVector/NewickParser.java", "source": "the-stack-v2", "method_name": "checkBrackets", "class_name": "NewickParser", "index": 2395, "label": 1}
{"input": "public boolean addPortForward(PortForwardBean portForward) {\n\t\treturn transport.addPortForward(portForward);\n\t}", "timestamp": "2023-03-17T11:32:39.789148Z", "repo_name": "iiordanov/BSSH", "path": "/app/src/main/java/org/connectbot/service/TerminalBridge.java", "source": "the-stack-v2", "method_name": "addPortForward", "class_name": "TerminalBridge", "index": 2396, "label": 1}
{"input": "@Test public void testTrim() {\n    CalciteAssert.model(FOODMART_MODEL)\n        .query(\"select trim(\\\"lname\\\") as \\\"lname\\\" \"\n            + \"from \\\"customer\\\" where \\\"lname\\\" = 'Nowmer'\")\n        .returns(\"lname=Nowmer\\n\");\n\n    CalciteAssert.model(FOODMART_MODEL)\n        .query(\"select trim(leading 'N' from \\\"lname\\\") as \\\"lname\\\" \"\n            + \"from \\\"customer\\\" where \\\"lname\\\" = 'Nowmer'\")\n        .returns(\"lname=owmer\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testTrim", "class_name": "JdbcTest", "index": 2397, "label": 1}
{"input": "@Override\n    public boolean shouldVisit(WebURL url) {\n            String href = url.getURL().toLowerCase();\n            return !FILTERS.matcher(href).matches() && href.startsWith(\"http://www.ics.uci.edu/\");\n    }", "timestamp": "2020-06-03T23:34:56.375061Z", "repo_name": "narendramohan/mmqa", "path": "/src/mmqa/MyCrawler.java", "source": "the-stack-v2", "method_name": "shouldVisit", "class_name": "MyCrawler", "index": 2398, "label": 1}
{"input": "private void createSymLinkSdks(Iterable<String> sdks, Path root, String version)\n      throws IOException {\n    for (String sdk : sdks) {\n      Path sdkDir = root.resolve(String.format(\"Platforms/%s.platform/Developer/SDKs\", sdk));\n\n      if (!Files.exists(sdkDir)) {\n        System.out.println(sdkDir);\n        continue;\n      }\n\n      Path actual = sdkDir.resolve(String.format(\"%s.sdk\", sdk));\n      Path link = sdkDir.resolve(String.format(\"%s%s.sdk\", sdk, version));\n      CreateSymlinksForTests.createSymLink(link, actual);\n    }\n  }", "timestamp": "2023-08-13T15:30:17.545725Z", "repo_name": "Addepar/buck", "path": "/test/com/facebook/buck/apple/toolchain/impl/AppleSdkDiscoveryTest.java", "source": "the-stack-v2", "method_name": "createSymLinkSdks", "class_name": "AppleSdkDiscoveryTest", "index": 2399, "label": 1}
{"input": "void checkValidInterval(long pollingIntervalMillis, int attempts, long timeSleptMillis) {\n    long highSum = 0;\n    long lowSum = 0;\n    for (int i = 1; i < attempts; i++) {\n      double currentInterval =\n          pollingIntervalMillis\n          * Math.pow(AttemptBoundedExponentialBackOff.DEFAULT_MULTIPLIER, i - 1);\n      double offset =\n          AttemptBoundedExponentialBackOff.DEFAULT_RANDOMIZATION_FACTOR * currentInterval;\n      highSum += Math.round(currentInterval + offset);\n      lowSum += Math.round(currentInterval - offset);\n    }\n    assertThat(timeSleptMillis, allOf(greaterThanOrEqualTo(lowSum), lessThanOrEqualTo(highSum)));\n  }", "timestamp": "2022-11-24T23:36:03.156413Z", "repo_name": "Sil1991/gcpdf-demo", "path": "/runners/google-cloud-dataflow-java/src/test/java/com/google/cloud/dataflow/sdk/runners/DataflowPipelineJobTest.java", "source": "the-stack-v2", "method_name": "checkValidInterval", "class_name": "DataflowPipelineJobTest", "index": 2400, "label": 1}
{"input": "@Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      Document document0 = Parser.parseBodyFragment(\"xmlns:xmlns:<html>\\n<head>\\n<met htt-equiv\\\"cwntent-type\\\" conten=\\\"text/html; charset=ut-8\\\"\\n9/head\\n<bod></body\\n<yhtml>\", \"xmlns:xmlns:<html>\\n<head>\\n<met htt-equiv\\\"cwntent-type\\\" conten=\\\"text/html; charset=ut-8\\\"\\n9/head\\n<bod></body\\n<yhtml>\");\n      W3CDom w3CDom0 = new W3CDom();\n      w3CDom0.fromJsoup(document0);\n  }", "timestamp": "2022-11-25T00:39:58.983828Z", "repo_name": "pderakhshanfar/EMSE-BBC-experiment", "path": "/tests-without-trycatch/Jsoup-84/org.jsoup.helper.W3CDom/default/11/org/jsoup/helper/W3CDom_ESTest.java", "source": "the-stack-v2", "method_name": "test17", "class_name": "W3CDom_ESTest", "index": 2401, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n\tpublic ActionForward toDjjcfkTaskList(ActionMapping mapping,\n\t\t\tActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response) {\n\t\tMap params = new HashMap();\n\t\tParamUtil.putStr2Map(request, \"APPLICATIONID\", params);\n\t\tint pageNo = ParamUtil.getInt(request, \"pageNo\", 1);\n\t\tIListPage page = zfdjService.pageQueryDjjcfkTask(params, pageNo);\n\t\trequest.setAttribute(\"page\", page);\n\t\treturn mapping.findForward(\"djjcfklist\");\n\t}", "timestamp": "2021-01-12T15:41:00.492001Z", "repo_name": "MoonLuckSir/MoonRepository", "path": "/src/java/com/yitong/app/action/judicial/dxzpzfdj/ZfdjAction.java", "source": "the-stack-v2", "method_name": "toDjjcfkTaskList", "class_name": "ZfdjAction", "index": 2402, "label": 1}
{"input": "private void startMainActivity(Bundle extras) {\r\n        \n        \n        \n        Intent intent =\r\n                new Intent(this, MainActivity.class).setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n        if (extras != null) {\r\n            intent.putExtras(extras);\r\n        }\r\n        startActivity(intent);\r\n    }", "timestamp": "2020-03-31T22:30:02.802799Z", "repo_name": "johnjcool/TV", "path": "/app/src/main/java/com/android/tv/TvApplication.java", "source": "the-stack-v2", "method_name": "startMainActivity", "class_name": "TvApplication", "index": 2403, "label": 1}
{"input": "@Endpoint(describeByClass = true)\n  public static <T extends TType> MatrixSolveLs<T> create(Scope scope, Operand<T> matrix, Operand<T> rhs, Operand<TFloat64> l2Regularizer, Options... options) {\n    OperationBuilder opBuilder = scope.env().opBuilder(\"MatrixSolveLs\", scope.makeOpName(\"MatrixSolveLs\"));\n    opBuilder.addInput(matrix.asOutput());\n    opBuilder.addInput(rhs.asOutput());\n    opBuilder.addInput(l2Regularizer.asOutput());\n    opBuilder = scope.applyControlDependencies(opBuilder);\n    if (options != null) {\n      for (Options opts : options) {\n        if (opts.fast != null) {\n          opBuilder.setAttr(\"fast\", opts.fast);\n        }\n      }\n    }\n    return new MatrixSolveLs<T>(opBuilder.build());\n  }", "timestamp": "2022-09-09T20:06:44.965876Z", "repo_name": "chenkelmann/java", "path": "/tensorflow-core/tensorflow-core-api/src/gen/java/org/tensorflow/op/linalg/MatrixSolveLs.java", "source": "the-stack-v2", "method_name": "create", "class_name": "MatrixSolveLs", "index": 2404, "label": 1}
{"input": "private void initialize() {\r\n\t\tBorderLayout borderLayout = new BorderLayout();\r\n\t\tthis.setLayout(borderLayout);\r\n\t\tthis.setSize(new Dimension(650, 200));\r\n\t\tthis.add(getJPCampos(), BorderLayout.NORTH);\r\n\t\tthis.add(getJPBotonera(), BorderLayout.SOUTH);\r\n\t\tjLFechaActual.setText(Fecha.fechaActual());\r\n\t}", "timestamp": "2020-04-25T11:57:36.747920Z", "repo_name": "larremano/thebighandtheory", "path": "/src/vista/PanelInicio.java", "source": "the-stack-v2", "method_name": "initialize", "class_name": "PanelInicio", "index": 2405, "label": 1}
{"input": "boolean isNonCoreReservedIdentifier() {\n\n        return !scanner.token.isCoreReservedIdentifier\n               && (scanner.token.isUndelimitedIdentifier\n                   || scanner.token.isDelimitedIdentifier);\n    }", "timestamp": "2023-09-03T10:33:34.963710Z", "repo_name": "svn2github/hsqldb", "path": "/base/branches/odbcproto1/src/org/hsqldb/ParserBase.java", "source": "the-stack-v2", "method_name": "isNonCoreReservedIdentifier", "class_name": "ParserBase", "index": 2406, "label": 1}
{"input": "@Override\n        public List<Model.PageSummary> getDescendents(String pageId) throws Exception {\n            return xmlrpcService.getDescendents(pageId);\n        }", "timestamp": "2020-08-07T20:03:48.397743Z", "repo_name": "dmytro-sydorenko/maven-confluence-plugin", "path": "/maven-confluence-core/src/main/java/org/bsc/confluence/ConfluenceServiceFactory.java", "source": "the-stack-v2", "method_name": "getDescendents", "class_name": "MixedConfluenceService", "index": 2407, "label": 1}
{"input": "public org.apache.commons.math.linear.RealMatrix preMultiply(org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {\n        return m.multiply(org.apache.commons.math.linear.RealMatrixImpl.this);\n    }", "timestamp": "2021-05-07T00:07:06.345617Z", "repo_name": "SajjadZaidi/AutoRepair", "path": "/RawExperiments/Math/math98/1/AstorMain-math_98/src/variant-208/org/apache/commons/math/linear/RealMatrixImpl.java", "source": "the-stack-v2", "method_name": "preMultiply", "class_name": "RealMatrixImpl", "index": 2408, "label": 1}
{"input": "@Transactional\n\tpublic void deleteById(String id) {\n\t\tif (id != null) {\n\t\t\treportTmpMappingMapper.deleteReportTmpMappingById(id);\n\t\t}\n\t}", "timestamp": "2021-05-08T16:38:30.406098Z", "repo_name": "eosite/openyourarm", "path": "/glaf-web/src/main/java/com/glaf/report/core/service/ReportTmpMappingServiceImpl.java", "source": "the-stack-v2", "method_name": "deleteById", "class_name": "ReportTmpMappingServiceImpl", "index": 2409, "label": 1}
{"input": "public void run() {\n            synchronized (proxy) {\n                proxy.notifyAll();\n                try {\n                    proxy.wait(millis, nanos);\n                    ProxyExObjectwaitInterruptedException.res = ProxyExObjectwaitInterruptedException.res - 15;\n                } catch (InterruptedException e1) {\n                    ProxyExObjectwaitInterruptedException.res = ProxyExObjectwaitInterruptedException.res - 1;\n                } catch (IllegalMonitorStateException e2) {\n                    ProxyExObjectwaitInterruptedException.res = ProxyExObjectwaitInterruptedException.res - 10;\n                } catch (IllegalArgumentException e3) {\n                    ProxyExObjectwaitInterruptedException.res = ProxyExObjectwaitInterruptedException.res - 5;\n                }\n            }\n        }", "timestamp": "2022-11-17T21:08:25.789107Z", "repo_name": "TanveerTanjeem/OpenArkCompiler", "path": "/test/testsuite/ouroboros/parent_test/RT0103-rt-parent-ProxyExObjectwaitInterruptedException/ProxyExObjectwaitInterruptedException.java", "source": "the-stack-v2", "method_name": "run", "class_name": "ProxyExObjectwaitInterruptedException31", "index": 2410, "label": 1}
{"input": "public void visitExpression(PsiExpression psiExpression) {\n        super.visitExpression(psiExpression);\n\n        PsiType type = psiExpression.getType();\n        if (type instanceof PsiClassType) {\n            PsiClassType classType = (PsiClassType) type;\n            list.add(classType);\n        }\n    }", "timestamp": "2020-12-24T12:00:54.891258Z", "repo_name": "keithkml/nully", "path": "/code/idea-plugin/src/net/kano/nully/plugin/psiToJimple/TypeListBuilder.java", "source": "the-stack-v2", "method_name": "visitExpression", "class_name": "TypeListBuilder", "index": 2411, "label": 1}
{"input": "@RequestMapping(method = RequestMethod.GET, value = \"/{id}\")\n\tpublic ResponseEntity<PiStamp> timeStampUser(@PathVariable(\"id\") RfidKey rfidKey) {\n\t\tSystem.out.println(\"creating new Pistamp for id \"+rfidKey.getId());\n\t\treturn piService.addNewStamp(rfidKey);\n\n\t}", "timestamp": "2021-01-17T07:09:20.274705Z", "repo_name": "AntonHellbe/ServerProject", "path": "/src/main/java/org/demo/controller/PiController.java", "source": "the-stack-v2", "method_name": "timeStampUser", "class_name": "PiController", "index": 2412, "label": 1}
{"input": "public Vector2 getCustom(Object item, String propertyName, Vector2 defaultVal)\n    {\n       CustomProperties props = getCustomPropertiesForItem(item, false);\n       if (null == props)\n          return defaultVal;\n       if (props.m_customPropertyMap_Vector2.containsKey(propertyName))\n          return props.m_customPropertyMap_Vector2.get(propertyName);\n       return defaultVal;\n    }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/8/8_c35c0071965ffa2a49cabadc2a29a69aa9158202/RubeScene/8_c35c0071965ffa2a49cabadc2a29a69aa9158202_RubeScene_s.java", "source": "the-stack-v2", "method_name": "getCustom", "class_name": "RubeScene", "index": 2413, "label": 1}
{"input": "private int priority(char oper) {\n\t\tif (oper == '*' || oper == '/') {\n\t\t\treturn 1;\n\t\t}\n\n\t\telse if (oper == '+' || oper == '-') {\n\t\t\treturn 0;\n\t\t}\n\n\t\telse {\n\t\t\treturn -1;\n\t\t}\n\t}", "timestamp": "2020-06-03T19:52:10.818233Z", "repo_name": "OleksandrSh/testcalc", "path": "/CalculateApi/src/main/java/com/calculate/services/calcmanager/CalcManager.java", "source": "the-stack-v2", "method_name": "priority", "class_name": "CalcManager", "index": 2414, "label": 1}
{"input": "@Override\r\n  protected EClass eStaticClass()\r\n  {\r\n    return AsmetaLPackage.Literals.FUNCTION_INITIALIZATION;\r\n  }", "timestamp": "2023-05-25T04:51:25.190702Z", "repo_name": "Favio-Quinteros/Quinteros-WebEditor", "path": "/org.xtext.asmetal.parent/org.xtext.asmetal/src/main/xtext-gen/org/xtext/asmetal/asmetaL/impl/FunctionInitializationImpl.java", "source": "the-stack-v2", "method_name": "eStaticClass", "class_name": "FunctionInitializationImpl", "index": 2415, "label": 1}
{"input": "public final AnnotationMethodOrConstantRestContext annotationMethodOrConstantRest() throws RecognitionException {\n\t\tAnnotationMethodOrConstantRestContext _localctx = new AnnotationMethodOrConstantRestContext(_ctx, getState());\n\t\tenterRule(_localctx, 150, RULE_annotationMethodOrConstantRest);\n\t\ttry {\n\t\t\tsetState(846);\n\t\t\t_errHandler.sync(this);\n\t\t\tswitch ( getInterpreter().adaptivePredict(_input,95,_ctx) ) {\n\t\t\tcase 1:\n\t\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tsetState(844);\n\t\t\t\tannotationMethodRest();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tenterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tsetState(845);\n\t\t\t\tannotationConstantRest();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "annotationMethodOrConstantRest", "class_name": "JavaParser", "index": 2416, "label": 1}
{"input": "@RequestMapping(method = RequestMethod.POST, consumes = \"application/json\", produces = \"application/json\")\n    ResponseEntity add(@RequestBody Account account) {\n        accountService.save(new Account(account.getUsername(), account.getPassword()));\n        Account createdAccount = accountService.get(account.getUsername());\n        return new ResponseEntity<>(createdAccount, HttpStatus.CREATED);\n    }", "timestamp": "2020-06-03T04:18:15.597291Z", "repo_name": "vyrwu/spring-mvc-demo", "path": "/src/main/java/com/example/vyrwu/agillicDemoMvn/Account/AccountController.java", "source": "the-stack-v2", "method_name": "add", "class_name": "AccountController", "index": 2417, "label": 1}
{"input": "@Override\n    @GetMapping(value = \"/repository/{participationId}/files\", produces = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseEntity<Map<String, FileType>> getFiles(@PathVariable Long participationId) {\n        return super.getFiles(participationId);\n    }", "timestamp": "2023-08-17T07:15:10.039202Z", "repo_name": "raphaelal/Artemis", "path": "/src/main/java/de/tum/in/www1/artemis/web/rest/repository/RepositoryProgrammingExerciseParticipationResource.java", "source": "the-stack-v2", "method_name": "getFiles", "class_name": "RepositoryProgrammingExerciseParticipationResource", "index": 2418, "label": 1}
{"input": "@Test\n    public void awaitTestsComplete_shouldAddReturnErrorIfNoProgressFileProduced()\n    {\n        try (Env env = new EnvImpl(\"build1\"))\n        {\n            VM testVM = env.createVM(\"tests\");\n            testVM.start();\n            ProcessFuture future = testVM.runCommand(\"sleep 0\");\n\n            AbstractTask task = new StubTask();\n            Listener listener = new Listener();\n\n            TaskProgress progress = task.awaitTestsComplete(env, testVM, future, 1, listener);\n\n            assertTrue(listener.progressList.size() > 0);\n            assertEquals(Arrays.asList(\n                    new TestResult(\"Tests should finish without errors\", false, \"Tests failed to produce results, seems some internal error\")\n            ), progress.getTests());\n            assertEquals(0, progress.getTotalTests());\n        }\n    }", "timestamp": "2021-01-12T11:45:19.933604Z", "repo_name": "dmitrymurashenkov/frocate", "path": "/runner/src/test/java/com/frocate/taskrunner/AbstractTaskTest.java", "source": "the-stack-v2", "method_name": "awaitTestsComplete_shouldAddReturnErrorIfNoProgressFileProduced", "class_name": "AbstractTaskTest", "index": 2419, "label": 1}
{"input": "@Override\n    public boolean equals(Object obj) {\n        if (!(obj instanceof Position)) return false;\n\n        Position objPos = (Position)obj;\n\n        if (objPos.x == x && objPos.y == y) return true;\n\n        return false;\n    }", "timestamp": "2021-01-20T22:15:33.798990Z", "repo_name": "arko-afeka/Minesweeper", "path": "/app/src/main/java/afeka/katz/arkadiy/minesweeper/game/data/Position.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "Position", "index": 2420, "label": 1}
{"input": "protected void assertExceptionWithMessage(Runnable r, Class<?> exceptionType, String expectedMessagePart) {\n        try {\n            r.run();\n        } catch (Exception e) {\n            if (!e.getClass().equals(exceptionType)) {\n                e.printStackTrace();\n                fail(String.format(\"Expected exception of type '%s' but was '%s'\", exceptionType, e.getClass()));\n            }\n            if (expectedMessagePart != null && !e.getMessage().contains(expectedMessagePart)) {\n                e.printStackTrace();\n                fail(String.format(\"Expected message containing '%s' but was '%s'\", expectedMessagePart, e.getMessage()));\n            }\n            return;\n        }\n        fail(String.format(\"Expected exception of type '%s'\", exceptionType));\n    }", "timestamp": "2022-03-22T02:13:22.843800Z", "repo_name": "bellmit/tastr", "path": "/tastr-infrastructure/src/test/java/eu/tastr/infrastructure/test/UnitTest.java", "source": "the-stack-v2", "method_name": "assertExceptionWithMessage", "class_name": "UnitTest", "index": 2421, "label": 1}
{"input": "@Override \n        public void stopLceServiceResponse(RadioResponseInfo info, LceStatusInfo statusInfo) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            statusInfo.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(121, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "stopLceServiceResponse", "class_name": "Proxy", "index": 2422, "label": 1}
{"input": "@Override\n    public void onClick(View v) {\n        int buttonIndex = transleteIdindex(v.getId());\n\n        OnSelectButtonListern listern = (OnSelectButtonListern) getActivity();\n        listern.onButtonSelected(buttonIndex);\n\n        Toast.makeText(getActivity(), String.valueOf(buttonIndex)\n                ,Toast.LENGTH_SHORT).show();\n\n    }", "timestamp": "2021-05-15T00:30:13.091246Z", "repo_name": "Avdey87/Fragments", "path": "/app/src/main/java/com/avdey/fragments/Fragment1.java", "source": "the-stack-v2", "method_name": "onClick", "class_name": "Fragment1", "index": 2423, "label": 1}
{"input": "@Override\n    public void creerCommandes() {\n        GLog.appel(this);\n\n        cContinuerPartie = new CContinuerPartie(switchContinuerPartie.isChecked());\n\n        cTaillePetite = new CTailleGrille(PETITE);\n        cTailleMoyenne = new CTailleGrille(MOYENNE);\n        cTailleGrande = new CTailleGrille(GRANDE);\n    }", "timestamp": "2022-03-22T04:34:48.642441Z", "repo_name": "GoldenKain/Connect-Four", "path": "/app/src/main/java/ca/cours5b5/nicolasparr/vues/pages/PParametres.java", "source": "the-stack-v2", "method_name": "creerCommandes", "class_name": "PParametres", "index": 2424, "label": 1}
{"input": "@RequestMapping(value=\"/booking/doBooking\",method=RequestMethod.POST,consumes = MediaType.APPLICATION_JSON_VALUE)\n\tpublic Booking addBooking(@RequestBody Booking booking) {\n\t\treturn bookingService.addBooking(booking);\n\t}", "timestamp": "2022-07-13T20:32:11.679113Z", "repo_name": "tushartevetia/SPRINT2", "path": "/Spring/OnlineMovieTicketSystem/src/main/java/com/cg/OnlineMovieTicketSystem/controller/BookingController.java", "source": "the-stack-v2", "method_name": "addBooking", "class_name": "BookingController", "index": 2425, "label": 1}
{"input": "@Override\n    public View newView(Context context, Cursor cursor, ViewGroup parent) {\n        \n        View view = View.inflate(context, R.layout.main_audio_list_item,null);\n        view.setTag(new ViewHolder(view));\n        return view;\n    }", "timestamp": "2021-05-05T00:25:23.625044Z", "repo_name": "CCLCM/music_player", "path": "/app/src/main/java/com/musicplayer/ccl/music_player/adapter/AudioListAdapter.java", "source": "the-stack-v2", "method_name": "newView", "class_name": "AudioListAdapter", "index": 2426, "label": 1}
{"input": "public void testBug110060_TypePattern06() throws CoreException {\n\tsetUpBug110060_TypePattern();\n\tsearch(\"A*A*\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_MATCH);\n\t\n\tassertSearchResults(\n\t\t\"src/b110060/Test.java b110060.Test.a1 [Aaa] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.a2 [AAa] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.a3 [AaAaAa] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.a4 [AAxx] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.a5 [AxA] EXACT_MATCH\\n\" +\n\t\t\"src/b110060/Test.java b110060.Test.a6 [AxxAyy] EXACT_MATCH\\n\" +\n\t\tgetExternalJCLPathString(\"1.5\") + \" java.lang.Deprecated EXACT_MATCH\" \n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_TypePattern06", "class_name": "JavaSearchBugsTests", "index": 2427, "label": 1}
{"input": "public Criteria andVdef7In(List<String> values) {\r\n            addCriterion(\"VDEF7 in\", values, \"vdef7\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef7In", "class_name": "GeneratedCriteria", "index": 2428, "label": 1}
{"input": "public static void createFoAttributes(WordprocessingMLPackage wmlPackage,\n\t\t\tRPr rPr, Element foInlineElement){\n\n    \tList<Property> properties = PropertyFactory.createProperties(wmlPackage, rPr);\n    \t\n    \tfor( Property p :  properties ) {\n    \t\tp.setXslFO(foInlineElement);\n    \t}\n\t\t\n\t}", "timestamp": "2020-04-03T02:05:51.304271Z", "repo_name": "ermanishks/docx4j", "path": "/src/main/java/org/docx4j/convert/out/pdf/viaXSLFO/Conversion.java", "source": "the-stack-v2", "method_name": "createFoAttributes", "class_name": "Conversion", "index": 2429, "label": 1}
{"input": "public static String i()\r\n  {\r\n    return \"XRMsX/JQwPQGX7sOWjvg2nQVjUMO7xUcwxz6xwHRTKyo/tTIVco9OqenUPNGgQDi\";\r\n  }", "timestamp": "2016-09-05T10:02:01.613898Z", "repo_name": "Neembuu/neembuunow", "path": "/neembuu-android/srcs/output_jar.src/com/google/ads/ao.java", "source": "the-stack-v2", "method_name": "i", "class_name": "ao", "index": 2430, "label": 1}
{"input": "private static String stripXs(String string) {\r\n \r\n\t\tstring = stripPattern(string, Pattern.compile(\".*(\\\\([^\\\\(\\\\)]*\\\\)).*\"));\r\n\t\tstring = stripPattern(string, Pattern.compile(\".*(\\\\{[^\\\\{\\\\}]*\\\\}).*\"));\r\n\t\tstring = stripPattern(string, Pattern.compile(\".*(\\\"[^\\\"]*\\\").*\"));\r\n \r\n \t\treturn string;\r\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/17/17_0a5dbe869eedf204b0fd7ac7721dc93e8e3ea32a/XDI3ParserManual/17_0a5dbe869eedf204b0fd7ac7721dc93e8e3ea32a_XDI3ParserManual_t.java", "source": "the-stack-v2", "method_name": "stripXs", "class_name": "XDI3ParserManual", "index": 2431, "label": 1}
{"input": "public void addCell(Cell cell, int i, int i2) throws BadElementException {\n        addCell(cell, new Point(i, i2));\n    }", "timestamp": "2023-03-09T12:14:38.824373Z", "repo_name": "Sluckson/copyOavct", "path": "/sources/com/lowagie/text/Table.java", "source": "the-stack-v2", "method_name": "addCell", "class_name": "Table", "index": 2432, "label": 1}
{"input": "@Test(timeout = 4000)\n  public void test0()  throws Throwable  {\r\n      ArrayIntList arrayIntList0 = new ArrayIntList();\r\n      \n      try { \r\n        arrayIntList0.set(192, 1283);\r\n        fail(\"Expecting exception: IndexOutOfBoundsException\");\r\n      \r\n      } catch(IndexOutOfBoundsException e) {\r\n         \n         \n         \n         verifyException(\"com.org.apache.commons.collections.primitives.ArrayIntList\", e);\r\n      }\r\n  }", "timestamp": "2023-04-11T11:51:37.222629Z", "repo_name": "PdedP/InterEvo-TR", "path": "/Participant results/P7/Interaction-7/ArrayIntList_ES_2_AlreadyValued_Test.java", "source": "the-stack-v2", "method_name": "test0", "class_name": "ArrayIntList_ES_2_AlreadyValued_Test", "index": 2433, "label": 1}
{"input": "@Override\n    public void displayImagePreview(Activity activity, String path, ImageView imageView, int width, int height) {\n        Glide.with(activity)                             \n                .load(Uri.fromFile(new File(path)))      \n                .diskCacheStrategy(DiskCacheStrategy.ALL)\n                .into(imageView);\n    }", "timestamp": "2021-10-24T19:18:13.427995Z", "repo_name": "bluad/S8", "path": "/apps8/src/main/java/com/mantoo/yican/GlideImageLoader.java", "source": "the-stack-v2", "method_name": "displayImagePreview", "class_name": "GlideImageLoader", "index": 2434, "label": 1}
{"input": "public String next(){\n\t\t\ttry{\n\t\t\t\twhile(st==null||!st.hasMoreElements()){\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\n\t\t}", "timestamp": "2022-12-26T21:32:04.483818Z", "repo_name": "Simply-divine/Competitive", "path": "/Atcoder/ABC56/TaskB/Main.java", "source": "the-stack-v2", "method_name": "next", "class_name": "FastReader", "index": 2435, "label": 1}
{"input": "@Override\n    public void onRewardedVideoAdOpened() {\n        loaded = false;\n        Log.i(TAG,\"Video opened..\");\n    }", "timestamp": "2020-03-10T06:05:11.447740Z", "repo_name": "beenham/PixelDungeon", "path": "/android/src/net/team11/pixeldungeon/playservices/adlisteners/RewardAdListener.java", "source": "the-stack-v2", "method_name": "onRewardedVideoAdOpened", "class_name": "RewardAdListener", "index": 2436, "label": 1}
{"input": "@Override\n    public List<IBlockDefinition> getRegisteredBlockDefinitions() {\n        return new LinkedList<>(registeredBlocks.keySet());\n    }", "timestamp": "2021-05-31T18:12:32.699618Z", "repo_name": "pagoru/Blacksmith-Api", "path": "/src/main/java/mod/net/darkaqua/blacksmith/mod/common/registry/BlockRegistry.java", "source": "the-stack-v2", "method_name": "getRegisteredBlockDefinitions", "class_name": "BlockRegistry", "index": 2437, "label": 1}
{"input": "public ModificationRequestBuilder withMerchantAccount(final String value) {\n        request.setMerchantAccount(value);\n        return this;\n    }", "timestamp": "2021-01-18T13:10:15.438166Z", "repo_name": "BLangendorf/killbill-adyen-plugin", "path": "/src/main/java/org/killbill/billing/plugin/adyen/client/payment/builder/ModificationRequestBuilder.java", "source": "the-stack-v2", "method_name": "withMerchantAccount", "class_name": "ModificationRequestBuilder", "index": 2438, "label": 1}
{"input": "public void testBug110336g() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b110336/Test.java\",\n\t\t\"package b110336;\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"\t{\\n\" +\n\t\t\"\t\tTest lv1 = null, lv2 = new Test(), lv3;\\n\" +\n\t\t\"\t\tTest lv4 = new Test(), lv5, lv6 = null;\\n\" +\n\t\t\"\t\tTest lv7, lv8 = null, lv9 = new Test();\\n\" +\n\t\t\"\t}\\n\" +\n\t\t\"}\\n\"\n\t);\n\tIType type = this.workingCopies[0].getType(\"Test\");\n\tTypeReferenceCollector collector = new TypeReferenceCollector();\n\tsearch(type, REFERENCES, EXACT_RULE, getJavaSearchScope(), collector);\n\tassertSearchResults(\n\t\t\"package b110336;\\n\"0 +\n\t\t\"package b110336;\\n\"1 +\n\t\t\"package b110336;\\n\"2 +\n\t\t\"package b110336;\\n\"3 +\n\t\t\"package b110336;\\n\"4 +\n\t\t\"package b110336;\\n\"5,\n\t\tcollector\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110336g", "class_name": "JavaSearchBugsTests", "index": 2439, "label": 1}
{"input": "public static void run() {\n        int size = 1500;\n        int[] numbers = new int[size];\n        Random random = new Random();\n        IntStream.range(0, size).forEach(i -> numbers[i] = random.nextInt());\n\n        long start = System.nanoTime();\n        Arrays.sort(numbers);\n        System.out.println(\"serial sorting took \" + (System.nanoTime() - start));\n\n        IntStream.range(0, size).forEach(i -> numbers[i] = random.nextInt());\n        start = System.nanoTime();\n        Arrays.parallelSort(numbers);\n        System.out.println(\"parallel sorting took \" + (System.nanoTime() - start));\n\n    }", "timestamp": "2023-02-08T14:16:11.233031Z", "repo_name": "dltmdan92/java8to11", "path": "/src/main/java/com/seungmoo/java8to11/parallel_sort/ParallelSort.java", "source": "the-stack-v2", "method_name": "run", "class_name": "ParallelSort", "index": 2440, "label": 1}
{"input": "@Override\n    VcsRepositoryUrl getRepositoryUrl(Long participationId) throws IllegalArgumentException {\n        Participation participation = participationRepository.findByIdElseThrow(participationId);\n        if (!(participation instanceof ProgrammingExerciseParticipation)) {\n            throw new IllegalArgumentException();\n        }\n        return ((ProgrammingExerciseParticipation) participation).getVcsRepositoryUrl();\n    }", "timestamp": "2023-08-17T07:15:10.039202Z", "repo_name": "raphaelal/Artemis", "path": "/src/main/java/de/tum/in/www1/artemis/web/rest/repository/RepositoryProgrammingExerciseParticipationResource.java", "source": "the-stack-v2", "method_name": "getRepositoryUrl", "class_name": "RepositoryProgrammingExerciseParticipationResource", "index": 2441, "label": 1}
{"input": "@Override\n    public boolean getSwallowAbortedUploads() {\n        return this.swallowAbortedUploads;\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "getSwallowAbortedUploads", "class_name": "StandardContext", "index": 2442, "label": 1}
{"input": "public void setInstructionPointer(long instructionPointer) {\n            this.instructionPointer = instructionPointer;\n        }", "timestamp": "2020-09-28T03:14:51.020400Z", "repo_name": "essigt/aoc-2019", "path": "/src/test/java/de/essig/adventofcode/aoc2019/Day11.java", "source": "the-stack-v2", "method_name": "setInstructionPointer", "class_name": "Context", "index": 2443, "label": 1}
{"input": "@Override \n        public void getNeighboringCidsResponse(RadioResponseInfo info, ArrayList<NeighboringCell> cells) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            NeighboringCell.writeVectorToParcel(_hidl_request, cells);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(66, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "getNeighboringCidsResponse", "class_name": "Proxy", "index": 2444, "label": 1}
{"input": "@Override\n\tpublic int selectAvailableSeates(String busNo, int journeyId) throws JourDetailsException {\n\t\t\n\t\treturn jourDetailsDao.selectAvailableSeates(busNo, journeyId);\n\t}", "timestamp": "2023-08-02T14:49:42.070804Z", "repo_name": "SaiCharan87s/BmPPmp", "path": "/BmPPmp/src/main/java/com/lti/service/JourDetailsSeviceImpl.java", "source": "the-stack-v2", "method_name": "selectAvailableSeates", "class_name": "JourDetailsSeviceImpl", "index": 2445, "label": 1}
{"input": "public void setDnsMonitoringInterval(int dnsMonitoringInterval) {\n        this.dnsMonitoringInterval = dnsMonitoringInterval;\n    }", "timestamp": "2023-03-02T14:24:07.386321Z", "repo_name": "missaouib/redis-cluster-1", "path": "/src/main/java/cn/zhanhuarecao/rediscluster/config/RedissonEntity.java", "source": "the-stack-v2", "method_name": "setDnsMonitoringInterval", "class_name": "RedissonEntity", "index": 2446, "label": 1}
{"input": "@Test\r\n\tpublic void test03AtaqueRapidoTipoOk() {\r\n\t\tAtaqueRapido ataque = new AtaqueRapido();\r\n\t\t\r\n\t\tassertTrue(ataque.getTipo() instanceof TipoNormal);\r\n\t}", "timestamp": "2020-09-25T03:29:25.693622Z", "repo_name": "yuquimura/Tp002", "path": "/Algomon/test/unitarios/AtaqueRapidoTest.java", "source": "the-stack-v2", "method_name": "test03AtaqueRapidoTipoOk", "class_name": "AtaqueRapidoTest", "index": 2447, "label": 1}
{"input": "public static void main(String[] args) {\n        VolatileTest test = new VolatileTest();\n        VolatileThread t = test.new VolatileThread();\n        t.start();\n        ThreadUtils.sleepSeconds(1);\n        System.out.println(\"wakeup\");\n        test.running = false;\n    }", "timestamp": "2023-06-22T12:32:54.043117Z", "repo_name": "lijtforgithub/study-java", "path": "/src/main/java/com/ljt/study/juc/sync/VolatileTest.java", "source": "the-stack-v2", "method_name": "main", "class_name": "VolatileTest", "index": 2448, "label": 1}
{"input": "@Test public void testMultisetQuery() {\n    CalciteAssert.hr()\n        .query(\"select multiset(\\n\"\n            + \"  select \\\"deptno\\\", \\\"empid\\\" from \\\"hr\\\".\\\"emps\\\") as a\\n\"\n            + \"from (values (1))\")\n        .returnsUnordered(\"A=[{10, 100}, {20, 200}, {10, 150}, {10, 110}]\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testMultisetQuery", "class_name": "JdbcTest", "index": 2449, "label": 1}
{"input": "@Override\n    public ImageHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        int layoutResourceId = R.layout.images_grid_view;\n        View view = LayoutInflater.from(parent.getContext()).inflate(layoutResourceId, parent, false);\n\n        ImageHolder holder = new ImageHolder(view);\n        holder.root = view;\n        holder.image = (ImageView) view.findViewById(R.id.images_grid_image);\n\n        return holder;\n    }", "timestamp": "2020-04-27T08:23:29.216219Z", "repo_name": "madhavc/HelloSearch", "path": "/app/src/main/java/com/example/hellosearch/ImagesAdapter.java", "source": "the-stack-v2", "method_name": "onCreateViewHolder", "class_name": "ImagesAdapter", "index": 2450, "label": 1}
{"input": "public static TPM2B_PUBLIC_KEY_RSA fromTpm (InByteBuf buf) \r\n    {\r\n        TPM2B_PUBLIC_KEY_RSA ret = new TPM2B_PUBLIC_KEY_RSA();\r\n        ret.initFromTpm(buf);\r\n        return ret;\r\n    }", "timestamp": "2022-11-07T09:56:44.953339Z", "repo_name": "keke8273/TSS.MSR", "path": "/TSS.Java/src/tss/tpm/TPM2B_PUBLIC_KEY_RSA.java", "source": "the-stack-v2", "method_name": "fromTpm", "class_name": "TPM2B_PUBLIC_KEY_RSA", "index": 2451, "label": 1}
{"input": "private static byte[] newByteArrayWithDateInfo(int second, byte[] data2) {\n            byte[] data1 = createDateInfo(second).getBytes();\n            byte[] retdata = new byte[data1.length + data2.length];\n            System.arraycopy(data1, 0, retdata, 0, data1.length);\n            System.arraycopy(data2, 0, retdata, data1.length, data2.length);\n            return retdata;\n        }", "timestamp": "2020-08-02T18:42:07.551582Z", "repo_name": "zhuyu3126/WuyiProject", "path": "/WuyiProject/commonapi/src/main/java/com/danmo/commonapi/base/cache/ACache.java", "source": "the-stack-v2", "method_name": "newByteArrayWithDateInfo", "class_name": "Utils", "index": 2452, "label": 1}
{"input": "public ClassCreatorRestContext classCreatorRest() {\n\t\t\treturn getRuleContext(ClassCreatorRestContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "classCreatorRest", "class_name": "CreatorContext", "index": 2453, "label": 1}
{"input": "@Override\n    public void run() {\n      waitForStart();\n      synchronized (myLock) {\n        while (myIsAlive) {\n          if (! myQueue.isEmpty()) {\n            myConsumer.consume(myQueue.removeFirst());\n          } else {\n            try {\n              myLock.wait(10);\n            }\n            catch (InterruptedException e) {\n              \n            }\n          }\n        }\n      }\n    }", "timestamp": "2023-05-14T14:32:51.014859Z", "repo_name": "sarvex/intellij-community", "path": "/platform/vcs-api/src/com/intellij/util/ProducerConsumer.java", "source": "the-stack-v2", "method_name": "run", "class_name": "ConsumerRunnable", "index": 2454, "label": 1}
{"input": "@Override\n    public double entropy() {\n        return (dim * LOG2PIE + Math.log(sigmaDet)) / 2;\n    }", "timestamp": "2021-01-19T06:50:08.211003Z", "repo_name": "fracz/refactor-extractor", "path": "/results-java/haifengl--smile/5a41c8abc9b1045ef354081220d08f28da44414c/before/MultivariateGaussianDistribution.java", "source": "the-stack-v2", "method_name": "entropy", "class_name": "MultivariateGaussianDistribution", "index": 2455, "label": 1}
{"input": "public void clearAllDetailRelations(boolean clearChanges)\n    {\n        Iterator<EJEditableBlockController> detailBlocks = getDetailRelationControllers().values().iterator();\n        while (detailBlocks.hasNext())\n        {\n            EJEditableBlockController detailBlock = detailBlocks.next();\n\n            if (detailBlock != null)\n            {\n                detailBlock.clearBlock(clearChanges);\n            }\n        }\n        if (_blockRendererController != null)\n        {\n            _blockRendererController.detailBlocksCleared();\n        }\n    }", "timestamp": "2023-02-18T11:13:58.949927Z", "repo_name": "entirej/core", "path": "/entirej-core/src/org/entirej/framework/core/data/controllers/EJEditableBlockController.java", "source": "the-stack-v2", "method_name": "clearAllDetailRelations", "class_name": "EJEditableBlockController", "index": 2456, "label": 1}
{"input": "@PutMapping(value = \"/providers/update/{id}\")\r\n\tpublic String updateById(@PathVariable final String id, @RequestBody Providers provider) {\r\n\t\tProviders providerDb = null;\r\n\t\tOptional<Providers> providerOptional = providerrepo.findById(id);\r\n\t\tif (providerOptional.isPresent()) {\r\n\t\t\tproviderDb = providerOptional.get();\r\n\t\t    providerDb.setId(provider.getId());\r\n\t\t    providerDb.setHospitalName(provider.getHospitalName());\r\n\t\t    providerDb.setSpecilizationList(provider.getHospitalName());\r\n\t\t}\r\n\t\tproviderDb = providerrepo.save(providerDb);\r\n\t\treturn \"Update Successfully\";\r\n\t}", "timestamp": "2023-05-03T16:43:13.142159Z", "repo_name": "SuriAravind/HospitalSpringBoot", "path": "/hospitalmanagement/src/main/java/com/hospital/hospitalmanagement/controller/ProvidersController.java", "source": "the-stack-v2", "method_name": "updateById", "class_name": "ProvidersController", "index": 2457, "label": 1}
{"input": "public <R> DataTable addNewDataTable(String info, boolean bAddUnEqualSizedList, Processable2<R, Integer, Double> pa2Element, double[]... arrays) {\r\n\t\tDataTable rtn = new DataTable(info, arrays.length);\r\n\t\tif (rtn.addAll(bAddUnEqualSizedList, pa2Element, arrays)) {\r\n\t\t\tadd(rtn);\r\n\t\t} else {\r\n\t\t\trtn = null;\r\n\t\t}\r\n\t\treturn rtn;\r\n\t}", "timestamp": "2021-01-19T17:19:52.577870Z", "repo_name": "mattirn/JavaGnuplotHybrid", "path": "/javagnuplothybrid/src/main/java/org/leores/gnuplot/util/data/DataTableSet.java", "source": "the-stack-v2", "method_name": "addNewDataTable", "class_name": "DataTableSet", "index": 2458, "label": 1}
{"input": "@Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        \n        getMenuInflater().inflate(R.menu.menu_gallery_main, menu);\n        return true;\n    }", "timestamp": "2020-03-29T14:22:44.535521Z", "repo_name": "k-siva/learn-app", "path": "/PictureGallery/app/src/main/java/com/example/asiablr/picturegallery/GalleryMain.java", "source": "the-stack-v2", "method_name": "onCreateOptionsMenu", "class_name": "GalleryMain", "index": 2459, "label": 1}
{"input": "@RequestMapping(value = \"/th-alert-prompts\",\n        method = RequestMethod.GET,\n        produces = MediaType.APPLICATION_JSON_VALUE)\n    @Timed\n    public ResponseEntity<List<ThAlertPrompts>> getAllThAlertPrompts(Pageable pageable)\n        throws URISyntaxException {\n        log.debug(\"REST request to get a page of ThAlertPrompts\");\n        Page<ThAlertPrompts> page = thAlertPromptsRepository.findAll(pageable); \n        HttpHeaders headers = PaginationUtil.generatePaginationHttpHeaders(page, \"/api/th-alert-prompts\");\n        return new ResponseEntity<>(page.getContent(), headers, HttpStatus.OK);\n    }", "timestamp": "2022-12-13T20:24:46.381118Z", "repo_name": "BulkSecurityGeneratorProject/acme_site", "path": "/src/main/java/net/testaholic_acme_site/web/rest/ThAlertPromptsResource.java", "source": "the-stack-v2", "method_name": "getAllThAlertPrompts", "class_name": "ThAlertPromptsResource", "index": 2460, "label": 1}
{"input": "@Test public void testUnionAll() {\n    CalciteAssert.hr()\n        .query(\"select \\\"empid\\\", \\\"name\\\" from \\\"hr\\\".\\\"emps\\\" where \\\"deptno\\\"=10\\n\"\n            + \"union all\\n\"\n            + \"select \\\"empid\\\", \\\"name\\\" from \\\"hr\\\".\\\"emps\\\" where \\\"empid\\\">=150\")\n        .explainContains(\"\"\n            + \"PLAN=EnumerableUnion(all=[true])\")\n        .returnsUnordered(\"empid=100; name=Bill\",\n            \"empid=110; name=Theodore\",\n            \"empid=150; name=Sebastian\",\n            \"empid=150; name=Sebastian\",\n            \"empid=200; name=Eric\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testUnionAll", "class_name": "JdbcTest", "index": 2461, "label": 1}
{"input": "@Test\n\tpublic void testFour() {\n     setaArray(4);\n     esperado.add(2);\n     esperado.add(3);\n\t assertEquals(esperado, result);\n\t}", "timestamp": "2021-01-01T15:59:14.137993Z", "repo_name": "beatrizrezener/EstudosDAS", "path": "/Eratostenes/tests/eratostenesTest.java", "source": "the-stack-v2", "method_name": "testFour", "class_name": "eratostenesTest", "index": 2462, "label": 1}
{"input": "public void removeAttacker(L2Clan clan)\n\t{\n\t\tif ((clan == null) || (clan.getFortId() == getFort().getResidenceId()) || !FortSiegeManager.getInstance().checkIsRegistered(clan, getFort().getResidenceId()))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tremoveSiegeClan(clan.getId());\n\t}", "timestamp": "2021-01-10T03:42:04.091432Z", "repo_name": "soultobe/L2JOlivia_EpicEdition", "path": "/java/com/l2jolivia/gameserver/model/entity/FortSiege.java", "source": "the-stack-v2", "method_name": "removeAttacker", "class_name": "FortSiege", "index": 2463, "label": 1}
{"input": "public void testBug84724() throws CoreException {\n\tthis.resultCollector.showRule();\n\tsetUpBug84724();\n\tIMethod method = selectMethod(this.workingCopies[0], \"X\", 2);\n\tsearch(method, REFERENCES);\n\tassertSearchResults(\n\t\t\"src/b84724/Z.java void b84724.Z.foo() [new X(\\\"\\\")] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug84724", "class_name": "JavaSearchBugsTests", "index": 2464, "label": 1}
{"input": "public static void main(String[] args) throws RunnerException {\n        Options options = new OptionsBuilder()\n                .include(\".*\" + SbeThroughputBenchmarkProtobuf.class.getSimpleName() + \".*\")\n                .verbosity(VerboseMode.NORMAL)\n                .build();\n        new Runner(options).run();\n    }", "timestamp": "2023-08-16T00:56:34.729730Z", "repo_name": "HebiRobotics/QuickBuffers", "path": "/benchmarks/src/main/java/us/hebi/quickbuf/benchmarks/comparison/SbeThroughputBenchmarkProtobuf.java", "source": "the-stack-v2", "method_name": "main", "class_name": "SbeThroughputBenchmarkProtobuf", "index": 2465, "label": 1}
{"input": "@Override\n    public boolean execute(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        String id = request.getParameter(\"id\");\n        String password = request.getParameter(\"password\");\n\n        \n        String generatedSalt = String.valueOf(UUID.randomUUID());\n        String encodedPassword = PasswordEncoder.getEncodedPassword(password, generatedSalt);\n\n        MemberDAO memberDAO = new MemberDAO();\n        try {\n            \n            if(memberDAO.existCount(id) > 0) {\n                return false;\n            }\n            \n            int newId = memberDAO.getNewId();\n            \n            memberDAO.postLoginData(newId, id, encodedPassword, generatedSalt);\n        } catch (SQLException | ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n        return true;\n    }", "timestamp": "2023-08-06T19:16:31.002487Z", "repo_name": "dwc04112/jspmvcPublic", "path": "/src/main/java/kr/ac/daegu/jspmvc/biz/LoginSignUpCmd.java", "source": "the-stack-v2", "method_name": "execute", "class_name": "LoginSignUpCmd", "index": 2466, "label": 1}
{"input": "public Criteria andMsgIdIsNull() {\r\n            addCriterion(\"msg_id is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andMsgIdIsNull", "class_name": "GeneratedCriteria", "index": 2467, "label": 1}
{"input": "@Test public void testMixedEqualAndIsNotDistinctJoin() {\n    CalciteAssert.that()\n      .with(CalciteAssert.Config.JDBC_FOODMART)\n      .query(\"select *\\n\"\n          + \"  from \\\"foodmart\\\".\\\"employee\\\" as e1\\n\"\n          + \"  join \\\"foodmart\\\".\\\"employee\\\" as e2 on\\n\"\n          + \"  e1.\\\"first_name\\\" = e1.\\\"first_name\\\"\\n\"\n          + \"  and e1.\\\"last_name\\\" is distinct from e2.\\\"last_name\\\"\")\n      .runs();\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testMixedEqualAndIsNotDistinctJoin", "class_name": "JdbcTest", "index": 2468, "label": 1}
{"input": "@Test\n    @SmallTest\n    @Feature({\"Preferences\"})\n    public void testSearchViewCloseIconExistsOnlyToClearQueries() throws Exception {\n        setPasswordSourceWithMultipleEntries(GREEK_GODS);\n        PreferencesTest.startPreferences(InstrumentationRegistry.getInstrumentation(),\n                SavePasswordsPreferences.class.getName());\n\n        \n                .perform(click(), typeText(\"Zeu\"), closeSoftKeyboard());\n        Espresso.onView(withId(R.id.search_close_btn)).check(matches(isDisplayed()));\n\n        \n        Espresso.onView(withId(R.id.search_close_btn)).perform(click()); \n        Espresso.onView(isRoot()).check(\n                (root, e)\n                        -> waitForView((ViewGroup) root, withId(R.id.search_close_btn),\n                                VIEW_INVISIBLE | VIEW_GONE | VIEW_NULL));\n    }", "timestamp": "2022-12-08T04:12:54.583056Z", "repo_name": "yeahhhhhhhh/chromium_quic", "path": "/src/chrome/android/javatests/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferencesTest.java", "source": "the-stack-v2", "method_name": "testSearchViewCloseIconExistsOnlyToClearQueries", "class_name": "SavePasswordsPreferencesTest", "index": 2469, "label": 1}
{"input": "@Override\n    public ASTNode visitTableReference(final TableReferenceContext ctx) {\n        CollectionValue<TableSegment> result = new CollectionValue<>();\n        if (null != ctx.tableFactor()) {\n            ASTNode tableFactor = visit(ctx.tableFactor());\n            if (tableFactor instanceof TableSegment) {\n                result.getValue().add((TableSegment) tableFactor);\n            }\n        }\n        if (null != ctx.joinedTable()) {\n            for (JoinedTableContext each : ctx.joinedTable()) {\n                result.getValue().addAll(getTableSegments(result.getValue(), each));\n            }\n        }\n        return result;\n    }", "timestamp": "2020-09-10T15:32:50.163756Z", "repo_name": "avalon566/incubator-shardingsphere", "path": "/shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/impl/PostgreSQLDMLVisitor.java", "source": "the-stack-v2", "method_name": "visitTableReference", "class_name": "PostgreSQLDMLVisitor", "index": 2470, "label": 1}
{"input": "@Override\n    public void onCreate() {\n        Log.d(\"VOPServer\", \"onCreate()\");\n\n        unlockListener = new PhoneUnlockedReceiver(this);\n        serverThread = new Thread(r_server);\n    }", "timestamp": "2021-07-17T15:25:52.359676Z", "repo_name": "ronidee/ViewOnPhone", "path": "/VOPServer.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "VOPServer", "index": 2471, "label": 1}
{"input": "public void testGetAnatomicalLocationEntity() throws Exception {\n        assertNotNull(\"Anatomical entity must not be null\", testEntityFactoryService.getAnatomicalLocationEntity());\n    }", "timestamp": "2022-05-22T18:37:18.579877Z", "repo_name": "termlex/snofyre", "path": "/srth-osgi/uk.nhs.cfh.dsp.srth.information.model.impl/src/test/java/uk/nhs/cfh/dsp/srth/information/model/impl/internal/ClinicalEntityFactoryImplTest.java", "source": "the-stack-v2", "method_name": "testGetAnatomicalLocationEntity", "class_name": "ClinicalEntityFactoryImplTest", "index": 2472, "label": 1}
{"input": "private String getIndexFolderPath(boolean isProduction, String indexName) {\n        return CategoryRegistryManager.getLocalRegistryPath() + File.separator + tenantID + File.separator\n                + (isProduction ? PRODUCTION_FOLDER_NAME : REPUBLISH_FOLDER_NAME) + File.separator + indexName;\n    }", "timestamp": "2021-05-01T16:06:31.746782Z", "repo_name": "MarkChappell/data-quality", "path": "/dataquality-semantic/src/main/java/org/talend/dataquality/semantic/api/CustomDictionaryHolder.java", "source": "the-stack-v2", "method_name": "getIndexFolderPath", "class_name": "CustomDictionaryHolder", "index": 2473, "label": 1}
{"input": "@Override\n    @Cacheable\n    public boolean exists(final String name) {\n        return this.origin.exists(name);\n    }", "timestamp": "2022-12-21T00:00:08.612798Z", "repo_name": "pjmorr/rultor", "path": "/src/main/java/com/rultor/cached/CdTalks.java", "source": "the-stack-v2", "method_name": "exists", "class_name": "CdTalks", "index": 2474, "label": 1}
{"input": "public static java.lang.Double ToDouble(Object obj)\n  {\n    java.lang.Double res=null;\n    String str;\n\n    if (obj!=null)\n    {\n      try\n      {\n        if (obj instanceof java.lang.String)\n        {\n          str=rs.android.Util.Remove_Other_Chars(\"1234567890.-\", (String)obj);\n          res=java.lang.Double.parseDouble(str);\n        }\n        else if (obj instanceof java.lang.Integer)\n          res=((java.lang.Integer)obj).doubleValue();\n        else if (obj instanceof java.lang.Double)\n          res=(java.lang.Double)obj;\n        \n\t\t\t\t\n        \n\t\t\t\t\n        else\n        {\n          str=rs.android.Util.Remove_Other_Chars(\"1234567890.\", To_String(obj));\n          res=java.lang.Double.parseDouble(str);\n        }\n      }\n      catch (NumberFormatException e)\n      {\n        res=null;\n      }\n    }\n    return res;\n  }", "timestamp": "2021-07-04T15:23:27.511120Z", "repo_name": "netssrmrz/coralracer", "path": "/AppTemplate/src/main/java/rs/android/util/Type.java", "source": "the-stack-v2", "method_name": "ToDouble", "class_name": "Type", "index": 2475, "label": 1}
{"input": "public void testBug137087m_CamelCaseSamePartCount() throws CoreException {\n\tint matchRule = SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH;\n\tString pattern = \"CloneNotSupportedException\";\n\tsearch(pattern, TYPE, DECLARATIONS, matchRule);\n\tassertSearchResults(\n\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug137087m_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 2476, "label": 1}
{"input": "public Criteria andOwnerIdNotBetween(Long value1, Long value2) {\r\n            addCriterion(\"owner_id not between\", value1, value2, \"ownerId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andOwnerIdNotBetween", "class_name": "GeneratedCriteria", "index": 2477, "label": 1}
{"input": "protected Component getBean(OgnlValueStack stack, HttpServletRequest req, HttpServletResponse res) {\n        return new Checkbox(stack, req, res);\n    }", "timestamp": "2021-01-10T07:42:52.207157Z", "repo_name": "lxwuchang/dtyd", "path": "/webwork/com/opensymphony/webwork/views/velocity/components/CheckBoxDirective.java", "source": "the-stack-v2", "method_name": "getBean", "class_name": "CheckBoxDirective", "index": 2478, "label": 1}
{"input": "@Override\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        processRequest(request, response);\n    }", "timestamp": "2022-06-27T11:42:34.590714Z", "repo_name": "anjnpul/JAVA", "path": "/JAVA-MYSQL/src/main/java/TEST.java", "source": "the-stack-v2", "method_name": "doPost", "class_name": "TEST", "index": 2479, "label": 1}
{"input": "public static String getDeviceIMEI(Context context) {\n        if (!TextUtils.isEmpty(deviceIMEI)) {\n            return deviceIMEI;\n        }\n        if (context == null) {\n            return \"\";\n        }\n        try {\n            TelephonyManager telephonyManager = (TelephonyManager) context.getSystemService(\"phone\");\n            if (telephonyManager != null) {\n                String deviceId = telephonyManager.getDeviceId();\n                deviceIMEI = deviceId;\n                if (deviceId == null) {\n                    deviceIMEI = \"\";\n                }\n                return deviceIMEI;\n            }\n        } catch (Throwable th) {\n        }\n        return \"\";\n    }", "timestamp": "2022-01-27T12:48:43.446804Z", "repo_name": "jambestwick/HackWechat", "path": "/app/src/main/java/com/tencent/qqvideo/proxy/common/VcSystemInfo.java", "source": "the-stack-v2", "method_name": "getDeviceIMEI", "class_name": "VcSystemInfo", "index": 2480, "label": 1}
{"input": "@Override\n\tpublic List<Category> getByName(MerchantStore store, String name, Language language) throws ServiceException {\n\t\t\n\t\ttry {\n\t\t\treturn categoryDao.getByName(store, name, language);\n\t\t} catch (Exception e) {\n\t\t\tthrow new ServiceException(e);\n\t\t}\n\t\t\n\t\t\n\t}", "timestamp": "2021-05-11T22:33:13.512901Z", "repo_name": "joshLV/laVetrina", "path": "/sm-core/src/main/java/com/salesmanager/core/business/catalog/category/service/CategoryServiceImpl.java", "source": "the-stack-v2", "method_name": "getByName", "class_name": "CategoryServiceImpl", "index": 2481, "label": 1}
{"input": "public int deleteList(Integer courseId, String collType, Integer collTypeId) {\r\n\t\treturn this.courseKemDao.deleteList(courseId, collType, collTypeId);\r\n\t}", "timestamp": "2023-01-04T07:40:05.314756Z", "repo_name": "yoonjinseok/cuinfo", "path": "/src/service/com/cyberup/service/course/CourseKemService.java", "source": "the-stack-v2", "method_name": "deleteList", "class_name": "CourseKemService", "index": 2482, "label": 1}
{"input": "@Override\n        public int compare(MutableQuery left, MutableQuery right) {\n            return Doubles.compare(right.getTotalDurationNanos(), left.getTotalDurationNanos());\n        }", "timestamp": "2021-06-04T04:22:43.452703Z", "repo_name": "chakra-coder/glowroot", "path": "/common/src/main/java/org/glowroot/common/model/MutableQuery.java", "source": "the-stack-v2", "method_name": "compare", "class_name": "MutableQuery", "index": 2483, "label": 1}
{"input": "public TreeItem connectTo(String name) {\n\n\t\tlog.info(\"Connecting to '\" + name + \"'.\");\n\t\topen();\n\t\tList<TreeItem> items = new DefaultTree().getItems();\n\n\t\tfor (TreeItem item : items) {\n\t\t\tif (item.getText().equals(\"Local Processes\")) {\n\t\t\t\titem.expand();\n\t\t\t\titems = item.getItems();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\t\t\t\t \t\t\t\t\n\t\t\t \t\t\t\t\n\t\tfor (TreeItem item : items) {\n\t\t\tif (item.getText().contains(name)) {\n\t\t\t\titem.select();\n\t\t\t\tAbstractWait.sleep(TimePeriod.getCustom(2));\n\t\t\t\ttry {\n\t\t\t\t\tnew ContextMenu(CONNECT_CONTEXT_MENU).select();\n\t\t\t\t} catch (SWTLayerException ex) {\n\t\t\t\t\tlog.info(\"Already connected to '\" + name + \"'.\");\n\t\t\t\t}\n\t\t\t\tAbstractWait.sleep(TimePeriod.getCustom(2));\n\t\t\t\titem.expand();\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}", "timestamp": "2021-01-21T09:34:28.498315Z", "repo_name": "elfilip/jbosstools-integration-stack-tests", "path": "/plugins/org.jboss.tools.fuse.reddeer/src/org/jboss/tools/fuse/reddeer/view/JMXNavigator.java", "source": "the-stack-v2", "method_name": "connectTo", "class_name": "JMXNavigator", "index": 2484, "label": 1}
{"input": "@Test\n    @Transactional\n    void getNonExistingCorretor() throws Exception {\n        \n        restCorretorMockMvc.perform(get(ENTITY_API_URL_ID, Long.MAX_VALUE)).andExpect(status().isNotFound());\n    }", "timestamp": "2023-04-25T08:10:07.834277Z", "repo_name": "ceduardo-roque/easyinsurance-hybrid", "path": "/src/test/java/br/com/fiap/easyinsurance/web/rest/CorretorResourceIT.java", "source": "the-stack-v2", "method_name": "getNonExistingCorretor", "class_name": "CorretorResourceIT", "index": 2485, "label": 1}
{"input": "@Override\n        public Integer get(ChangeData input, FillArgs args)\n            throws OrmException {\n          return input.changedLines() != null\n              ? input.changedLines().deletions\n              : null;\n        }", "timestamp": "2021-01-16T21:01:21.667768Z", "repo_name": "runt18/gerrit", "path": "/gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeField.java", "source": "the-stack-v2", "method_name": "get", "class_name": "ChangeField", "index": 2486, "label": 1}
{"input": "@Override\n    @Transactional\n    public ServiceResult<CompetitionDocumentResource> save(CompetitionDocumentResource competitionDocumentResource) {\n\n        return validateCompetitionDocument(asList(competitionDocumentResource)).andOnSuccess(() -> {\n\n            CompetitionDocument competitionDocument = competitionDocumentMapper.mapToDomain(competitionDocumentResource);\n\n            CompetitionDocument savedCompetitionDocument = competitionDocumentConfigRepository.save(competitionDocument);\n            return serviceSuccess(competitionDocumentMapper.mapToResource(savedCompetitionDocument));\n\n        });\n    }", "timestamp": "2022-09-11T11:06:47.452881Z", "repo_name": "adambirse/innovation-funding-service", "path": "/ifs-data-layer/ifs-data-service/src/main/java/org/innovateuk/ifs/competitionsetup/transactional/CompetitionSetupDocumentServiceImpl.java", "source": "the-stack-v2", "method_name": "save", "class_name": "CompetitionSetupDocumentServiceImpl", "index": 2487, "label": 1}
{"input": "protected Consumer<byte[]> getConsumer() throws PulsarClientException {\n\t\tif (consumer == null) {\n\t\t\tconsumer = getClient().newConsumer()\n\t\t\t\t\t.topic(topic)\n\t\t\t\t\t.subscriptionName(subscriptionName) \n\t\t\t\t\t.subscriptionType(SubscriptionType.Shared)\n\t\t\t\t\t.subscribe();\n\t\t}\n\t\treturn consumer;\n\t}", "timestamp": "2022-12-04T23:59:56.023759Z", "repo_name": "chaitanyaphalak/pulsar-in-action", "path": "/chapter3/src/main/java/com/manning/pulsar/chapter3/consumers/BackAndForth.java", "source": "the-stack-v2", "method_name": "getConsumer", "class_name": "BackAndForth", "index": 2488, "label": 1}
{"input": "@Override\n        public void onClick(View v) {\n            escuchaAlmacen.onClick(this,obtenerIdAlmacen(getAdapterPosition()));\n        }", "timestamp": "2021-01-11T01:50:53.488192Z", "repo_name": "breinergonza/conexion_serv", "path": "/app/src/main/java/com/feedhenry/armark/Adaptadores/Adaptador_Almacen.java", "source": "the-stack-v2", "method_name": "onClick", "class_name": "ViewHolder", "index": 2489, "label": 1}
{"input": "@Test public void testOverNoOrder() {\n    \n    \n    \n    \n    \n    \n    final String sql = \"select *,\\n\"\n        + \" count(*) over (partition by deptno) as m1,\\n\"\n        + \" count(*) over (partition by deptno order by ename) as m2,\\n\"\n        + \" count(*) over () as m3\\n\"\n        + \"from emp\";\n    withEmpDept(sql).returnsUnordered(\n        \"ENAME=Adam ; DEPTNO=50; GENDER=M; M1=2; M2=1; M3=9\",\n        \"ENAME=Alice; DEPTNO=30; GENDER=F; M1=2; M2=1; M3=9\",\n        \"ENAME=Bob  ; DEPTNO=10; GENDER=M; M1=2; M2=1; M3=9\",\n        \"equal to\"0,\n        \"equal to\"1,\n        \"equal to\"2,\n        \"equal to\"3,\n        \"equal to\"4,\n        \"equal to\"5);\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testOverNoOrder", "class_name": "JdbcTest", "index": 2490, "label": 1}
{"input": "@UiHandler(\"gmailButton\")\n\tpublic void onGmailButtonClicked(ClickEvent clickEvent){\n\t\tDataLogEvents.signIn(GwtUUIDGenerator.uuid(),\"login\",System.currentTimeMillis(),System.currentTimeMillis(), \"\", AppClientFactory.getLoggedInUser().getToken());\n\t\tString callBack = Window.Location.getHref();\n\t\n\t\tAppClientFactory.getInjector().getSearchService().getGoogleSignin(callBack, new SimpleAsyncCallback<String>() {\n\t\t\n\t\t\t@Override\n\t\t\tpublic void onSuccess(String result) {\n\t\t\t\tMixpanelUtil.Click_Gmail_SignIn(\"LoginPopup\");\n\t\t\t\tWindow.Location.replace(result);\n\t\t\t\n\t\t\t}\n\t\t});\n\t}", "timestamp": "2021-01-16T01:25:56.177798Z", "repo_name": "santhoshO/Gooru-Web", "path": "/src/main/java/org/ednovo/gooru/client/mvp/home/LoginPopupUc.java", "source": "the-stack-v2", "method_name": "onGmailButtonClicked", "class_name": "LoginPopupUc", "index": 2491, "label": 1}
{"input": "@Override\r\n    public Object build() {\r\n      StreamElement[] streamElementArray = new StreamElement[streamElements.size()];\r\n      streamElements.toArray(streamElementArray);\r\n      if (protectionElement != null) {\r\n        DrmInitData drmInitData = new DrmInitData(new SchemeData(protectionElement.uuid,\r\n            MimeTypes.VIDEO_MP4, protectionElement.data));\r\n        for (StreamElement streamElement : streamElementArray) {\r\n          int type = streamElement.type;\r\n          if (type == C.TRACK_TYPE_VIDEO || type == C.TRACK_TYPE_AUDIO) {\r\n            Format[] formats = streamElement.formats;\r\n            for (int i = 0; i < formats.length; i++) {\r\n              formats[i] = formats[i].copyWithDrmInitData(drmInitData);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return new SsManifest(majorVersion, minorVersion, timescale, duration, dvrWindowLength,\r\n          lookAheadCount, isLive, protectionElement, streamElementArray);\r\n    }", "timestamp": "2020-12-10T15:15:05.202410Z", "repo_name": "AhabweEmmanuel/Marlia", "path": "/TMessagesProj/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java", "source": "the-stack-v2", "method_name": "build", "class_name": "SmoothStreamingMediaParser", "index": 2492, "label": 1}
{"input": "public void addChangeListener(final PropertyChangeListener listener) {\n        changeSupport.addPropertyChangeListener(listener);\n    }", "timestamp": "2023-03-18T12:50:55.410343Z", "repo_name": "ASSERT-KTH/synthetic-checkstyle-error-dataset", "path": "/dataset/protocol1/commons-lang/learning/7268/AbstractCircuitBreaker.java", "source": "the-stack-v2", "method_name": "addChangeListener", "class_name": "AbstractCircuitBreaker", "index": 2493, "label": 1}
{"input": "public void testBug221110b() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[3];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/I.java\",\n\t\t\"public interface I<T> {\\n\" +\n\t\t\"}\\n\"\n\t);\n\tthis.workingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/X.java\",\n\t\t\"public class X<T> {\\n\" +\n\t\t\"}\\n\"\n\t);\n\tthis.workingCopies[2] = getWorkingCopy(\"/JavaSearchBugs/src/Z.java\",\n\t\t\"public class Z<T extends X<?> & I<?>> {\\n\" +\n\t\t\"}\\n\"\n\t);\n\tthis.resultCollector.showSelection();\n\tthis.resultCollector.showRule();\n\tIType type = this.workingCopies[0].getType(\"I\");\n\tsearch(type, REFERENCES, SearchPattern.R_ERASURE_MATCH, getJavaSearchWorkingCopiesScope(), this.resultCollector);\n\tassertSearchResults(\n\t\t\"public interface I<T> {\\n\"0\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug221110b", "class_name": "JavaSearchBugsTests", "index": 2494, "label": 1}
{"input": "public Criteria andVdef1NotBetween(String value1, String value2) {\r\n            addCriterion(\"VDEF1 not between\", value1, value2, \"vdef1\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef1NotBetween", "class_name": "GeneratedCriteria", "index": 2495, "label": 1}
{"input": "public static Set<String> getAuthorParts(ChangeData cd) throws OrmException {\n    try {\n      return getPersonParts(cd.getAuthor());\n    } catch (IOException e) {\n      throw new OrmException(e);\n    }\n  }", "timestamp": "2021-01-16T21:01:21.667768Z", "repo_name": "runt18/gerrit", "path": "/gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeField.java", "source": "the-stack-v2", "method_name": "getAuthorParts", "class_name": "ChangeField", "index": 2496, "label": 1}
{"input": "public final void setOriginalLink(String originalLink) {\n        this.originalLink = originalLink;\n    }", "timestamp": "2016-09-15T02:06:20.854798Z", "repo_name": "abrysov/Doctor", "path": "/src/com/evs/doctor/model/Publication.java", "source": "the-stack-v2", "method_name": "setOriginalLink", "class_name": "Publication", "index": 2497, "label": 1}
{"input": "public void refresh(ICloudClient cloudclient) throws RemoteException\n    {\n    \tthis.cloudclient = cloudclient;\n    \t\n    \t\n    \t\n    \tNodePerso racine = new NodePerso(cloudclient.getRacine(),true);\n    \tarbre = new JTree(racine);\n    \t\n    \tarbre.setCellRenderer(new MyTreeCellRenderer());\n    \t\n    \tthis.remplir(cloudclient.getRacine(), racine);\n    \tthis.add(arbre);\n    \tarbre.addMouseListener(this);\n    }", "timestamp": "2020-04-08T19:42:47.853863Z", "repo_name": "nacerfarid/Mini_Cloud", "path": "/Client/src/IHM/ArborescencePanel.java", "source": "the-stack-v2", "method_name": "refresh", "class_name": "ArborescencePanel", "index": 2498, "label": 1}
{"input": "@Override\n    public Optional<UserInterface> getUserById(long userId) {\n        return this.userMap.entrySet().stream()\n                .filter(e -> e.getValue().getId() == userId)\n                .map(e -> (UserInterface)e.getValue())\n                .findAny();\n    }", "timestamp": "2020-03-09T15:58:24.767789Z", "repo_name": "mike2ykme/substitute_scheduler", "path": "/src/main/java/com/icrn/substitute/scheduler/substitute_scheduler/dao/ExtUserRepositoryInMemory.java", "source": "the-stack-v2", "method_name": "getUserById", "class_name": "ExtUserRepositoryInMemory", "index": 2499, "label": 1}
{"input": "public void calculatePerimeter(){\n        perimeter=side*4;\n        System.out.println( \"Perimeter of the square: \"+perimeter );\n    }", "timestamp": "2023-04-05T06:18:22.357685Z", "repo_name": "Kguler6542/Spring2020B18_Java", "path": "/src/day43_MethodOverriding/Square.java", "source": "the-stack-v2", "method_name": "calculatePerimeter", "class_name": "Square", "index": 2500, "label": 1}
{"input": "@Test\n    public void addingMembersSuccessfullyToTheList() {\n        syndicate.addMember(stubProduct);\n        syndicate.addMember(anotherStubProduct);\n        assertEquals(2, syndicate.getMembers().size());\n    }", "timestamp": "2020-03-27T15:51:58.210754Z", "repo_name": "Samuel0c/SyndicateCalculator", "path": "/test/junitTests/SyndicateTest.java", "source": "the-stack-v2", "method_name": "addingMembersSuccessfullyToTheList", "class_name": "SyndicateTest", "index": 2501, "label": 1}
{"input": "@Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }", "timestamp": "2016-09-05T22:34:15.629225Z", "repo_name": "filhip12/Inventsys", "path": "/src/java/servlets/ValidaNombreArticulo.java", "source": "the-stack-v2", "method_name": "doPost", "class_name": "ValidaNombreArticulo", "index": 2502, "label": 1}
{"input": "@Override\n    public void rollbackToSavepoint(Object savepoint) throws TransactionException {\n        getSavepointManager().rollbackToSavepoint(savepoint);\n    }", "timestamp": "2021-07-12T23:37:36.449358Z", "repo_name": "zepfred/micronaut-data", "path": "/data-tx/src/main/java/io/micronaut/transaction/support/AbstractTransactionStatus.java", "source": "the-stack-v2", "method_name": "rollbackToSavepoint", "class_name": "AbstractTransactionStatus", "index": 2503, "label": 1}
{"input": "public boolean ExistePlan (int codigo_plan){\r\n         try (Connection conn = DriverManager.getConnection(dbData.getUlr(), dbData.getUser(),dbData.getPassword())){\r\n            String query = \"select * from plan where codigo_plan = ?\";\r\n            PreparedStatement statementPlan = conn.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);\r\n            statementPlan.setInt(1, codigo_plan);\r\n            ResultSet rowSelected = statementPlan.executeQuery();\r\n            while (rowSelected.next()){\r\n                   return true;\r\n            }\r\n            return false;\r\n            \r\n        } catch (Exception e) {\r\n             System.out.println(e.getMessage());\r\n            return false;\r\n        }\r\n    }", "timestamp": "2023-08-11T09:24:20.051132Z", "repo_name": "suarez14/VetManager", "path": "/JavaApplication4/src/Model/ModelPlan.java", "source": "the-stack-v2", "method_name": "ExistePlan", "class_name": "ModelPlan", "index": 2504, "label": 1}
{"input": "private List<CityDTO> getListOfDTOs(List<City> cityList) {\n        return cityList.stream()\n                .map(cityConverter::toDTO)\n                .collect(Collectors.toList());\n    }", "timestamp": "2022-09-04T09:47:37.481331Z", "repo_name": "JediHardcode/test_task_OnTravelSolutions", "path": "/src/main/java/com/gmail/kirill/ked/telegram/service/impl/CityServiceImpl.java", "source": "the-stack-v2", "method_name": "getListOfDTOs", "class_name": "CityServiceImpl", "index": 2505, "label": 1}
{"input": "private double DFS(String from, String to, Set<String> visited, double curr) {\r\n        if (from.equals(to)) {\r\n            return curr;\r\n        } else if (!visited.contains(from)) {\r\n            visited.add(from);\r\n            for (Map.Entry<String, Double> next : graph.get(from).entrySet()) {\r\n                double temp = DFS(next.getKey(), to, visited, curr * next.getValue());\r\n                if (temp != -1.0) {\r\n                    return temp;\r\n                }\r\n            }\r\n        }\r\n        return -1.0;\r\n    }", "timestamp": "2023-02-10T08:00:13.729659Z", "repo_name": "sahilmutreja/Algorithms", "path": "/src/coding/temp/_0399_Evaluate_Division.java", "source": "the-stack-v2", "method_name": "DFS", "class_name": "_0399_Evaluate_Division", "index": 2506, "label": 1}
{"input": "public Criteria andVdef12NotIn(List<String> values) {\r\n            addCriterion(\"VDEF12 not in\", values, \"vdef12\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef12NotIn", "class_name": "GeneratedCriteria", "index": 2507, "label": 1}
{"input": "public String getExhaustiveDescription() {\n    StringWriter errorWriter = new StringWriter();\n    PrintWriter pw = new PrintWriter(errorWriter);\n    for (int i = 0; i < this.exceptions.size(); ++i) {\n      Throwable t = this.exceptions.get(i);\n      Row action = this.actions.get(i);\n      String server = this.hostnameAndPort.get(i);\n      pw.append(\"exception\");\n      if (this.exceptions.size() > 1) {\n        pw.append(\" #\" + i);\n      }\n      pw.append(\" from \" + server + \" for \"\n        + ((action == null) ? \"unknown key\" : Bytes.toStringBinary(action.getRow())));\n      if (t != null) {\n        pw.println();\n        t.printStackTrace(pw);\n      }\n    }\n    pw.flush();\n    return errorWriter.toString();\n  }", "timestamp": "2021-07-04T10:33:32.095552Z", "repo_name": "shaofengshi/hbase", "path": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RetriesExhaustedWithDetailsException.java", "source": "the-stack-v2", "method_name": "getExhaustiveDescription", "class_name": "RetriesExhaustedWithDetailsException", "index": 2508, "label": 1}
{"input": "public static boolean is3GConnection(Context ctx) {\n        ConnectivityManager m_NetConnectMgr = (ConnectivityManager) ctx.getSystemService(Context.CONNECTIVITY_SERVICE);\n        NetworkInfo info = m_NetConnectMgr.getNetworkInfo(ConnectivityManager.TYPE_MOBILE);\n        return (info != null && info.isConnected());\n    }", "timestamp": "2023-08-23T07:14:31.704097Z", "repo_name": "tddyko/HealthCareSolution", "path": "/app/src/main/java/com/greencross/greencare/util/DeviceUtil.java", "source": "the-stack-v2", "method_name": "is3GConnection", "class_name": "DeviceUtil", "index": 2509, "label": 1}
{"input": "@Test\n    @SmallTest\n    @Feature({\"Preferences\"})\n    public void testSearchTextInOverflowMenuVisibleWithFeature() throws Exception {\n        setPasswordSource(null); \n        SavePasswordsPreferences f =\n                (SavePasswordsPreferences) PreferencesTest\n                        .startPreferences(InstrumentationRegistry.getInstrumentation(),\n                                SavePasswordsPreferences.class.getName())\n                        .getMainFragment();\n\n        \n        TestThreadUtils.runOnUiThreadBlocking(\n                ()\n                        -> f.getMenuForTesting()\n                                   .findItem(R.id.menu_id_search)\n                                   .setShowAsAction(MenuItem.SHOW_AS_ACTION_NEVER));\n\n        \n        openActionBarOverflowOrOptionsMenu(\n                InstrumentationRegistry.getInstrumentation().getTargetContext());\n\n        Espresso.onView(withText(R.string.search)).check(matches(isDisplayed()));\n    }", "timestamp": "2022-12-08T04:12:54.583056Z", "repo_name": "yeahhhhhhhh/chromium_quic", "path": "/src/chrome/android/javatests/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferencesTest.java", "source": "the-stack-v2", "method_name": "testSearchTextInOverflowMenuVisibleWithFeature", "class_name": "SavePasswordsPreferencesTest", "index": 2510, "label": 1}
{"input": "public Criteria andCuseridNotBetween(String value1, String value2) {\r\n            addCriterion(\"CUSERID not between\", value1, value2, \"cuserid\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andCuseridNotBetween", "class_name": "GeneratedCriteria", "index": 2511, "label": 1}
{"input": "private void addRestResourceClasses(Set<Class<?>> resources) {\r\n        resources.add(api.PersonResource.class);\r\n        resources.add(exceptions.InternalServerExceptionMapper.class);\r\n    }", "timestamp": "2021-01-10T04:34:02.933328Z", "repo_name": "ruvazi/CA2", "path": "/src/java/api/ApplicationConfig.java", "source": "the-stack-v2", "method_name": "addRestResourceClasses", "class_name": "ApplicationConfig", "index": 2512, "label": 1}
{"input": "private void inicializarComponentes() {\n        if (tipoOperacion.equals(\"Alta\")) {\n            tfDescripcion.setText(\"\");\n            tfDescripcion.requestFocus();\n        } else if (tipoOperacion.equals(\"Consulta\")) {\n            tfDescripcion.setText(unidadInvestigacion.toString());\n            tfDescripcion.setEditable(false);\n        } else if (tipoOperacion.equals(\"Modificación\")) {\n            tfDescripcion.setText(unidadInvestigacion.toString());\n        }\n\n    }", "timestamp": "2021-06-04T03:02:13.867648Z", "repo_name": "victornavelino/ProyectoUno", "path": "/src/vista/panelControl/diagUnidadInvestigacion.java", "source": "the-stack-v2", "method_name": "inicializarComponentes", "class_name": "diagUnidadInvestigacion", "index": 2513, "label": 1}
{"input": "@Test\n    public void awaitTestsComplete_shouldAddReturnErrorIfTimeout()\n    {\n        try (Env env = new EnvImpl(\"build1\"))\n        {\n            VM testVM = env.createVM(\"tests\");\n            testVM.start();\n            ProcessFuture future = testVM.runCommand(\"sleep 5\");\n            copyTaskProgressToVM(testVM, new TestResult(\"test1\"));\n\n            AbstractTask task = new StubTask();\n            Listener listener = new Listener();\n\n            TaskProgress progress = task.awaitTestsComplete(env, testVM, future, 1, listener);\n\n            assertTrue(listener.progressList.size() > 0);\n            assertEquals(Arrays.asList(\n                    new TestResult(\"test1\"),\n                    new TestResult(\"Tests should finish in 1 seconds\", false, \"Tests timed out\")\n                    ), progress.getTests());\n            assertEquals(1, progress.getTotalTests());\n        }\n    }", "timestamp": "2021-01-12T11:45:19.933604Z", "repo_name": "dmitrymurashenkov/frocate", "path": "/runner/src/test/java/com/frocate/taskrunner/AbstractTaskTest.java", "source": "the-stack-v2", "method_name": "awaitTestsComplete_shouldAddReturnErrorIfTimeout", "class_name": "AbstractTaskTest", "index": 2514, "label": 1}
{"input": "protected void replaceCode(SketchCode newCode) {\n     for (int i = 0; i < codeCount; i++) {\n       if (code[i].getFileName().equals(newCode.getFileName())) {\n         code[i] = newCode;\n         break;\n       }\n     }\n   }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/7/7_2f542815a58ee55ee03ae89dbab36dfbe50a1841/Sketch/7_2f542815a58ee55ee03ae89dbab36dfbe50a1841_Sketch_s.java", "source": "the-stack-v2", "method_name": "replaceCode", "class_name": "Sketch", "index": 2515, "label": 1}
{"input": "@Test public void testUnnestArrayWithOrdinality() {\n    CalciteAssert.that()\n        .query(\"select*from unnest(array[10,20]) with ordinality as t(i, o)\")\n        .returnsUnordered(\"I=10; O=1\",\n            \"I=20; O=2\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testUnnestArrayWithOrdinality", "class_name": "JdbcTest", "index": 2516, "label": 1}
{"input": "private boolean gotoMarket(Intent intent, Context context) {\n            context.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"market://details?id=\" + intent.getPackage())));\n            return true;\n        }", "timestamp": "2022-11-05T18:54:50.987825Z", "repo_name": "jpung0629/client_android_java", "path": "/sample/src/main/java/bootpay/co/kr/samplepayment/LocalHtmlActivity.java", "source": "the-stack-v2", "method_name": "gotoMarket", "class_name": "BWebviewClient", "index": 2517, "label": 1}
{"input": "public static void onUserStateChanged() {\n\t\tif (MainActivity.cx != null) MainActivity.cx.updateUser();\n\t}", "timestamp": "2020-03-17T23:44:38.129155Z", "repo_name": "XsJIONG/VIDE", "path": "/app/src/main/java/com/jxs/vide/MainActivity.java", "source": "the-stack-v2", "method_name": "onUserStateChanged", "class_name": "MainActivity", "index": 2518, "label": 1}
{"input": "public int count(ReportTmpMappingQuery query) {\n\t\treturn reportTmpMappingMapper.getReportTmpMappingCount(query);\n\t}", "timestamp": "2021-05-08T16:38:30.406098Z", "repo_name": "eosite/openyourarm", "path": "/glaf-web/src/main/java/com/glaf/report/core/service/ReportTmpMappingServiceImpl.java", "source": "the-stack-v2", "method_name": "count", "class_name": "ReportTmpMappingServiceImpl", "index": 2519, "label": 1}
{"input": "@Override\n  public <DB extends ODatabase> DB create() {\n    throw new UnsupportedOperationException(\"Deprecated Method\");\n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "create", "class_name": "ODatabaseDocumentEmbedded", "index": 2520, "label": 1}
{"input": "public boolean isEnabled() {\n     if (this.enabled == null) {\n       return true;\n     }\n     return this.enabled.booleanValue();\n   }", "timestamp": "2022-12-28T17:08:25.751594Z", "repo_name": "xknower/source-code-jdk-8u211", "path": "/rt/com/oracle/xmlns/internal/webservices/jaxws_databinding/XmlMTOM.java", "source": "the-stack-v2", "method_name": "isEnabled", "class_name": "XmlMTOM", "index": 2521, "label": 1}
{"input": "public void setForceDownloadService(Boolean forceDownloadService) {\n\t\tthis.forceDownloadService = forceDownloadService;\n\t}", "timestamp": "2023-08-17T01:42:17.287918Z", "repo_name": "MyPureCloud/platform-client-sdk-java", "path": "/build/src/main/java/com/mypurecloud/sdk/v2/api/request/GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdataRequest.java", "source": "the-stack-v2", "method_name": "setForceDownloadService", "class_name": "GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdataRequest", "index": 2522, "label": 1}
{"input": "public void testBug83304_MethodStringPattern() throws CoreException {\n\tthis.resultCollector.showRule();\n\tsetUpBug83304_MethodParameterizedElementPattern();\n\tsearch(\"<Exception>generic\", METHOD, REFERENCES, ERASURE_RULE);\n\tassertSearchResults(\n\t\t\"src/b83304/Methods.java void b83304.Methods.test() [generic(exc)] ERASURE_MATCH\\n\" +\n\t\t\"src/b83304/Methods.java void b83304.Methods.test() [generic(exc)] EXACT_MATCH\\n\" +\n\t\t\"src/b83304/Methods.java void b83304.Methods.test() [generic(\\\"\\\")] ERASURE_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug83304_MethodStringPattern", "class_name": "JavaSearchBugsTests", "index": 2523, "label": 1}
{"input": "public Connection openConn() {\n\t\t\n\t\ttry {\n\n\t\t\t\n\t\t\tInitialContext ic = new InitialContext();\n\t\t\t\n\t\t\tDataSource ds = (DataSource) ic.lookup(\"java:comp/env/jdbc/myoracle\");\n\t\t\t\n\t\t\tconn = ds.getConnection();\n\t\t} catch (Exception e) {\n\t\t\t\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\treturn conn;\n\t\t\n\t}", "timestamp": "2021-02-04T16:48:52.238014Z", "repo_name": "Hoan1993/JSP_Servlet", "path": "/10_Board_reply/src/com/reply/model/BbsDAO.java", "source": "the-stack-v2", "method_name": "openConn", "class_name": "BbsDAO", "index": 2524, "label": 1}
{"input": "public void testBug109695f() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/UTF16DocumentScannerSupport.java\",\n\t\t\"public class UTF16DocumentScannerSupport {}\\n\" +\n\t\t\"class UTF1DocScannerSupport {}\\n\" +\n\t\t\"class UTF6DocScannerSupport {}\\n\" +\n\t\t\"class UTFDocScannerSupport {}\\n\"\n\t);\n\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();\n\tint validatedRule = SearchPattern.validateMatchRule(\"UTF16DSS\", SearchPattern.R_CAMELCASE_MATCH);\n\tsearchAllTypeNames(\"UTF16DSS\", validatedRule, requestor);\n\tassertSearchResults(\n\t\t\"UTF16DocumentScannerSupport\",\n\t\trequestor\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug109695f", "class_name": "JavaSearchBugsTests", "index": 2525, "label": 1}
{"input": "public synchronized void remove() {\n\t\tif(outOfOrder || newpos == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tcd.clear(curpos);\n\t\tcd.clear(curpos, newpos);\n\t\tcd.mark(startpos, newpos, col, no);\n\t\tcd.mark(curpos, col, no);\n\n\t\tif(curLock != null) {\n\t\t\tcurLock.V();\n\t\t\tcurLock = null;\n\t\t}\n\n\t\tif(inAlley || cc.alley.entering(no, curpos)) {\n\t\t\tcc.alley.leave(no);\n\t\t\tinAlley = false;\n\t\t}\n\n\t\tcurpos = startpos;\n\t\toutOfOrder = true;\n\t}", "timestamp": "2016-09-06T20:11:42.556411Z", "repo_name": "CrackedSass/02158ConcurrentProgramming", "path": "/Task 6/CarControl.java", "source": "the-stack-v2", "method_name": "remove", "class_name": "Car", "index": 2526, "label": 1}
{"input": "public EnumTest outerEnum(OuterEnum outerEnum) {\n    this.outerEnum = outerEnum;\n    return this;\n  }", "timestamp": "2023-03-07T19:55:29.765168Z", "repo_name": "docusign/old_swagger-codegen", "path": "/samples/client/petstore/java/okhttp-gson-parcelableModel/src/main/java/io/swagger/client/model/EnumTest.java", "source": "the-stack-v2", "method_name": "outerEnum", "class_name": "EnumTest", "index": 2527, "label": 1}
{"input": "protected final int parseInt(XmlPullParser parser, String key, int defaultValue)\r\n        throws ParserException {\r\n      String value = parser.getAttributeValue(null, key);\r\n      if (value != null) {\r\n        try {\r\n          return Integer.parseInt(value);\r\n        } catch (NumberFormatException e) {\r\n          throw new ParserException(e);\r\n        }\r\n      } else {\r\n        return defaultValue;\r\n      }\r\n    }", "timestamp": "2020-12-10T15:15:05.202410Z", "repo_name": "AhabweEmmanuel/Marlia", "path": "/TMessagesProj/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java", "source": "the-stack-v2", "method_name": "parseInt", "class_name": "ElementParser", "index": 2528, "label": 1}
{"input": "@Override\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\n        \n        registry.addResourceHandler(\"/**\").addResourceLocations(\n                CLASSPATH_RESOURCE_LOCATIONS);\n        \n        registry.addResourceHandler(\"/uploads/**\").addResourceLocations(\n                \"classpath:/uploads/\");\n        \n        registry.addResourceHandler(\"/static/**\").addResourceLocations(\n                \"classpath:/static/\");\n        \n        \n        super.addResourceHandlers(registry);\n    }", "timestamp": "2021-07-22T07:31:23.966678Z", "repo_name": "yangboz/spring-boot-elasticsearch-LIRE-docker", "path": "/src/main/java/info/smartkit/eip/obtuse_octo_prune/configs/StaticResourceConfiguration.java", "source": "the-stack-v2", "method_name": "addResourceHandlers", "class_name": "StaticResourceConfiguration", "index": 2529, "label": 1}
{"input": "@Test\n    @Transactional\n    public void updateUnit() throws Exception {\n        \n        unitService.save(unit);\n\n        int databaseSizeBeforeUpdate = unitRepository.findAll().size();\n\n        \n        Unit updatedUnit = unitRepository.findById(unit.getId()).get();\n        \n        em.detach(updatedUnit);\n        updatedUnit\n            .unitType(UPDATED_UNIT_TYPE);\n\n        restUnitMockMvc.perform(put(\"/api/units\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(updatedUnit)))\n            .andExpect(status().isOk());\n\n        \n        List<Unit> unitList = unitRepository.findAll();\n        assertThat(unitList).hasSize(databaseSizeBeforeUpdate);\n        Unit testUnit = unitList.get(unitList.size() - 1);\n        assertThat(testUnit.getUnitType()).isEqualTo(UPDATED_UNIT_TYPE);\n    }", "timestamp": "2022-12-21T12:20:33.195209Z", "repo_name": "bahmetpalanci/katilimcivatandas", "path": "/src/test/java/com/municipality/katilimcivatandas/web/rest/UnitResourceIT.java", "source": "the-stack-v2", "method_name": "updateUnit", "class_name": "UnitResourceIT", "index": 2530, "label": 1}
{"input": "@Override\r\n\tpublic Customer searchCustomerById(int customerID) {\r\n\r\n\t\tSession session = factory.openSession();\r\n\r\n\t\tTransaction transaction = session.beginTransaction();\r\n\t\tCustomer customer = new Customer();\r\n\t\tcustomer = (Customer) session.get(Customer.class, customerID);\r\n\t\ttransaction.commit();\r\n\t\tsession.close();\r\n\t\t\r\n\r\n\t\treturn customer;\r\n\t}", "timestamp": "2022-12-20T12:07:08.195535Z", "repo_name": "chiraggarg96/deloittetrng", "path": "/NewCMS_Hibernate_Annotations/src/com/deloitte/cms/dao/impl/CustomerDAOImpl.java", "source": "the-stack-v2", "method_name": "searchCustomerById", "class_name": "CustomerDAOImpl", "index": 2531, "label": 1}
{"input": "public static String aesDecrypt(String input, String key) {\n\t\ttry {\n\t\t\treturn new String(aesDecrypt(UtilEncode.decodeHex(input), UtilEncode.decodeHex(key)), DEFAULT_URL_ENCODING);\n\t\t} catch (UnsupportedEncodingException e) {\n\t\t\treturn \"\";\n\t\t}\n\t}", "timestamp": "2020-04-27T10:34:21.844066Z", "repo_name": "wuchenl/springboot2-scaffold", "path": "/springboot2-utils/src/main/java/com/letters7/wuchen/springboot2/utils/security/Cryptos.java", "source": "the-stack-v2", "method_name": "aesDecrypt", "class_name": "Cryptos", "index": 2532, "label": 1}
{"input": "public void testBug124645b() throws CoreException {\n\tIClassFile classFile = getClassFile(\"JavaSearchBugs\", \"lib/b124645.jar\", \"test\", \"BE_124645.class\");\n\tIType type = classFile.getType();\n\tsearch(type, IMPLEMENTORS);\n\tassertSearchResults(\n\t\t\"src/b124645/test/A_124645.java b124645.test.A_124645 [BE_124645] EXACT_MATCH\\n\" +\n\t\t\"src/b124645/test/A_124645.java void b124645.test.A_124645.m():<anonymous>#1 [BE_124645] EXACT_MATCH\\n\" +\n\t\t\"src/b124645/test/X_124645.java b124645.test.X_124645 [BE_124645] EXACT_MATCH\\n\" +\n\t\t\"src/b124645/test/X_124645.java void b124645.test.X_124645.m():Y_124645#1 [BE_124645] EXACT_MATCH\\n\" +\n\t\t\"lib/b124645.jar test.BA_124645 EXACT_MATCH\\n\" +\n\t\t\"lib/b124645.jar test.<anonymous> EXACT_MATCH\\n\" +\n\t\t\"lib/b124645.jar\"0 +\n\t\t\"lib/b124645.jar\"1\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug124645b", "class_name": "JavaSearchBugsTests", "index": 2533, "label": 1}
{"input": "public Criteria andSuperiorVerifiUserIdBetween(Long value1, Long value2) {\r\n            addCriterion(\"superior_verifi_user_id between\", value1, value2, \"superiorVerifiUserId\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andSuperiorVerifiUserIdBetween", "class_name": "GeneratedCriteria", "index": 2534, "label": 1}
{"input": "public void removeMessageDestinationRef(String name) {\n\n        namingResources.removeMessageDestinationRef(name);\n        fireContainerEvent(\"removeMessageDestinationRef\", name);\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "removeMessageDestinationRef", "class_name": "StandardContext", "index": 2535, "label": 1}
{"input": "public final ElementValuePairContext elementValuePair() throws RecognitionException {\n\t\tElementValuePairContext _localctx = new ElementValuePairContext(_ctx, getState());\n\t\tenterRule(_localctx, 136, RULE_elementValuePair);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(780);\n\t\t\tmatch(Identifier);\n\t\t\tsetState(781);\n\t\t\tmatch(T__26);\n\t\t\tsetState(782);\n\t\t\telementValue();\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "elementValuePair", "class_name": "JavaParser", "index": 2536, "label": 1}
{"input": "private void togglePlayer() {\n        if (this.currentPlayer == this.player1) {\n                this.currentPlayer = this.player2;\n        } else {\n                this.currentPlayer = this.player1;\n        }\n    }", "timestamp": "2020-08-28T21:27:15.000627Z", "repo_name": "MLjungg/Chess-Game", "path": "/src/Chess.java", "source": "the-stack-v2", "method_name": "togglePlayer", "class_name": "Chess", "index": 2537, "label": 1}
{"input": "public void setErrorMessageUserDefinedPanel(\n\t\t\tErrorMessageDisplay errorMessageUserDefinedPanel) {\n\t\tthis.errorMessageUserDefinedPanel = errorMessageUserDefinedPanel;\n\t}", "timestamp": "2021-01-18T19:53:17.807267Z", "repo_name": "michaelaltmann/MeasureAuthoringTool_LatestSprint", "path": "/mat/src/mat/client/clause/QDMAvailableValueSetWidget.java", "source": "the-stack-v2", "method_name": "setErrorMessageUserDefinedPanel", "class_name": "QDMAvailableValueSetWidget", "index": 2538, "label": 1}
{"input": "@Override\n        public Integer get(ChangeData input, FillArgs args)\n            throws OrmException {\n          Change c = input.change();\n          if (c == null) {\n            return null;\n          }\n          return c.getOwner().get();\n        }", "timestamp": "2021-01-16T21:01:21.667768Z", "repo_name": "runt18/gerrit", "path": "/gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeField.java", "source": "the-stack-v2", "method_name": "get", "class_name": "ChangeField", "index": 2539, "label": 1}
{"input": "static void assertEquals(int left, int top, int width, int height, Extent actual) {\n\t\tassert actual.getLeft() == left;\n\t\tassert actual.getTop() == top;\n\t\tassert actual.getWidth() == width;\n\t\tassert actual.getHeight() == height;\n\t}", "timestamp": "2023-06-17T03:00:53.904887Z", "repo_name": "AdiBad/drawit", "path": "/drawit/tests/shapegroups2/ShapeGroupTest_Nonleaves_2Levels.java", "source": "the-stack-v2", "method_name": "assertEquals", "class_name": "ShapeGroupTest_Nonleaves_2Levels", "index": 2540, "label": 1}
{"input": "@Override\n      public Request setUploadProtocol(java.lang.String uploadProtocol) {\n        return (Request) super.setUploadProtocol(uploadProtocol);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setUploadProtocol", "class_name": "Request", "index": 2541, "label": 1}
{"input": "public void enviar(String observacion, int c) throws IOException {\n        JsonPlaceHolderApi jsonPlaceHolderApi = retrofit.create(JsonPlaceHolderApi.class);\n\n        if(c == 1) {\n            Call<Bolsa> call2 = jsonPlaceHolderApi.agregarObservacion(\"bolsa/observacion/\" + bolsa + \"/\" + observacion);\n            Response<Bolsa> response2 = call2.execute();\n            Log.e(\"TAG\", \"onResponse:\" + response2.toString());\n        }\n    }", "timestamp": "2022-11-23T21:48:28.109265Z", "repo_name": "JALG99/ReciclemosReciclador", "path": "/ReciclemosReciclador/app/src/main/java/com/upc/reciclemosreciclador/Inicio/BolsaRechazadaFragment.java", "source": "the-stack-v2", "method_name": "enviar", "class_name": "BolsaRechazadaFragment", "index": 2542, "label": 1}
{"input": "@Override\n    protected RouteBuilder createRouteBuilder() throws Exception {\n        return new RouteBuilder() {\n            @Override\n            public void configure() throws Exception {\n                from(\"direct:start\").policy(new MyPolicy()).to(\"mock:a\").id(\"a\").to(\"mock:b\").id(\"b\");\n            }\n        };\n    }", "timestamp": "2023-08-10T14:15:19.145861Z", "repo_name": "Talend/apache-camel", "path": "/core/camel-core/src/test/java/org/apache/camel/issues/AdviceWithPolicyTest.java", "source": "the-stack-v2", "method_name": "createRouteBuilder", "class_name": "AdviceWithPolicyTest", "index": 2543, "label": 1}
{"input": "void addToTotalRows(boolean hasTotalRows, long totalRows) {\n        if (hasTotalRows) {\n            this.hasTotalRows = true;\n            this.totalRows += totalRows;\n        }\n    }", "timestamp": "2021-06-04T04:22:43.452703Z", "repo_name": "chakra-coder/glowroot", "path": "/common/src/main/java/org/glowroot/common/model/MutableQuery.java", "source": "the-stack-v2", "method_name": "addToTotalRows", "class_name": "MutableQuery", "index": 2544, "label": 1}
{"input": "@Given(\"^udemy homepage$\")\n\tpublic void udemy_homepage() throws Throwable {\n\t\t Driver.getInstance().get(ConfigurationReader.getProperty(\"url\"));\n\t\t    Driver.getInstance().manage().timeouts().implicitlyWait(20,TimeUnit.SECONDS);\n\t}", "timestamp": "2021-07-05T20:54:05.945114Z", "repo_name": "cgrkhrmn/UdemyMentoringMac", "path": "/src/test/java/com/udemy/uat/stepdefs/SignUpStepDefinitions.java", "source": "the-stack-v2", "method_name": "udemy_homepage", "class_name": "SignUpStepDefinitions", "index": 2545, "label": 1}
{"input": "public Criteria andVdef5NotEqualTo(String value) {\r\n            addCriterion(\"VDEF5 <>\", value, \"vdef5\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef5NotEqualTo", "class_name": "GeneratedCriteria", "index": 2546, "label": 1}
{"input": "static int getExpressionType(int tokenT) {\n\n        int type = expressionTypeMap.get(tokenT, -1);\n\n        if (type == -1) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Parser\");\n        }\n\n        return type;\n    }", "timestamp": "2023-09-03T10:33:34.963710Z", "repo_name": "svn2github/hsqldb", "path": "/base/branches/odbcproto1/src/org/hsqldb/ParserBase.java", "source": "the-stack-v2", "method_name": "getExpressionType", "class_name": "ParserBase", "index": 2547, "label": 1}
{"input": "@Override\n      public UpdateAvailability setPrettyPrint(java.lang.Boolean prettyPrint) {\n        return (UpdateAvailability) super.setPrettyPrint(prettyPrint);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setPrettyPrint", "class_name": "UpdateAvailability", "index": 2548, "label": 1}
{"input": "private void showMessage(String s) {\n        Snackbar.make(detailLayout, s, Snackbar.LENGTH_SHORT).show();\n    }", "timestamp": "2020-06-30T00:42:49.589440Z", "repo_name": "alumichael/Travelmantics", "path": "/app/src/main/java/com/mike4christ/travelmantics/DetailActivity.java", "source": "the-stack-v2", "method_name": "showMessage", "class_name": "DetailActivity", "index": 2549, "label": 1}
{"input": "private List<String> getUserNames(List<Contacts> users) {\n        List<String> contactNames = new ArrayList<>();\n        for (Contacts c : users) {\n            contactNames.add(c.getName());\n        }\n    return  contactNames;\n\n    }", "timestamp": "2023-06-05T01:01:48.196610Z", "repo_name": "Vonalex99/ZoomPlus", "path": "/app/src/main/java/com/example/zoom/db/ChatDialog.java", "source": "the-stack-v2", "method_name": "getUserNames", "class_name": "ChatDialog", "index": 2550, "label": 1}
{"input": "public static String md5(String plainText) {\n\t\tbyte[] secretBytes = null;\n\t\ttry {\n\t\t\tsecretBytes = MessageDigest.getInstance(\"md5\").digest(\n\t\t\t\t\tplainText.getBytes());\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tthrow new RuntimeException(\"û��md5����㷨��\");\n\t\t}\n\t\tString md5code = new BigInteger(1, secretBytes).toString(16);\n\t\t\n\t\tfor (int i = 0; i < 32 - md5code.length(); i++) {\n\t\t\tmd5code = \"0\" + md5code;\n\t\t}\n\t\treturn md5code;\n\t}", "timestamp": "2020-06-07T12:43:16.480024Z", "repo_name": "neetsan123/ex_mallshop_j2ee", "path": "/src/cn/probuing/utils/MD5Utils.java", "source": "the-stack-v2", "method_name": "md5", "class_name": "MD5Utils", "index": 2551, "label": 1}
{"input": "protected void executeStoreProcedure(Map params) {\n    \tinterfazPRYDAO.executeEnvioInformacionVentaProyeccionParcialCentro(params);\n\t}", "timestamp": "2021-01-11T03:38:06.084970Z", "repo_name": "cbazalar/PROYECTOS_PROPIOS", "path": "/nssicc/nssicc_service/src/main/java/biz/belcorp/ssicc/service/sisicc/impl/InterfazPRYEnviarInformacionVentaProyeccionParcialCentroServiceImpl.java", "source": "the-stack-v2", "method_name": "executeStoreProcedure", "class_name": "InterfazPRYEnviarInformacionVentaProyeccionParcialCentroServiceImpl", "index": 2552, "label": 1}
{"input": "@Override\n\tpublic void update(float delta) {\n\t\t\n\t\tif (strikeout>=3) {\n\t\t\tsetCurrentState(new GameOverState(playerScore));\n\t\t}\n\t\t\n\t\tupdateStars(delta);\n\t\t\n\t\tAssets.mermaidAnimation.update(delta);\n\t\tmermaid.update(delta);\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tupdateGamePieces(delta);\n\t\t\n\t\tcheckForCollisions();\n\t\t\n\t}", "timestamp": "2020-05-15T20:09:09.580480Z", "repo_name": "wcmaclean/home-repo", "path": "/android/experiments/SpaceMermaid/src/com/toymoon/game/state/PlayState.java", "source": "the-stack-v2", "method_name": "update", "class_name": "PlayState", "index": 2553, "label": 1}
{"input": "public JSONObject listTableCol(Integer tableId, String colName) {\n        JSONObject jo = new JSONObject();\n        List<Map> data = dao.listTableCol(tableId, colName);\n        jo.put(\"data\", data);\n        return jo;\n    }", "timestamp": "2023-08-03T07:40:42.128371Z", "repo_name": "cckmit/htd", "path": "/mes-service/src/main/java/com/skeqi/mes/service/dzb/market/TableColService.java", "source": "the-stack-v2", "method_name": "listTableCol", "class_name": "TableColService", "index": 2554, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByAmountIsInShouldWork() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        \n        defaultTransactionShouldBeFound(\"amount.in=\" + DEFAULT_AMOUNT + \",\" + UPDATED_AMOUNT);\n\n        \n        defaultTransactionShouldNotBeFound(\"amount.in=\" + UPDATED_AMOUNT);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByAmountIsInShouldWork", "class_name": "TransactionResourceIT", "index": 2555, "label": 1}
{"input": "@Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"{\");\n        if (getAutoScalingGroupName() != null) sb.append(\"AutoScalingGroupName: \" + getAutoScalingGroupName() + \",\");\n        if (getPolicyName() != null) sb.append(\"PolicyName: \" + getPolicyName() );\n        sb.append(\"}\");\n        return sb.toString();\n    }", "timestamp": "2021-01-20T20:36:53.719764Z", "repo_name": "lenadkn/java-sdk-test-2", "path": "/aws-java-sdk-autoscaling/src/main/java/com/amazonaws/services/autoscaling/model/DeletePolicyRequest.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "DeletePolicyRequest", "index": 2556, "label": 1}
{"input": "public static void logSetupTeardownCosts() {\n    long totalSetup = 0, totalTeardown = 0;\n    System.out.println(\"Setup costs\");\n    for (Map.Entry<String, Long> entry : TOTAL_SETUP_COST_MILLIS.entrySet()) {\n      System.out.println(String.format(\"  %s: %d ms\", entry.getKey(), entry.getValue()));\n      totalSetup += entry.getValue();\n    }\n    System.out.println(\"Teardown costs\");\n    for (Map.Entry<String, Long> entry : TOTAL_TEARDOWN_COST_MILLIS.entrySet()) {\n      System.out.println(String.format(\"  %s: %d ms\", entry.getKey(), entry.getValue()));\n      totalTeardown += entry.getValue();\n    }\n    System.out.println(String.format(\"Total overhead: setup %d ms, teardown %d ms\", totalSetup, totalTeardown));\n    System.out.println(String.format(\"##teamcity[buildStatisticValue key='ideaTests.totalSetupMs' value='%d']\", totalSetup));\n    System.out.println(String.format(\"##teamcity[buildStatisticValue key='ideaTests.totalTeardownMs' value='%d']\", totalTeardown));\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "logSetupTeardownCosts", "class_name": "UsefulTestCase", "index": 2557, "label": 1}
{"input": "public void testBug92944_CLASS_AND_INTERFACE() throws CoreException {\n\tthis.resultCollector.showRule();\n\tsetUpBug92944();\n\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();\n\tnew SearchEngine(this.workingCopies).searchAllTypeNames(\n\t\tnull,\n\t\tSearchPattern.R_EXACT_MATCH,\n\t\tnull,\n\t\tSearchPattern.R_PATTERN_MATCH, \n\t\tCLASS_AND_INTERFACE,\n\t\tgetJavaSearchWorkingCopiesScope(),\n\t\trequestor,\n\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,\n\t\tnull\n\t);\n\t\n\tassertSearchResults(\n\t\t\"Unexpected all type names\",\n\t\t\"b92944.B92944\\n\" +\n\t\t\"b92944.B92944_I\",  \n\t\trequestor);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug92944_CLASS_AND_INTERFACE", "class_name": "JavaSearchBugsTests", "index": 2558, "label": 1}
{"input": "public static TvDBManager getInstance(Context context) {\n        if (mDbManager == null) {\n            mDbManager = new TvDBManager(context);\n        }\n        return mDbManager;\n    }", "timestamp": "2023-03-16T19:59:41.941474Z", "repo_name": "windxixi/test", "path": "/CODE/android/device/customer/HeranSMARTTV/apps/TV_APK/HTvPlayer/src/com/eostek/tv/player/business/TvDBManager.java", "source": "the-stack-v2", "method_name": "getInstance", "class_name": "TvDBManager", "index": 2559, "label": 1}
{"input": "public Flux<InventoryEvent> getEvents(String inventoryId) {\n      return   Flux.<InventoryEvent>generate(sink -> sink.next(new InventoryEvent(inventoryId, \"\", 1))\n                ).delayElements(Duration.ofSeconds(1));\n\n       \n    }", "timestamp": "2022-11-29T23:00:36.809824Z", "repo_name": "ciscld/inventoryservice-1", "path": "/src/main/java/com/infosys/api/inventory/InventoryService.java", "source": "the-stack-v2", "method_name": "getEvents", "class_name": "InventoryService", "index": 2560, "label": 1}
{"input": "public Criteria andUserIdBetween(Integer value1, Integer value2) {\n            addCriterion(\"user_id between\", value1, value2, \"userId\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andUserIdBetween", "class_name": "GeneratedCriteria", "index": 2561, "label": 1}
{"input": "@Override public boolean equals(Object obj) {\n      return obj == this\n          || obj instanceof Location\n          && x == ((Location) obj).x\n          && y == ((Location) obj).y;\n    }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "Location", "index": 2562, "label": 1}
{"input": "private void assertDrugResponseEquals(DrugResponse expected, DrugResponse actual) {\r\n        assertEquals(expected.din, actual.din);\r\n        assertEquals(expected.brandName, actual.brandName);\r\n        assertEquals(expected.description, actual.description);\r\n    }", "timestamp": "2021-01-15T12:19:59.436485Z", "repo_name": "gariepyalex/ift-6002-workspace", "path": "/src/test/java/ca/ulaval/ift6002/m2/application/assemblers/DrugAssemblerTest.java", "source": "the-stack-v2", "method_name": "assertDrugResponseEquals", "class_name": "DrugAssemblerTest", "index": 2563, "label": 1}
{"input": "public void SetEnableOnClickTextLeft(boolean _value) { \n\t\taadapter.SetEnableOnClickTextLeft2(_value);\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "SetEnableOnClickTextLeft", "class_name": "jListView", "index": 2564, "label": 1}
{"input": "private AddressedMessageCreationDTO givenAMessageCreationDTO() {\n\t\tAddressedMessageCreationDTO addressedMessageCreationDTO = new AddressedMessageCreationDTO();\n\t\taddressedMessageCreationDTO.setText(\"Bla\");\n\t\taddressedMessageCreationDTO.setSenderId(1l);\n\t\taddressedMessageCreationDTO.setReceiverId(2l);\n\t\taddressedMessageCreationDTO.setApplication(\"A2\");\n\t\treturn addressedMessageCreationDTO;\n\t}", "timestamp": "2016-09-13T06:44:23.483434Z", "repo_name": "LucianoBernal/feeds_api", "path": "/src/test/java/com/etermax/conversations/test/integration/SyncMessagesTest.java", "source": "the-stack-v2", "method_name": "givenAMessageCreationDTO", "class_name": "SyncMessagesTest", "index": 2565, "label": 1}
{"input": "public static ToolBar createToolBar(Action... actions) {\n\t\treturn new ToolBar(createToolBarButtons(actions));\n\t}", "timestamp": "2021-01-17T15:58:03.152382Z", "repo_name": "andreas-oberheim/universal-markup-editor", "path": "/src/main/java/org/markdownwriterfx/util/ActionUtils.java", "source": "the-stack-v2", "method_name": "createToolBar", "class_name": "ActionUtils", "index": 2566, "label": 1}
{"input": "public Criteria andVdef1NotLike(String value) {\r\n            addCriterion(\"VDEF1 not like\", value, \"vdef1\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef1NotLike", "class_name": "GeneratedCriteria", "index": 2567, "label": 1}
{"input": "public List<VariableInitializerContext> variableInitializer() {\n\t\t\treturn getRuleContexts(VariableInitializerContext.class);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "variableInitializer", "class_name": "ArrayInitializerContext", "index": 2568, "label": 1}
{"input": "@Before(\"allPointcut()\")\n\tpublic void beforeLog(JoinPoint joinPoint) {\n\t\tString method = joinPoint.getSignature().getName();\n\t\tObject[] args = joinPoint.getArgs();\n\n\t}", "timestamp": "2023-03-20T06:58:19.257439Z", "repo_name": "woongpark-9/springExam2", "path": "/myboard/src/main/java/tommy/spring/web/common/BeforeAdvice.java", "source": "the-stack-v2", "method_name": "beforeLog", "class_name": "BeforeAdvice", "index": 2569, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n\tpublic Leave get(String id) {\n\t\tLeave leave = leaveDao.get(id);\n\t\tMap<String,Object> variables=null;\n\t\tHistoricProcessInstance historicProcessInstance = historyService.createHistoricProcessInstanceQuery().processInstanceId(leave.getProcessInstanceId()).singleResult();\n\t\tif(historicProcessInstance!=null) {\n\t\t\tvariables = Collections3.extractToMap(historyService.createHistoricVariableInstanceQuery().processInstanceId(historicProcessInstance.getId()).list(), \"variableName\", \"value\");\n\t\t} else {\n\t\t\tvariables = runtimeService.getVariables(runtimeService.createProcessInstanceQuery().processInstanceId(leave.getProcessInstanceId()).active().singleResult().getId());\n\t\t}\n\t\tleave.setVariables(variables);\n\t\treturn leave;\n\t}", "timestamp": "2023-09-04T07:17:36.863111Z", "repo_name": "shouxinjk/ilife-admin", "path": "/src/main/java/com/pcitech/iLife/modules/oa/service/LeaveService.java", "source": "the-stack-v2", "method_name": "get", "class_name": "LeaveService", "index": 2570, "label": 1}
{"input": "@Test\n    public void testResetKeyguardShowingLockOneHandedDisabled() {\n        mSpiedTransitionState.setState(STATE_NONE);\n        mSpiedOneHandedController.setOneHandedEnabled(true);\n        mSpiedOneHandedController.setLockedDisabled(false , false );\n        mSpiedOneHandedController.startOneHanded();\n\n        verify(mMockDisplayAreaOrganizer).scheduleOffset(anyInt(), anyInt());\n    }", "timestamp": "2023-05-12T00:27:34.162348Z", "repo_name": "Flamingo-OS/frameworks_base", "path": "/libs/WindowManager/Shell/tests/unittest/src/com/android/wm/shell/onehanded/OneHandedControllerTest.java", "source": "the-stack-v2", "method_name": "testResetKeyguardShowingLockOneHandedDisabled", "class_name": "OneHandedControllerTest", "index": 2571, "label": 1}
{"input": "public void setHint(CharSequence hint)\n    {\n        this.hint = hint.toString();\n        refreshUI();\n    }", "timestamp": "2020-06-26T11:11:13.172251Z", "repo_name": "fly7632785/android-proxy", "path": "/proxy-settings/src/main/java/com/lechucksoftware/proxy/proxysettings/ui/components/InputField.java", "source": "the-stack-v2", "method_name": "setHint", "class_name": "InputField", "index": 2572, "label": 1}
{"input": "public ServletRegistration.Dynamic dynamicServletAdded(Wrapper wrapper) {\n        Servlet s = wrapper.getServlet();\n        if (s != null && createdServlets.contains(s)) {\n            \n            wrapper.setServletSecurityAnnotationScanRequired(true);\n        }\n        return new ApplicationServletRegistration(wrapper, this);\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "dynamicServletAdded", "class_name": "StandardContext", "index": 2573, "label": 1}
{"input": "public void testCharArrayAsObject() {\n        char[] obj = new char[2];\n        assertEquals((17 * 37) * 37 , new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());\n        obj[0] = (char) 5;\n        assertEquals((17 * 37 + 5) * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());\n        obj[1] = (char) 6;\n        assertEquals( (17 * 37 + 5) * 37 + 6, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());\n    }", "timestamp": "2022-02-13T19:44:43.869060Z", "repo_name": "SpoonLabs/nopol-experiments", "path": "/dataset/cl1/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java", "source": "the-stack-v2", "method_name": "testCharArrayAsObject", "class_name": "HashCodeBuilderTest", "index": 2574, "label": 1}
{"input": "public void testBug130390_CamelCaseSamePartCount() throws CoreException {\n\tsetUpBug130390();\n\tsearch(\"NuPoEx\", TYPE, DECLARATIONS, SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);\n\tassertSearchResults(\n\t\t\"src/b130390/NullPointerException.java b130390.NullPointerException [NullPointerException] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug130390_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 2575, "label": 1}
{"input": "private static void displayCompletionMessage(int countCorrect) {\n\ndouble percent = ((double) countCorrect / 10.0) * 100.0;\n\nSystem.out.println(\"\\nYou Scored: \" + percent + \"%\");\n\nif (percent < 75)\n\nSystem.out.println(\"Please ask your teacher for extra help.\");\n\nelse\n\nSystem.out.println(\"Congratulations, you are ready to go to next level!\");\n\n}", "timestamp": "2021-01-15T06:45:38.681176Z", "repo_name": "aryanjharwal/jharwal_assignment3", "path": "/jharwal_problem1/src/jharwal_problem1/CAI5.java", "source": "the-stack-v2", "method_name": "displayCompletionMessage", "class_name": "CAI5", "index": 2576, "label": 1}
{"input": "@Before\n    public void initTest() {\n        auditEventRepository.deleteAll();\n        auditEvent = new PersistentAuditEvent();\n        auditEvent.setAuditEventType(SAMPLE_TYPE);\n        auditEvent.setPrincipal(SAMPLE_PRINCIPAL);\n        auditEvent.setAuditEventDate(SAMPLE_TIMESTAMP);\n    }", "timestamp": "2021-04-28T13:34:14.329505Z", "repo_name": "scarabetta/jhipsterSample2", "path": "/src/test/java/io/github/jhipster/application/web/rest/AuditResourceIntTest.java", "source": "the-stack-v2", "method_name": "initTest", "class_name": "AuditResourceIntTest", "index": 2577, "label": 1}
{"input": "@Override\n\tpublic void onApplicationEvent(ContextRefreshedEvent event) {\n\t\tif (event.getApplicationContext() == this.applicationContext) {\n\t\t\tManagementServerPort managementPort = ManagementServerPort\n\t\t\t\t\t.get(this.applicationContext);\n\t\t\tif (managementPort == ManagementServerPort.DIFFERENT\n\t\t\t\t\t&& this.applicationContext instanceof WebApplicationContext) {\n\t\t\t\tcreateChildManagementContext();\n\t\t\t}\n\t\t\tif (managementPort == ManagementServerPort.SAME\n\t\t\t\t\t&& this.applicationContext.getEnvironment() instanceof ConfigurableEnvironment) {\n\t\t\t\taddLocalManagementPortPropertyAlias((ConfigurableEnvironment) this.applicationContext\n\t\t\t\t\t\t.getEnvironment());\n\t\t\t}\n\t\t}\n\t}", "timestamp": "2021-01-18T14:54:31.844603Z", "repo_name": "Zoltin/spring-boot", "path": "/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java", "source": "the-stack-v2", "method_name": "onApplicationEvent", "class_name": "EndpointWebMvcAutoConfiguration", "index": 2578, "label": 1}
{"input": "@Override\n    public String toString() {\n        return \"SensorData{\" +\n                \"ID='\" + ID + '\\'' +\n                \", sensorID='\" + sensorID + '\\'' +\n                \", type='\" + type + '\\'' +\n                \", timestamp=\" + timestamp +\n                \", value=\" + value +\n                \", locationCode=\" + locationCode +\n                \"ID='\"0;\n    }", "timestamp": "2021-01-18T23:11:28.666205Z", "repo_name": "gulyasm/storm-workshop", "path": "/task3/src/main/java/hu/gulyasm/storm/SensorData.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "SensorData", "index": 2579, "label": 1}
{"input": "public void seek(int position) throws IllegalStateException, OperationNotSupportedException {\n        \n        pendingOperations.add(new SeekRunnable(position));\n        cancelDeferredStop();\n        ensurePullAndPushRunning();\n    }", "timestamp": "2023-06-22T03:27:38.095086Z", "repo_name": "guyueyuqi/red5-server-common", "path": "/src/main/java/org/red5/server/stream/PlayEngine.java", "source": "the-stack-v2", "method_name": "seek", "class_name": "PlayEngine", "index": 2580, "label": 1}
{"input": "public final void setApprovalStatus(int approvalStatus) {\n        this.approvalStatus = approvalStatus;\n    }", "timestamp": "2016-09-15T02:06:20.854798Z", "repo_name": "abrysov/Doctor", "path": "/src/com/evs/doctor/model/Publication.java", "source": "the-stack-v2", "method_name": "setApprovalStatus", "class_name": "Publication", "index": 2581, "label": 1}
{"input": "public void testBug124469g() throws CoreException {\n\tIType type = getClassFile(\"JavaSearchBugs\", \"lib/b124469.jar\", \"pack\", \"E.class\").getType();\n\tIField field = type.getField(\"CM\");\n\tsearch(field, REFERENCES);\n\tassertSearchResults(\n\t\t\"lib/b124469.jar void test.M.foo() EXACT_MATCH\\n\" +\n\t\t\"lib/b124469.jar void test.M.foo() EXACT_MATCH\\n\" +\n\t\t\"lib/b124469.jar void test.M.foo() EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug124469g", "class_name": "JavaSearchBugsTests", "index": 2582, "label": 1}
{"input": "public void DispatchOnDrawItemTextColor(boolean _value) {\n\t\taadapter.SetDispatchOnDrawItemTextColor(_value);\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "DispatchOnDrawItemTextColor", "class_name": "jListView", "index": 2583, "label": 1}
{"input": "public void personsWithOneOrder() throws SQLException{\n        ResultSet rs;\n        SQLStatement = cntDB.createStatement();\n            \n        rs = SQLStatement.executeQuery(String.format(\n                \"SELECT p.first_name, p.last_name, p.person_id,o.person_id, o.order_no\\n\" +\n                \"FROM person p, `order` o \\n\" +\n                \"WHERE o.person_id=p.person_id \\n\" + \n                \"GROUP BY p.first_name\"\n                ));\n            \n        System.out.println(\"User who have one order or more\");\n        System.out.println(\"First_Name \\t| Last_Name \\t\\t| Order_No\");\n            \n            \n        while(rs.next()){\n            String fName =rs.getString(\"first_name\");\n            String lName =rs.getString(\"last_name\");\n            int orderNo = rs.getInt(\"order_no\");\n                \n            System.out.printf(\"%s \\t\\t| %s \\t\\t| %d \\n\", fName, lName, orderNo);\n                \n        }\n    }", "timestamp": "2021-01-19T08:49:22.515995Z", "repo_name": "JingluYan/AccessDB", "path": "/src/DatabaseAcc.java", "source": "the-stack-v2", "method_name": "personsWithOneOrder", "class_name": "DatabaseAcc", "index": 2584, "label": 1}
{"input": "public static String encode(String s) {\r\n\t\tStringBuffer sbuf = new StringBuffer();\r\n\t\tint len = s.length();\r\n\t\tfor (int i = 0; i < len; i++) {\r\n\t\t\tint ch = s.charAt(i);\r\n\t\t\tif ('A' <= ch && ch <= 'Z') { \n\t\t\t\tsbuf.append((char) ch);\r\n\t\t\t} else if ('a' <= ch && ch <= 'z') { \n\t\t\t\tsbuf.append((char) ch);\r\n\t\t\t} else if ('0' <= ch && ch <= '9') { \n\t\t\t\tsbuf.append((char) ch);\r\n\t\t\t} else if (ch == 'Z'2) { \n\t\t\t\tsbuf.append('Z'2);\r\n\t\t\t} else if (ch <= 0x007f) { \n\t\t\t\tsbuf.append(hex[ch]);\r\n\t\t\t} else if (ch <= 0x07FF) { \n\t\t\t\tsbuf.append(hex[0xc0 | (ch >> 6)]);\r\n\t\t\t\tsbuf.append(hex[0x80 | (ch & 0x3F)]);\r\n\t\t\t} else { \n\t\t\t\tsbuf.append(hex[0xe0 | (ch >> 12)]);\r\n\t\t\t\tsbuf.append(hex[0x80 | ((ch >> 6) & 0x3F)]);\r\n\t\t\t\tsbuf.append(hex[0x80 | (ch & 0x3F)]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sbuf.toString();\r\n\t}", "timestamp": "2020-04-08T01:45:47.076256Z", "repo_name": "ianzavitz/blackberry-apps", "path": "/myTasks/src/com/zavitz/mytasks/functions/Encode.java", "source": "the-stack-v2", "method_name": "encode", "class_name": "Encode", "index": 2585, "label": 1}
{"input": "@Override\n\tprotected boolean validate(Field field, Object dataObject)\n\t{\n\t\tboolean valid = true;\n\n\t\tPattern pattern = field.getAnnotation(Pattern.class);\n\t\tif (pattern != null) {\n\t\t\ttry {\n\t\t\t\tString value = BeanUtils.getProperty(dataObject, field.getName());\n\t\t\t\t\n\t\t\t\tif (value != null) {\n\t\t\t\t\tvalid = value.matches(pattern.regexp());\n\t\t\t\t}\n\t\t\t} catch (IllegalAccessException | InvocationTargetException | NoSuchMethodException ex) {\n\t\t\t\tthrow new OpenStorefrontRuntimeException(\"Unexpected error occur trying to get value from object.\", ex);\n\t\t\t}\n\t\t}\n\t\treturn valid;\n\t}", "timestamp": "2021-01-18T06:43:49.658904Z", "repo_name": "Razaltan/openstorefront", "path": "/server/openstorefront/openstorefront-core/model/src/main/java/edu/usu/sdl/openstorefront/validation/PatternRule.java", "source": "the-stack-v2", "method_name": "validate", "class_name": "PatternRule", "index": 2586, "label": 1}
{"input": "@Override\n    public void onRewardedVideoAdLeftApplication() {\n        Log.i(TAG,\"Video rewarded but left..\");\n\n    }", "timestamp": "2020-03-10T06:05:11.447740Z", "repo_name": "beenham/PixelDungeon", "path": "/android/src/net/team11/pixeldungeon/playservices/adlisteners/RewardAdListener.java", "source": "the-stack-v2", "method_name": "onRewardedVideoAdLeftApplication", "class_name": "RewardAdListener", "index": 2587, "label": 1}
{"input": "private String fileLabel(DetectionUnit detectionUnit) {\n\t\tString absolutePath = detectionUnit.getSourceFile().getAbsolutePath();\n\t\tString label = absolutePath.substring(absolutePath\n\t\t\t\t.lastIndexOf(File.separator) + 1);\n\t\treturn label.substring(0, label.indexOf(\"_\"));\n\t}", "timestamp": "2020-06-04T01:09:54.042259Z", "repo_name": "gocko/licca", "path": "/ssqsa_2.0/CloneUI/src/mainFrame/bottomPanel/SimilarityTextPane.java", "source": "the-stack-v2", "method_name": "fileLabel", "class_name": "SimilarityTextPane", "index": 2588, "label": 1}
{"input": "@Test public void testReduceCompositeCountNotNullable() {\n    CalciteAssert.hr()\n        .query(\"select\\n\"\n            + \" count(\\\"deptno\\\", \\\"commission\\\", \\\"commission\\\" + 1) as cs\\n\"\n            + \"from \\\"hr\\\".\\\"emps\\\"\")\n        .explainContains(\"\"\n            + \"EnumerableAggregate(group=[{}], CS=[COUNT($0, $1)])\\n\"\n            + \"  EnumerableCalc(expr#0..4=[{inputs}], expr#5=[1], expr#6=[+($t4, $t5)], commission=[$t4], $f2=[$t6])\\n\"\n            + \"    EnumerableTableScan(table=[[hr, emps]])\")\n        .returns(\"CS=3\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testReduceCompositeCountNotNullable", "class_name": "JdbcTest", "index": 2589, "label": 1}
{"input": "@Override\n    public void setSessionCookiePathUsesTrailingSlash(\n            boolean sessionCookiePathUsesTrailingSlash) {\n        this.sessionCookiePathUsesTrailingSlash =\n            sessionCookiePathUsesTrailingSlash;\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setSessionCookiePathUsesTrailingSlash", "class_name": "StandardContext", "index": 2590, "label": 1}
{"input": "@java.lang.Override\n    public Builder mergeFrom(\n        com.google.protobuf.CodedInputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      com.google.cloud.securitycenter.v1.Cvssv3 parsedMessage = null;\n      try {\n        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);\n      } catch (com.google.protobuf.InvalidProtocolBufferException e) {\n        parsedMessage = (com.google.cloud.securitycenter.v1.Cvssv3) e.getUnfinishedMessage();\n        throw e.unwrapIOException();\n      } finally {\n        if (parsedMessage != null) {\n          mergeFrom(parsedMessage);\n        }\n      }\n      return this;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "mergeFrom", "class_name": "Builder", "index": 2591, "label": 1}
{"input": "private void resetLoaderConnection() throws SQLException {\r\n        jOOQAbstractTest.connection.rollback();\r\n        jOOQAbstractTest.connection.close();\r\n        jOOQAbstractTest.connection = null;\r\n        jOOQAbstractTest.connectionInitialised = false;\r\n        jOOQAbstractTest.connection = delegate.getConnection();\r\n        jOOQAbstractTest.connection.setAutoCommit(false);\r\n    }", "timestamp": "2021-01-18T09:23:05.943682Z", "repo_name": "delostilos/jOOQ", "path": "/jOOQ-test/src/org/jooq/test/_/testcases/LoaderTests.java", "source": "the-stack-v2", "method_name": "resetLoaderConnection", "class_name": "LoaderTests", "index": 2592, "label": 1}
{"input": "@Override\n      public Insert setKey(java.lang.String key) {\n        return (Insert) super.setKey(key);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setKey", "class_name": "Insert", "index": 2593, "label": 1}
{"input": "public Integer getDefaultOnNull(Integer value, Integer defaultValue)\r\n   {\r\n      return (value == null ? defaultValue : value);\r\n   }", "timestamp": "2023-08-17T13:13:07.711932Z", "repo_name": "heekye/ProjectLibre", "path": "/projectlibre_exchange/src/net/sf/mpxj/mpd/MPD9AbstractReader.java", "source": "the-stack-v2", "method_name": "getDefaultOnNull", "class_name": "MPD9AbstractReader", "index": 2594, "label": 1}
{"input": "public static void drawCircle(int x, int y, float radius, int color)\n  {\n    float alpha = (color >> 24 & 0xFF) / 255.0F;\n    float red = (color >> 16 & 0xFF) / 255.0F;\n    float green = (color >> 8 & 0xFF) / 255.0F;\n    float blue = (color & 0xFF) / 255.0F;\n    GL11.glColor4f(red, green, blue, alpha);\n    GL11.glBegin(9);\n    for (int i = 0; i <= 360; i++) {\n      GL11.glVertex2d(x + Math.sin(i * 3.141526D / 180.0D) * radius, y + Math.cos(i * 3.141526D / 180.0D) * radius);\n    }\n    GL11.glEnd();\n  }", "timestamp": "2023-07-23T11:39:57.368099Z", "repo_name": "SuperS123/SpicyClient", "path": "/minecraft/info/spicyclient/ui/Jello/RenderSystem.java", "source": "the-stack-v2", "method_name": "drawCircle", "class_name": "RenderSystem", "index": 2595, "label": 1}
{"input": "public void testBug84100c() throws CoreException {\n\tthis.resultCollector.showRule();\n\tsetUpBug84100();\n\tIMethod method = selectMethod(this.workingCopies[0], \"foo\", 3);\n\tsearch(method, REFERENCES);\n\tassertSearchResults(\n\t\t\"src/b84100/Z.java void b84100.Z.foo() [foo(\\\"\\\", \\\"\\\")] EXACT_MATCH\\n\" +\n\t\t\"src/b84100/Z.java void b84100.Z.foo() [foo(\\\"\\\", \\\"\\\", null)] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug84100c", "class_name": "JavaSearchBugsTests", "index": 2596, "label": 1}
{"input": "public static void main(String[] args) {\n\n\t\tprize p = generateAward();\n\t\tSystem.out.println(p.getPrize() + new SimpleDateFormat(\"yyyyMMdd\").format(new Date()));\n\t}", "timestamp": "2021-02-19T09:24:22.485699Z", "repo_name": "simon-zm/Jalor", "path": "/src/com/jalor/prize/test.java", "source": "the-stack-v2", "method_name": "main", "class_name": "test", "index": 2597, "label": 1}
{"input": "@Test(expected = IllegalArgumentException.class)\n\tpublic void createNewCodeInfoWithNull() {\n\t\tnew CodeInfo(null);\n\t\tAssert.fail();\n\t}", "timestamp": "2023-08-02T11:10:39.436416Z", "repo_name": "lightningbug-io/lightningbug-maven-plugin", "path": "/src/test/java/io/lightningbug/domain/CodeInfoTest.java", "source": "the-stack-v2", "method_name": "createNewCodeInfoWithNull", "class_name": "CodeInfoTest", "index": 2598, "label": 1}
{"input": "@Override\n    public SQLServerDatabase configureObject(DBRProgressMonitor monitor, Object container, SQLServerDatabase database) {\n        return UITask.run(() -> {\n            SQLServerCreateDatabaseDialog dialog = new SQLServerCreateDatabaseDialog(UIUtils.getActiveWorkbenchShell(), database.getDataSource());\n\n            if (dialog.open() != IDialogConstants.OK_ID) {\n                return null;\n            }\n\n            database.setName(dialog.getName());\n            return database;\n        });\n    }", "timestamp": "2021-12-03T21:54:33.813111Z", "repo_name": "ChrisYuan/dbeaver", "path": "/plugins/org.jkiss.dbeaver.ext.mssql.ui/src/org/jkiss/dbeaver/ext/mssql/ui/config/SQLServerDatabaseConfigurator.java", "source": "the-stack-v2", "method_name": "configureObject", "class_name": "SQLServerDatabaseConfigurator", "index": 2599, "label": 1}
{"input": "private FontBasisRecord createFontBasisRecord2()\n    {\n        FontBasisRecord r = createFontBasisRecord1();\n        r.setIndexToFontTable((short)6);\n        return r;\n    }", "timestamp": "2023-01-11T02:29:36.328694Z", "repo_name": "DXYyang/SDP", "path": "/sourcedata/poi-REL_3_0/src/scratchpad/src/org/apache/poi/hssf/usermodel/HSSFChart.java", "source": "the-stack-v2", "method_name": "createFontBasisRecord2", "class_name": "HSSFChart", "index": 2600, "label": 1}
{"input": "public Score addScore(int aScore, User aUser, Block223 aBlock223)\n  {\n    return new Score(aScore, aUser, this, aBlock223);\n  }", "timestamp": "2020-09-27T06:19:22.075701Z", "repo_name": "mustafain117/Block-Breaker-Game", "path": "/Block223v2/src/ca/mcgill/ecse223/block/model/Game.java", "source": "the-stack-v2", "method_name": "addScore", "class_name": "Game", "index": 2601, "label": 1}
{"input": "public void set_allocationPolicy(String _allocationPolicy) {\n\t\tthis._allocationPolicy = _allocationPolicy;\n\t}", "timestamp": "2020-03-24T18:57:41.155720Z", "repo_name": "gabrielecastellano/vinea", "path": "/src/vinea/pnode/Pnode.java", "source": "the-stack-v2", "method_name": "set_allocationPolicy", "class_name": "Pnode", "index": 2602, "label": 1}
{"input": "@Override\r\n\tpublic void draw(Graphics g) {\r\n\t\tlevelUp.drawLevelBar(g);\r\n\t\t\r\n\t\t\n\t\tfor (int i = 0; i < Game.player.getHealth(); i++) {\r\n\t\t\tg.setColor(Color.RED);\r\n\t\t\tg.fillRect(i * 50 + 15, 20, 40, 20);\r\n\t\t}\r\n\t\t\r\n\t\t\n\t\tif (Game.player.getHealth() <= 0) {\r\n\t\t\tg.setFont(font);\r\n\t\t\tg.setColor(Color.WHITE);\r\n\t\t\tg.drawString(\"GAME OVER\", 85, 100);\r\n\t\t}\r\n\t}", "timestamp": "2021-09-06T22:03:14.592865Z", "repo_name": "KyleKoschak/javagame", "path": "/ClassGame/src/com/teamgthree/gamestate/PlayingState.java", "source": "the-stack-v2", "method_name": "draw", "class_name": "PlayingState", "index": 2603, "label": 1}
{"input": "private static int multiply(int first, int second, int i) {\n\nSystem.out.println(\"Q.\"+i+\" how much is \" + first + \" X \" + second + \"?\");\n\nint correctAns = first * second;\n\nreturn correctAns;\n\n}", "timestamp": "2021-01-15T06:45:38.681176Z", "repo_name": "aryanjharwal/jharwal_assignment3", "path": "/jharwal_problem1/src/jharwal_problem1/CAI5.java", "source": "the-stack-v2", "method_name": "multiply", "class_name": "CAI5", "index": 2604, "label": 1}
{"input": "@Override\r\n    public int addClazz(Clazz clazz) {\r\n        int n = 0;\r\n        try {\r\n            n = DaoFActory.getClazzDaoInstance().insertClazz(clazz);\r\n        } catch (SQLException throwables) {\r\n            System.err.println(\"新增班级出现异常\");\r\n        }\r\n        return n;\r\n    }", "timestamp": "2023-01-29T17:02:53.210244Z", "repo_name": "shiyilinliran/Student_manager", "path": "/student-manage/src/main/java/com/syl/sm/service/impl/ClazzServiceImpl.java", "source": "the-stack-v2", "method_name": "addClazz", "class_name": "ClazzServiceImpl", "index": 2605, "label": 1}
{"input": "@SuppressWarnings(\"unchecked\")\n    public void updateDirtyRecords()\n    {\n        if (getProperties().isControlBlock() || getBlockService() == null || getProperties().isMirrorChild())\n        {\n            \n            \n            return;\n        }\n\n        @SuppressWarnings(\"rawtypes\")\n        List entityList = new ArrayList();\n        for (EJDataRecord record : getUpdatedRecords())\n        {\n            entityList.add(record.getServicePojo());\n        }\n\n        \n        if (entityList.size() > 0)\n        {\n            getBlockService().executeUpdate(new EJForm(_block.getForm()), entityList);\n        }\n    }", "timestamp": "2023-02-18T11:13:58.949927Z", "repo_name": "entirej/core", "path": "/entirej-core/src/org/entirej/framework/core/data/controllers/EJEditableBlockController.java", "source": "the-stack-v2", "method_name": "updateDirtyRecords", "class_name": "EJEditableBlockController", "index": 2606, "label": 1}
{"input": "public static int getNetworkClass(Context context) {\n        if (context == null) {\n            return 0;\n        }\n        int networkClass;\n        ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService(\"connectivity\");\n        if (connectivityManager != null) {\n            NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();\n            if (activeNetworkInfo != null && activeNetworkInfo.isConnected()) {\n                switch (activeNetworkInfo.getType()) {\n                    case 0:\n                        networkClass = getNetworkClass(activeNetworkInfo.getSubtype());\n                        break;\n                    default:\n                        networkClass = 0;\n                        break;\n                }\n                return networkClass;\n            }\n        }\n        networkClass = 0;\n        return networkClass;\n    }", "timestamp": "2022-01-27T12:48:43.446804Z", "repo_name": "jambestwick/HackWechat", "path": "/app/src/main/java/com/tencent/qqvideo/proxy/common/VcSystemInfo.java", "source": "the-stack-v2", "method_name": "getNetworkClass", "class_name": "VcSystemInfo", "index": 2607, "label": 1}
{"input": "@Override\n    public void onConferenceWillJoin(Map<String, Object> data) {\n        JitsiMeetLogger.i(\"Conference will join: \" + data);\n    }", "timestamp": "2023-02-17T05:06:30.003456Z", "repo_name": "amit27592/jitsi-meet", "path": "/android/sdk/src/main/java/org/jitsi/meet/sdk/JitsiMeetActivity.java", "source": "the-stack-v2", "method_name": "onConferenceWillJoin", "class_name": "JitsiMeetActivity", "index": 2608, "label": 1}
{"input": "public void set_nodeStressBeforeThisSliceRequest(\n\t\t\tdouble _nodeStressBeforeThisSliceRequest) {\n\t\tthis._nodeStressBeforeThisSliceRequest = _nodeStressBeforeThisSliceRequest;\n\t}", "timestamp": "2020-03-24T18:57:41.155720Z", "repo_name": "gabrielecastellano/vinea", "path": "/src/vinea/pnode/Pnode.java", "source": "the-stack-v2", "method_name": "set_nodeStressBeforeThisSliceRequest", "class_name": "Pnode", "index": 2609, "label": 1}
{"input": "public static void main(String[] args) {\n\n\t\tSystem.out.println(LetterUtil.getFirstLetter(\"源码时代\"));\n\t\tString address = \"(金浜小区)栖山路1689弄\";\n\t\t System.out.println(\"获取拼音首字母：\" + LetterUtil.getAllFirstLetter(address));\n\t}", "timestamp": "2022-07-05T04:13:39.059021Z", "repo_name": "jackyang92/hrm_parent", "path": "/hrm_basic_parent/hrm_basic_util/src/main/java/com/ymy/hrm/util/LetterUtil.java", "source": "the-stack-v2", "method_name": "main", "class_name": "LetterUtil", "index": 2610, "label": 1}
{"input": "public ExecuteAllChildNodeAction withParameters(Long execId, Long nodeId){\n        this.execId = execId;\n        this.nodeId = nodeId;\n        return this;\n    }", "timestamp": "2020-05-30T07:19:30.760628Z", "repo_name": "kanhaiyaagarwal/Dropwizard-jpa-guice-hibernate-common", "path": "/src/main/java/com/boomerang/workflowconnector/internal/actions/execution/ExecuteAllChildNodeAction.java", "source": "the-stack-v2", "method_name": "withParameters", "class_name": "ExecuteAllChildNodeAction", "index": 2611, "label": 1}
{"input": "@Test\n    public void updateNonExistingEntryCategory() throws Exception {\n        int databaseSizeBeforeUpdate = entryCategoryRepository.findAll().size();\n\n        \n\n        \n        restEntryCategoryMockMvc.perform(put(\"/api/entry-categories\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(entryCategory)))\n            .andExpect(status().isCreated());\n\n        \n        List<EntryCategory> entryCategoryList = entryCategoryRepository.findAll();\n        assertThat(entryCategoryList).hasSize(databaseSizeBeforeUpdate + 1);\n    }", "timestamp": "2021-06-26T15:26:23.855027Z", "repo_name": "stupant/timesheet", "path": "/src/test/java/com/wbs/web/rest/EntryCategoryResourceIntTest.java", "source": "the-stack-v2", "method_name": "updateNonExistingEntryCategory", "class_name": "EntryCategoryResourceIntTest", "index": 2612, "label": 1}
{"input": "public void setCover_media_file(String cover_media_file) {\n            this.cover_media_file = cover_media_file;\n        }", "timestamp": "2021-01-13T07:12:09.987566Z", "repo_name": "acmlgogo/one_kotlin", "path": "/app/src/main/java/com/storm/cftest/base/Question.java", "source": "the-stack-v2", "method_name": "setCover_media_file", "class_name": "DataBean", "index": 2613, "label": 1}
{"input": "@Override\n    public ResponseEntity autoDeploy(Long stageRecordId, Long taskRecordId) {\n        return new ResponseEntity(\"error.auto.deploy\", HttpStatus.INTERNAL_SERVER_ERROR);\n    }", "timestamp": "2022-11-29T11:17:33.470835Z", "repo_name": "IamTenKing/workflow-service", "path": "/src/main/java/io/choerodon/workflow/infra/feign/fallback/DevopsServiceClientFallBack.java", "source": "the-stack-v2", "method_name": "autoDeploy", "class_name": "DevopsServiceClientFallBack", "index": 2614, "label": 1}
{"input": "public Criteria andIdNotIn(List<String> values) {\r\n            addCriterion(\"id not in\", values, \"id\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andIdNotIn", "class_name": "GeneratedCriteria", "index": 2615, "label": 1}
{"input": "public void setMoneyReceivePerson(String moneyReceivePerson) {\n        this.moneyReceivePerson = moneyReceivePerson;\n    }", "timestamp": "2021-01-10T07:10:13.758215Z", "repo_name": "nieshr/xjr", "path": "/src/main/java/com/ynyes/kjxjr/entity/TdOrder.java", "source": "the-stack-v2", "method_name": "setMoneyReceivePerson", "class_name": "TdOrder", "index": 2616, "label": 1}
{"input": "public Criteria andNameIn(List<String> values) {\r\n            addCriterion(\"name in\", values, \"name\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2021-05-08T12:41:18.691106Z", "repo_name": "suoyiguke/weixinparent", "path": "/weixinpojo/src/main/java/com/yinkai/entities/ImageExample.java", "source": "the-stack-v2", "method_name": "andNameIn", "class_name": "GeneratedCriteria", "index": 2617, "label": 1}
{"input": "@Test\n    @Transactional\n    void putWithMissingIdPathParamCorretor() throws Exception {\n        int databaseSizeBeforeUpdate = corretorRepository.findAll().size();\n        corretor.setId(count.incrementAndGet());\n\n        \n        restCorretorMockMvc\n            .perform(put(ENTITY_API_URL).contentType(MediaType.APPLICATION_JSON).content(TestUtil.convertObjectToJsonBytes(corretor)))\n            .andExpect(status().isMethodNotAllowed());\n\n        \n        List<Corretor> corretorList = corretorRepository.findAll();\n        assertThat(corretorList).hasSize(databaseSizeBeforeUpdate);\n    }", "timestamp": "2023-04-25T08:10:07.834277Z", "repo_name": "ceduardo-roque/easyinsurance-hybrid", "path": "/src/test/java/br/com/fiap/easyinsurance/web/rest/CorretorResourceIT.java", "source": "the-stack-v2", "method_name": "putWithMissingIdPathParamCorretor", "class_name": "CorretorResourceIT", "index": 2618, "label": 1}
{"input": "@Test\n  public void deleteServiceExceptionTest2() throws Exception {\n    StatusRuntimeException exception = new StatusRuntimeException(io.grpc.Status.INVALID_ARGUMENT);\n    mockServiceMonitoringService.addException(exception);\n\n    try {\n      String name = \"name3373707\";\n      client.deleteService(name);\n      Assert.fail(\"No exception raised\");\n    } catch (InvalidArgumentException e) {\n      \n    }\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-monitoring/google-cloud-monitoring/src/test/java/com/google/cloud/monitoring/v3/ServiceMonitoringServiceClientTest.java", "source": "the-stack-v2", "method_name": "deleteServiceExceptionTest2", "class_name": "ServiceMonitoringServiceClientTest", "index": 2619, "label": 1}
{"input": "public static String getProperty(String key, String defaultValue) {\n        return env.getProperty(key, defaultValue);\n    }", "timestamp": "2021-05-23T08:43:42.737533Z", "repo_name": "jojofans/alpha-glacier", "path": "/glacier-common/src/main/java/com/geektcp/alpha/common/base/context/SpringContext.java", "source": "the-stack-v2", "method_name": "getProperty", "class_name": "SpringContext", "index": 2620, "label": 1}
{"input": "@Bean\n\tpublic LocalContainerEntityManagerFactoryBean entityManagerFactory(DataSource dataSource, \n\t\t\t\tProperties additionalProperties) {\n\t\t\n\t\tLocalContainerEntityManagerFactoryBean factoryBean = new LocalContainerEntityManagerFactoryBean();\n\t\t\n\t\tJpaVendorAdapter vendorAdapter = new HibernateJpaVendorAdapter();\n\t\tfactoryBean.setJpaVendorAdapter(vendorAdapter);\n\n\t\tfactoryBean.setPackagesToScan(\"br.com.casadocodigo.loja.models\");\n\t\t\n\t\tfactoryBean.setDataSource(dataSource);\n\t\tfactoryBean.setJpaProperties(additionalProperties);\n\t\t\n\t\treturn factoryBean;\n\t}", "timestamp": "2020-04-26T14:00:57.027115Z", "repo_name": "jansercunha/casadocodigo", "path": "/casadocodigo-master/src/main/java/br/com/casadocodigo/loja/conf/JPAConfiguration.java", "source": "the-stack-v2", "method_name": "entityManagerFactory", "class_name": "JPAConfiguration", "index": 2621, "label": 1}
{"input": "@Test public void testLagInvalidOffsetArgument() {\n    CalciteAssert.that()\n        .query(\"select t.*,\\n\"\n            + \"  lag(rn, DATE '2014-06-20', 42) over (order by rn) l\\n\"\n            + \"from \" + START_OF_GROUP_DATA)\n        .throws_(\n            \"Cannot apply 'LAG' to arguments of type 'LAG(<INTEGER>, <DATE>, <INTEGER>)'\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testLagInvalidOffsetArgument", "class_name": "JdbcTest", "index": 2622, "label": 1}
{"input": "public static boolean isCausedBy(Exception ex, Class<? extends Exception>... causeExceptionClasses) {\n\t\tThrowable cause = ex.getCause();\n\t\twhile (cause != null) {\n\t\t\tfor (Class<? extends Exception> causeClass : causeExceptionClasses) {\n\t\t\t\tif (causeClass.isInstance(cause)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcause = cause.getCause();\n\t\t}\n\t\treturn false;\n\t}", "timestamp": "2022-04-06T12:37:57.431079Z", "repo_name": "chocoai/firsthinkis", "path": "/thinkis-core/src/main/java/com/thinkis/common/utils/Exceptions.java", "source": "the-stack-v2", "method_name": "isCausedBy", "class_name": "Exceptions", "index": 2623, "label": 1}
{"input": "public synchronized Collection<IncomingMessage> getMessages()\n    {\n        return incomingMessages.values();\n    }", "timestamp": "2020-03-07T09:31:34.566030Z", "repo_name": "rationalboss/FondaSMS", "path": "/client/app/src/main/java/com/yeleman/fondasms/Inbox.java", "source": "the-stack-v2", "method_name": "getMessages", "class_name": "Inbox", "index": 2624, "label": 1}
{"input": "private void jBMostTMouseExited(java.awt.event.MouseEvent evt) {\n        \n        \n        jBMostT.setBackground(Star.colOri);\n        \n    }", "timestamp": "2020-06-10T12:22:45.426839Z", "repo_name": "njmube/SOSDev", "path": "/Electricos/src/cats/SerNotVent.java", "source": "the-stack-v2", "method_name": "jBMostTMouseExited", "class_name": "SerNotVent", "index": 2625, "label": 1}
{"input": "public Criteria andUsernameLike(String value) {\r\n            addCriterion(\"USERNAME like\", value, \"username\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andUsernameLike", "class_name": "GeneratedCriteria", "index": 2626, "label": 1}
{"input": "@Override\n    public void execute(Memory memory) {\n        int pointer = memory.getPointer() - 1;\n        memory.setPointer(pointer);\n    }", "timestamp": "2022-12-07T13:30:26.340518Z", "repo_name": "Stigmag/Brainfuck-Compiler", "path": "/src/main/java/model/command/LessThanCommand.java", "source": "the-stack-v2", "method_name": "execute", "class_name": "LessThanCommand", "index": 2627, "label": 1}
{"input": "protected String getLine(int type, String content) {\n        if (isFamilyC(type)) {\n            return \" * \" + content + LINE_SEP;\n        } else if (isFamilySGML(type)) {\n            return content + LINE_SEP;\n        } else if (isFamilyAPT(type)) {\n            return \"~~ \" + content + LINE_SEP;\n        } else if (isFamilySH(type)) {\n            return \"# \" + content + LINE_SEP;\n        } else if (isFamilyBAT(type)) {\n            return \"rem \" + content + LINE_SEP;\n        } else if (isFamilyVelocity(type)) {\n            return \"## \" + content + LINE_SEP;\n        }\n        return \"\";\n    }", "timestamp": "2023-08-24T22:10:09.132179Z", "repo_name": "apache/creadur-rat", "path": "/apache-rat-core/src/main/java/org/apache/rat/annotation/AbstractLicenseAppender.java", "source": "the-stack-v2", "method_name": "getLine", "class_name": "AbstractLicenseAppender", "index": 2628, "label": 1}
{"input": "public  void clear() {\n\t\tlastSelectedItem = -1;\n\t\talist.clear();\n\t\taadapter.notifyDataSetChanged();\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "clear", "class_name": "jListView", "index": 2629, "label": 1}
{"input": "@Override\n    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\n        String desc_data = blogPostList.get(position).getDesc();\n        holder.setDescText(desc_data);\n        String image_url = blogPostList.get(position).getImageUrl();\n        String thumbUri = blogPostList.get(position).getImageThumb();\n        holder.setBlogImage(image_url, thumbUri);\n\n    }", "timestamp": "2022-12-02T14:29:28.828861Z", "repo_name": "MoMus2000/3rdAttempt", "path": "/app/src/main/java/com/example/a3rdattempt/BlogRecyclerAdapter.java", "source": "the-stack-v2", "method_name": "onBindViewHolder", "class_name": "BlogRecyclerAdapter", "index": 2630, "label": 1}
{"input": "public static DocumentFragment createBlockForInstrText( \n    \t\tWordprocessingMLPackage wmlPackage,\n    \t\tNodeIterator fldSimpleNodeIt,\n    \t\tNodeIterator childResults ) {\n    \t\n    \t\n    \t\n    \torg.docx4j.wml.Text field = null;\n    \t\n\t\ttry {\n\t\t\tfield = \n\t\t\t\t(org.docx4j.wml.Text)XmlUtils.unmarshal(\n\t\t\t\t\t\tfldSimpleNodeIt.nextNode(), \n\t\t\t\t\t\tContext.jc, \n\t\t\t\t\t\torg.docx4j.wml.Text.class);\n\t\t} catch (JAXBException e1) {\n\t\t\te1.printStackTrace();\n\t\t}\t\t\t\n    \t\n\t\treturn handleField( field.getValue(), childResults);\n    \t\n    }", "timestamp": "2020-04-03T02:05:51.304271Z", "repo_name": "ermanishks/docx4j", "path": "/src/main/java/org/docx4j/convert/out/pdf/viaXSLFO/Conversion.java", "source": "the-stack-v2", "method_name": "createBlockForInstrText", "class_name": "Conversion", "index": 2631, "label": 1}
{"input": "@Test\n\tpublic void makeSureTheStringIsRepeating() {\n\t\tFrontTimes testMe = new FrontTimes();\n\t\tString repeat = testMe.generateString(\"Chocolate\", 3);\n\t\tString repeat2 = testMe.generateString(\"Ethan\", 4);\n\t\tString repeat3 = testMe.generateString(\"Zombie\", 1);\n\t\tString repeat4 = testMe.generateString(\"Ca\", 2);\n\t\tString repeat5 = testMe.generateString(\"AllIwantforChristmasisyou\", 3);\n\t\tAssert.assertEquals(\"ChoChoCho\", repeat);\n\t\tAssert.assertEquals(\"EthEthEthEth\", repeat2);\n\t\tAssert.assertEquals(\"Zom\", repeat3);\n\t\tAssert.assertEquals(\"CaCa\", repeat4);\n\t\tAssert.assertEquals(\"AllAllAll\", repeat5);\n\t}", "timestamp": "2021-07-16T02:11:24.442821Z", "repo_name": "Ecothecoder/ethancornett-java", "path": "/module-1/14_Unit_Testing/student-exercise/java/src/test/java/com/techelevator/FrontTimesTest.java", "source": "the-stack-v2", "method_name": "makeSureTheStringIsRepeating", "class_name": "FrontTimesTest", "index": 2632, "label": 1}
{"input": "private static void swap(byte[] data, int firstPosition, int secondPosition) {\r\n      byte temp = data[firstPosition];\r\n      data[firstPosition] = data[secondPosition];\r\n      data[secondPosition] = temp;\r\n    }", "timestamp": "2020-12-10T15:15:05.202410Z", "repo_name": "AhabweEmmanuel/Marlia", "path": "/TMessagesProj/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java", "source": "the-stack-v2", "method_name": "swap", "class_name": "ProtectionParser", "index": 2633, "label": 1}
{"input": "public void setEncryptedPriKey(String encryptedPriKey) {\n        this.encryptedPriKey = encryptedPriKey;\n    }", "timestamp": "2020-05-20T11:06:22.573040Z", "repo_name": "qinyifeng1226/nuls_2.0", "path": "/module/nuls-account/src/main/java/io/nuls/account/model/dto/AccountOfflineDto.java", "source": "the-stack-v2", "method_name": "setEncryptedPriKey", "class_name": "AccountOfflineDto", "index": 2634, "label": 1}
{"input": "@Test\n  public void case12() {\n    int[] revenues = { 245, -977, 545, -348, -951, -708, -655, -51, -91, -350, 0, 253, 547, 47, -54, -223, -806, 250, -354, -348, 1, -761, -3, 0, -51, -654, -953, 71, 9, -16, 551, 543, -655, 88, 8, -5, -47, 52, 10, 15, -347, -649, -10, 889, 5, -950, -245, -497, -4 };\n    int k = 12;\n    assertEquals(335.73408564814815, mergersdivtwo.findMaximum(revenues, k), DELTA * 335.73408564814815);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case12", "class_name": "MergersDivTwoTest", "index": 2635, "label": 1}
{"input": "@Override \n        public final String interfaceDescriptor() {\n            return IRadioResponse.kInterfaceName;\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "interfaceDescriptor", "class_name": "Stub", "index": 2636, "label": 1}
{"input": "public void NewPost(View v) {\n        fab_menu.close(true);\n        startActivity(new Intent(this, NewPostActivity.class));\n    }", "timestamp": "2021-01-20T16:10:02.437775Z", "repo_name": "adamfils/SchoolAssistant", "path": "/app/src/main/java/com/adamapps/coursealert/HomeActivity.java", "source": "the-stack-v2", "method_name": "NewPost", "class_name": "HomeActivity", "index": 2637, "label": 1}
{"input": "public int sellStock(String item, int quantity) {\r\n        StockItem inStock = list.getOrDefault(item, null);\r\n\r\n        if((inStock != null) && (inStock.quantityInStock() >= quantity) && (quantity >0)) {\r\n            inStock.adjustStock(-quantity);\r\n            return quantity;\r\n        }\r\n        return 0;\r\n    }", "timestamp": "2023-04-30T04:56:37.820597Z", "repo_name": "valentindaniel9926/Collections", "path": "/TreeMap ad Unmodifiable Maps/src/com/company/StockList.java", "source": "the-stack-v2", "method_name": "sellStock", "class_name": "StockList", "index": 2638, "label": 1}
{"input": "public Criteria andUsercodeLessThan(String value) {\r\n            addCriterion(\"USERCODE <\", value, \"usercode\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andUsercodeLessThan", "class_name": "GeneratedCriteria", "index": 2639, "label": 1}
{"input": "private void startPreview() {\n        if (_surfaceTexture != null) {\n            startCamera();\n        }\n    }", "timestamp": "2021-01-22T13:30:35.067748Z", "repo_name": "javiercf/react-cam-fd", "path": "/android/src/main/java/com/lwansbrough/RCTCamera/RCTCameraViewFinder.java", "source": "the-stack-v2", "method_name": "startPreview", "class_name": "RCTCameraViewFinder", "index": 2640, "label": 1}
{"input": "public Builder setAttackVector(com.google.cloud.securitycenter.v1.Cvssv3.AttackVector value) {\n      if (value == null) {\n        throw new NullPointerException();\n      }\n\n      attackVector_ = value.getNumber();\n      onChanged();\n      return this;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "setAttackVector", "class_name": "Builder", "index": 2641, "label": 1}
{"input": "private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {\n        double N1, N2, R;\n        N1= Double.parseDouble(NUM1.getText());\n        N2 = Double.parseDouble(NUM2.getText());\n        R= N1 +N2;RESULTADO.setText(String.valueOf(R));\n    }", "timestamp": "2023-06-22T16:51:24.691992Z", "repo_name": "Guizal/Java", "path": "/src/ExemploCalculadora.java", "source": "the-stack-v2", "method_name": "jButton1ActionPerformed", "class_name": "ExemploCalculadora", "index": 2642, "label": 1}
{"input": "public Criteria createCriteria() {\r\n        Criteria criteria = createCriteriaInternal();\r\n        if (oredCriteria.size() == 0) {\r\n            oredCriteria.add(criteria);\r\n        }\r\n        return criteria;\r\n    }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "createCriteria", "class_name": "SubmissionExample", "index": 2643, "label": 1}
{"input": "public Class<PaymentCustomFieldValue> getCustomFieldValueClass() {\n        return PaymentCustomFieldValue.class;\n    }", "timestamp": "2021-06-16T09:55:00.426309Z", "repo_name": "zemuldo/Cyclos_3.7", "path": "/src/nl/strohalm/cyclos/entities/accounts/guarantees/Guarantee.java", "source": "the-stack-v2", "method_name": "getCustomFieldValueClass", "class_name": "Guarantee", "index": 2644, "label": 1}
{"input": "public void testBug130390b_CamelCase() throws CoreException {\n\tsetUpBug130390();\n\tsearch(\"NPE\", TYPE, DECLARATIONS, SearchPattern.R_CAMELCASE_MATCH);\n\tassertSearchResults(\n\t\t\"src/b130390/Npe.java b130390.Npe [Npe] EXACT_MATCH\\n\" +\n\t\t\"src/b130390/NullPointerException.java b130390.NullPointerException [NullPointerException] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug130390b_CamelCase", "class_name": "JavaSearchBugsTests", "index": 2645, "label": 1}
{"input": "@Override\r\n\tpublic boolean deleteCustomer(int customerID) {\r\n\r\n\t\tSession session2 = factory.openSession();\r\n\r\n\t\tTransaction transaction = session2.beginTransaction();\r\n\t\tCustomer customer = new Customer();\r\n\t\tcustomer.setCustomerId(customerID);\r\n\t\tsession.delete(customer);\r\n\t\ttransaction.commit();\r\n\t\t\r\n\t\treturn true;\r\n\t}", "timestamp": "2022-12-20T12:07:08.195535Z", "repo_name": "chiraggarg96/deloittetrng", "path": "/NewCMS_Hibernate_Annotations/src/com/deloitte/cms/dao/impl/CustomerDAOImpl.java", "source": "the-stack-v2", "method_name": "deleteCustomer", "class_name": "CustomerDAOImpl", "index": 2646, "label": 1}
{"input": "public Criteria andUserStNameEqualTo(String value) {\r\n            addCriterion(\"user_st_name =\", value, \"userStName\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2022-12-10T20:39:24.451742Z", "repo_name": "TangHui-ops/myProject", "path": "/后端/weixingxiaocx/src/main/java/cn/bdqn/mbg/model/UserStateTypeExample.java", "source": "the-stack-v2", "method_name": "andUserStNameEqualTo", "class_name": "GeneratedCriteria", "index": 2647, "label": 1}
{"input": "@Test\n  public void createServiceExceptionTest() throws Exception {\n    StatusRuntimeException exception = new StatusRuntimeException(io.grpc.Status.INVALID_ARGUMENT);\n    mockServiceMonitoringService.addException(exception);\n\n    try {\n      FolderName parent = FolderName.of(\"[FOLDER]\");\n      Service service = Service.newBuilder().build();\n      client.createService(parent, service);\n      Assert.fail(\"No exception raised\");\n    } catch (InvalidArgumentException e) {\n      \n    }\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-monitoring/google-cloud-monitoring/src/test/java/com/google/cloud/monitoring/v3/ServiceMonitoringServiceClientTest.java", "source": "the-stack-v2", "method_name": "createServiceExceptionTest", "class_name": "ServiceMonitoringServiceClientTest", "index": 2648, "label": 1}
{"input": "@JavascriptInterface\n    public void registerheadingevent(final String s) {\n        final Context context = (Context)this.contextReference.get();\n        if (context != null) {\n            final d d = (d)this.adMarvelInternalWebViewReference.get();\n            if (d != null && !d.b()) {\n                final com.admarvel.android.util.d a = com.admarvel.android.util.d.a();\n                if (a != null && a.a(context)) {\n                    a.c(s);\n                    a.a(context, d);\n                }\n            }\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "registerheadingevent", "class_name": "AdMarvelWebViewJSInterface", "index": 2649, "label": 1}
{"input": "public Criteria andPkpsndocNotEqualTo(String value) {\r\n            addCriterion(\"PKPSNDOC <>\", value, \"pkpsndoc\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andPkpsndocNotEqualTo", "class_name": "GeneratedCriteria", "index": 2650, "label": 1}
{"input": "@Override\r\n    public void setDutiesAccount(String dutiesAccount) {\r\n        this.dutiesAccount = dutiesAccount;\r\n    }", "timestamp": "2020-05-17T01:26:00.968575Z", "repo_name": "gahlawat4u/repoName", "path": "/rda0105-agl-aus-java-a43926f304e3/xms-dto/src/main/java/com/gms/xms/model/webship/ShipmentInfoModel.java", "source": "the-stack-v2", "method_name": "setDutiesAccount", "class_name": "ShipmentInfoModel", "index": 2651, "label": 1}
{"input": "public String parseString(String string) {\r\n \r\n \t\tif (log.isTraceEnabled()) log.trace(\"Parsing string: \" + string);\r\n \r\n \t\tif (string.length() < 2) throw new ParserException(\"Invalid string: \" + string);\r\n \t\tif (string.charAt(0) != '\"') throw new ParserException(\"Invalid string: \" + string + \" (no opening double quotes)\");\r\n \t\tif (string.charAt(string.length() - 1) != '\"') throw new ParserException(\"Invalid string: \" + string + \" (no closing double quotes)\");\r\n \r\n \t\treturn string.substring(1, string.length() - 1);\r\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/17/17_0a5dbe869eedf204b0fd7ac7721dc93e8e3ea32a/XDI3ParserManual/17_0a5dbe869eedf204b0fd7ac7721dc93e8e3ea32a_XDI3ParserManual_t.java", "source": "the-stack-v2", "method_name": "parseString", "class_name": "XDI3ParserManual", "index": 2652, "label": 1}
{"input": "public final TypeParametersContext typeParameters() throws RecognitionException {\n\t\tTypeParametersContext _localctx = new TypeParametersContext(_ctx, getState());\n\t\tenterRule(_localctx, 18, RULE_typeParameters);\n\t\tint _la;\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(307);\n\t\t\tmatch(T__15);\n\t\t\tsetState(308);\n\t\t\ttypeParameter();\n\t\t\tsetState(313);\n\t\t\t_errHandler.sync(this);\n\t\t\t_la = _input.LA(1);\n\t\t\twhile (_la==T__16) {\n\t\t\t\t{\n\t\t\t\t{\n\t\t\t\tsetState(309);\n\t\t\t\tmatch(T__16);\n\t\t\t\tsetState(310);\n\t\t\t\ttypeParameter();\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetState(315);\n\t\t\t\t_errHandler.sync(this);\n\t\t\t\t_la = _input.LA(1);\n\t\t\t}\n\t\t\tsetState(316);\n\t\t\tmatch(T__17);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "typeParameters", "class_name": "JavaParser", "index": 2653, "label": 1}
{"input": "@Nonnull\n    @Override\n    public final <P, R> R accept(@Nonnull Visitor<P, R> visitor, @Nonnull P p) {\n        return visitor.visitVariable(this, p);\n    }", "timestamp": "2020-04-02T04:11:55.421623Z", "repo_name": "robstoll/predicator", "path": "/core/src/main/java/org/predicode/predicator/terms/Variable.java", "source": "the-stack-v2", "method_name": "accept", "class_name": "Variable", "index": 2654, "label": 1}
{"input": "@Test\n\tpublic void regularAndReactiveHealthIndicatorsMatch() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(HealthIndicatorsConfiguration.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tHealthEndpoint endpoint = context.getBean(HealthEndpoint.class);\n\t\t\t\t\tReactiveHealthEndpointWebExtension extension = context\n\t\t\t\t\t\t\t.getBean(ReactiveHealthEndpointWebExtension.class);\n\t\t\t\t\tHealth endpointHealth = endpoint.health();\n\t\t\t\t\tHealth extensionHealth = extension.health(true).block().getBody();\n\t\t\t\t\tassertThat(endpointHealth.getDetails())\n\t\t\t\t\t\t\t.containsOnlyKeys(\"application\", \"first\", \"second\");\n\t\t\t\t\tassertThat(extensionHealth.getDetails())\n\t\t\t\t\t\t\t.containsOnlyKeys(\"application\", \"first\", \"second\");\n\t\t\t\t});\n\t}", "timestamp": "2021-08-28T23:16:47.200509Z", "repo_name": "GuldanChen/spring-boot", "path": "/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/HealthWebEndpointReactiveManagementContextConfigurationTests.java", "source": "the-stack-v2", "method_name": "regularAndReactiveHealthIndicatorsMatch", "class_name": "HealthWebEndpointReactiveManagementContextConfigurationTests", "index": 2655, "label": 1}
{"input": "public static String getUiccId(Context cont) {\n        TelephonyManager operator = (TelephonyManager) cont.getSystemService(Context.TELEPHONY_SERVICE);\n        String uiccId = operator.getSimSerialNumber();\n        if (uiccId != null && uiccId.length() >= 18) {\n            uiccId = uiccId.substring(2, 18);\n        }\n        return uiccId;\n    }", "timestamp": "2023-08-23T07:14:31.704097Z", "repo_name": "tddyko/HealthCareSolution", "path": "/app/src/main/java/com/greencross/greencare/util/DeviceUtil.java", "source": "the-stack-v2", "method_name": "getUiccId", "class_name": "DeviceUtil", "index": 2656, "label": 1}
{"input": "@RequestMapping(\"/delete-contact-form-message\")\n\tvoid deleteContactFormMessage(@RequestParam(name = \"contactFormMessageId\") long contactFormMessageId) {\n\t\tcontactFormMessageService.deleteContactFormMessage(contactFormMessageId);\n\t}", "timestamp": "2020-04-09T18:27:51.709543Z", "repo_name": "mmazur658/Marcin-Mazur-Portfolio", "path": "/src/main/java/pl/marcinmazur/portfolio/controller/AdminRestController.java", "source": "the-stack-v2", "method_name": "deleteContactFormMessage", "class_name": "AdminRestController", "index": 2657, "label": 1}
{"input": "public Criteria andIdNotEqualTo(Integer value) {\n            addCriterion(\"id <>\", value, \"id\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andIdNotEqualTo", "class_name": "GeneratedCriteria", "index": 2658, "label": 1}
{"input": "public void testBug96763c() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b96763/Test.java\",\n\t\t\"package b96763;\\n\" +\n\t\t\"public class Test<T> {\\n\" +\n\t\t\"\tvoid methodT(T t) {}\\n\" +\n\t\t\"}\\n\" +\n\t\t\"class Sub<X> extends Test<X> {\\n\" +\n\t\t\"\tvoid methodT(X x) {} // overrides Super#methodT(T)\\n\" +\n\t\t\"}\\n\"\n\t);\n\tIMethod method = this.workingCopies[0].getType(\"Sub\").getMethods()[0];\n\tsearch(method, DECLARATIONS|IGNORE_DECLARING_TYPE|IGNORE_RETURN_TYPE);\n\tassertSearchResults(\n\t\t\"src/b96763/Test.java void b96763.Test.methodT(T) [methodT] EXACT_MATCH\\n\" +\n\t\t\"package b96763;\\n\"0\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug96763c", "class_name": "JavaSearchBugsTests", "index": 2659, "label": 1}
{"input": "private synchronized void scheduleKeepAlive(long timeout, long delta) {\n    ScheduledFuture<?> keepAliveFuture = keepAliveFutures.remove(timeout);\n    if (keepAliveFuture != null) {\n      keepAliveFuture.cancel(false);\n    }\n\n    \n    keepAliveFutures.put(timeout, threadPoolExecutor.schedule(() -> {\n      if (open.get()) {\n        keepAliveSessions(timeout);\n      }\n    }, Math.max(Math.max((long)(timeout * .75) - delta, timeout - 2500 - delta), 0), TimeUnit.MILLISECONDS));\n  }", "timestamp": "2021-01-02T08:55:42.350924Z", "repo_name": "maniacs-ops/atomix", "path": "/protocols/raft/src/main/java/io/atomix/protocols/raft/proxy/impl/RaftProxyManager.java", "source": "the-stack-v2", "method_name": "scheduleKeepAlive", "class_name": "RaftProxyManager", "index": 2660, "label": 1}
{"input": "public Query join(Query subquery, JoinType joinType, String prefix) {\n    joins.add(new Join(subquery, joinType, prefix));\n    return this;\n  }", "timestamp": "2023-08-17T00:59:45.862350Z", "repo_name": "davitbzh/FlinkAggJob", "path": "/flink/src/main/java/com/logicalclocks/hsfs/constructor/Query.java", "source": "the-stack-v2", "method_name": "join", "class_name": "Query", "index": 2661, "label": 1}
{"input": "public void clear() {\r\n        oredCriteria.clear();\r\n        orderByClause = null;\r\n        distinct = false;\r\n    }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "clear", "class_name": "UserVOExample", "index": 2662, "label": 1}
{"input": "@Test public void testArrayIndexesMissing() throws ConfigCompileException{\n \t\tRun(\"assign(@array, array(1, 3)) msg(array_indexes(@array, 2))\", fakePlayer);\n \t\tverify(fakePlayer).sendMessage(\"{}\");\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/19/19_3b3438a24e33893035d2c602198d49ca13a35845/ArrayHandlingTest/19_3b3438a24e33893035d2c602198d49ca13a35845_ArrayHandlingTest_s.java", "source": "the-stack-v2", "method_name": "testArrayIndexesMissing", "class_name": "ArrayHandlingTest", "index": 2663, "label": 1}
{"input": "private static int scaleMargin(final int startMaterial, final int endMaterial){\n \t\treturn endMaterial-startMaterial;\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/10/10_5d6bb3dfac1edadf4894967583023f6877b24c02/E9v3/10_5d6bb3dfac1edadf4894967583023f6877b24c02_E9v3_s.java", "source": "the-stack-v2", "method_name": "scaleMargin", "class_name": "E9v3", "index": 2664, "label": 1}
{"input": "public ResourceIdentity withUserAssignedIdentity(String userAssignedIdentity) {\n        this.userAssignedIdentity = userAssignedIdentity;\n        return this;\n    }", "timestamp": "2023-09-04T09:36:35.821969Z", "repo_name": "Azure/azure-sdk-for-java", "path": "/sdk/mediaservices/azure-resourcemanager-mediaservices/src/main/java/com/azure/resourcemanager/mediaservices/models/ResourceIdentity.java", "source": "the-stack-v2", "method_name": "withUserAssignedIdentity", "class_name": "ResourceIdentity", "index": 2665, "label": 1}
{"input": "void setName(String name) {\n            TextView userId = (TextView) mView.findViewById(R.id.singleUserId);\n            userId.setText(name);\n        }", "timestamp": "2021-01-20T16:10:02.437775Z", "repo_name": "adamfils/SchoolAssistant", "path": "/app/src/main/java/com/adamapps/coursealert/HomeActivity.java", "source": "the-stack-v2", "method_name": "setName", "class_name": "PostViewHolder", "index": 2666, "label": 1}
{"input": "@Override\n\tpublic UserModel getuserbyEmail(String email) {\n\t\tUserModel user;\n\t\tuser=(UserModel) sessionFactory.getCurrentSession().get(UserModel.class,email);\nreturn user;\n\t}", "timestamp": "2021-05-12T19:34:37.277933Z", "repo_name": "thrijita/ActivityStream_Boot", "path": "/activitystreambackendspringboot/src/main/java/com/niit/daoimpl/UserDAOImpl.java", "source": "the-stack-v2", "method_name": "getuserbyEmail", "class_name": "UserDAOImpl", "index": 2667, "label": 1}
{"input": "@Override\n      public Request setOauthToken(java.lang.String oauthToken) {\n        return (Request) super.setOauthToken(oauthToken);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setOauthToken", "class_name": "Request", "index": 2668, "label": 1}
{"input": "public static Connection getConnection()\n\t{\n\t\ttry\n\t\t{\n\t\t\tString url = \"jdbc:mysql://localhost:3306/\";\n\t\t\tString dbName =\"sportsbooking\"; \n\t\t\tString username = \"root\";\n\t\t\tString password = \"root\";\n\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\ttry\n\t\t\t{\n\t\t\t\tconn = DriverManager.getConnection(url+dbName,username,password);\n\t\t\t}\n\t\t\tcatch (SQLException ex)\n\t\t\t{\n\t\t\t\tex.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tcatch(ClassNotFoundException e)\n\t\t{\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\treturn conn;\n\t}", "timestamp": "2020-06-03T22:22:06.524851Z", "repo_name": "melvinlzw/CS2102SportsBooking", "path": "/ConnectionManager.java", "source": "the-stack-v2", "method_name": "getConnection", "class_name": "ConnectionManager", "index": 2669, "label": 1}
{"input": "public static byte[] aesDecrypt(byte[] input, byte[] key) {\n\t\treturn aes(input, key, Cipher.DECRYPT_MODE);\n\t}", "timestamp": "2020-04-27T10:34:21.844066Z", "repo_name": "wuchenl/springboot2-scaffold", "path": "/springboot2-utils/src/main/java/com/letters7/wuchen/springboot2/utils/security/Cryptos.java", "source": "the-stack-v2", "method_name": "aesDecrypt", "class_name": "Cryptos", "index": 2670, "label": 1}
{"input": "public static void main (String args[])\n   {  \n     double dQtddias;\n         \n      \n      String sIdade = JOptionPane.showInputDialog(\n      \"Digite a sua idade:\");\n         \n      double dIdade = Double.parseDouble(sIdade);\n      \n      dQtdias = dIdade * 365;\n      \n      JOptionPane.showMessageDialog(null, \"A quantidade de dias é:\" + dQtdias);\n      \n   }", "timestamp": "2020-05-29T22:08:30.101446Z", "repo_name": "tonycasper/Facul", "path": "/Aula JAva/IMC.java", "source": "the-stack-v2", "method_name": "main", "class_name": "IMC", "index": 2671, "label": 1}
{"input": "@Test\n    public void testObjectWithField() throws Exception\n    {\n        String field = normalString;\n        String value = longString;\n\n        AlchemyAssertion<JsonObject> assertion = BlackNectarAssertions.objectWithField(field);\n        assertNotNull(assertion);\n\n        JsonObject object = one(BlackNectarGenerators.jsonObjects());\n        object.addProperty(field, value);\n\n        assertion.check(object);\n    }", "timestamp": "2021-06-18T06:05:39.558041Z", "repo_name": "BlackSourceLabs/BlackNectar-Service", "path": "/src/test/java/tech/blacksource/blacknectar/service/BlackNectarAssertionsTest.java", "source": "the-stack-v2", "method_name": "testObjectWithField", "class_name": "BlackNectarAssertionsTest", "index": 2672, "label": 1}
{"input": "public static Audit getFromTaskUUID(UUID taskUUID) {\n    return find.query().where().eq(\"task_uuid\", taskUUID).findOne();\n  }", "timestamp": "2023-04-18T11:10:23.017439Z", "repo_name": "deepld/yugabyte-db-annotation", "path": "/managed/src/main/java/com/yugabyte/yw/models/Audit.java", "source": "the-stack-v2", "method_name": "getFromTaskUUID", "class_name": "Audit", "index": 2673, "label": 1}
{"input": "@Override\n\tpublic void printUsage(CommandSender sender) {\n\t\tsender.sendMessage(\"/commandsign version\");\n\t}", "timestamp": "2022-03-24T05:40:10.814328Z", "repo_name": "EnocraftMC/ar-command-signs", "path": "/plugin/src/main/java/be/nokorbis/spigot/commandsigns/command/subcommands/VersionCommand.java", "source": "the-stack-v2", "method_name": "printUsage", "class_name": "VersionCommand", "index": 2674, "label": 1}
{"input": "public Criteria andTypeLessThan(Integer value) {\r\n            addCriterion(\"type <\", value, \"type\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andTypeLessThan", "class_name": "GeneratedCriteria", "index": 2675, "label": 1}
{"input": "@Override\n    public TypeMeaningWordRecord value7(String... value) {\n        setMwLexRegisterCodes(value);\n        return this;\n    }", "timestamp": "2020-12-23T02:30:44.911257Z", "repo_name": "tonisnurk/ekilex", "path": "/ekilex-app/src/main/java/eki/ekilex/data/db/udt/records/TypeMeaningWordRecord.java", "source": "the-stack-v2", "method_name": "value7", "class_name": "TypeMeaningWordRecord", "index": 2676, "label": 1}
{"input": "@Override public String toString() {\n      return \"Dependent [empid: \" + empid + \", name: \" + name + \"]\";\n    }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "Dependent", "index": 2677, "label": 1}
{"input": "@Test public void testArraySort2() throws ConfigCompileException{\n         Run(\"msg(array_sort(array('002', '1', '03')))\", fakePlayer);\n         verify(fakePlayer).sendMessage(\"{1, 002, 03}\");\n     }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/19/19_3b3438a24e33893035d2c602198d49ca13a35845/ArrayHandlingTest/19_3b3438a24e33893035d2c602198d49ca13a35845_ArrayHandlingTest_s.java", "source": "the-stack-v2", "method_name": "testArraySort2", "class_name": "ArrayHandlingTest", "index": 2678, "label": 1}
{"input": "public int deleteInfo(Integer courseId, Integer collTypeId, Integer metadicId) {\r\n\t\treturn this.courseKemDao.deleteInfo(courseId, collTypeId, metadicId);\r\n\t}", "timestamp": "2023-01-04T07:40:05.314756Z", "repo_name": "yoonjinseok/cuinfo", "path": "/src/service/com/cyberup/service/course/CourseKemService.java", "source": "the-stack-v2", "method_name": "deleteInfo", "class_name": "CourseKemService", "index": 2679, "label": 1}
{"input": "@Before\n    public void setUp() throws Exception\n    {\n\n        setupData();\n        setupMocks();\n    }", "timestamp": "2021-06-18T06:05:39.558041Z", "repo_name": "BlackSourceLabs/BlackNectar-Service", "path": "/src/test/java/tech/blacksource/blacknectar/service/BlackNectarAssertionsTest.java", "source": "the-stack-v2", "method_name": "setUp", "class_name": "BlackNectarAssertionsTest", "index": 2680, "label": 1}
{"input": "public Builder setIntegrityImpact(com.google.cloud.securitycenter.v1.Cvssv3.Impact value) {\n      if (value == null) {\n        throw new NullPointerException();\n      }\n\n      integrityImpact_ = value.getNumber();\n      onChanged();\n      return this;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "setIntegrityImpact", "class_name": "Builder", "index": 2681, "label": 1}
{"input": "public static void main(String[] args) {\r\n\t\tScanner in = new Scanner(System.in);\r\n\t\tint n = in.nextInt();\r\n\t\tint k = in.nextInt();\r\n\t\tint[][] dp = new int[n + 1][k + 1];\r\n\t\tfor (int i = 0; i <= n; i++)\r\n\t\t\tdp[i][0] = 1;\r\n\r\n\t\tfor (int i = 1; i <= n; i++)\r\n\t\t\tfor (int j = 1; j <= k; j++)\r\n\t\t\t\tdp[i][j] = dp[i - 1][j] * (j + 1) + dp[i - 1][j - 1] * (i - j);\r\n\r\n\t\tSystem.out.println(dp[n][k]);\r\n\t}", "timestamp": "2020-12-24T20:09:47.676222Z", "repo_name": "gongmi/workSpace", "path": "/OnlineTest/src/baidu/Permutations.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Permutations", "index": 2682, "label": 1}
{"input": "@Override\n\t@SideOnly(Side.CLIENT)\n\tpublic GuiFactoryInventory getGui(InventoryPlayer inventoryPlayer) {\n\n\t\treturn new GuiFactoryPowered(getContainer(inventoryPlayer), this);\n\t}", "timestamp": "2021-10-19T03:56:24.894626Z", "repo_name": "rotkodr3d/MineFactoryReloaded", "path": "/src/main/java/powercrystals/minefactoryreloaded/tile/machine/mobs/TileEntityGrinder.java", "source": "the-stack-v2", "method_name": "getGui", "class_name": "TileEntityGrinder", "index": 2683, "label": 1}
{"input": "public static com.google.cloud.securitycenter.v1.Cvssv3 parseFrom(\n      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(\n        PARSER, input, extensionRegistry);\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "parseFrom", "class_name": "Cvssv3", "index": 2684, "label": 1}
{"input": "public Criteria andVdef18IsNull() {\r\n            addCriterion(\"VDEF18 is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef18IsNull", "class_name": "GeneratedCriteria", "index": 2685, "label": 1}
{"input": "public void setIs_settled(String is_settled) {\n                this.is_settled = is_settled;\n            }", "timestamp": "2021-01-13T07:12:09.987566Z", "repo_name": "acmlgogo/one_kotlin", "path": "/app/src/main/java/com/storm/cftest/base/Question.java", "source": "the-stack-v2", "method_name": "setIs_settled", "class_name": "AuthorListBean", "index": 2686, "label": 1}
{"input": "@Override\r\n  public void init() throws Exception {\r\n    try {\r\n      Connection conn = DriverManager.getConnection(url, user, password);\r\n      setActual(conn);\r\n    } catch (SQLException e) {\r\n      throw e;\r\n    }\r\n  }", "timestamp": "2022-12-10T07:43:26.805846Z", "repo_name": "theBarber/myPrivate", "path": "/src/main/java/ramp/lift/uas/automation/SqlConnectionModule.java", "source": "the-stack-v2", "method_name": "init", "class_name": "SqlConnectionModule", "index": 2687, "label": 1}
{"input": "@Override\n\tpublic void moverHasta(int x, int y, boolean fine) {\n\t\tif (fine){\n\t\t\tscrlX.setValue(x);\n\t\t\tscrlY.setValue(y);\n\t\t}\n\t\tpnlCanvas.repaint();\n\t}", "timestamp": "2021-07-07T15:13:46.386311Z", "repo_name": "clillo/iluminacion", "path": "/src/com/clillo/dmx/ui/jpanels/opcionesMenu/PanelMantienePuntosMovingHeads.java", "source": "the-stack-v2", "method_name": "moverHasta", "class_name": "PanelMantienePuntosMovingHeads", "index": 2688, "label": 1}
{"input": "public void testBug148380_SearchAllTypes_cu() throws CoreException, JavaModelException {\n\tIJavaSearchScope scope = getJavaSearchScope();\n\tTypeNameMatchCollector requestor = new TypeNameMatchCollector();\n\tnew SearchEngine().searchAllTypeNames(\n\t\tnull,\n\t\tSearchPattern.R_EXACT_MATCH,\n\t\t\"Bug\".toCharArray(),\n\t\tSearchPattern.R_PREFIX_MATCH,\n\t\tIJavaSearchConstants.TYPE,\n\t\tscope,\n\t\trequestor,\n\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,\n\t\tnull);\n\tassertSearchResults(\n\t\t\"Bug148380 (not open) [in Bug148380.class [in <default> [in lib [in JavaSearchBugs]]]]\",\n\t\trequestor\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug148380_SearchAllTypes_cu", "class_name": "JavaSearchBugsTests", "index": 2689, "label": 1}
{"input": "public ManGroupMemberRequest getManGroupMemberRequest() {\r\n        return manGroupMemberRequest;\r\n    }", "timestamp": "2020-05-19T22:35:46.832449Z", "repo_name": "caiqiufu/unieap-esb", "path": "/src/main/java/com/huawei/ocs12/businessmgrservice/ManGroupMemberRequestMsg.java", "source": "the-stack-v2", "method_name": "getManGroupMemberRequest", "class_name": "ManGroupMemberRequestMsg", "index": 2690, "label": 1}
{"input": "public void testGetClinicalFindingEntity() throws Exception {\n        assertNotNull(\"Finding entity must not be null\", testEntityFactoryService.getClinicalFindingEntity());\n    }", "timestamp": "2022-05-22T18:37:18.579877Z", "repo_name": "termlex/snofyre", "path": "/srth-osgi/uk.nhs.cfh.dsp.srth.information.model.impl/src/test/java/uk/nhs/cfh/dsp/srth/information/model/impl/internal/ClinicalEntityFactoryImplTest.java", "source": "the-stack-v2", "method_name": "testGetClinicalFindingEntity", "class_name": "ClinicalEntityFactoryImplTest", "index": 2691, "label": 1}
{"input": "private static int findNumberOfRowsToCrop(BufferedImage bi, Origin origin) {\n        if (origin != Origin.TOP && origin != Origin.BOTTOM) {\n            throw new IllegalArgumentException(\"Direction can onl be '\" + Origin.TOP + \"' (downwards) or '\"\n                    + Origin.BOTTOM + \"' (upwards)\");\n        }\n        int rows = 0;\n        while (rows >= 0 && rows < bi.getHeight()) {\n            for (int i = 0; i < bi.getWidth(); i++) {\n                Color color = new Color(bi.getRGB(i, origin == Origin.TOP ? rows : bi.getHeight() - rows - 1));\n                if (!color.equals(Color.WHITE)) {\n                    return rows;\n                }\n            }\n            rows++;\n        }\n        return rows;\n    }", "timestamp": "2021-01-01T05:50:45.307287Z", "repo_name": "TaylorPeer/somtooolbox-dendrograms", "path": "/src/core/at/tuwien/ifs/somtoolbox/util/ImageUtils.java", "source": "the-stack-v2", "method_name": "findNumberOfRowsToCrop", "class_name": "ImageUtils", "index": 2692, "label": 1}
{"input": "@GET\n\t\t@Path(\"/{profileName}\")\n\t\tpublic Profile getMessage(@PathParam(\"profileName\")String ProfileName){\n\t\t\t\n\t\t\treturn service.getProfile(ProfileName);\n\t\t\t\n\t\t}", "timestamp": "2020-06-27T08:44:15.206570Z", "repo_name": "manojsoftware/restmessenger", "path": "/src/main/java/org/manojit/messenger/resource/ProfileResource.java", "source": "the-stack-v2", "method_name": "getMessage", "class_name": "ProfileResource", "index": 2693, "label": 1}
{"input": "public void setTestNormalFormGenerator(NormalFormGenerator testNormalFormGenerator) {\n        this.testNormalFormGenerator = testNormalFormGenerator;\n    }", "timestamp": "2022-05-22T18:37:18.579877Z", "repo_name": "termlex/snofyre", "path": "/srth-osgi/uk.nhs.cfh.dsp.srth.information.model.impl/src/test/java/uk/nhs/cfh/dsp/srth/information/model/impl/internal/ClinicalEntityFactoryImplTest.java", "source": "the-stack-v2", "method_name": "setTestNormalFormGenerator", "class_name": "ClinicalEntityFactoryImplTest", "index": 2694, "label": 1}
{"input": "@Override\n      public EnumNumberEnum read(final JsonReader jsonReader) throws IOException {\n        Double value = jsonReader.nextDouble();\n        return EnumNumberEnum.fromValue(String.valueOf(value));\n      }", "timestamp": "2023-03-07T19:55:29.765168Z", "repo_name": "docusign/old_swagger-codegen", "path": "/samples/client/petstore/java/okhttp-gson-parcelableModel/src/main/java/io/swagger/client/model/EnumTest.java", "source": "the-stack-v2", "method_name": "read", "class_name": "Adapter", "index": 2695, "label": 1}
{"input": "@Override\n\n    protected void onPostExecute(Drawable draw) {\n        if (isCancelled()) {\n            draw = null;\n        }\n        if (imageViewReference != null) {\n            ImageView imageView = imageViewReference.get();\n            if (imageView != null) {\n                imageView.setImageDrawable(draw);\n            }\n        }\n    }", "timestamp": "2020-06-04T19:56:05.353142Z", "repo_name": "bobaldo/masterApp_android", "path": "/GalleryPhoto/app/src/main/java/davidepatrizi/com/galleryphoto/DownloadImage.java", "source": "the-stack-v2", "method_name": "onPostExecute", "class_name": "DownloadImage", "index": 2696, "label": 1}
{"input": "public void testBug144044() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[2];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/test1/p/Test.java\",\n\t\t\"package test1.p;\\n\" +\n\t\t\"import test1.q.X;\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"\tString foo(X val) {\\n\" +\n\t\t\"\t\treturn val.str;\\n\" +\n\t\t\"\t}\\n\" +\n\t\t\"}\\n\"\n\t);\n\tthis.workingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/test1/q/X.java\",\n\t\t\"package test1.q;\\n\" +\n\t\t\"package test1.p;\\n\"0 +\n\t\t\"package test1.p;\\n\"1 +\n\t\t\"}\\n\"\n\t);\n\tIType type = this.workingCopies[1].getType(\"package test1.p;\\n\"3);\n\tIField field = type.getField(\"package test1.p;\\n\"4);\n\tsearch(field, REFERENCES);\n\tassertSearchResults(\n\t\t\"package test1.p;\\n\"5\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug144044", "class_name": "JavaSearchBugsTests", "index": 2697, "label": 1}
{"input": "private void updateSizeInfo() {\n        RelativeLayout rl_cards_details_card_area = (RelativeLayout) findViewById(R.id.maincontainer);\n        int w = rl_cards_details_card_area.getWidth();\n        int h = rl_cards_details_card_area.getHeight();\n        Log.v(\"Saurav\", \"get height --> \" +w+\"-\"+h);\n        DisplayMetrics displaymetrics = new DisplayMetrics();\n        displaymetrics = this.getBaseContext().getResources().getDisplayMetrics();\n        double dpwidth = (w/displaymetrics.density)+0.5;\n        Log.v(\"Saurav\",\"dpwidth is --> \"+dpwidth);\n        double dpheight = (h/displaymetrics.density)+0.5;\n        Log.v(\"Saurav\",\"dpheight is --> \"+dpheight);\n        Log.v(\"Saurav\",\"pxhieght===>\"+pxToDp(h));\n    }", "timestamp": "2020-12-11T22:17:27.878548Z", "repo_name": "sauravk90/AlphaBet", "path": "/app/src/main/java/com/techglee/alphabet/Level2.java", "source": "the-stack-v2", "method_name": "updateSizeInfo", "class_name": "Level2", "index": 2698, "label": 1}
{"input": "@Override\n    public TypeMeaningWordRecord value1(Long value) {\n        setLexemeId(value);\n        return this;\n    }", "timestamp": "2020-12-23T02:30:44.911257Z", "repo_name": "tonisnurk/ekilex", "path": "/ekilex-app/src/main/java/eki/ekilex/data/db/udt/records/TypeMeaningWordRecord.java", "source": "the-stack-v2", "method_name": "value1", "class_name": "TypeMeaningWordRecord", "index": 2699, "label": 1}
{"input": "public void setAnswer_content(String answer_content) {\n            this.answer_content = answer_content;\n        }", "timestamp": "2021-01-13T07:12:09.987566Z", "repo_name": "acmlgogo/one_kotlin", "path": "/app/src/main/java/com/storm/cftest/base/Question.java", "source": "the-stack-v2", "method_name": "setAnswer_content", "class_name": "DataBean", "index": 2700, "label": 1}
{"input": "public static String getServiceVender(Context ctx) {\n        TelephonyManager systemService = (TelephonyManager) ctx.getSystemService(Context.TELEPHONY_SERVICE);\n        return systemService.getNetworkOperatorName();\n    }", "timestamp": "2023-08-23T07:14:31.704097Z", "repo_name": "tddyko/HealthCareSolution", "path": "/app/src/main/java/com/greencross/greencare/util/DeviceUtil.java", "source": "the-stack-v2", "method_name": "getServiceVender", "class_name": "DeviceUtil", "index": 2701, "label": 1}
{"input": "private View getIndicator(String title, int res) {\n        View v = LayoutInflater.from(this).inflate(R.layout.activity_tabhost_indicator, null);\n        ImageView img = (ImageView) v.findViewById(R.id.image);\n        TextView txt = (TextView) v.findViewById(R.id.txtView);\n\n        img.setImageResource(res);\n        txt.setText(title);\n\n        return v;\n    }", "timestamp": "2020-07-03T16:52:09.794501Z", "repo_name": "truongngoclinh/Samples", "path": "/Samples/app/src/main/java/samples/linhtruong/com/app/tabs/TabHostActivity.java", "source": "the-stack-v2", "method_name": "getIndicator", "class_name": "TabHostActivity", "index": 2702, "label": 1}
{"input": "public static void main(String[] args) {\n        SpringApplication.run(QuickResponderApplication.class, args);\n    }", "timestamp": "2023-02-23T01:44:19.739372Z", "repo_name": "Ouyuone/quick-responder-back", "path": "/src/main/java/tech/ouyu/quickResponder/back/QuickResponderApplication.java", "source": "the-stack-v2", "method_name": "main", "class_name": "QuickResponderApplication", "index": 2703, "label": 1}
{"input": "@Test\n  public void listServiceLevelObjectivesExceptionTest2() throws Exception {\n    StatusRuntimeException exception = new StatusRuntimeException(io.grpc.Status.INVALID_ARGUMENT);\n    mockServiceMonitoringService.addException(exception);\n\n    try {\n      String parent = \"parent-995424086\";\n      client.listServiceLevelObjectives(parent);\n      Assert.fail(\"No exception raised\");\n    } catch (InvalidArgumentException e) {\n      \n    }\n  }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-monitoring/google-cloud-monitoring/src/test/java/com/google/cloud/monitoring/v3/ServiceMonitoringServiceClientTest.java", "source": "the-stack-v2", "method_name": "listServiceLevelObjectivesExceptionTest2", "class_name": "ServiceMonitoringServiceClientTest", "index": 2704, "label": 1}
{"input": "@Override\n    protected void onPostExecute(List<String> res){\n        for (String item:res){\n            adapter_with_possible_places.add(item);\n        }\n\n        adapter_with_possible_places.notifyDataSetChanged();\n    }", "timestamp": "2021-01-13T02:27:02.924191Z", "repo_name": "eggordeev/geotask", "path": "/geoTask/src/main/java/com/example/GeoTask/asynctasks/LoadPlaceFromGoogleGeocoderAsyncTask.java", "source": "the-stack-v2", "method_name": "onPostExecute", "class_name": "LoadPlaceFromGoogleGeocoderAsyncTask", "index": 2705, "label": 1}
{"input": "public Criteria andUserStNameGreaterThan(String value) {\r\n            addCriterion(\"user_st_name >\", value, \"userStName\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2022-12-10T20:39:24.451742Z", "repo_name": "TangHui-ops/myProject", "path": "/后端/weixingxiaocx/src/main/java/cn/bdqn/mbg/model/UserStateTypeExample.java", "source": "the-stack-v2", "method_name": "andUserStNameGreaterThan", "class_name": "GeneratedCriteria", "index": 2706, "label": 1}
{"input": "@Test\n    @Transactional\n    void deleteCorretor() throws Exception {\n        \n        corretorRepository.saveAndFlush(corretor);\n\n        int databaseSizeBeforeDelete = corretorRepository.findAll().size();\n\n        \n        restCorretorMockMvc\n            .perform(delete(ENTITY_API_URL_ID, corretor.getId()).accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNoContent());\n\n        \n        List<Corretor> corretorList = corretorRepository.findAll();\n        assertThat(corretorList).hasSize(databaseSizeBeforeDelete - 1);\n    }", "timestamp": "2023-04-25T08:10:07.834277Z", "repo_name": "ceduardo-roque/easyinsurance-hybrid", "path": "/src/test/java/br/com/fiap/easyinsurance/web/rest/CorretorResourceIT.java", "source": "the-stack-v2", "method_name": "deleteCorretor", "class_name": "CorretorResourceIT", "index": 2707, "label": 1}
{"input": "@Override\n    public Map<DefDescriptor<AttributeDef>, AttributeDef> getAttributeDefs() throws QuickFixException {\n        Map<DefDescriptor<AttributeDef>, AttributeDef> map = new LinkedHashMap<DefDescriptor<AttributeDef>, AttributeDef>();\n        if (extendsDescriptor != null) {\n            map.putAll(getSuperDef().getAttributeDefs());\n        }\n\n        for (DefDescriptor<InterfaceDef> intf : interfaces) {\n            InterfaceDef intfDef = intf.getDef();\n            for (Map.Entry<DefDescriptor<AttributeDef>, AttributeDef> entry : intfDef.getAttributeDefs().entrySet()) {\n                DefDescriptor<AttributeDef> desc = entry.getKey();\n                if (map.containsKey(desc)) {\n                    \n                }\n                map.put(desc, entry.getValue());\n            }\n        }\n\n        if (map.isEmpty()) {\n            return attributeDefs;\n        } else {\n            map.putAll(attributeDefs);\n\n            return Collections.unmodifiableMap(map);\n        }\n    }", "timestamp": "2020-12-14T02:11:21.814429Z", "repo_name": "fawnapp/aura", "path": "/aura-impl/src/main/java/org/auraframework/impl/root/component/BaseComponentDefImpl.java", "source": "the-stack-v2", "method_name": "getAttributeDefs", "class_name": "BaseComponentDefImpl", "index": 2708, "label": 1}
{"input": "@Override\n    public synchronized void setLoader(Loader loader) {\n\n        super.setLoader(loader);\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setLoader", "class_name": "StandardContext", "index": 2709, "label": 1}
{"input": "@GetMapping(\"/findTypes\")\n    public List<Type> findTypes(){\n        return typeRepository.findAll();\n    }", "timestamp": "2020-09-25T16:48:33.897717Z", "repo_name": "zhangzihao0123/orderingSystem", "path": "/microservice/menu/src/main/java/com/zzh/menu/Controller/MenuHandler.java", "source": "the-stack-v2", "method_name": "findTypes", "class_name": "MenuHandler", "index": 2710, "label": 1}
{"input": "public Criteria andVdef19LessThan(String value) {\r\n            addCriterion(\"VDEF19 <\", value, \"vdef19\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef19LessThan", "class_name": "GeneratedCriteria", "index": 2711, "label": 1}
{"input": "public void setCustom(Object item, String propertyName, Vector2 val)\n    {\n       getCustomPropertiesForItem(item, true).m_customPropertyMap_Vector2.put(propertyName, val);\n    }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/8/8_c35c0071965ffa2a49cabadc2a29a69aa9158202/RubeScene/8_c35c0071965ffa2a49cabadc2a29a69aa9158202_RubeScene_s.java", "source": "the-stack-v2", "method_name": "setCustom", "class_name": "RubeScene", "index": 2712, "label": 1}
{"input": "@Override \n        public void setCdmaRoamingPreferenceResponse(RadioResponseInfo info) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(69, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "setCdmaRoamingPreferenceResponse", "class_name": "Proxy", "index": 2713, "label": 1}
{"input": "@Override\n    public SequenceObservable<T> refresh() {\n        setExtraParam(null);\n        setCurrData(null);\n        super.success(new Success<T>() {\n            @Override\n            public void onSuccess(@NonNull T data) {\n                dispose();\n            }\n        });\n        super.faild(new Faild() {\n            @Override\n            public void onFaild(@NonNull Error error) {\n                Log.out(\"success.faild hash=\" + this.hashCode());\n                if (unreachableCallback != null)\n                    unreachableCallback.onUnreachable(error, getCurrPath());\n                nextUrl();\n            }\n        });\n        return this;\n    }", "timestamp": "2023-02-03T14:40:42.305750Z", "repo_name": "huxinjun/fastapi", "path": "/fastapi/src/main/java/org/pulp/fastapi/extension/SequenceObservable.java", "source": "the-stack-v2", "method_name": "refresh", "class_name": "SequenceObservable", "index": 2714, "label": 1}
{"input": "@Test\n    public void testIsLightColor_black() {\n        assertFalse(ThemeUtils.isLightColor(Color.BLACK));\n    }", "timestamp": "2022-01-15T12:16:50.544880Z", "repo_name": "one3chens/digits-android", "path": "/digits/src/test/java/com/digits/sdk/android/ThemeUtilsTest.java", "source": "the-stack-v2", "method_name": "testIsLightColor_black", "class_name": "ThemeUtilsTest", "index": 2715, "label": 1}
{"input": "public void testBlockComment() {\n\t\tlong previousCount = ast.modificationCount();\n\t\tfinal BlockComment x = ast.newBlockComment();\n\t\tassertTrue(ast.modificationCount() > previousCount);\n\t\tpreviousCount = ast.modificationCount();\n\t\tassertTrue(x.getAST() == ast);\n\t\tassertTrue(x.getParent() == null);\n\t\tassertTrue(x.getNodeType() == ASTNode.BLOCK_COMMENT);\n\t\tassertTrue(x.isBlockComment());\n\t\tassertTrue(!x.isLineComment());\n\t\tassertTrue(!x.isDocComment());\n\t\tassertTrue(x.getAlternateRoot() == null);\n\t\tassertTrue(x.structuralPropertiesForType() == \n\t\t\tBlockComment.propertyDescriptors(ast.apiLevel()));\n\t\t\n\t\tassertTrue(ast.modificationCount() == previousCount);\n\n\t\ttAlternateRoot(x);\n\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "testBlockComment", "class_name": "ASTTest", "index": 2716, "label": 1}
{"input": "private void doPushMessage(AbstractMessage message) {\n        log.trace(\"doPushMessage: {}\", message.getMessageType());\n        IMessageOutput out = msgOut.get();\n        if (out != null) {\n            try {\n                out.pushMessage(message);\n                if (message instanceof RTMPMessage) {\n                    IRTMPEvent body = ((RTMPMessage) message).getBody();\n                    \n                    lastMessageTs = body.getTimestamp();\n                    IoBuffer streamData = null;\n                    if (body instanceof IStreamData && (streamData = ((IStreamData<?>) body).getData()) != null) {\n                        bytesSent.addAndGet(streamData.limit());\n                    }\n                }\n            } catch (IOException err) {\n                log.error(\"Error while pushing message\", err);\n            }\n        } else {\n            log.warn(\"Push message failed due to null output pipe\");\n        }\n    }", "timestamp": "2023-06-22T03:27:38.095086Z", "repo_name": "guyueyuqi/red5-server-common", "path": "/src/main/java/org/red5/server/stream/PlayEngine.java", "source": "the-stack-v2", "method_name": "doPushMessage", "class_name": "PlayEngine", "index": 2717, "label": 1}
{"input": "public QuestionScope fromRole(String roleId) {\n    if (roleId.equals(userRoleApplicant.getRoleId())) {\n      return QuestionScope.APPLICANT;\n    }\n    if (roleId.equals(userRoleAdmin.getRoleId())) {\n      return QuestionScope.BOTH;\n    }\n    if (roleId.equals(userRoleCaseworker.getRoleId())) {\n      return QuestionScope.BOTH;\n    }\n    throw new IllegalArgumentException(String.format(\"Unknown role '%s'.\", roleId));\n  }", "timestamp": "2023-07-12T10:34:53.003186Z", "repo_name": "DEFRA/trade-phes", "path": "/plants-form-configuration-service/src/main/java/uk/gov/defra/plants/formconfiguration/helper/QuestionScopeHelper.java", "source": "the-stack-v2", "method_name": "fromRole", "class_name": "QuestionScopeHelper", "index": 2718, "label": 1}
{"input": "protected @Override void setUp() throws Exception {\n        super.setUp();\n        MockLookup.setInstances(new SimpleFileOwnerQueryImplementation(), AntBasedTestUtil.testAntBasedProjectType());\n        scratch = TestUtil.makeScratchDir(this);\n        projdir = scratch.createFolder(\"proj\"); \n        cpRoots1 = new FileObject[2];\n        cpRoots1[0] = scratch.createFolder(\"cpRoot1\"); \n        cpRoots1[1] = scratch.createFolder(\"cpRoot2\"); \n        cpRoots2 = new FileObject[2];\n        cpRoots2[0] = scratch.createFolder(\"cpRoot3\"); \n        cpRoots2[1] = scratch.createFolder(\"cpRoot4\"); \n        helper = ProjectGenerator.createProject(projdir, \"test\"); \n        evaluator = helper.getStandardPropertyEvaluator();\n        setClassPath(new String[] {PROP_NAME_1, PROP_NAME_2}, new FileObject[][] {cpRoots1, cpRoots2});\n    }", "timestamp": "2023-08-29T15:32:41.838270Z", "repo_name": "apache/netbeans", "path": "/java/java.project/test/unit/src/org/netbeans/spi/java/project/classpath/support/ProjectClassPathImplementationTest.java", "source": "the-stack-v2", "method_name": "setUp", "class_name": "ProjectClassPathImplementationTest", "index": 2719, "label": 1}
{"input": "@Test\n\tpublic void testIsNotEqualFunction() {\n\t\tCodeInfo ci1 = new CodeInfo(\"test\");\n\t\tci1.addFunction(mock(FunctionInfo.class));\n\t\tCodeInfo ci2 = new CodeInfo(\"test\");\n\t\tAssert.assertNotEquals(ci1, ci2);\n\t\tAssert.assertNotEquals(ci1.hashCode(), ci2.hashCode());\n\t}", "timestamp": "2023-08-02T11:10:39.436416Z", "repo_name": "lightningbug-io/lightningbug-maven-plugin", "path": "/src/test/java/io/lightningbug/domain/CodeInfoTest.java", "source": "the-stack-v2", "method_name": "testIsNotEqualFunction", "class_name": "CodeInfoTest", "index": 2720, "label": 1}
{"input": "@Override\n    public void createOrg(OrgDTO orgDTO) {\n        \n        OrgEntity orgNameEntity = getByOrgName(orgDTO.getOrgName());\n        if (Objects.nonNull(orgNameEntity)) {\n            throw new AppException(ErrorCode.ORG_NAME_REPEAT);\n        }\n        String loginNum = BaseContextUtil.getLoginNum();\n        OrgEntity entity = new OrgEntity();\n        BeanUtils.copyProperties(orgDTO, entity);\n        entity.setCreateBy(loginNum);\n        entity.setEditBy(loginNum);\n        boolean saveOrgFlag = this.save(entity);\n        if (!saveOrgFlag) {\n            throw new AppException(ErrorCode.DB_REQ_ERR);\n        }\n    }", "timestamp": "2023-01-19T01:29:31.413841Z", "repo_name": "aloofcoder/web-falsework", "path": "/falsework-admin/src/main/java/github/aloofcoder/falsework/admin/service/impl/OrgServiceImpl.java", "source": "the-stack-v2", "method_name": "createOrg", "class_name": "OrgServiceImpl", "index": 2721, "label": 1}
{"input": "public Criteria andVdef16GreaterThan(String value) {\r\n            addCriterion(\"VDEF16 >\", value, \"vdef16\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef16GreaterThan", "class_name": "GeneratedCriteria", "index": 2722, "label": 1}
{"input": "@GraphProperty(interceptor = StringToHybrisEnumValueConverter.class)\n\tpublic String getResult()\n\t{\n\t\treturn result;\n\t}", "timestamp": "2022-11-28T12:15:32.049256Z", "repo_name": "BaggaShivanshu2/hybris-bookstore-tutorial", "path": "/hybris/bin/ext-platform-optional/platformwebservices/custom/src/de/hybris/platform/cronjob/customdto/CronJobDTO.java", "source": "the-stack-v2", "method_name": "getResult", "class_name": "CronJobDTO", "index": 2723, "label": 1}
{"input": "static void ascendingSort(int array[]) {\r\n        int size = array.length, i;\r\n        \r\n        for (i = 1; i < size; i++) {\r\n            int key = array[i];\r\n            int j = i - 1;\r\n            \r\n            while (j >= 0 && key < array[j]) {\r\n                array[j + 1] = array[j];\r\n                --j;\r\n            }\r\n            array[j + 1] = key;\r\n        }\r\n    }", "timestamp": "2023-02-23T01:30:21.922916Z", "repo_name": "srkunche/sdet", "path": "/java/Activity1_4.java", "source": "the-stack-v2", "method_name": "ascendingSort", "class_name": "Activity1_4", "index": 2724, "label": 1}
{"input": "@Override\n\tpublic List<Asset> searchAssetByDate(String date) throws AssetNotFoundException, SQLException {\n\t\tList<Asset> a=dao.getAssetByDate(date);\n\t\treturn a;\n\t}", "timestamp": "2023-08-03T13:18:26.464330Z", "repo_name": "aparajitahalder/Codefury", "path": "/src/main/java/com/demo/service/assetService/AssetInterfaceImpl.java", "source": "the-stack-v2", "method_name": "searchAssetByDate", "class_name": "AssetInterfaceImpl", "index": 2725, "label": 1}
{"input": "@Override\n  protected void afterCommitOperations() {\n    super.afterCommitOperations();\n    OLiveQueryHook.notifyForTxChanges(this);\n    OLiveQueryHookV2.notifyForTxChanges(this);\n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "afterCommitOperations", "class_name": "ODatabaseDocumentEmbedded", "index": 2726, "label": 1}
{"input": "public void testBug124469k() throws CoreException {\n\tIType type = getClassFile(\"JavaSearchBugs\", \"lib/b124469.jar\", \"pack\", \"E.class\").getType();\n\tIField field = type.getField(\"CAF\");\n\tsearch(field, REFERENCES);\n\tassertSearchResults(\n\t\t\"lib/b124469.jar test.F.field EXACT_MATCH\\n\" +\n\t\t\"lib/b124469.jar test.F.field EXACT_MATCH\\n\" +\n\t\t\"lib/b124469.jar test.F.field EXACT_MATCH\\n\" +\n\t\t\"lib/b124469.jar test.F.field EXACT_MATCH\\n\" +\n\t\t\"lib/b124469.jar test.F.field EXACT_MATCH\\n\" +\n\t\t\"lib/b124469.jar\"0\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug124469k", "class_name": "JavaSearchBugsTests", "index": 2727, "label": 1}
{"input": "public static int getInterval(String beginMonth, String endMonth) {\n\t\t\tint intBeginYear = Integer.parseInt(beginMonth.substring(0, 4));\n\t\t\tint intBeginMonth = Integer.parseInt(beginMonth.substring(beginMonth\n\t\t\t\t\t.indexOf(\"-\") + 1));\n\t\t\tint intEndYear = Integer.parseInt(endMonth.substring(0, 4));\n\t\t\tint intEndMonth = Integer.parseInt(endMonth.substring(endMonth\n\t\t\t\t\t.indexOf(\"-\") + 1));\n\n\t\t\treturn ((intEndYear - intBeginYear) * 12)\n\t\t\t\t\t+ (intEndMonth - intBeginMonth) + 1;\n\t\t}", "timestamp": "2020-04-03T19:08:02.936008Z", "repo_name": "xhly521/AAHelper", "path": "/app/src/main/java/com/xhly/godutch/utility/DateTools.java", "source": "the-stack-v2", "method_name": "getInterval", "class_name": "DateTools", "index": 2728, "label": 1}
{"input": "public int dequeue() {\n\t\tif(empty()) {\n\t\t\tSystem.out.println(\"Queue is Empty.\");\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\tint item = queArr[front];\n\t\t\n\t\tif(rear == front) {\n\t\t\trear = front = -1;\n\t\t}\n\t\telse {\n\t\t\tfront = (++front) % queArr.length;\n\t\t}\n\t\tsize--;\n\t\treturn item;\n\t}", "timestamp": "2020-06-11T02:25:51.495133Z", "repo_name": "mallickrohan08/DS-Queue", "path": "/QueueUsingArray.java", "source": "the-stack-v2", "method_name": "dequeue", "class_name": "Queue", "index": 2729, "label": 1}
{"input": "public static int getDaysOfCurMonth() {\n\t\t\tint curyear = new Integer(getCurrentYear()).intValue(); \n\t\t\tint curMonth = new Integer(getCurrentMonth()).intValue();\n\t\t\tint mArray[] = new int[] { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30,\n\t\t\t\t\t31 };\n\t\t\t\n\t\t\tif ((curyear % 400 == 0)\n\t\t\t\t\t|| ((curyear % 100 != 0) && (curyear % 4 == 0))) {\n\t\t\t\tmArray[1] = 29;\n\t\t\t}\n\t\t\treturn mArray[curMonth - 1];\n\t\t\t\n\t\t\t\n\t\t}", "timestamp": "2020-04-03T19:08:02.936008Z", "repo_name": "xhly521/AAHelper", "path": "/app/src/main/java/com/xhly/godutch/utility/DateTools.java", "source": "the-stack-v2", "method_name": "getDaysOfCurMonth", "class_name": "DateTools", "index": 2730, "label": 1}
{"input": "public void insertRecord(EJDataRecord insertRecord)\n    {\n        getBlock().insertRecord(insertRecord);\n    }", "timestamp": "2023-02-18T11:13:58.949927Z", "repo_name": "entirej/core", "path": "/entirej-core/src/org/entirej/framework/core/data/controllers/EJEditableBlockController.java", "source": "the-stack-v2", "method_name": "insertRecord", "class_name": "EJEditableBlockController", "index": 2731, "label": 1}
{"input": "public Criteria andVdef11LessThanOrEqualTo(String value) {\r\n            addCriterion(\"VDEF11 <=\", value, \"vdef11\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef11LessThanOrEqualTo", "class_name": "GeneratedCriteria", "index": 2732, "label": 1}
{"input": "public void setBotonApagarVerdeL2(JButton botonApagarVerdeL2) {\r\n\t\tthis.botonApagarVerdeL2 = botonApagarVerdeL2;\r\n\t}", "timestamp": "2021-07-09T22:13:09.290917Z", "repo_name": "DevOscarFA/SemaforoServidor", "path": "/src/presentacion/Vista.java", "source": "the-stack-v2", "method_name": "setBotonApagarVerdeL2", "class_name": "Vista", "index": 2733, "label": 1}
{"input": "public static void main(String[] args) {\n        ControleRemoto c = new ControleRemoto();\n        c.ligar();\n        c.menosVolume();\n        c.abrirMenu();\n    }", "timestamp": "2023-02-26T07:54:00.427213Z", "repo_name": "liaoliveiralps/projeto-net-beans-curso-em-video", "path": "/AulaPOO6/src/aulapoo6/AulaPOO6.java", "source": "the-stack-v2", "method_name": "main", "class_name": "AulaPOO6", "index": 2734, "label": 1}
{"input": "private void setUpMap() {\n\t\tmMap.setMyLocationEnabled(true);\n\t\tmMap.setOnMapClickListener(this);\n\t\tmMap.setOnMapLongClickListener(this);\n\t\tmMap.setOnCameraChangeListener(this);\n\n\t\tmMap.setOnMarkerClickListener(this);\n\t\tmMap.setOnInfoWindowClickListener(this);\n\n\t\tLocation lastLoc = mServiceConnector.getService().getLocationProxy()\n\t\t\t\t.getLastLocation();\n\t\tif (lastLoc != null)\n\t\t\tmMap.moveCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(\n\t\t\t\t\tlastLoc.getLatitude(), lastLoc.getLongitude()), 15));\n\t\telse\n\t\t\tmMap.moveCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(\n\t\t\t\t\t51.0456, 13.7366), 12));\n\t}", "timestamp": "2021-01-10T20:04:03.310715Z", "repo_name": "mobilis/FriendFinder", "path": "/FriendFinder_Android/src/de/tudresden/inf/rn/mobilis/friendfinder/MapActivity.java", "source": "the-stack-v2", "method_name": "setUpMap", "class_name": "MapActivity", "index": 2735, "label": 1}
{"input": "String getLastPartAndCurrent(int position) {\n        return scanner.getPart(position, scanner.getPosition());\n    }", "timestamp": "2023-09-03T10:33:34.963710Z", "repo_name": "svn2github/hsqldb", "path": "/base/branches/odbcproto1/src/org/hsqldb/ParserBase.java", "source": "the-stack-v2", "method_name": "getLastPartAndCurrent", "class_name": "ParserBase", "index": 2736, "label": 1}
{"input": "private synchronized void ensureRegexClassifierAccess() {\n        if (customRegexClassifierAccess == null) {\n            LOGGER.info(String.format(INITIALIZE_ACCESS, CUSTOM, REGEX_SUBFOLDER_NAME, tenantID));\n            customRegexClassifierAccess = new CustomRegexClassifierAccess(this);\n            regexClassifier = customRegexClassifierAccess.readUserDefinedClassifier();\n        }\n    }", "timestamp": "2021-05-01T16:06:31.746782Z", "repo_name": "MarkChappell/data-quality", "path": "/dataquality-semantic/src/main/java/org/talend/dataquality/semantic/api/CustomDictionaryHolder.java", "source": "the-stack-v2", "method_name": "ensureRegexClassifierAccess", "class_name": "CustomDictionaryHolder", "index": 2737, "label": 1}
{"input": "@RemoteMethod\n    public List<TestmodelDicItemVO> queryDicListByClassifyId(TestmodelDicItemVO testmodelDicItemVO) {\n        return testmodelDicItemFacade.queryDicListByClassifyId(testmodelDicItemVO);\n        \n    }", "timestamp": "2018-04-08T08:43:15.857904Z", "repo_name": "happy6eve/cap-other", "path": "/cap-test/src/main/java/com/comtop/cap/test/preference/action/TestmodelDicItemAction.java", "source": "the-stack-v2", "method_name": "queryDicListByClassifyId", "class_name": "TestmodelDicItemAction", "index": 2738, "label": 1}
{"input": "@Override\n    public Builder setServicePath(String servicePath) {\n      return (Builder) super.setServicePath(servicePath);\n    }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setServicePath", "class_name": "Builder", "index": 2739, "label": 1}
{"input": "@Override\n  protected EClass eStaticClass()\n  {\n    return GreedySnakePackage.Literals.INITIAL_FOOD_SPECIFICATIN;\n  }", "timestamp": "2023-04-11T06:06:46.490724Z", "repo_name": "Landy7/MDD", "path": "/org.xtext.example.group16.GreedySnake/src-gen/org/xtext/example/mydsl2/group16/greedySnake/impl/InitialFoodSpecificatinImpl.java", "source": "the-stack-v2", "method_name": "eStaticClass", "class_name": "InitialFoodSpecificatinImpl", "index": 2740, "label": 1}
{"input": "public void setArticuloEnVenta(String articuloEnVenta) {\r\n        this.articuloEnVenta = articuloEnVenta;\r\n    }", "timestamp": "2021-06-30T10:53:41.657968Z", "repo_name": "ErickESC/AdmInVic", "path": "/ProyectoAYDAdminVic/src/mx/uam/ayd/proyecto/negocio/dominio/Venta.java", "source": "the-stack-v2", "method_name": "setArticuloEnVenta", "class_name": "Venta", "index": 2741, "label": 1}
{"input": "@Override\n\tprotected void initChannel(SocketChannel arg0) throws Exception {\n\t    arg0.pipeline().addLast(new LineBasedFrameDecoder(1024));\n\t    arg0.pipeline().addLast(new StringDecoder());\n\t    arg0.pipeline().addLast(new TimeServerHandler());\n\t}", "timestamp": "2022-07-12T04:11:02.960324Z", "repo_name": "huaxueyihao/NoteOfStudy", "path": "/A04.Netty/B01.Netty_Book/doc/nettybook2-master/src/com/phei/netty/frame/correct/TimeServer.java", "source": "the-stack-v2", "method_name": "initChannel", "class_name": "ChildChannelHandler", "index": 2742, "label": 1}
{"input": "public static int CopySdcardFile(String fromFile, String toFile) {\n        try {\n            InputStream fosfrom = new FileInputStream(fromFile);\n            OutputStream fosto = new FileOutputStream(toFile);\n            byte bt[] = new byte[1024];\n            int c;\n            while ((c = fosfrom.read(bt)) > 0) {\n                fosto.write(bt, 0, c);\n            }\n            fosfrom.close();\n            fosto.close();\n            return 0;\n\n        } catch (Exception ex) {\n            return -1;\n        }\n    }", "timestamp": "2021-01-12T12:42:11.003621Z", "repo_name": "wisn-mirror/AMClient", "path": "/PMClient/lib_pm/src/main/java/com/wisn/pmlib/utils/FileUtilsOld.java", "source": "the-stack-v2", "method_name": "CopySdcardFile", "class_name": "FileUtilsOld", "index": 2743, "label": 1}
{"input": "public boolean receiveAudio(boolean receive) {\n        boolean oldValue = receiveAudio;\n        \n        if (receiveAudio != receive) {\n            receiveAudio = receive;\n        }\n        return oldValue;\n    }", "timestamp": "2023-06-22T03:27:38.095086Z", "repo_name": "guyueyuqi/red5-server-common", "path": "/src/main/java/org/red5/server/stream/PlayEngine.java", "source": "the-stack-v2", "method_name": "receiveAudio", "class_name": "PlayEngine", "index": 2744, "label": 1}
{"input": "@Test public void testWinAggDenseRankValuesDesc() {\n    CalciteAssert.hr()\n        .query(\"select  \\\"deptno\\\",\\n\"\n            + \" dense_rank() over (order by \\\"deptno\\\" desc) as r\\n\"\n            + \"from \\\"hr\\\".\\\"emps\\\"\")\n        .typeIs(\n            \"[deptno INTEGER NOT NULL, R BIGINT NOT NULL]\")\n        .returnsUnordered(\n            \"deptno=10; R=2\",\n            \"deptno=10; R=2\",\n            \"deptno=10; R=2\",\n            \"deptno=20; R=1\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testWinAggDenseRankValuesDesc", "class_name": "JdbcTest", "index": 2745, "label": 1}
{"input": "private void initAllIdeas() {\n\n        business_idea_btn=findViewById(R.id.Business_Ideas);\n        Indian_Startup_Procedures_btn=findViewById(R.id.Indian_Startup_Procedures);\n\n\n\n\n\n\n        business_idea_btn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                sendToBusinessideaActivity();\n            }\n        });\n        Indian_Startup_Procedures_btn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                sendtoIndian_Startup_Procedures();\n            }\n        });\n    }", "timestamp": "2020-05-24T22:49:45.368657Z", "repo_name": "jwngma/Startup-Ideas", "path": "/app/src/main/java/com/startupideas/startupideas/MainActivity.java", "source": "the-stack-v2", "method_name": "initAllIdeas", "class_name": "MainActivity", "index": 2746, "label": 1}
{"input": "protected void expectConstraintViolationWithMessage() {\n        this.expectedException.expect(ConstraintViolationException.class);\n    }", "timestamp": "2022-03-22T02:13:22.843800Z", "repo_name": "bellmit/tastr", "path": "/tastr-infrastructure/src/test/java/eu/tastr/infrastructure/test/UnitTest.java", "source": "the-stack-v2", "method_name": "expectConstraintViolationWithMessage", "class_name": "UnitTest", "index": 2747, "label": 1}
{"input": "@Override\n    public Iterable<byte[]> get(ChangeData input, FillArgs args)\n        throws OrmException {\n      return toProtos(CODEC, input.currentApprovals());\n    }", "timestamp": "2021-01-16T21:01:21.667768Z", "repo_name": "runt18/gerrit", "path": "/gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeField.java", "source": "the-stack-v2", "method_name": "get", "class_name": "PatchSetApprovalProtoField", "index": 2748, "label": 1}
{"input": "@Override\n  public void leaveFile(AstNode node) {\n    for (Map.Entry<String, Integer> literalOccurences : literalsOccurrences.entrySet()) {\n      Integer occurences = literalOccurences.getValue();\n      String literal = literalOccurences.getKey();\n      getContext().createLineViolation(this, \"Use the correct type instead of \" + literal + \" (\" + occurences + \" times).\", firstOccurrence.get(literal));\n    }\n  }", "timestamp": "2021-01-18T08:50:23.696480Z", "repo_name": "chocks/sonar-cxx", "path": "/cxx-checks/src/main/java/org/sonar/cxx/checks/UseCorrectTypeCheck.java", "source": "the-stack-v2", "method_name": "leaveFile", "class_name": "UseCorrectTypeCheck", "index": 2749, "label": 1}
{"input": "public void testBug110060_AllTypeNames09() throws CoreException {\n\tsetUpBug110060_TypePattern();\n\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();\n\tsearchAllTypeNames(\"aaa\", SearchPattern.R_CAMELCASE_MATCH | SearchPattern.R_PREFIX_MATCH | SearchPattern.R_CASE_SENSITIVE, requestor);\n\t\n\tassertSearchResults(\n\t\t\"Unexpected all type names\",\n\t\t\"\",\n\t\trequestor);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110060_AllTypeNames09", "class_name": "JavaSearchBugsTests", "index": 2750, "label": 1}
{"input": "private void generateParenthesis(List<String> list, String s, int f, int b, int n) {\n\t\tif (s.length() == n + n) {\n\t\t\tlist.add(s);\n\t\t\treturn;\n\t\t}\n\t\tif (f < n)\n\t\t\tgenerateParenthesis(list, s + \"(\", f +1, b, n);\n\t\tif (b < f)\n\t\t\tgenerateParenthesis(list, s + \")\", f, b+1, n);\n\t}", "timestamp": "2021-04-28T02:56:40.843125Z", "repo_name": "liuxiao/LeetCodeExcercises", "path": "/src/com/cloudlewis/leetcode50/GenerateParentheses22.java", "source": "the-stack-v2", "method_name": "generateParenthesis", "class_name": "GenerateParentheses22", "index": 2751, "label": 1}
{"input": "HsqlException unexpectedToken() {\n\n        if (token.tokenType == Tokens.X_ENDPARSE) {\n            return Error.error(ErrorCode.X_42590);\n        }\n\n        String tokenS = token.namePrePrefix != null ? token.namePrePrefix\n                                                    : token.namePrefix != null\n                                                      ? token.namePrefix\n                                                      : token.tokenString;\n\n        return Error.error(ErrorCode.X_42581, tokenS);\n    }", "timestamp": "2023-09-03T10:33:34.963710Z", "repo_name": "svn2github/hsqldb", "path": "/base/branches/odbcproto1/src/org/hsqldb/ParserBase.java", "source": "the-stack-v2", "method_name": "unexpectedToken", "class_name": "ParserBase", "index": 2752, "label": 1}
{"input": "@Override\n    public Map<String, MetaProperty<?>> metaPropertyMap() {\n      return _metaPropertyMap$;\n    }", "timestamp": "2020-12-02T16:35:36.745672Z", "repo_name": "emcleod/OG-Platform", "path": "/projects/OG-Master/src/main/java/com/opengamma/master/position/PositionDocument.java", "source": "the-stack-v2", "method_name": "metaPropertyMap", "class_name": "Meta", "index": 2753, "label": 1}
{"input": "public void setBotonEncenderVerdeL1(JButton botonEncenderVerdeL1) {\r\n\t\tthis.botonEncenderVerdeL1 = botonEncenderVerdeL1;\r\n\t}", "timestamp": "2021-07-09T22:13:09.290917Z", "repo_name": "DevOscarFA/SemaforoServidor", "path": "/src/presentacion/Vista.java", "source": "the-stack-v2", "method_name": "setBotonEncenderVerdeL1", "class_name": "Vista", "index": 2754, "label": 1}
{"input": "@Override\n    public void setCrossContext(boolean crossContext) {\n\n        boolean oldCrossContext = this.crossContext;\n        this.crossContext = crossContext;\n        support.firePropertyChange(\"crossContext\",\n                                   oldCrossContext,\n                                   this.crossContext);\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setCrossContext", "class_name": "StandardContext", "index": 2755, "label": 1}
{"input": "@Override\n    public View getView(int pos, View view, ViewGroup viewGroup) {\n        view = inflater.inflate(R.layout.custom_spinner_items, null);\n        ImageView icon = view.findViewById(R.id.imageView);\n        TextView name = view.findViewById(R.id.textView);\n        icon.setImageResource(categoryIcons[pos]);\n        name.setText(categoryNames[pos]);\n        return view;\n    }", "timestamp": "2021-09-10T05:13:22.596159Z", "repo_name": "kelth78/MySpinner", "path": "/app/src/main/java/com/creative/myspinner/CustomAdapter.java", "source": "the-stack-v2", "method_name": "getView", "class_name": "CustomAdapter", "index": 2756, "label": 1}
{"input": "@Bean\n\t@ConditionalOnBean(MetricsEndpoint.class)\n\t@ConditionalOnExpression(\"${endpoints.metrics.enabled:true}\")\n\tpublic MetricsMvcEndpoint metricsMvcEndpoint(MetricsEndpoint delegate) {\n\t\treturn new MetricsMvcEndpoint(delegate);\n\t}", "timestamp": "2021-01-18T14:54:31.844603Z", "repo_name": "Zoltin/spring-boot", "path": "/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java", "source": "the-stack-v2", "method_name": "metricsMvcEndpoint", "class_name": "EndpointWebMvcAutoConfiguration", "index": 2757, "label": 1}
{"input": "@Override\n    public void computeScroll() {\n        if (mScroller.computeScrollOffset()) {\n            scrollTo(mScroller.getCurrX(), 0);\n            Log.e(TAG, \"computeScroll  \" + mScroller.getCurrX());\n            postInvalidate();\n            if (mOnPageScrollListener != null) {\n                Log.e(TAG, \"offset=\" + (float) (getScrollX() * 1.0 / (getWidth())));\n                mOnPageScrollListener.onPageScrolled((float) (mScroller.getCurrX() * 1.0 / ((1) * getWidth())), position);\n            }\n        }\n    }", "timestamp": "2020-12-10T03:38:01.808987Z", "repo_name": "androidgwh/CustomFlowLayout", "path": "/app/src/main/java/com/gwh/customview/view/MyViewPager.java", "source": "the-stack-v2", "method_name": "computeScroll", "class_name": "MyViewPager", "index": 2758, "label": 1}
{"input": "void insertColumn(TableColumn column) {\t\r\n\tVector data = getDataLabels();\r\n\tVector images = getImages();\r\n\tString stringData[];\r\n\tImage imageData[];\r\n\tint index = column.getIndex();\r\n\r\n\tif (index < data.size()) {\r\n\t\tdata.insertElementAt(null, index);\r\n\t}\r\n\telse {\r\n\t\tdata.addElement(null);\r\n\t}\r\n\tstringData = new String[data.size()];\r\n\tdata.copyInto(stringData);\r\n\tsetText(stringData);\r\n\r\n\tif (index < images.size()) {\t\r\n\t\timages.insertElementAt(null, index);\r\n\t}\r\n\telse {\r\n\t\timages.addElement(null);\r\n\t}\r\n\timageData = new Image[images.size()];\r\n\timages.copyInto(imageData);\r\n\tsetImage(imageData);\r\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipseswt_cluster/56034/tar_1.java", "source": "the-stack-v2", "method_name": "insertColumn", "class_name": "TableItem", "index": 2759, "label": 1}
{"input": "@Override\n    public ASTNode visitLimitClause(final LimitClauseContext ctx) {\n        if (null != ctx.limitRowCountSyntax() && null != ctx.limitOffsetSyntax()) {\n            return isRowCountBeforeOffset(ctx) ? createLimitSegmentWhenRowCountBeforeOffset(ctx) : createLimitSegmentWhenRowCountAfterOffset(ctx);\n        }\n        return createLimitSegmentWhenRowCountOrOffsetAbsent(ctx);\n    }", "timestamp": "2020-09-10T15:32:50.163756Z", "repo_name": "avalon566/incubator-shardingsphere", "path": "/shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/impl/PostgreSQLDMLVisitor.java", "source": "the-stack-v2", "method_name": "visitLimitClause", "class_name": "PostgreSQLDMLVisitor", "index": 2760, "label": 1}
{"input": "@Override\n    public void setOverride(boolean override) {\n\n        boolean oldOverride = this.override;\n        this.override = override;\n        support.firePropertyChange(\"override\",\n                                   oldOverride,\n                                   this.override);\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setOverride", "class_name": "StandardContext", "index": 2761, "label": 1}
{"input": "@Override\n\tpublic View getChildView(int arg0, int arg1, boolean arg2, View arg3,\n\t\t\tViewGroup arg4) {\n\t\tViewHolder viewHolder;\n\t\tif (arg3 == null) {\n\t\t\targ3 = inflater.inflate(R.layout.serial_names, null);\n\t\t\tviewHolder = new ViewHolder();\n\t\t\tviewHolder.mTvSname = (TextView) arg3.findViewById(R.id.tv_sname);\n\t\t\tviewHolder.mIvSimage = (ImageView) arg3\n\t\t\t\t\t.findViewById(R.id.iv_simage);\n\t\t\targ3.setTag(viewHolder);\n\t\t} else {\n\t\t\tviewHolder = (ViewHolder) arg3.getTag();\n\t\t}\n\n\t\tviewHolder.mTvSname.setText(snames[arg0][arg1]);\n\t\tviewHolder.mTvSname.setTag(sids[arg0][arg1]);\n\t\tviewHolder.mIvSimage.setImageResource(simages[arg0][arg1]);\n\t\treturn arg3;\n\t}", "timestamp": "2021-04-28T22:48:02.958429Z", "repo_name": "xywyyyyy/second_hand_car", "path": "/second_hand_car/src/com/ywb/adapter/CategoryAdapter.java", "source": "the-stack-v2", "method_name": "getChildView", "class_name": "CategoryAdapter", "index": 2762, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_settings2);\n    }", "timestamp": "2021-05-12T05:12:31.964889Z", "repo_name": "emeruvia/Intermediate-Android-Google-Challenge", "path": "/S01/S06.01-Exercise-LaunchSettingsActivity/app/src/main/java/com/example/android/sunshine/SettingsActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "SettingsActivity", "index": 2763, "label": 1}
{"input": "protected void addCriterion(String condition, Object value, String property) {\r\n            if (value == null) {\r\n                throw new RuntimeException(\"Value for \" + property + \" cannot be null\");\r\n            }\r\n            criteria.add(new Criterion(condition, value));\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "addCriterion", "class_name": "GeneratedCriteria", "index": 2764, "label": 1}
{"input": "@Override\r\n    @TargetApi(Build.VERSION_CODES.N)\r\n    public RecordingStorageStatusManager getRecordingStorageStatusManager() {\r\n        if (mDvrStorageStatusManager == null) {\r\n            mDvrStorageStatusManager = new DvrStorageStatusManager(this);\r\n        }\r\n        return mDvrStorageStatusManager;\r\n    }", "timestamp": "2020-03-31T22:30:02.802799Z", "repo_name": "johnjcool/TV", "path": "/app/src/main/java/com/android/tv/TvApplication.java", "source": "the-stack-v2", "method_name": "getRecordingStorageStatusManager", "class_name": "TvApplication", "index": 2765, "label": 1}
{"input": "public void setUnloadDelay(long unloadDelay) {\n\n        long oldUnloadDelay = this.unloadDelay;\n        this.unloadDelay = unloadDelay;\n        support.firePropertyChange(\"unloadDelay\",\n                                   Long.valueOf(oldUnloadDelay),\n                                   Long.valueOf(this.unloadDelay));\n\n    }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "setUnloadDelay", "class_name": "StandardContext", "index": 2766, "label": 1}
{"input": "@RequestMapping(value = \"hi\")\n        public String sayHi(){\n            return  \"Hellor Spring Boot\";\n        }", "timestamp": "2020-03-22T19:57:06.495054Z", "repo_name": "a969146049/springTest", "path": "/src/main/java/org/java/spring/boot/demo/controller/DemoController.java", "source": "the-stack-v2", "method_name": "sayHi", "class_name": "DemoController", "index": 2767, "label": 1}
{"input": "@Test\n    @Transactional\n    public void getAllAuthoritiesByInfoIsEqualToSomething() throws Exception {\n        \n        authorityRepository.saveAndFlush(authority);\n\n        \n        defaultAuthorityShouldBeFound(\"info.equals=\" + DEFAULT_INFO);\n\n        \n        defaultAuthorityShouldNotBeFound(\"info.equals=\" + UPDATED_INFO);\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "getAllAuthoritiesByInfoIsEqualToSomething", "class_name": "AuthorityResourceIT", "index": 2768, "label": 1}
{"input": "@Profile(\"receiver\")\n    @Bean\n    public Tut1Receiver receiver() {\n        return new Tut1Receiver();\n    }", "timestamp": "2020-03-21T02:38:09.013418Z", "repo_name": "a-chauhan/rabbitmq-spring-tutorials", "path": "/src/main/java/org/springframework/amqp/tutorials/tut1/Tut1Config.java", "source": "the-stack-v2", "method_name": "receiver", "class_name": "Tut1Config", "index": 2769, "label": 1}
{"input": "@Test public void testValuesComposite() {\n    CalciteAssert.that()\n        .query(\"values (1, 'a'), (2, 'abc')\")\n        .returns(\"EXPR$0=1; EXPR$1=a  \\n\"\n            + \"EXPR$0=2; EXPR$1=abc\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testValuesComposite", "class_name": "JdbcTest", "index": 2770, "label": 1}
{"input": "private static String computeName( Datatype dt, Map m ) {\n \t\tif( dt instanceof XSDatatype ) {\n \t\t\tXSDatatype xsdt = (XSDatatype)dt;\n \t\t\tif( xsdt.getName()!=null && !m.containsValue(xsdt.getName()) )\n \t\t\t\treturn xsdt.getName();\n \t\t\t\n \t\t\treturn getNumberedName( xsdt.getConcreteType().getName(), 2, m );\n \t\t}\n \t\t\n \t\treturn getNumberedName( \"\", 0, m );\n \t}", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/6/6_7532b921b64d0f9159adb4080422cb222237a131/RuleFileGenerator/6_7532b921b64d0f9159adb4080422cb222237a131_RuleFileGenerator_s.java", "source": "the-stack-v2", "method_name": "computeName", "class_name": "RuleFileGenerator", "index": 2771, "label": 1}
{"input": "public static DocumentFragment createBlockForFldSimple( \n    \t\tWordprocessingMLPackage wmlPackage,\n    \t\tNodeIterator fldSimpleNodeIt,\n    \t\tNodeIterator childResults ) {\n    \t\n    \t\n    \t\n\n    \tCTSimpleField field = null;\n    \t\n\t\ttry {\n\t\t\tfield = (CTSimpleField)XmlUtils.unmarshal(\n\t\t\t\t\t\tfldSimpleNodeIt.nextNode(), \n\t\t\t\t\t\tContext.jc, \n\t\t\t\t\t\tCTSimpleField.class);\n\t\t} catch (JAXBException e1) {\n\t\t\te1.printStackTrace();\n\t\t}\n\t\t\t\n\t\tString instr = field.getInstr();\t\t\t\n\n\t\treturn handleField(instr, childResults);\n        \t\n   \t}", "timestamp": "2020-04-03T02:05:51.304271Z", "repo_name": "ermanishks/docx4j", "path": "/src/main/java/org/docx4j/convert/out/pdf/viaXSLFO/Conversion.java", "source": "the-stack-v2", "method_name": "createBlockForFldSimple", "class_name": "Conversion", "index": 2772, "label": 1}
{"input": "public static PushManager getInstance() {\n        if (_INSTANCE == null) {\n            _INSTANCE = new PushManager();\n        }\n        return _INSTANCE;\n    }", "timestamp": "2020-07-22T15:46:54.149313Z", "repo_name": "cmFodWx5YWRhdjEyMTA5/Gaana2", "path": "/sources/com/moengage/push/PushManager.java", "source": "the-stack-v2", "method_name": "getInstance", "class_name": "PushManager", "index": 2773, "label": 1}
{"input": "public void setAccountData(RoomEventFilter accountData) {\n        this.accountData = accountData;\n    }", "timestamp": "2022-08-27T10:11:24.483413Z", "repo_name": "ma1uta/jeon", "path": "/client-api/src/main/java/io/github/ma1uta/matrix/client/model/filter/RoomFilter.java", "source": "the-stack-v2", "method_name": "setAccountData", "class_name": "RoomFilter", "index": 2774, "label": 1}
{"input": "@Override\n        public void run() {\n            try {\n                Player player = new Player(this.bis);\n                player.play();\n                endThread.resume();\n            } catch (JavaLayerException e) {\n                e.printStackTrace();\n            }\n        }", "timestamp": "2023-04-15T13:53:26.916349Z", "repo_name": "wang-kui-die/MediaPlayer", "path": "/src/main/java/com/player/Player/AudioPlayer.java", "source": "the-stack-v2", "method_name": "run", "class_name": "PlayMusicThread", "index": 2775, "label": 1}
{"input": "public void writeToParcel(Parcel parcel, int i) {\n        parcel.writeParcelable(this.f1422b, i);\n    }", "timestamp": "2023-01-09T06:43:40.830942Z", "repo_name": "zteeed/tempmail-apks", "path": "/sources-2020-11-04-tempmail/sources/androidx/customview/view/AbsSavedState.java", "source": "the-stack-v2", "method_name": "writeToParcel", "class_name": "AbsSavedState", "index": 2776, "label": 1}
{"input": "static void rotateFrontClockwise(int[][] cube) {\n        int temp30 = cube[3][0];\n        int temp31 = cube[3][1];\n        cube[3][0] = cube[5][0];\n        cube[3][1] = cube[4][0];\n        cube[5][0] = cube[5][2];\n        cube[4][0] = cube[5][1];\n        cube[5][2] = cube[3][2];\n        cube[5][1] = cube[4][2];\n        cube[3][2] = temp30;\n        cube[4][2] = temp31;\n\n        int temp33 = cube[3][3];\n        int temp43 = cube[4][3];\n        int temp53 = cube[5][3];\n        cube[3][3] = cube[8][6];\n        cube[4][3] = cube[8][7];\n        cube[5][3] = cube[8][8];\n        cube[8][6] = cube[5][11];\n        cube[8][7] = cube[4][11];\n        cube[8][8] = cube[3][11];\n        cube[5][11] = cube[0][8];\n        cube[4][11] = cube[0][7];\n        cube[3][11] = cube[0][6];\n        cube[0][8] = temp33;\n        cube[0][7] = temp43;\n        cube[0][6] = temp53;\n    }", "timestamp": "2020-03-29T19:36:23.556615Z", "repo_name": "ronaldescobarj/a-algorithm", "path": "/src/com/company/Main.java", "source": "the-stack-v2", "method_name": "rotateFrontClockwise", "class_name": "Main", "index": 2777, "label": 1}
{"input": "private String shortJobIdFromContainerName(final String containerName) {\n    assertThat(containerName, startsWith(NAMESPACE + \"-\"));\n    final String name = containerName.substring(NAMESPACE.length() + 1);\n    final int lastUnderscore = name.lastIndexOf('_');\n    return name.substring(0, lastUnderscore).replace('_', ':');\n  }", "timestamp": "2021-01-11T17:01:51.211646Z", "repo_name": "fguerco/helios", "path": "/helios-services/src/test/java/com/spotify/helios/agent/SupervisorTest.java", "source": "the-stack-v2", "method_name": "shortJobIdFromContainerName", "class_name": "SupervisorTest", "index": 2778, "label": 1}
{"input": "@Test\n  public void setWriteThroughWithoutWriterFails() {\n    MutableConfiguration<Long, String> config = new MutableConfiguration<>();\n    config.setTypes(Long.class, String.class);\n    config.setWriteThrough(true);\n\n    try {\n      merger.mergeConfigurations(\"cache\", config);\n      fail(\"Expected exception as no CacheLoader factory is configured and read-through is enabled.\");\n    } catch (IllegalArgumentException e) {\n      assertThat(e.getMessage(), containsString(\"write-through\"));\n    }\n  }", "timestamp": "2021-08-23T22:08:57.063756Z", "repo_name": "leespy/ehcache3", "path": "/107/src/test/java/org/ehcache/jsr107/ConfigurationMergerTest.java", "source": "the-stack-v2", "method_name": "setWriteThroughWithoutWriterFails", "class_name": "ConfigurationMergerTest", "index": 2779, "label": 1}
{"input": "public AnnotationMethodRestContext annotationMethodRest() {\n\t\t\treturn getRuleContext(AnnotationMethodRestContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "annotationMethodRest", "class_name": "AnnotationMethodOrConstantRestContext", "index": 2780, "label": 1}
{"input": "@Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      SimpleNode simpleNode0 = new SimpleNode((-8));\n      \n      try { \n        simpleNode0.toString();\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         \n         \n         \n         verifyException(\"com.soops.CEN4010.JMCA.JParser.SimpleNode\", e);\n      }\n  }", "timestamp": "2023-04-17T20:05:40.560943Z", "repo_name": "bellmit/termite-replication", "path": "/tests/time/mosa/tests/s1007/19_jmca/evosuite-tests/com/soops/CEN4010/JMCA/JParser/SimpleNode_ESTest.java", "source": "the-stack-v2", "method_name": "test12", "class_name": "SimpleNode_ESTest", "index": 2781, "label": 1}
{"input": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        Log.d(TAG,\"onCreate is called\");\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        mGoogleApiClient = new GoogleApiClient\n                .Builder(this)\n                .addApi(Places.GEO_DATA_API)\n                .addApi(Places.PLACE_DETECTION_API)\n                .addConnectionCallbacks(this)\n                .addOnConnectionFailedListener(this)\n                .build();\n    }", "timestamp": "2021-01-10T05:30:07.032885Z", "repo_name": "pdroid84/LocationByPlacesAPI", "path": "/app/src/main/java/com/pdroid84/deb/locationbyplacesapi/MainActivity.java", "source": "the-stack-v2", "method_name": "onCreate", "class_name": "MainActivity", "index": 2782, "label": 1}
{"input": "@Override\n    public Doctor updateExisting(Doctor doctor) throws EntityNotFoundException {\n        Key key = Key.of(doctor.getHospitalId(), doctor.getDepartmentId(), doctor.getDoctorId());\n        if (spannerTemplate.existsById(REPOSITORY_CLASS, key)) {\n            spannerTemplate.update(doctor);\n            return doctor;\n        }\n        throw new EntityNotFoundException(doctor.getDoctorId());\n    }", "timestamp": "2022-06-09T18:31:42.193080Z", "repo_name": "yuliiakorabelska/data-jdbc", "path": "/src/main/java/com/korabelska/demo/repository/impl/DoctorRepositoryImpl.java", "source": "the-stack-v2", "method_name": "updateExisting", "class_name": "DoctorRepositoryImpl", "index": 2783, "label": 1}
{"input": "public void testBug110422a() throws CoreException {\n\tsearch(\"TestP\", TYPE, DECLARATIONS, SearchPattern.R_PREFIX_MATCH | SearchPattern.R_CASE_SENSITIVE);\n\tassertSearchResults(\n\t\t\"lib/b110422.jar b110422.TestPrefix EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug110422a", "class_name": "JavaSearchBugsTests", "index": 2784, "label": 1}
{"input": "public void driveAndCoast(double feet, double timeout) {\n    runAction(new DriveAction(feet, 0, false, timeout));\n  }", "timestamp": "2016-09-02T02:12:21.705847Z", "repo_name": "richtop/2014Jimmy", "path": "/RobotTemplate/src/com/team254/frc2014/AutoMode.java", "source": "the-stack-v2", "method_name": "driveAndCoast", "class_name": "AutoMode", "index": 2785, "label": 1}
{"input": "@java.lang.Override\n        public Cvssv3 parsePartialFrom(\n            com.google.protobuf.CodedInputStream input,\n            com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n            throws com.google.protobuf.InvalidProtocolBufferException {\n          return new Cvssv3(input, extensionRegistry);\n        }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "parsePartialFrom", "class_name": "Cvssv3", "index": 2786, "label": 1}
{"input": "private void RAIZActionPerformed(java.awt.event.ActionEvent evt) {\n        double N1, R;\n        N1= Double.parseDouble(NUM1.getText());\n        R = Math.sqrt(N1);RESULTADO.setText(String.valueOf(R));        \n    }", "timestamp": "2023-06-22T16:51:24.691992Z", "repo_name": "Guizal/Java", "path": "/src/ExemploCalculadora.java", "source": "the-stack-v2", "method_name": "RAIZActionPerformed", "class_name": "ExemploCalculadora", "index": 2787, "label": 1}
{"input": "public static String sendRandomCode(String uid, String pwd, String tel, String randomCode) throws IOException {\n\t\t\n\t\tString content = \"{\\\"code\\\":\\\"\"+ randomCode +\"\\\"}\";\n\t\t\n\t\treturn SMSUtils.send(uid, pwd, tel, content, CxConst.SMS_TEMPLATE_CODE_PASS);\n\n\t}", "timestamp": "2022-11-07T06:10:16.559471Z", "repo_name": "moutainhigh/suppplychain", "path": "/src/main/java/com/jeeplus/modules/sys/utils/UserUtils.java", "source": "the-stack-v2", "method_name": "sendRandomCode", "class_name": "UserUtils", "index": 2788, "label": 1}
{"input": "@Test public void testMethodParameterTypeMatch() {\n    CalciteAssert.that()\n        .query(\"SELECT mod(12.5, cast(3 as bigint))\")\n        .planContains(\"final java.math.BigDecimal v = \"\n            + \"$L4J$C$new_java_math_BigDecimal_12_5_\")\n        .planContains(\"org.apache.calcite.runtime.SqlFunctions.mod(v, \"\n            + \"$L4J$C$new_java_math_BigDecimal_3L_)\")\n        .returns(\"EXPR$0=0.5\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testMethodParameterTypeMatch", "class_name": "JdbcTest", "index": 2789, "label": 1}
{"input": "public boolean isValidGenericTld(String gTld) {\r\n        return GENERIC_TLD_LIST.contains(chompLeadingDot(gTld.toLowerCase()));\r\n    }", "timestamp": "2021-01-19T20:57:51.632920Z", "repo_name": "priyankb/CS362-001-SP17", "path": "/projects/bathulap/final/URLValidatorIncorrect/DomainValidator.java", "source": "the-stack-v2", "method_name": "isValidGenericTld", "class_name": "DomainValidator", "index": 2790, "label": 1}
{"input": "@Override\n        protected void onPreExecute() {\n            Toast.makeText( context,\"Saving\" , Toast.LENGTH_SHORT).show();\n        }", "timestamp": "2023-05-07T06:01:09.165134Z", "repo_name": "NikitaVladimirov2003/Samsung", "path": "/Zettelkasten/app/src/main/java/space/lopstory/zettelkasten/Helper.java", "source": "the-stack-v2", "method_name": "onPreExecute", "class_name": "MyAsyncTask", "index": 2791, "label": 1}
{"input": "protected void processRequest(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        response.setContentType(\"text/html;charset=UTF-8\");\n        try (PrintWriter out = response.getWriter()) {\n            try\n           {      \n                Connection conn=null;\n                conn = MYSQL_CONNECT.ConnectDB();\n                out.println(\"Remote DataBase Connected\");\n           }\n           catch (Exception ex){\n              JOptionPane.showMessageDialog(null, ex);\n           }\n        }\n    }", "timestamp": "2022-06-27T11:42:34.590714Z", "repo_name": "anjnpul/JAVA", "path": "/JAVA-MYSQL/src/main/java/TEST.java", "source": "the-stack-v2", "method_name": "processRequest", "class_name": "TEST", "index": 2792, "label": 1}
{"input": "private void assertHttpSpan(AbstractTracingSpan span) {\n        assertThat(span.getOperationName(), is(\"/test/testRequestURL\"));\n        assertComponent(span, ComponentsDefine.TOMCAT);\n        SpanAssert.assertTag(span, 0, \"http://localhost:8080/test/testRequestURL\");\n        assertThat(span.isEntry(), is(true));\n        SpanAssert.assertLayer(span, SpanLayer.HTTP);\n    }", "timestamp": "2021-01-02T16:56:37.447564Z", "repo_name": "amogege/skywalking", "path": "/apm-sniffer/apm-sdk-plugin/tomcat-7.x-8.x-plugin/src/test/java/org/apache/skywalking/apm/plugin/tomcat78x/TomcatInvokeInterceptorTest.java", "source": "the-stack-v2", "method_name": "assertHttpSpan", "class_name": "TomcatInvokeInterceptorTest", "index": 2793, "label": 1}
{"input": "public void updateName(String name,Object modelObj)\n    {\n        TVSeries tv = (TVSeries)modelObj;\n        tv.setName(name);\n        extJSDoc.getDataModel().updateTVSeries(tv);\n    }", "timestamp": "2021-01-21T03:21:05.823904Z", "repo_name": "cybernetics/itsnat", "path": "/inexperiments/src/java/inexp/extjsexam/tab/TVSeriesListTab.java", "source": "the-stack-v2", "method_name": "updateName", "class_name": "TVSeriesListTab", "index": 2794, "label": 1}
{"input": "public Criteria andVdef18In(List<String> values) {\r\n            addCriterion(\"VDEF18 in\", values, \"vdef18\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef18In", "class_name": "GeneratedCriteria", "index": 2795, "label": 1}
{"input": "@Test\n  public void testWaitToFinishUpdated() throws Exception {\n    assertEquals(State.UPDATED, mockWaitToFinishInState(State.UPDATED));\n  }", "timestamp": "2022-11-24T23:36:03.156413Z", "repo_name": "Sil1991/gcpdf-demo", "path": "/runners/google-cloud-dataflow-java/src/test/java/com/google/cloud/dataflow/sdk/runners/DataflowPipelineJobTest.java", "source": "the-stack-v2", "method_name": "testWaitToFinishUpdated", "class_name": "DataflowPipelineJobTest", "index": 2796, "label": 1}
{"input": "private boolean isContactAlreadyPresent(String str11, String str22) {\n\t\t\n\t\tdatabaseAdapter.open();\n\t\tCursor c = databaseAdapter.selectContact1(str11, str22);\n\t\t\t\tint i = 0;\n\t\tif (c != null) {\n\t\t\tboolean bool = c.moveToFirst();\n\t\t\ti = 0;\n\t\t\tif (bool)\n\t\t\t\ti = c.getInt(0);\n\t\t}\n\t\tc.close();\n\t\tdatabaseAdapter.close();\n\t\treturn i > 0;\n\n\t}", "timestamp": "2021-01-25T04:50:17.810237Z", "repo_name": "mgmcen/1192_design-of-android-application-for-emergency-help-manager-", "path": "/Emergency Help Manager/src/com/ehm/ws/AddContacts.java", "source": "the-stack-v2", "method_name": "isContactAlreadyPresent", "class_name": "AddContacts", "index": 2797, "label": 1}
{"input": "public java.util.Map<java.lang.String,java.lang.Long> getDependants() {\n    return _jspx_dependants;\n  }", "timestamp": "2021-08-19T19:48:52.740102Z", "repo_name": "akraju03/BookStore", "path": "/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/work/Catalina/localhost/Anil/org/apache/jsp/publishers_jsp.java", "source": "the-stack-v2", "method_name": "getDependants", "class_name": "publishers_jsp", "index": 2798, "label": 1}
{"input": "public static String[] getArrayDiffDays(String startDate, String endDate) {\n\t\t\tint LEN = 0; \n\t\t\t\n\t\t\tif (startDate.equals(endDate)) {\n\t\t\t\treturn new String[] { startDate };\n\t\t\t}\n\t\t\tDate sdate = null;\n\t\t\tif (startDate.indexOf(\"/\") > 0 && endDate.indexOf(\"/\") > 0) {\n\t\t\t\tsdate = getDateObj(startDate, \"/\"); \n\t\t\t}\n\t\t\tif (startDate.indexOf(\"-\") > 0 && endDate.indexOf(\"-\") > 0) {\n\t\t\t\tsdate = getDateObj(startDate, \"-\"); \n\t\t\t}\n\n\t\t\tLEN = getDiffDays(startDate, endDate);\n\t\t\tString[] dateResult = new String[LEN + 1];\n\t\t\tdateResult[0] = startDate;\n\t\t\tfor (int i = 1; i < LEN + 1; i++) {\n\t\t\t\tif (startDate.indexOf(\"/\") > 0 && endDate.indexOf(\"/\") > 0) {\n\t\t\t\t\tdateResult[i] = getFormatDateTime(getDateAdd(sdate, i),\n\t\t\t\t\t\t\t\"yyyy/MM/dd\");\n\t\t\t\t}\n\t\t\t\tif (startDate.indexOf(\"-\") > 0 && endDate.indexOf(\"-\") > 0) {\n\t\t\t\t\tdateResult[i] = getFormatDateTime(getDateAdd(sdate, i),\n\t\t\t\t\t\t\t\"/\"1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn dateResult;\n\t\t}", "timestamp": "2020-04-03T19:08:02.936008Z", "repo_name": "xhly521/AAHelper", "path": "/app/src/main/java/com/xhly/godutch/utility/DateTools.java", "source": "the-stack-v2", "method_name": "getArrayDiffDays", "class_name": "DateTools", "index": 2799, "label": 1}
{"input": "public void comparar()\r\n\t\t\t{\r\n\t\t\t\tif (str1 == str2)\r\n\t\t\t\t{\r\n\t\t\t\t\tSystem.out.println(\"str1 == str2\");\r\n\t\t\t\t}\r\n\t\t\t}", "timestamp": "2020-03-16T03:08:45.822070Z", "repo_name": "Pattricio/Factura", "path": "/factura-negocio/src/cl/stotomas/factura/negocio/init_24/copy3/TestingTry.java", "source": "the-stack-v2", "method_name": "comparar", "class_name": "compareStrings", "index": 2800, "label": 1}
{"input": "public boolean updateCelsius(Integer id, boolean celsius){\n        SQLiteDatabase db = this.getWritableDatabase();\n        ContentValues contentValues = new ContentValues();\n        contentValues.put(\"celsius\", celsius);\n        db.update(\"prefs\", contentValues, \"id = ? \", new String[] { Integer.toString(id) } );\n        Log.d(\"BTWeather - DB\", \"update celsius\");\n        return true;\n    }", "timestamp": "2020-03-22T13:09:56.343529Z", "repo_name": "JamesHarley/BTWeatherStation", "path": "/app/src/main/java/gnosisdevelopment/arduinobtweatherstation/DBHelper.java", "source": "the-stack-v2", "method_name": "updateCelsius", "class_name": "DBHelper", "index": 2801, "label": 1}
{"input": "public Library addBook(String title, int stock){\n        bookMap.put(title, new BookInfo(title,stock));\n      return this;\n    }", "timestamp": "2022-12-18T22:22:36.751302Z", "repo_name": "pdomins/POO", "path": "/Java/RepasoSegundoParcial/Ej7/Library.java", "source": "the-stack-v2", "method_name": "addBook", "class_name": "Library", "index": 2802, "label": 1}
{"input": "@JavascriptInterface\n    public void registershakeevent(final String s, final String s2, final String s3) {\n        final Context context = (Context)this.contextReference.get();\n        if (context != null) {\n            final d d = (d)this.adMarvelInternalWebViewReference.get();\n            if (d != null && !d.b()) {\n                final com.admarvel.android.util.d a = com.admarvel.android.util.d.a();\n                if (a != null && a.a(context)) {\n                    a.a(s);\n                    a.a(s2, s3);\n                    a.a(context, d);\n                }\n            }\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "registershakeevent", "class_name": "AdMarvelWebViewJSInterface", "index": 2803, "label": 1}
{"input": "@PostConstruct\n\tpublic void init() {\n\t\tthis.secretKey = Base64.encodeBase64String(secretKey.getBytes());\n\t}", "timestamp": "2022-12-16T09:58:05.318887Z", "repo_name": "alexsandrodeveloper/samsung-backend", "path": "/src/main/java/br/com/samsung/security/jwt/JwtTokenProvider.java", "source": "the-stack-v2", "method_name": "init", "class_name": "JwtTokenProvider", "index": 2804, "label": 1}
{"input": "private ProductQuantityVO createQuatityVO(int count, String prdId){\n        ProductQuantityVO productQuantityVO = new ProductQuantityVO();\n        productQuantityVO.setProductId(prdId);\n        productQuantityVO.setQuantity(count);\n        return  productQuantityVO;\n    }", "timestamp": "2020-03-26T19:20:23.969545Z", "repo_name": "baskar83/single-stone", "path": "/order-entry/src/test/java/com/singlestone/petstore/orderentry/OrderEntryApplicationTests.java", "source": "the-stack-v2", "method_name": "createQuatityVO", "class_name": "OrderEntryApplicationTests", "index": 2805, "label": 1}
{"input": "public String toString(){\r\n\t\tString result = \"\";\r\n\t\tfor (int i=0; i<data.size(); i++){\r\n\t\t\tresult+= rowString(i);\r\n\t\t}\r\n\t\treturn result;\r\n\t}", "timestamp": "2022-07-01T16:52:01.783312Z", "repo_name": "JaroslawHryszko/MISTA", "path": "/src/edit/GeneralTableModel.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "GeneralTableModel", "index": 2806, "label": 1}
{"input": "@Override\n    public void hello(String Username, User user) {\n        System.out.println(\"2\");\n    }", "timestamp": "2020-03-12T13:39:50.252415Z", "repo_name": "lzzzz4/practice", "path": "/src/main/java/cn/dubidubi/service/impl/TestService2Impl.java", "source": "the-stack-v2", "method_name": "hello", "class_name": "TestService2Impl", "index": 2807, "label": 1}
{"input": "private boolean isClientBufferEmpty() {\n        \n        if (lastMessageTs >= 0) {\n            \n            final long delta = System.currentTimeMillis() - playbackStart;\n            \n            final long buffered = lastMessageTs - delta;\n            log.trace(\"isClientBufferEmpty: timestamp {} delta {} buffered {}\", new Object[] { lastMessageTs, delta, buffered });\n            if (buffered < 0) {\n                return true;\n            }\n        }\n        return false;\n    }", "timestamp": "2023-06-22T03:27:38.095086Z", "repo_name": "guyueyuqi/red5-server-common", "path": "/src/main/java/org/red5/server/stream/PlayEngine.java", "source": "the-stack-v2", "method_name": "isClientBufferEmpty", "class_name": "PlayEngine", "index": 2808, "label": 1}
{"input": "@Override\n    public RangeOptions scanTable(String tableName) {\n      this.table = tableName;\n      this.range = TabletsSection.getRange();\n      return this;\n    }", "timestamp": "2023-08-31T07:35:03.455133Z", "repo_name": "ctubbsii/accumulo", "path": "/core/src/main/java/org/apache/accumulo/core/metadata/schema/TabletsMetadata.java", "source": "the-stack-v2", "method_name": "scanTable", "class_name": "Builder", "index": 2809, "label": 1}
{"input": "@Override\n    public HealthResult isHealthy() {\n        HealthResult healthResult = new HealthResult(componentName.getRawName());\n        healthResult.setHealthy(this.e == null);\n        healthResult.setHealthReport(aggregateBindingHealth(service.getBindings()));\n\n        return healthResult;\n    }", "timestamp": "2022-11-22T17:25:22.237840Z", "repo_name": "wjd198344/sofa-boot", "path": "/sofa-boot-project/sofa-boot-core/runtime-sofa-boot/src/main/java/com/alipay/sofa/runtime/service/component/ServiceComponent.java", "source": "the-stack-v2", "method_name": "isHealthy", "class_name": "ServiceComponent", "index": 2810, "label": 1}
{"input": "@Override\n        public void destroyItem(ViewGroup container, int position, Object object) {\n            container.removeView((View) object);\n        }", "timestamp": "2021-01-11T00:02:57.212147Z", "repo_name": "ranyiran/fulicenter", "path": "/app/src/main/java/cn/ran/flicenter/views/SlideAutoLoopView.java", "source": "the-stack-v2", "method_name": "destroyItem", "class_name": "SlideAutoLooopAdapter", "index": 2811, "label": 1}
{"input": "private void copyFileList(ArrayList<FileInfo> files) {\n\t\tsynchronized (mCurFileNameList) {\n\t\t\tmCurFileNameList.clear();\n\t\t\tfor (FileInfo f : files) {\n\t\t\t\tmCurFileNameList.add(f);\n\t\t\t}\n\t\t}\n\t}", "timestamp": "2021-05-08T20:47:50.226515Z", "repo_name": "jqorz/SEFileExplorer", "path": "/app/src/main/java/com/yang/file_explorer/apis/FileOperationHelper.java", "source": "the-stack-v2", "method_name": "copyFileList", "class_name": "FileOperationHelper", "index": 2812, "label": 1}
{"input": "@Override\n    public Builder setBatchPath(String batchPath) {\n      return (Builder) super.setBatchPath(batchPath);\n    }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setBatchPath", "class_name": "Builder", "index": 2813, "label": 1}
{"input": "@Test public void parameterizedAndWildcardTypesCannotHavePrimitiveArguments() throws Exception {\n    try {\n      Types.newParameterizedType(List.class, int.class);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertThat(expected).hasMessage(\"Unexpected primitive int. Use the boxed type.\");\n    }\n    try {\n      Types.subtypeOf(byte.class);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertThat(expected).hasMessage(\"Unexpected primitive byte. Use the boxed type.\");\n    }\n    try {\n      Types.subtypeOf(boolean.class);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertThat(expected).hasMessage(\"Unexpected primitive boolean. Use the boxed type.\");\n    }\n  }", "timestamp": "2021-04-27T09:37:55.346570Z", "repo_name": "nedtwigg/moshi", "path": "/moshi/src/test/java/com/squareup/moshi/TypesTest.java", "source": "the-stack-v2", "method_name": "parameterizedAndWildcardTypesCannotHavePrimitiveArguments", "class_name": "TypesTest", "index": 2814, "label": 1}
{"input": "public void finishTicketBusiness(Order order, List<Ticket> returnTickets)\n    {\n        try {\n            orderService.finishTicketBusiness(order, returnTickets);\n            if(order!=null&&order.getStatus()!=null&&(OrderStatus.出票失败.equals(order.getStatus())||OrderStatus.出票成功.equals(order.getStatus())||OrderStatus.部分出票成功.equals(order.getStatus()))){\n            \torderService.sendOrderDetailEmail(order);\n            }\n        }\n        catch (Exception e) {\n            if (e instanceof HibernateOptimisticLockingFailureException\n                    || e.getClass().getName().equals(\n                       StaleObjectStateException.class.getName())) {\n                try {\n                    Thread.sleep(1000);\n                }\n                catch (InterruptedException e1) {\n                }\n                finishTicketBusiness(order, returnTickets);\n                e.printStackTrace();\n            }\n        }\n\n    }", "timestamp": "2021-01-18T13:50:32.011316Z", "repo_name": "THEMING/TZLottery", "path": "/core/com/xsc/lottery/task/ticket/.svn/text-base/TicketTreatmentWork.java.svn-base", "source": "the-stack-v2", "method_name": "finishTicketBusiness", "class_name": "TicketTreatmentWork", "index": 2815, "label": 1}
{"input": "public static Unit createEntity(EntityManager em) {\n        Unit unit = new Unit()\n            .unitType(DEFAULT_UNIT_TYPE);\n        return unit;\n    }", "timestamp": "2022-12-21T12:20:33.195209Z", "repo_name": "bahmetpalanci/katilimcivatandas", "path": "/src/test/java/com/municipality/katilimcivatandas/web/rest/UnitResourceIT.java", "source": "the-stack-v2", "method_name": "createEntity", "class_name": "UnitResourceIT", "index": 2816, "label": 1}
{"input": "public static void drawHorizontalLine(int x, int y, int width, int color)\n  {\n    drawRect(x, y, width, y + 1, color);\n  }", "timestamp": "2023-07-23T11:39:57.368099Z", "repo_name": "SuperS123/SpicyClient", "path": "/minecraft/info/spicyclient/ui/Jello/RenderSystem.java", "source": "the-stack-v2", "method_name": "drawHorizontalLine", "class_name": "RenderSystem", "index": 2817, "label": 1}
{"input": "@Test public void testMetaDataPrimaryKeys()\n      throws ClassNotFoundException, SQLException {\n    Connection connection = CalciteAssert\n        .that(CalciteAssert.Config.REGULAR).connect();\n    DatabaseMetaData metaData = connection.getMetaData();\n    ResultSet resultSet = metaData.getPrimaryKeys(null, null, null);\n    assertFalse(resultSet.next()); \n    ResultSetMetaData resultSetMetaData = resultSet.getMetaData();\n    assertEquals(6, resultSetMetaData.getColumnCount());\n    assertEquals(\"TABLE_CAT\", resultSetMetaData.getColumnName(1));\n    assertEquals(java.sql.Types.VARCHAR, resultSetMetaData.getColumnType(1));\n    assertEquals(\"PK_NAME\", resultSetMetaData.getColumnName(6));\n    resultSet.close();\n    connection.close();\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testMetaDataPrimaryKeys", "class_name": "JdbcTest", "index": 2818, "label": 1}
{"input": "private DefaultMutableTreeNode searchByCategory(HttpRequestResponse object) {\n\t\tlog.fine(\"Searching for suitable parents for \" + object.toString());\n\t\tEnumeration<DefaultMutableTreeNode> searchenum = root.breadthFirstEnumeration();\n\t\twhile (searchenum.hasMoreElements()) {\n\t\t\tDefaultMutableTreeNode node = searchenum.nextElement();\n\t\t\tlog.fine(\"Testing node with value: \" + node.toString());\n\t\t\tObject userObject = node.getUserObject();\n\t\t\tif (userObject instanceof OWASPCategory) {\n\t\t\t\tif (object.getCategory().compareTo((OWASPCategory) userObject) == 0) {\n\t\t\t\t\tlog.fine(\"OWASP category is: \" + object.getCategoryAsString() + \" with path: \" + node.toString());\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "timestamp": "2021-01-18T01:40:35.930601Z", "repo_name": "BenKettlewell/couchburp", "path": "/src/main/java/com/prevsec/couchburp/controller/BurpController.java", "source": "the-stack-v2", "method_name": "searchByCategory", "class_name": "BurpController", "index": 2819, "label": 1}
{"input": "@Test\n\tvoid testBringToFront1() {\n\t\tgroup1.bringToFront();\n\t\tassert List.of(group1, group2).equals(group3.getSubgroups());\n\t\tgroup2.bringToFront();\n\t\tassert List.of(group2, group1).equals(group3.getSubgroups());\n\t\t\n\t\tleaf1.bringToFront();\n\t\tassert List.of(leaf1, leaf2, leaf3).equals(group1.getSubgroups());\n\t\tleaf1.bringToFront();\n\t\tassert List.of(leaf1, leaf2, leaf3).equals(group1.getSubgroups());\n\t\tleaf2.bringToFront();\n\t\tassert List.of(leaf2, leaf1, leaf3).equals(group1.getSubgroups());\n\t\tleaf1.bringToFront();\n\t\tassert List.of(leaf1, leaf2, leaf3).equals(group1.getSubgroups());\n\t\tleaf3.bringToFront();\n\t\tassert List.of(leaf3, leaf1, leaf2).equals(group1.getSubgroups());\n\t\tleaf3.bringToFront();\n\t\tassert List.of(leaf3, leaf1, leaf2).equals(group1.getSubgroups());\n\t\tleaf2.bringToFront();\n\t\tassert List.of(leaf2, leaf3, leaf1).equals(group1.getSubgroups());\n\t}", "timestamp": "2023-06-17T03:00:53.904887Z", "repo_name": "AdiBad/drawit", "path": "/drawit/tests/shapegroups2/ShapeGroupTest_Nonleaves_2Levels.java", "source": "the-stack-v2", "method_name": "testBringToFront1", "class_name": "ShapeGroupTest_Nonleaves_2Levels", "index": 2820, "label": 1}
{"input": "@Test\n    public void testAddSession() {\n        System.out.println(\"add session\");\n        FormationDao formationDao = new FormationDao();\n        \n        Formation f1 = new Formation(\"parent formation\");\n        CourseSession cs1 = new CourseSession(SessionType.Course);\n\n        \n        assertTrue(f1.getSessions().isEmpty());\n        assertTrue(cs1.getFormation() == null);\n\n        \n        cs1.setFormation(f1);\n        assertTrue(f1.getSessions().size() == 1);\n        assertTrue(cs1.getFormation() == f1);\n\n        \n        Integer formationPk = formationDao.create(f1);\n\n        \n        f1 = formationDao.read(formationPk);\n        assertTrue(f1.getSessions().size() == 1);\n        assertTrue(f1.containsSession(cs1));\n    }", "timestamp": "2021-01-23T15:54:59.102398Z", "repo_name": "AndreMiras/ema-lae", "path": "/EmaLaeServerApplication/test/dao/FormationDaoTest.java", "source": "the-stack-v2", "method_name": "testAddSession", "class_name": "FormationDaoTest", "index": 2821, "label": 1}
{"input": "public GuaranteeLog changeStatus(final Status status, final Element by) {\n        setStatus(status);\n\n        if (logs == null) {\n            logs = new ArrayList<GuaranteeLog>();\n        }\n        final GuaranteeLog log = getNewLog(status, by);\n        logs.add(log);\n\n        return log;\n    }", "timestamp": "2021-06-16T09:55:00.426309Z", "repo_name": "zemuldo/Cyclos_3.7", "path": "/src/nl/strohalm/cyclos/entities/accounts/guarantees/Guarantee.java", "source": "the-stack-v2", "method_name": "changeStatus", "class_name": "Guarantee", "index": 2822, "label": 1}
{"input": "public List<ExpressionContext> expression() {\n\t\t\treturn getRuleContexts(ExpressionContext.class);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "expression", "class_name": "StatementContext", "index": 2823, "label": 1}
{"input": "private void setListeners() {\n        editTextDegreeDelta.addTextChangedListener(new MyTextWatcher(\n                editTextDegreeDelta));\n        editTextDegreeTm.addTextChangedListener(new MyTextWatcher(\n                editTextDegreeTm));\n        editTextDegreeFic.addTextChangedListener(new MyTextWatcher(\n                editTextDegreeFic));\n        editTextMinuteDelta.addTextChangedListener(new MyTextWatcher(\n                editTextMinuteDelta));\n        editTextMinuteTm.addTextChangedListener(new MyTextWatcher(\n                editTextMinuteTm));\n        editTextMinuteFic.addTextChangedListener(new MyTextWatcher(\n                editTextMinuteFic));\n    }", "timestamp": "2020-12-01T15:56:26.463589Z", "repo_name": "cytangjoseph/CelestialNavCalc", "path": "/app/src/main/java/com/anmas/star/calculation/MainActivity.java", "source": "the-stack-v2", "method_name": "setListeners", "class_name": "MainActivity", "index": 2824, "label": 1}
{"input": "@Override \n        public ArrayList<String> interfaceChain() throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(IBase.kInterfaceName);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(256067662, _hidl_request, _hidl_reply, 0);\n                _hidl_reply.verifySuccess();\n                _hidl_request.releaseTemporaryStorage();\n                return _hidl_reply.readStringVector();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "interfaceChain", "class_name": "Proxy", "index": 2825, "label": 1}
{"input": "public Criteria andUserIdIsNull() {\n            addCriterion(\"user_id is null\");\n            return (Criteria) this;\n        }", "timestamp": "2018-05-02T02:54:14.952393Z", "repo_name": "newSue/yc-balance", "path": "/balance-core/src/main/java/com/ai/slp/balance/dao/mapper/bo/IntegralsLogCriteria.java", "source": "the-stack-v2", "method_name": "andUserIdIsNull", "class_name": "GeneratedCriteria", "index": 2826, "label": 1}
{"input": "@Temporal(javax.persistence.TemporalType.DATE)\n    public Date getRateDate() {\n        return rateDate;\n    }", "timestamp": "2023-07-05T17:17:18.305098Z", "repo_name": "methmal1997/HIbernate", "path": "/src/com/moviesite/hibernate/entity/Review.java", "source": "the-stack-v2", "method_name": "getRateDate", "class_name": "Review", "index": 2827, "label": 1}
{"input": "@java.lang.Override\n    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {\n      return super.clearOneof(oneof);\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "clearOneof", "class_name": "Builder", "index": 2828, "label": 1}
{"input": "public InterfaceBodyContext interfaceBody() {\n\t\t\treturn getRuleContext(InterfaceBodyContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "interfaceBody", "class_name": "NormalInterfaceDeclarationContext", "index": 2829, "label": 1}
{"input": "@Test public void testNotIn() {\n    predicate(\"\\\"name\\\" not in ('a', 'b') or \\\"name\\\" is null\")\n        .returns(\"\"\n            + \"empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000\\n\"\n            + \"empid=200; deptno=20; name=Eric; salary=8000.0; commission=500\\n\"\n            + \"empid=150; deptno=10; name=Sebastian; salary=7000.0; commission=null\\n\"\n            + \"empid=110; deptno=10; name=Theodore; salary=11500.0; commission=250\\n\");\n\n    \n    predicate(\"\\\"name\\\" in ('a', 'b') or \\\"name\\\" is null\");\n    predicate(\"\\\"name\\\" in ('a', 'b', null) or \\\"name\\\" is null\");\n    predicate(\"\\\"name\\\" in ('a', 'b') or \\\"name\\\" is not null\");\n    predicate(\"\\\"name\\\" in ('a', 'b', null) or \\\"name\\\" is not null\");\n    predicate(\"\"0);\n    predicate(\"\"1);\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testNotIn", "class_name": "JdbcTest", "index": 2830, "label": 1}
{"input": "public ArrayList<BoardReviewVo> getTop5Today() {\r\n\t\tConnection con = null;\r\n\t\tPreparedStatement pstmt = null;\r\n\t\tResultSet rs = null;\r\n\t\tArrayList<BoardReviewVo> list = new ArrayList<>(); \r\n\t\ttry {\r\n\t\t\tcon = DbcpBean.getConn();\r\n\t\t\tString sql = \"SELECT RV_NUM, TITLE, HIT \" + \r\n\t\t\t\t\t\t \"FROM REVIEW R \" + \r\n\t\t\t\t\t\t \"WHERE TO_CHAR(R.REGDATE,'YYYYMMDD')=TO_CHAR(SYSDATE,'YYYYMMDD') AND ROWNUM <= 5 AND R.MNUM != 10000 \" + \r\n\t\t\t\t\t\t \"ORDER BY HIT DESC\";\r\n\t\t\tpstmt = con.prepareStatement(sql);\r\n\t\t\trs = pstmt.executeQuery();\r\n\t\t\twhile(rs.next()) {\r\n\t\t\t\tString title = rs.getString(\"title\");\r\n\t\t\t\tint rv_num = rs.getInt(\"rv_num\");\r\n\t\t\t\tint hit = rs.getInt(\"hit\");\r\n\t\t\t\tlist.add(new BoardReviewVo(rv_num, title, hit));\r\n\t\t\t};\t\t\t\r\n\t\t\treturn list;\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn null;\r\n\t\t} finally {\r\n\t\t\tDbcpBean.closeConn(con, pstmt, rs);\r\n\t\t}\t\t\t\t\r\n\t}", "timestamp": "2021-04-26T06:53:19.070970Z", "repo_name": "kms228/MyProject", "path": "/diamang/src/shs/admin/dao/board/BoardReviewDao.java", "source": "the-stack-v2", "method_name": "getTop5Today", "class_name": "BoardReviewDao", "index": 2831, "label": 1}
{"input": "public static String toString(Collection<?> collection, String separator) {\n    List<String> list = ContainerUtil.map2List(collection, new Function<Object, String>() {\n      @Override\n      public String fun(final Object o) {\n        return String.valueOf(o);\n      }\n    });\n    Collections.sort(list);\n    StringBuilder builder = new StringBuilder();\n    boolean flag = false;\n    for (final String o : list) {\n      if (flag) {\n        builder.append(separator);\n      }\n      builder.append(o);\n      flag = true;\n    }\n    return builder.toString();\n  }", "timestamp": "2021-01-24T02:10:45.131232Z", "repo_name": "caot/intellij-community", "path": "/platform/testFramework/src/com/intellij/testFramework/UsefulTestCase.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "UsefulTestCase", "index": 2832, "label": 1}
{"input": "private void executeQueryUsingMasterRelation(EJQueryCriteria queryCriteria)\n    {\n        if (_masterRelationProperties == null)\n        {\n            _performDeferredQuery = false;\n            executeQuery(queryCriteria);\n            focusGained();\n        }\n        else\n        {\n            if (_masterRelationProperties.isDeferredQuery())\n            {\n                setQueryCriteria(queryCriteria);\n                _performDeferredQuery = true;\n                _automaticQuery = _masterRelationProperties.isAutoQuery();\n            }\n            else\n            {\n                _performDeferredQuery = false;\n                executeQuery(queryCriteria);\n            }\n        }\n    }", "timestamp": "2023-02-18T11:13:58.949927Z", "repo_name": "entirej/core", "path": "/entirej-core/src/org/entirej/framework/core/data/controllers/EJEditableBlockController.java", "source": "the-stack-v2", "method_name": "executeQueryUsingMasterRelation", "class_name": "EJEditableBlockController", "index": 2833, "label": 1}
{"input": "public void setOrderByClause(String orderByClause) {\n        this.orderByClause = orderByClause;\n    }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "setOrderByClause", "class_name": "UserCommissionsExample", "index": 2834, "label": 1}
{"input": "protected void encodeText(ResponseWriter writer, String text, String severity, boolean escape) throws IOException {\n        writer.startElement(\"span\", null);\n        writer.writeAttribute(\"class\", \"ui-message-\" + severity, null);\n\n        if (text != null) {\n            if (escape) {\n                writer.writeText(text, null);\n            }\n            else {\n                writer.write(text);\n            }\n        }\n\n        writer.endElement(\"span\");\n    }", "timestamp": "2023-03-07T22:34:35.849249Z", "repo_name": "cnsgithub/primefaces", "path": "/src/main/java/org/primefaces/component/staticmessage/StaticMessageRenderer.java", "source": "the-stack-v2", "method_name": "encodeText", "class_name": "StaticMessageRenderer", "index": 2835, "label": 1}
{"input": "public void setWidgetCheck(boolean _value, int _index){\n\t\talist.get(_index).checked = _value;\n\t\taadapter.notifyDataSetChanged();\t\t\n\t}", "timestamp": "2020-12-31T23:16:54.465413Z", "repo_name": "CymGen30/lazandroidmodulewizard", "path": "/android_wizard/smartdesigner/java/jListView.java", "source": "the-stack-v2", "method_name": "setWidgetCheck", "class_name": "jListView", "index": 2836, "label": 1}
{"input": "public boolean searchUser(String user,String ps) throws SQLException, ClassNotFoundException {\n        String query=\"select *  from user_info\";\n        ResultSet rs =conn.executeSelectQuery(query);\n        boolean flag=false;\n        while(rs.next())\n        {\n\n            String name=rs.getString(\"username\");\n            String pw=rs.getString(\"password\");\n            if(user.equals(name)&&ps.equals(pw)){\n                flag=true;\n                break;\n            }\n        }\n        rs.close();\n        conn.close();\n\n        return flag;\n\n    }", "timestamp": "2022-12-27T08:54:28.241229Z", "repo_name": "fyering/SA", "path": "/实习3/GUI/src/main/java/DAO.java", "source": "the-stack-v2", "method_name": "searchUser", "class_name": "DAO", "index": 2837, "label": 1}
{"input": "@Override\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\n        if (item.getItemId() == android.R.id.home) {\n            finish();\n        }\n        return super.onOptionsItemSelected(item);\n    }", "timestamp": "2020-11-26T02:26:37.452255Z", "repo_name": "RxSajib/HotelAppFinial", "path": "/app/src/main/java/com/hotel/mangrovehotel/TramsAncConditions.java", "source": "the-stack-v2", "method_name": "onOptionsItemSelected", "class_name": "TramsAncConditions", "index": 2838, "label": 1}
{"input": "public int numberOfBlockAssignments()\n  {\n    int number = blockAssignments.size();\n    return number;\n  }", "timestamp": "2020-09-27T06:19:22.075701Z", "repo_name": "mustafain117/Block-Breaker-Game", "path": "/Block223v2/src/ca/mcgill/ecse223/block/model/Game.java", "source": "the-stack-v2", "method_name": "numberOfBlockAssignments", "class_name": "Game", "index": 2839, "label": 1}
{"input": "public void setAAPLPrice(double newAAPLPrice){\r\n\t\tthis.aaplPrice = newAAPLPrice;\r\n\t\tnotifyObserver();\r\n\t}", "timestamp": "2020-04-03T09:57:45.166733Z", "repo_name": "SuyenRojas/Patrones-de-Diseno---Ejemplos-java", "path": "/Observer/src/opcion2/StockGrabber.java", "source": "the-stack-v2", "method_name": "setAAPLPrice", "class_name": "StockGrabber", "index": 2840, "label": 1}
{"input": "@Nonnull\n    private ArrayList<PlainTerm> definitionTerms(@Nonnull PlainTerm[] terms) {\n\n        final ArrayList<PlainTerm> termList = new ArrayList<>(2 + terms.length);\n\n        termList.add(this);\n        termList.add(Keyword.definition());\n        termList.addAll(Arrays.asList(terms));\n\n        return termList;\n    }", "timestamp": "2020-04-02T04:11:55.421623Z", "repo_name": "robstoll/predicator", "path": "/core/src/main/java/org/predicode/predicator/terms/Variable.java", "source": "the-stack-v2", "method_name": "definitionTerms", "class_name": "Variable", "index": 2841, "label": 1}
{"input": "@RequestMapping(\"inputMediaInfo\")\n\tpublic CommonReturnType inputMediaInfo(MediaVo mediaVo) {\n\t\ttry {\n\t\t\tthis.mediaService.addMediaInfoByInput(mediaVo);\n\t\t\treturn CommonReturnType.ADD_SUCCESS;\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\treturn CommonReturnType.ADD_FAILURE;\n\t\t}\n\t}", "timestamp": "2023-05-04T09:37:44.111496Z", "repo_name": "1119537395/DigitalMediaMIS", "path": "/src/main/java/com/fish/business/controller/MediaController.java", "source": "the-stack-v2", "method_name": "inputMediaInfo", "class_name": "MediaController", "index": 2842, "label": 1}
{"input": "public NormalInterfaceDeclarationContext normalInterfaceDeclaration() {\n\t\t\treturn getRuleContext(NormalInterfaceDeclarationContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "normalInterfaceDeclaration", "class_name": "AnnotationTypeElementRestContext", "index": 2843, "label": 1}
{"input": "public boolean match(InstanceofExpression node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 2844, "label": 1}
{"input": "protected void setText(int viewId, String text, String emptyTip) {\n        TextView textView = findView(viewId);\n        if (TextUtils.isEmpty(text)) {\n            textView.setText(emptyTip);\n            return;\n        }\n        textView.setText(text);\n    }", "timestamp": "2023-03-12T00:17:50.687110Z", "repo_name": "uranusTian/economy", "path": "/app/src/main/java/com/uranus/economy/base/BaseFragment.java", "source": "the-stack-v2", "method_name": "setText", "class_name": "BaseFragment", "index": 2845, "label": 1}
{"input": "@Test(timeOut = 10000)\n    void testExistsCache() throws Exception {\n        \n        zkClient.create(\"/test\", new byte[0], null, null);\n        Thread.sleep(20);\n        ZooKeeperCache zkCacheService = new LocalZooKeeperCache(zkClient, 30, executor);\n        boolean exists = zkCacheService.exists(\"/test\");\n        Assert.assertTrue(exists, \"/test should exists in the cache\");\n\n        \n        zkClient.delete(\"/test\", -1);\n        Thread.sleep(20);\n        boolean shouldNotExist = zkCacheService.exists(\"/test\");\n        Assert.assertFalse(shouldNotExist, \"/test should not exist in the cache\");\n    }", "timestamp": "2021-06-22T04:11:29.154786Z", "repo_name": "kafkaesque-io/pulsar", "path": "/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZookeeperCacheTest.java", "source": "the-stack-v2", "method_name": "testExistsCache", "class_name": "ZookeeperCacheTest", "index": 2846, "label": 1}
{"input": "@Before\n            public void doRequest() {\n                response = given()\n                        .contentType(APPLICATION_JSON_TYPE)\n                        .pathParam(\"gameId\", normalDifficultyGameContainer.getGame().getId())\n                        .when().put(GAME_PATH + PLAY_TURN_PATH);\n            }", "timestamp": "2021-01-23T06:35:39.821088Z", "repo_name": "anttiahonen/ekanban", "path": "/backend/src/integration-test/java/fi/aalto/ekanban/controllers/GameControllerTest.java", "source": "the-stack-v2", "method_name": "doRequest", "class_name": "withMissingTurn", "index": 2847, "label": 1}
{"input": "@Override\n  protected void afterRollbackOperations() {\n    super.afterRollbackOperations();\n    OLiveQueryHook.removePendingDatabaseOps(this);\n    OLiveQueryHookV2.removePendingDatabaseOps(this);\n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "afterRollbackOperations", "class_name": "ODatabaseDocumentEmbedded", "index": 2848, "label": 1}
{"input": "public void setMaxSubscribers(int maxSubscribers) {\n\t\tthis.maxSubscribers = maxSubscribers;\n\t\tthis.dispatcher.setMaxSubscribers(maxSubscribers);\n\t}", "timestamp": "2023-09-05T19:35:16.296440Z", "repo_name": "spring-projects/spring-integration", "path": "/spring-integration-core/src/main/java/org/springframework/integration/channel/AbstractExecutorChannel.java", "source": "the-stack-v2", "method_name": "setMaxSubscribers", "class_name": "AbstractExecutorChannel", "index": 2849, "label": 1}
{"input": "public void setModified(boolean state) {\n    \n    \n    if (current.isModified() != state) {\n      current.setModified(state);\n      calcModified();\n    }\n  }", "timestamp": "2021-01-19T06:50:08.211003Z", "repo_name": "fracz/refactor-extractor", "path": "/results-java/processing--processing/12bbf09d11a38bd8745a8693030578d7b6e87ffe/before/Sketch.java", "source": "the-stack-v2", "method_name": "setModified", "class_name": "Sketch", "index": 2850, "label": 1}
{"input": "public Criteria andVdef19IsNotNull() {\r\n            addCriterion(\"VDEF19 is not null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef19IsNotNull", "class_name": "GeneratedCriteria", "index": 2851, "label": 1}
{"input": "@Override\n                public List<AbstractPreferenceController> getPreferenceControllers(Context context) {\n                    return buildPreferenceControllers(context, null);\n                }", "timestamp": "2023-05-21T08:02:23.364495Z", "repo_name": "BPI-SINOVOIP/BPI-A64-Android8", "path": "/android/packages/apps/Settings/src/com/android/settings/DisplaySettings.java", "source": "the-stack-v2", "method_name": "getPreferenceControllers", "class_name": "DisplaySettings", "index": 2852, "label": 1}
{"input": "public void stop() {\r\n\t\ttry {\r\n\t\t    this.running = false;\r\n\t\t    thread.join();\r\n\t\t} catch (InterruptedException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}", "timestamp": "2023-07-11T22:07:51.461702Z", "repo_name": "APioB/OOP20-StickWars", "path": "/Game.java", "source": "the-stack-v2", "method_name": "stop", "class_name": "Game", "index": 2853, "label": 1}
{"input": "private String toIndentedString(java.lang.Object o) {\n    if (o == null) {\n      return \"null\";\n    }\n    return o.toString().replace(\"\\n\", \"\\n    \");\n  }", "timestamp": "2022-10-29T13:07:40.422092Z", "repo_name": "shinesolutions/swagger-aem-osgi", "path": "/clients/java-msf4j/generated/src/gen/java/org/openapitools/model/ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheProperties.java", "source": "the-stack-v2", "method_name": "toIndentedString", "class_name": "ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheProperties", "index": 2854, "label": 1}
{"input": "public CustomAudienceType findValueByNumber(int number) {\n              return CustomAudienceType.forNumber(number);\n            }", "timestamp": "2023-08-19T07:39:40.744879Z", "repo_name": "googleads/google-ads-java", "path": "/google-ads-stubs-v14/src/main/java/com/google/ads/googleads/v14/enums/CustomAudienceTypeEnum.java", "source": "the-stack-v2", "method_name": "findValueByNumber", "class_name": "CustomAudienceTypeEnum", "index": 2855, "label": 1}
{"input": "public void put(String key, String value, int saveTime) {\n        put(key, Utils.newStringWithDateInfo(saveTime, value));\n    }", "timestamp": "2020-08-02T18:42:07.551582Z", "repo_name": "zhuyu3126/WuyiProject", "path": "/WuyiProject/commonapi/src/main/java/com/danmo/commonapi/base/cache/ACache.java", "source": "the-stack-v2", "method_name": "put", "class_name": "ACache", "index": 2856, "label": 1}
{"input": "@Override \n        public void getTTYModeResponse(RadioResponseInfo info, int mode) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            _hidl_request.writeInt32(mode);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(72, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "getTTYModeResponse", "class_name": "Proxy", "index": 2857, "label": 1}
{"input": "@RequestMapping(\"/create-permission\")\n    @ResponseBody\n    public String create(Long userId, String creationDate, String expiryDate, Long roomId) {\n        Permission permission = null;\n        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");\n        User user = userDao.findOne(userId);\n        Room room = roomDao.findOne(roomId);\n        LocalDateTime creationDateTime = LocalDateTime.parse(creationDate, formatter);\n        LocalDateTime expiryDateTime = LocalDateTime.parse(expiryDate, formatter);\n        try {\n            permission = new Permission(user, creationDateTime, expiryDateTime, room);\n            permissionDao.save(permission);\n        }\n        catch (Exception ex) {\n            return \"Error creating permission: \" + ex.toString();\n        }\n        return \"Permission succesfully created! (id = \" + permission.getId() + \")\";\n    }", "timestamp": "2021-05-06T11:32:56.602276Z", "repo_name": "jedrek18/Kluczify", "path": "/server/src/main/java/pl/kluczify/server/controllers/PermissionController.java", "source": "the-stack-v2", "method_name": "create", "class_name": "PermissionController", "index": 2858, "label": 1}
{"input": "public void addCell(Phrase phrase) throws BadElementException {\n        addCell(phrase, this.curPosition);\n    }", "timestamp": "2023-03-09T12:14:38.824373Z", "repo_name": "Sluckson/copyOavct", "path": "/sources/com/lowagie/text/Table.java", "source": "the-stack-v2", "method_name": "addCell", "class_name": "Table", "index": 2859, "label": 1}
{"input": "public Criteria andModifyTimeGreaterThan(Date value) {\n            addCriterion(\"modify_time >\", value, \"modifyTime\");\n            return (Criteria) this;\n        }", "timestamp": "2020-03-22T10:50:33.120343Z", "repo_name": "haijunjunjun/marketing", "path": "/control/src/main/java/com/niule/marketing/control/dal/model/UserCommissionsExample.java", "source": "the-stack-v2", "method_name": "andModifyTimeGreaterThan", "class_name": "GeneratedCriteria", "index": 2860, "label": 1}
{"input": "private void responseString(HttpServletResponse response, String jsonpInfo) {\n\n        try {\n            response.getWriter().write(jsonpInfo);\n\n            response.setContentType(JSON_CONTENT_TYPE);\n            response.setStatus(HTTP_STATUS_OK);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    }", "timestamp": "2021-06-16T07:54:00.248869Z", "repo_name": "xie-summer/datamonitor", "path": "/src/main/java/com/ymatou/datamonitor/exception/MySimpleMappingExceptionResolver.java", "source": "the-stack-v2", "method_name": "responseString", "class_name": "MySimpleMappingExceptionResolver", "index": 2861, "label": 1}
{"input": "public void stop() {\n        LogUtil.i(TAG, \"do stop\");\n        if (this.mediaPlayer != null) {\n            this.mediaPlayer.reset();\n            this.mediaPlayer.setOnSeekCompleteListener(null);\n            this.mediaPlayer.stop();\n            this.mediaPlayer.release();\n            this.mediaPlayer = null;\n        }\n        this.mHandler.removeCallbacksAndMessages(null);\n        setCurrentPlayState(0);\n        if (this.mCurrentCount <= 3) {\n            this.mCurrentCount++;\n            load();\n            return;\n        }\n        showPauseView(false);\n    }", "timestamp": "2020-11-25T21:02:17.790224Z", "repo_name": "pk1z/wladimir-computin-FimiX8-RE-App", "path": "/sources/com/fimi/album/widget/CustomVideoView.java", "source": "the-stack-v2", "method_name": "stop", "class_name": "CustomVideoView", "index": 2862, "label": 1}
{"input": "private static int getClosestDecodedValue(int ai[])\n    {\n        int k = PDF417Common.getBitCountSum(ai);\n        float af[] = new float[8];\n        for (int i = 0; i < af.length; i++)\n        {\n            af[i] = (float)ai[i] / (float)k;\n        }\n\n        float f1 = 3.402823E+38F;\n        k = -1;\n        for (int j = 0; j < RATIOS_TABLE.length;)\n        {\n            float f = 0.0F;\n            for (int l = 0; l < 8;)\n            {\n                float f2 = RATIOS_TABLE[j][l] - af[l];\n                l++;\n                f = f2 * f2 + f;\n            }\n\n            float f3 = f1;\n            if (f < f1)\n            {\n                k = PDF417Common.SYMBOL_TABLE[j];\n                f3 = f;\n            }\n            j++;\n            f1 = f3;\n        }\n\n        return k;\n    }", "timestamp": "2018-03-23T04:15:18.480409Z", "repo_name": "cha63506/CompSecurity", "path": "/QR-barcode-source/src/com/google/zxing/pdf417/decoder/PDF417CodewordDecoder.java", "source": "the-stack-v2", "method_name": "getClosestDecodedValue", "class_name": "PDF417CodewordDecoder", "index": 2863, "label": 1}
{"input": "public JBIG2Bitmap getPageAsJBIG2Bitmap(int i) {\n\t\tJBIG2Bitmap pageBitmap = findPageSegement(1).getPageBitmap();\n\t\treturn pageBitmap;\n\t}", "timestamp": "2023-03-15T16:02:51.443928Z", "repo_name": "demetbolata/icepdf4", "path": "/core/src/main/java/org/jpedal/jbig2/decoders/JBIG2StreamDecoder.java", "source": "the-stack-v2", "method_name": "getPageAsJBIG2Bitmap", "class_name": "JBIG2StreamDecoder", "index": 2864, "label": 1}
{"input": "public GenericMethodDeclarationContext genericMethodDeclaration() {\n\t\t\treturn getRuleContext(GenericMethodDeclarationContext.class,0);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "genericMethodDeclaration", "class_name": "MemberContext", "index": 2865, "label": 1}
{"input": "public TypeGovernmentRecord[] getMwLexGovernments() {\n        return (TypeGovernmentRecord[]) get(5);\n    }", "timestamp": "2020-12-23T02:30:44.911257Z", "repo_name": "tonisnurk/ekilex", "path": "/ekilex-app/src/main/java/eki/ekilex/data/db/udt/records/TypeMeaningWordRecord.java", "source": "the-stack-v2", "method_name": "getMwLexGovernments", "class_name": "TypeMeaningWordRecord", "index": 2866, "label": 1}
{"input": "public void drawInactiveAIPlayer(int player) {\n        gamePanel.drawInactiveAIPlayer(player);\n    }", "timestamp": "2021-05-03T16:14:34.164836Z", "repo_name": "stephb23/CP2406Assignment", "path": "/src/gui/GameFrame.java", "source": "the-stack-v2", "method_name": "drawInactiveAIPlayer", "class_name": "GameFrame", "index": 2867, "label": 1}
{"input": "public Optional<Device> findDevice(String name) {\n        Map<String, String> params = new HashMap<>();\n        params.put(\"deviceName\", name);\n        try {\n            ResponseEntity<Device> deviceEntity = restTemplate.getForEntity(baseURL + \"/api/tenant/devices?deviceName={deviceName}\", Device.class, params);\n            return Optional.of(deviceEntity.getBody());\n        } catch (HttpClientErrorException exception) {\n            if (exception.getStatusCode() == HttpStatus.NOT_FOUND) {\n                return Optional.empty();\n            } else {\n                throw exception;\n            }\n        }\n    }", "timestamp": "2023-01-12T13:57:08.253533Z", "repo_name": "hashmapinc/Tempus", "path": "/tools/src/main/java/com/hashmapinc/client/tools/RestClient.java", "source": "the-stack-v2", "method_name": "findDevice", "class_name": "RestClient", "index": 2868, "label": 1}
{"input": "@Override public VerticeArbolBinario<T> getPadre() {\n            \n            if (hayPadre())\n                return padre;\n            else throw new NoSuchElementException(\"No hay padre\");\n        }", "timestamp": "2021-05-29T11:10:04.847601Z", "repo_name": "acasanova009/UNAM", "path": "/EDD/practica4/src/mx/unam/ciencias/edd/ArbolBinario.java", "source": "the-stack-v2", "method_name": "getPadre", "class_name": "Vertice", "index": 2869, "label": 1}
{"input": "public boolean removePortForward(PortForwardBean portForward) {\n\t\treturn transport.removePortForward(portForward);\n\t}", "timestamp": "2023-03-17T11:32:39.789148Z", "repo_name": "iiordanov/BSSH", "path": "/app/src/main/java/org/connectbot/service/TerminalBridge.java", "source": "the-stack-v2", "method_name": "removePortForward", "class_name": "TerminalBridge", "index": 2870, "label": 1}
{"input": "@Test public void testFloorDate() {\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.JDBC_FOODMART)\n        .query(\"select floor(timestamp '2011-9-14 19:27:23' to month) as c \\n\"\n            + \"from \\\"foodmart\\\".\\\"employee\\\" limit 1\")\n        \n        \n        .enable(CalciteAssert.DB != CalciteAssert.DatabaseInstance.MYSQL\n            && CalciteAssert.DB != CalciteAssert.DatabaseInstance.H2)\n        .returns(\"C=2011-09-01 00:00:00\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testFloorDate", "class_name": "JdbcTest", "index": 2871, "label": 1}
{"input": "public void testBug83230_Explicit04() throws CoreException {\n\tthis.resultCollector.showRule();\n\tsetUpBug83230_Explicit();\n\tIField field = selectField(this.workingCopies[0], \"city\");\n\tsearch(field, REFERENCES);\n\tassertSearchResults(\n\t\t\"src/b83230/Test.java String void b83230.Test.foo():Local#1.foo() [city] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug83230_Explicit04", "class_name": "JavaSearchBugsTests", "index": 2872, "label": 1}
{"input": "public int findMissingNumber(int[] nums) {\n        int i, sum1 = 0, sum2 = 0;\n        for (i = 0; i < nums.length; i++) {\n            sum1 += nums[i];\n            sum2 += i;\n        }\n        sum2 += i;\n\n        return  sum2 - sum1;\n    }", "timestamp": "2020-04-24T06:35:04.608247Z", "repo_name": "teraliv/interview", "path": "/src/com/interview/leetcode/MissingNumber.java", "source": "the-stack-v2", "method_name": "findMissingNumber", "class_name": "MissingNumber", "index": 2873, "label": 1}
{"input": "public double computePERatio() throws Exception {\n        if (this.getMarketValue() < ZERO)\n            throw new SimpleStocksExceptionImpl(\"Negative Error: Stock maket price cannot be negative\");\n\n        if (this.computeDividendYield() < ZERO)\n            throw new SimpleStocksExceptionImpl(\"Negative Error: Stock yield in dividend cannot be negative\");\n\n        if (this.computeDividendYield() == ZERO)\n            throw new SimpleStocksExceptionImpl(\"Divide by Zero Error: Stock yield in dividend cannot be zero\");\n\n        return this.getMarketValue() / this.computeDividendYield();\n\n    }", "timestamp": "2021-01-19T21:11:35.499171Z", "repo_name": "manishapadhi01/supersimplestock-1", "path": "/src/main/java/com/jpmorgan/interviews/codes/model/Stock.java", "source": "the-stack-v2", "method_name": "computePERatio", "class_name": "Stock", "index": 2874, "label": 1}
{"input": "@java.lang.Override\n    public Builder addRepeatedField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        java.lang.Object value) {\n      return super.addRepeatedField(field, value);\n    }", "timestamp": "2023-08-19T07:39:40.744879Z", "repo_name": "googleads/google-ads-java", "path": "/google-ads-stubs-v14/src/main/java/com/google/ads/googleads/v14/enums/CustomAudienceTypeEnum.java", "source": "the-stack-v2", "method_name": "addRepeatedField", "class_name": "Builder", "index": 2875, "label": 1}
{"input": "@Test public void testOrderByOffsetFetch() {\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.FOODMART_CLONE)\n        .query(\"select \\\"store_id\\\", \\\"grocery_sqft\\\" from \\\"store\\\"\\n\"\n            + \"where \\\"store_id\\\" < 10\\n\"\n            + \"order by 1 offset 2 rows fetch next 5 rows only\")\n        .returns(\"store_id=2; grocery_sqft=22271\\n\"\n            + \"store_id=3; grocery_sqft=24390\\n\"\n            + \"store_id=4; grocery_sqft=16844\\n\"\n            + \"store_id=5; grocery_sqft=15012\\n\"\n            + \"store_id=6; grocery_sqft=15337\\n\");\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testOrderByOffsetFetch", "class_name": "JdbcTest", "index": 2876, "label": 1}
{"input": "private static Bitmap Bytes2Bimap(byte[] b) {\n            if (b.length == 0) {\n                return null;\n            }\n            return BitmapFactory.decodeByteArray(b, 0, b.length);\n        }", "timestamp": "2020-08-02T18:42:07.551582Z", "repo_name": "zhuyu3126/WuyiProject", "path": "/WuyiProject/commonapi/src/main/java/com/danmo/commonapi/base/cache/ACache.java", "source": "the-stack-v2", "method_name": "Bytes2Bimap", "class_name": "Utils", "index": 2877, "label": 1}
{"input": "@Override\n    public boolean isValid(String username, ConstraintValidatorContext context) {\n        if(userRepository == null) {\n            return true;\n        }\n        return userRepository.findByName(username) == null;\n    }", "timestamp": "2021-01-25T07:55:06.583479Z", "repo_name": "Olefir17/hello-from-blog", "path": "/src/main/java/com/jba/annotation/UniqueUsernameValidator.java", "source": "the-stack-v2", "method_name": "isValid", "class_name": "UniqueUsernameValidator", "index": 2878, "label": 1}
{"input": "@Test\n    @Transactional\n    public void getAllAuthoritiesByOrderIsNotEqualToSomething() throws Exception {\n        \n        authorityRepository.saveAndFlush(authority);\n\n        \n        defaultAuthorityShouldNotBeFound(\"order.notEquals=\" + DEFAULT_ORDER);\n\n        \n        defaultAuthorityShouldBeFound(\"order.notEquals=\" + UPDATED_ORDER);\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "getAllAuthoritiesByOrderIsNotEqualToSomething", "class_name": "AuthorityResourceIT", "index": 2879, "label": 1}
{"input": "public void testBug94160() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b94160/Test.java\",\n\t\t\"package b94160;\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"\t<T> List<T> generateList(Class<T> clazz) {\\n\" +\n\t\t\"\t\treturn new ArrayList<T>();\\n\" +\n\t\t\"\t}\\n\" +\n\t\t\"}\\n\" +\n\t\t\"class CTest extends Test {\\n\" +\n\t\t\"\tprivate List<String> myList = generateList(String.class);\\n\" +\n\t\t\"\tCTest() {\\n\" +\n\t\t\"package b94160;\\n\"0 +\n\t\t\"\t}\\n\" +\n\t\t\"}\\n\" +\n\t\t\"package b94160;\\n\"3 +\n\t\t\"package b94160;\\n\"4\n\t);\n\tIType type = this.workingCopies[0].getType(\"package b94160;\\n\"5);\n\tIField field = type.getField(\"package b94160;\\n\"6);\n\tnew SearchEngine(this.workingCopies).searchDeclarationsOfSentMessages(field, this.resultCollector, null);\n\tassertSearchResults(\n\t\t\"package b94160;\\n\"7\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug94160", "class_name": "JavaSearchBugsTests", "index": 2880, "label": 1}
{"input": "private Set<String> getPrivateIps(Stack stack) {\n        Set<String> ips = new HashSet<>();\n        for (InstanceMetaData instanceMetaData : stack.getRunningInstanceMetaData()) {\n            ips.add(instanceMetaData.getPrivateIp());\n        }\n        return ips;\n    }", "timestamp": "2021-01-18T09:41:41.263741Z", "repo_name": "tspannhw/nifi-addons", "path": "/Operations/nifi-ops/core/src/test/java/com/sequenceiq/cloudbreak/core/bootstrap/service/ClusterBootstrapperTest.java", "source": "the-stack-v2", "method_name": "getPrivateIps", "class_name": "ClusterBootstrapperTest", "index": 2881, "label": 1}
{"input": "public Criteria andDrIsNotNull() {\r\n            addCriterion(\"DR is not null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andDrIsNotNull", "class_name": "GeneratedCriteria", "index": 2882, "label": 1}
{"input": "@Override\n      public EnumStringEnum read(final JsonReader jsonReader) throws IOException {\n        String value = jsonReader.nextString();\n        return EnumStringEnum.fromValue(String.valueOf(value));\n      }", "timestamp": "2023-03-07T19:55:29.765168Z", "repo_name": "docusign/old_swagger-codegen", "path": "/samples/client/petstore/java/okhttp-gson-parcelableModel/src/main/java/io/swagger/client/model/EnumTest.java", "source": "the-stack-v2", "method_name": "read", "class_name": "Adapter", "index": 2883, "label": 1}
{"input": "@Override\n    public void setPerformBeanValidation(boolean performBeanValidation) {\n        throw new UnsupportedOperationException(\"Not implemented\");\n    }", "timestamp": "2023-09-02T11:26:28.189499Z", "repo_name": "OpenAPITools/openapi-generator", "path": "/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaHelidonServerCodegen.java", "source": "the-stack-v2", "method_name": "setPerformBeanValidation", "class_name": "JavaHelidonServerCodegen", "index": 2884, "label": 1}
{"input": "private void maybeForceBuilderInitialization() {\n      if (com.google.protobuf.GeneratedMessageV3\n              .alwaysUseFieldBuilders) {\n      }\n    }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "maybeForceBuilderInitialization", "class_name": "Builder", "index": 2885, "label": 1}
{"input": "protected PurchaseOrderTransmitParameters getPurchaseOrderQuoteRequestsListPdfParameters(PurchaseOrderDocument po) {\n        PurchaseOrderParameters purchaseOrderParameters = getPurchaseOrderParameters();\n        purchaseOrderParameters.setPurchaseOrderPdfParameters(po);\n        return (PurchaseOrderTransmitParameters) purchaseOrderParameters;\n        \n    }", "timestamp": "2021-07-08T11:01:19.692655Z", "repo_name": "VU-libtech/OLE-INST", "path": "/ole-app/olefs/src/main/java/org/kuali/ole/module/purap/document/service/impl/PrintServiceImpl.java", "source": "the-stack-v2", "method_name": "getPurchaseOrderQuoteRequestsListPdfParameters", "class_name": "PrintServiceImpl", "index": 2886, "label": 1}
{"input": "@Override\n        public void close() throws IOException {\n            xmlrpcService.logout();\n            \n        }", "timestamp": "2020-08-07T20:03:48.397743Z", "repo_name": "dmytro-sydorenko/maven-confluence-plugin", "path": "/maven-confluence-core/src/main/java/org/bsc/confluence/ConfluenceServiceFactory.java", "source": "the-stack-v2", "method_name": "close", "class_name": "MixedConfluenceService", "index": 2887, "label": 1}
{"input": "public void avanca() {\n\t\tif(this.tipo == TipoContrato.NOVO)\n\t\t\tthis.tipo = TipoContrato.EM_ANDAMENTO;\n\t\t\telse if(this.tipo == TipoContrato.EM_ANDAMENTO)\n\t\t\t\tthis.tipo = TipoContrato.ACERTADO;\n\t\t\telse if(this.tipo == TipoContrato.ACERTADO)\n\t\t\t\tthis.tipo = TipoContrato.CONCLUIDO;\n\t\t\n\t}", "timestamp": "2022-01-24T18:16:01.702605Z", "repo_name": "gabrielsmartins/design-patterns-II", "path": "/src/main/java/br/alura/patterns/memento/Contrato.java", "source": "the-stack-v2", "method_name": "avanca", "class_name": "Contrato", "index": 2888, "label": 1}
{"input": "@Override\n    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.LOLLIPOP) {\n            String transitionName = getArguments().getString(\"transitionName\");\n            view.findViewById(R.id.cv_selected_giftcard_card).setTransitionName(transitionName);\n        }\n    }", "timestamp": "2021-10-28T22:28:27.287477Z", "repo_name": "mehrdadbahri/charge-app-android", "path": "/app/src/main/java/ir/android_developing/chargeapp/GiftcardPurchaseFragment.java", "source": "the-stack-v2", "method_name": "onViewCreated", "class_name": "GiftcardPurchaseFragment", "index": 2889, "label": 1}
{"input": "@Test\n  public void case87() {\n    int[] revenues = { -1000, 999, 2, 34, 1, 4, 5, 346, 244, 1000, 456, 365, -800, -564, -999, 346, -490, 1, 2, 356, 346, -564, -22, -599, 156, 123, 156, 15, 224, 503, 404, 129, -543, 455, 11, -245, -603, 167, 105, -123, 144, 905, -943, 383, 998, -534, 465, -659, 448, -33 };\n    int k = 3;\n    assertEquals(929.8667455560263, mergersdivtwo.findMaximum(revenues, k), DELTA * 929.8667455560263);\n  }", "timestamp": "2023-03-15T22:00:06.612099Z", "repo_name": "TankaiHub/topc", "path": "/test.archive.1/dynamic/MergersDivTwoTest.java", "source": "the-stack-v2", "method_name": "case87", "class_name": "MergersDivTwoTest", "index": 2890, "label": 1}
{"input": "public boolean match(AnnotationTypeMemberDeclaration node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 2891, "label": 1}
{"input": "public static String readFile(String file) throws Exception {\r\n\t\tFileReader fileReader = new FileReader(new File(file));\r\n\t\ttry {\r\n\t\t\tBufferedReader bufferedReader = new BufferedReader(fileReader);\r\n\t\t\tStringBuffer fileContent = new StringBuffer();\r\n\t\t\tString line;\r\n\t\t\tSystem.out.println(\"start readingLines:\");\r\n\t\t\twhile ((line = bufferedReader.readLine()) != null) {\r\n\t\t\t\tSystem.out.println(line);\r\n\t\t\t\tfileContent.append(line);\r\n\t\t\t\tfileContent.append(\"\\n\");\r\n\t\t\t}\r\n\t\t\tSystem.out.println(\"Done reading file\");\r\n\r\n\t\t\treturn fileContent.toString();\r\n\t\t} finally {\r\n\t\t\tfileReader.close();\r\n\t\t}\r\n\t}", "timestamp": "2020-12-02T23:54:31.259804Z", "repo_name": "galsa/my_play_ground", "path": "/private_detective/src/privatedetective/FileHandler.java", "source": "the-stack-v2", "method_name": "readFile", "class_name": "FileHandler", "index": 2892, "label": 1}
{"input": "private static int actualizarFallos(String palabraAdivinar, String letra) {\r\n        int i;\r\n        int encontrado=0;\r\n        \r\n        for(i=0; i<palabraAdivinar.length();i++){\r\n            if(palabraAdivinar.charAt(i)==letra.charAt(0)){\r\n                encontrado++;                \r\n            }\r\n        } \r\n        return encontrado;\r\n    }", "timestamp": "2023-08-03T17:42:48.782111Z", "repo_name": "wgekko/Java-inicial", "path": "/Ahorcado/src/Ahorcado3/Ahorcado3.java", "source": "the-stack-v2", "method_name": "actualizarFallos", "class_name": "Ahorcado3", "index": 2893, "label": 1}
{"input": "public void setFlashMode(int flashMode) {\n        RCTCamera.getInstance().setTorchMode(_cameraType, flashMode);\n    }", "timestamp": "2021-01-22T13:30:35.067748Z", "repo_name": "javiercf/react-cam-fd", "path": "/android/src/main/java/com/lwansbrough/RCTCamera/RCTCameraViewFinder.java", "source": "the-stack-v2", "method_name": "setFlashMode", "class_name": "RCTCameraViewFinder", "index": 2894, "label": 1}
{"input": "@Test\n    public void testEquals()\n    {\n        Assert.assertTrue(Duration.seconds(3600).equals(Duration.hours(1)));\n        Assert.assertFalse(Duration.seconds(1.001).equals(Duration.seconds(1.002)));\n    }", "timestamp": "2020-04-24T11:32:15.444270Z", "repo_name": "nachtm/atlas", "path": "/src/test/java/org/openstreetmap/atlas/utilities/scalars/DurationTest.java", "source": "the-stack-v2", "method_name": "testEquals", "class_name": "DurationTest", "index": 2895, "label": 1}
{"input": "public List<ClassOrInterfaceModifierContext> classOrInterfaceModifier() {\n\t\t\treturn getRuleContexts(ClassOrInterfaceModifierContext.class);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "classOrInterfaceModifier", "class_name": "TypeDeclarationContext", "index": 2896, "label": 1}
{"input": "@Override\n    LocalDateTime doDecode(ByteBuf byteBuf, @Nullable Format format, @Nullable Class<? extends LocalDateTime> type) {\n        Assert.requireNonNull(byteBuf, \"byteBuf must not be null\");\n\n        if (format == FORMAT_BINARY) {\n            return LocalDateTime.ofInstant(EpochTime.fromLong(byteBuf.readLong()).toInstant(), ZoneId.of(\"UTC\"));\n        }\n\n        return PostgresqlDateTimeFormatter.INSTANCE.parse(ByteBufUtils.decode(byteBuf), LocalDateTime::from);\n    }", "timestamp": "2020-06-17T21:09:45.580803Z", "repo_name": "arpit006/r2dbc-postgresql", "path": "/src/main/java/io/r2dbc/postgresql/codec/LocalDateTimeCodec.java", "source": "the-stack-v2", "method_name": "doDecode", "class_name": "LocalDateTimeCodec", "index": 2897, "label": 1}
{"input": "@GetMapping(\"/logout\")\n    public String logout(HttpSession session) {\n        session.removeAttribute(\"user\");\n        return \"redirect:/admin\";\n    }", "timestamp": "2022-12-13T16:07:26.011222Z", "repo_name": "monkeyhlj/blog", "path": "/src/main/java/com/monkey/web/admin/LoginController.java", "source": "the-stack-v2", "method_name": "logout", "class_name": "LoginController", "index": 2898, "label": 1}
{"input": "public Builder setAvailabilityImpactValue(int value) {\n\n      availabilityImpact_ = value;\n      onChanged();\n      return this;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "setAvailabilityImpactValue", "class_name": "Builder", "index": 2899, "label": 1}
{"input": "protected void cleanup() {\n     \n     \n     \n     \n     Base.removeDescendants(tempBuildFolder);\n   }", "timestamp": "2023-07-06T12:48:55.516692Z", "repo_name": "zhongxingyu/Seer", "path": "/Diff-Raw-Data/7/7_2f542815a58ee55ee03ae89dbab36dfbe50a1841/Sketch/7_2f542815a58ee55ee03ae89dbab36dfbe50a1841_Sketch_s.java", "source": "the-stack-v2", "method_name": "cleanup", "class_name": "Sketch", "index": 2900, "label": 1}
{"input": "public static int getDayOfWeek(String date) {\n\t\t\tString[] temp = null;\n\t\t\tif (date.indexOf(\"/\") > 0) {\n\t\t\t\ttemp = date.split(\"/\");\n\t\t\t}\n\t\t\tif (date.indexOf(\"-\") > 0) {\n\t\t\t\ttemp = date.split(\"-\");\n\t\t\t}\n\t\t\treturn getDayOfWeek(temp[0], temp[1], temp[2]);\n\t\t}", "timestamp": "2020-04-03T19:08:02.936008Z", "repo_name": "xhly521/AAHelper", "path": "/app/src/main/java/com/xhly/godutch/utility/DateTools.java", "source": "the-stack-v2", "method_name": "getDayOfWeek", "class_name": "DateTools", "index": 2901, "label": 1}
{"input": "@Override\n\tpublic void valueChanged(ListSelectionEvent arg0) {\n\t\tif (arg0.getSource().equals(lstPuntos) && !arg0.getValueIsAdjusting()){\n\t\t\tif (lstPuntos.getSelectedValue()!=null)\n\t\t\t\tlstPuntos.getSelectedValue().mueveA();\n\t\t\t\n\t\t\tpnlCanvas.repaint();\n\t\t}\n\t}", "timestamp": "2021-07-07T15:13:46.386311Z", "repo_name": "clillo/iluminacion", "path": "/src/com/clillo/dmx/ui/jpanels/opcionesMenu/PanelMantienePuntosMovingHeads.java", "source": "the-stack-v2", "method_name": "valueChanged", "class_name": "PanelMantienePuntosMovingHeads", "index": 2902, "label": 1}
{"input": "public static int getDayOfWeek(String year, String month, String day) {\n\t\t\tCalendar cal = new GregorianCalendar(new Integer(year).intValue(),\n\t\t\t\t\tnew Integer(month).intValue() - 1, new Integer(day).intValue());\n\t\t\treturn cal.get(Calendar.DAY_OF_WEEK);\n\t\t}", "timestamp": "2020-04-03T19:08:02.936008Z", "repo_name": "xhly521/AAHelper", "path": "/app/src/main/java/com/xhly/godutch/utility/DateTools.java", "source": "the-stack-v2", "method_name": "getDayOfWeek", "class_name": "DateTools", "index": 2903, "label": 1}
{"input": "private TextBox makeTextBox( final int index ) {\n        AbstractRestrictedEntryTextBox txt = new CEPTimeParameterTextBox( hop,\n                                                                          index );\n\n        if ( parameterSets.size() == 0 ) {\n            txt.setVisible( false );\n        } else {\n            txt.setVisible( index < parameterSets.get( visibleParameterSet ) );\n        }\n\n        return txt;\n    }", "timestamp": "2021-01-17T21:55:31.542359Z", "repo_name": "Brianxia/guvnor", "path": "/drools-wb/drools-wb-screens/drools-wb-guided-rule-editor/drools-wb-guided-rule-editor-client/src/main/java/org/drools/workbench/screens/guided/rule/client/editor/CEPOperatorsDropdown.java", "source": "the-stack-v2", "method_name": "makeTextBox", "class_name": "CEPOperatorsDropdown", "index": 2904, "label": 1}
{"input": "public List<List<String>> printTree(TreeNode root) {\n        List<List<String>> result = new LinkedList<>();\n        int height = root == null ? 1 : getHeight(root);\n        int rows = height;\n        int columns = (int) (Math.pow(2, height) - 1);\n        List<String> row = new ArrayList<>();\n        for (int i = 0; i < columns; i++) {\n            row.add(\"\");\n        }\n        for (int i = 0; i < rows; i++) {\n            result.add(new ArrayList<>(row));\n        }\n        populateResult(root, result, 0, rows, 0, columns - 1);\n        return result;\n    }", "timestamp": "2020-04-08T14:54:06.386481Z", "repo_name": "jiangxf/java_interview", "path": "/src/main/java/com/fishercoder/solutions/_655.java", "source": "the-stack-v2", "method_name": "printTree", "class_name": "_655", "index": 2905, "label": 1}
{"input": "public Criteria andIdIsNull() {\r\n            addCriterion(\"id is null\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andIdIsNull", "class_name": "GeneratedCriteria", "index": 2906, "label": 1}
{"input": "private static void checkParse(boolean hasParsePath, LibraryOrganizer lo, CommandLine line, String path) {\n        if(!hasParsePath) {\n            System.err.println(\"Specify either a correct library file or a path to parse\");\n            return;\n        } else {\n            String parsePath = line.getOptionValue('p');\n            doParse(lo, parsePath);\n            export(lo, path);\n        }\n    }", "timestamp": "2020-06-18T17:56:20.441702Z", "repo_name": "juanmanuel-calderon/juanitunes", "path": "/src/main/java/com/jmc/juanitunes/Main.java", "source": "the-stack-v2", "method_name": "checkParse", "class_name": "Main", "index": 2907, "label": 1}
{"input": "protected int getInt(Enum<?> pTable, Enum<?> pColumn)\r\n        {\r\n            return mCursor.getInt(mIndexes[pTable.ordinal()][pColumn.ordinal()]);\r\n        }", "timestamp": "2021-01-15T13:29:30.096488Z", "repo_name": "a-thomas/newsroot", "path": "/newsroot-ui/src/main/java/com/codexperiments/newsroot/manager/twitter/ResultHandler.java", "source": "the-stack-v2", "method_name": "getInt", "class_name": "Row", "index": 2908, "label": 1}
{"input": "public String getIpAddress(HttpServletRequest request) {\n        String ip = \"\";\n        try {\n            ip = request.getHeader(\"x-forwarded-for\");\n            if (ip == null || ip.length() == 0 || UNKNOWN.equalsIgnoreCase(ip)) {\n                ip = request.getHeader(\"Proxy-Client-IP\");\n            }\n            if (ip == null || ip.length() == 0 || UNKNOWN.equalsIgnoreCase(ip)) {\n                ip = request.getHeader(\"WL-Proxy-Client-IP\");\n            }\n            if (ip == null || ip.length() == 0 || UNKNOWN.equalsIgnoreCase(ip)) {\n                ip = request.getHeader(\"HTTP_CLIENT_IP\");\n            }\n            if (ip == null || ip.length() == 0 || UNKNOWN.equalsIgnoreCase(ip)) {\n                ip = request.getHeader(\"HTTP_X_FORWARDED_FOR\");\n            }\n            if (ip == null || ip.length() == 0 || UNKNOWN.equalsIgnoreCase(ip)) {\n                ip = request.getRemoteAddr();\n            }\n\n        } catch (Exception e) {\n\n        }\n        return ip;\n    }", "timestamp": "2023-07-25T07:02:44.441665Z", "repo_name": "wangqiulin/wql-boot", "path": "/src/main/java/com/wql/boot/wqlboot/web/aspect/LoggerAspect.java", "source": "the-stack-v2", "method_name": "getIpAddress", "class_name": "LoggerAspect", "index": 2909, "label": 1}
{"input": "private void collectRow() {\n      rowSizeBytes.update(curRowBytes);\n      rowSizeCols.update(curRowCols);\n      keyLen.update(curRowKeyLength);\n\n      if (curRowBytes > maxRowBytes && prevCell != null) {\n        biggestRow = CellUtil.cloneRow(prevCell);\n        maxRowBytes = curRowBytes;\n      }\n\n      curRowBytes = 0;\n      curRowCols = 0;\n    }", "timestamp": "2021-07-01T04:05:15.247476Z", "repo_name": "canglang1973/hbase", "path": "/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java", "source": "the-stack-v2", "method_name": "collectRow", "class_name": "KeyValueStatsCollector", "index": 2910, "label": 1}
{"input": "private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {\n        new Manage_Newspaper_GUI().setVisible(true);\n        this.dispose();\n    }", "timestamp": "2020-12-05T14:58:11.525549Z", "repo_name": "SaranSenguttuvan/Library_Management_System", "path": "/src/GUI/Newspaper_Search_And_View_GUI.java", "source": "the-stack-v2", "method_name": "jMenuItem6ActionPerformed", "class_name": "Newspaper_Search_And_View_GUI", "index": 2911, "label": 1}
{"input": "@Override\r\n    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\r\n        context = applicationContext;\r\n    }", "timestamp": "2020-03-22T11:11:57.513140Z", "repo_name": "phpfzh/blog", "path": "/cjm-common/src/main/java/com/jxkj/cjm/common/config/ApplicationContextProvider.java", "source": "the-stack-v2", "method_name": "setApplicationContext", "class_name": "ApplicationContextProvider", "index": 2912, "label": 1}
{"input": "public void save() {\n        if(getById(idbuku).getIdbuku() == 0) {\n            String SQL = \"INSERT INTO buku (judul, idkategori, penulis, penerbit) VALUES(\"\n                        + \"'\" + this.judul + \"', \"\n                        + \"'\" + this.getKategori().getIdKategori() + \"', \"\n                        + \"'\" + this.penulis + \"', \"\n                        + \"'\" + this.penerbit + \"'\"\n                        + \")\";\n            this.idbuku = DBHelper1921743014Dhuta.insertQueryGetId(SQL);\n        }\n        else {\n            String SQL = \"'\"0\n                        + \"'\"1 + this.judul + \"', \"\n                        + \"'\"3 + this.getKategori().getIdKategori() + \"', \"\n                        + \"'\"5 + this.penulis + \"', \"\n                        + \"'\"7 + this.penerbit + \"'\"8\n                        + \"'\"9 + this.idbuku + \"'\";\n            DBHelper1921743014Dhuta.executeQuery(SQL);\n        }\n    }", "timestamp": "2020-07-16T23:40:20.111231Z", "repo_name": "pamungkas93/prak.PBO.", "path": "/src/13_ID_GUI_Database/backend/Buku1921743014Dhuta.java", "source": "the-stack-v2", "method_name": "save", "class_name": "Buku1921743014Dhuta", "index": 2913, "label": 1}
{"input": "@Test\n    @Transactional\n    void getAllTransactionsByOriginalAmountIsLessThanSomething() throws Exception {\n        \n        transactionRepository.saveAndFlush(transaction);\n\n        \n        defaultTransactionShouldNotBeFound(\"originalAmount.lessThan=\" + DEFAULT_ORIGINAL_AMOUNT);\n\n        \n        defaultTransactionShouldBeFound(\"originalAmount.lessThan=\" + UPDATED_ORIGINAL_AMOUNT);\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "getAllTransactionsByOriginalAmountIsLessThanSomething", "class_name": "TransactionResourceIT", "index": 2914, "label": 1}
{"input": "@JavascriptInterface\n    public void sdkclosebutton(final String s, final String s2, final String j) {\n        final d d = (d)this.adMarvelInternalWebViewReference.get();\n        if ((d == null || !d.b()) && !this.isInterstitial) {\n            final m m = (m)this.adMarvelWebViewReference.get();\n            if (m != null) {\n                m.g = false;\n                m.h = false;\n                m.i = false;\n                if (s != null && s.equals(\"true\")) {\n                    m.g = true;\n                    m.i = true;\n                }\n                else if (s != null && s.equals(\"false\") && s2 != null && s2.equals(\"true\")) {\n                    m.g = true;\n                    m.h = true;\n                    m.i = false;\n                }\n                if (j != null && j.length() > 0) {\n                    m.j = j;\n                }\n            }\n        }\n    }", "timestamp": "2023-07-04T04:48:46.770740Z", "repo_name": "messarju/operamin-decompile", "path": "/opera-mini-handler-dex2jar.jar/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java", "source": "the-stack-v2", "method_name": "sdkclosebutton", "class_name": "AdMarvelWebViewJSInterface", "index": 2915, "label": 1}
{"input": "@Test(expected = NullPointerException.class)\n    public void nullValueInMethodCall() throws MessagingException {\n        this.mailSender.sendMail(null, null, null);\n    }", "timestamp": "2023-09-02T16:49:03.096688Z", "repo_name": "cloudogu/usermgt", "path": "/app/src/test/java/de/triology/universeadm/mail/MailSenderTest.java", "source": "the-stack-v2", "method_name": "nullValueInMethodCall", "class_name": "MailSenderTest", "index": 2916, "label": 1}
{"input": "private void choose_file() {\n        if (selected_branch != null && !selected_branch.isEmpty() && selected_subject != null && !selected_subject.isEmpty()) {\n\n            Intent intent = new Intent();\n            intent.setType(\"*/*\");\n            intent.setAction(Intent.ACTION_GET_CONTENT);\n            try {\n                startActivityForResult(\n                        intent.createChooser(intent, \"select a file\"), PICK_FILE_REQUEST);\n            } catch (android.content.ActivityNotFoundException ex) {\n                Toast.makeText(this, \"Please install a file manager\", Toast.LENGTH_SHORT).show();\n            }\n        } else {\n\n            Toast.makeText(this, \"Please select branch and subject for which you want to upload the file\", Toast.LENGTH_SHORT).show();\n            return;\n        }\n    }", "timestamp": "2020-08-03T03:29:17.700731Z", "repo_name": "SunilKeshri1998/StuHub", "path": "/app/src/main/java/com/decimals/stuhub/UploadActivity.java", "source": "the-stack-v2", "method_name": "choose_file", "class_name": "UploadActivity", "index": 2917, "label": 1}
{"input": "public ElementsPage openElementsPage(){\n        try {\n            webDriver.get(baseURL);\n            webDriver.findElement(By.xpath(\".//*/h5[text()='Elements']\")).click();\n            logger.info(\"Elements Page was opened\");\n        } catch (Exception e){\n            logger.error(\"Can`t work with Elements Page\");\n            Assert.fail(\"Can`t work with Elements Page\");\n        }\n        return this;\n    }", "timestamp": "2023-07-18T04:51:38.195980Z", "repo_name": "sholm73/demoqa", "path": "/src/main/java/pages/ElementsPage.java", "source": "the-stack-v2", "method_name": "openElementsPage", "class_name": "ElementsPage", "index": 2918, "label": 1}
{"input": "private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         \n        \n        \n    \t\n    \tbuttonPressed = true;\n    \t\n    }", "timestamp": "2021-01-01T05:31:40.437723Z", "repo_name": "bhumikasaivamani/AIProject", "path": "/src/MainFrame.java", "source": "the-stack-v2", "method_name": "jButton1ActionPerformed", "class_name": "MainFrame", "index": 2919, "label": 1}
{"input": "public PaintHolder mode(PorterDuff.Mode mode) {\n            this.paint.setXfermode(new PorterDuffXfermode(mode));\n            return this;\n        }", "timestamp": "2021-07-22T00:32:38.875787Z", "repo_name": "lt594963425/xiaoyuanyuan2", "path": "/app/src/main/java/com/tao/xiaoyuanyuan/view/colorpicker/builder/PaintBuilder.java", "source": "the-stack-v2", "method_name": "mode", "class_name": "PaintHolder", "index": 2920, "label": 1}
{"input": "public void setRating(float rating) {\n        if (this.ratingBar.getVisibility() == 0) {\n            this.ratingBar.setRating(rating);\n        } else {\n            this.ratingText.setText(this.ratingFormatter.format((double) rating));\n        }\n    }", "timestamp": "2020-07-03T08:35:24.902940Z", "repo_name": "jasonnth/AirCode", "path": "/sources/com/airbnb/android/lib/views/RatingCell.java", "source": "the-stack-v2", "method_name": "setRating", "class_name": "RatingCell", "index": 2921, "label": 1}
{"input": "public View.OnClickListener createOnClickListener(final Class<?> clz, final Bundle bundle, final Integer requestCode) {\n        View.OnClickListener onClickListner = new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n            }\n        };\n        return onClickListner;\n    }", "timestamp": "2023-09-04T07:19:43.934264Z", "repo_name": "gtu001/gtu-test-code", "path": "/EnglishTester_new/app/src/main/java/com/example/englishtester2/common/RecentBookHistoryService.java", "source": "the-stack-v2", "method_name": "createOnClickListener", "class_name": "RecentBookHistoryService", "index": 2922, "label": 1}
{"input": "private void setUpBug110060_FieldPattern() throws CoreException {\n\tthis.workingCopies = new ICompilationUnit[1];\n\tthis.workingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b110060/Test.java\",\n\t\t\"package b110060;\\n\" +\n\t\t\"public class Test {\\n\" +\n\t\t\"\tObject aFieldWithNothingSpecial;\\n\" +\n\t\t\"\tObject aFieldWithS$Dollar;\\n\" +\n\t\t\"\tObject aFieldWith$Several$DollarslAnd1DigitAnd_1Underscore;\\n\" +\n\t\t\"\tObject aStrangeFieldWith$$$$$$$$$$$$$$$SeveraContiguousDollars;\\n\" +\n\t\t\"\tObject otherFieldWhichStartsWithAnotherLetter;\\n\" +\n\t\t\"\tvoid testReferences() {\\n\" +\n\t\t\"\t\tObject o0 = aFieldWithNothingSpecial;\\n\" +\n\t\t\"package b110060;\\n\"0 +\n\t\t\"package b110060;\\n\"1 +\n\t\t\"package b110060;\\n\"2 +\n\t\t\"package b110060;\\n\"3 +\n\t\t\"package b110060;\\n\"4 +\n\t\t\"package b110060;\\n\"5\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "setUpBug110060_FieldPattern", "class_name": "JavaSearchBugsTests", "index": 2923, "label": 1}
{"input": "public Device assignDevice(CustomerId customerId, DeviceId deviceId) {\n        return restTemplate.postForEntity(baseURL + \"/api/customer/{customerId}/device/{deviceId}\", null, Device.class,\n                customerId.toString(), deviceId.toString()).getBody();\n    }", "timestamp": "2023-01-12T13:57:08.253533Z", "repo_name": "hashmapinc/Tempus", "path": "/tools/src/main/java/com/hashmapinc/client/tools/RestClient.java", "source": "the-stack-v2", "method_name": "assignDevice", "class_name": "RestClient", "index": 2924, "label": 1}
{"input": "private String asciiToString(int value) {\n        int div = value / 26;\n        int sur = value % 26;\n        char c = (char) (sur + 65);\n        StringBuffer sb = new StringBuffer();\n        if (div != 0) {\n            sb.append(asciiToString(div - 1));\n        }\n        sb.append(c);\n        return sb.toString();\n    }", "timestamp": "2023-08-03T07:40:42.128371Z", "repo_name": "cckmit/htd", "path": "/mes-service/src/main/java/com/skeqi/mes/service/dzb/market/TableColService.java", "source": "the-stack-v2", "method_name": "asciiToString", "class_name": "TableColService", "index": 2925, "label": 1}
{"input": "public Criteria andReasonGreaterThan(String value) {\r\n            addCriterion(\"reason >\", value, \"reason\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-11T18:57:50.792543Z", "repo_name": "hegangfeng/swzzbdbxt", "path": "/src/main/java/com/gdin/dzzwsyb/swzzbdbxt/web/model/SubmissionExample.java", "source": "the-stack-v2", "method_name": "andReasonGreaterThan", "class_name": "GeneratedCriteria", "index": 2926, "label": 1}
{"input": "@RequestMapping(value = \"/th-alert-prompts\",\n        method = RequestMethod.PUT,\n        produces = MediaType.APPLICATION_JSON_VALUE)\n    @Timed\n    public ResponseEntity<ThAlertPrompts> updateThAlertPrompts(@RequestBody ThAlertPrompts thAlertPrompts) throws URISyntaxException {\n        log.debug(\"REST request to update ThAlertPrompts : {}\", thAlertPrompts);\n        if (thAlertPrompts.getId() == null) {\n            return createThAlertPrompts(thAlertPrompts);\n        }\n        ThAlertPrompts result = thAlertPromptsRepository.save(thAlertPrompts);\n        return ResponseEntity.ok()\n            .headers(HeaderUtil.createEntityUpdateAlert(\"thAlertPrompts\", thAlertPrompts.getId().toString()))\n            .body(result);\n    }", "timestamp": "2022-12-13T20:24:46.381118Z", "repo_name": "BulkSecurityGeneratorProject/acme_site", "path": "/src/main/java/net/testaholic_acme_site/web/rest/ThAlertPromptsResource.java", "source": "the-stack-v2", "method_name": "updateThAlertPrompts", "class_name": "ThAlertPromptsResource", "index": 2927, "label": 1}
{"input": "public List<ElementValuePairContext> elementValuePair() {\n\t\t\treturn getRuleContexts(ElementValuePairContext.class);\n\t\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "elementValuePair", "class_name": "ElementValuePairsContext", "index": 2928, "label": 1}
{"input": "@Test\n    public void test1x1() {\n        int[][] inMatrix  = { {1} };\n        int[][] expOutput = { {1} };\n        assertTrue(testEqual(expOutput, MatrixHelixMorph.helix(inMatrix)));\n    }", "timestamp": "2023-03-28T05:11:03.621410Z", "repo_name": "Piyush1077/Junit-Assignment", "path": "/JavaJunitAssignment-master/src/test/java/helix/MatrixHelixMorphTest.java", "source": "the-stack-v2", "method_name": "test1x1", "class_name": "MatrixHelixMorphTest", "index": 2929, "label": 1}
{"input": "@java.lang.Override\n    public Builder clearOneof(\n        com.google.protobuf.Descriptors.OneofDescriptor oneof) {\n      return super.clearOneof(oneof);\n    }", "timestamp": "2023-08-19T07:39:40.744879Z", "repo_name": "googleads/google-ads-java", "path": "/google-ads-stubs-v14/src/main/java/com/google/ads/googleads/v14/enums/CustomAudienceTypeEnum.java", "source": "the-stack-v2", "method_name": "clearOneof", "class_name": "Builder", "index": 2930, "label": 1}
{"input": "public String toString() {\n\t\t\treturn \"Property(\" + this.propertyName + \", \" + this.compulsory + \", \" + this.nodeType + \")\"; \n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "Property", "index": 2931, "label": 1}
{"input": "public void setUpSuite() throws Exception {\n\tsuper.setUpSuite();\n\tJAVA_PROJECT = setUpJavaProject(\"JavaSearchBugs\", \"1.5\");\n\taddLibraryEntry(JAVA_PROJECT, \"/JavaSearchBugs/lib/b95152.jar\", false);\n\taddLibraryEntry(JAVA_PROJECT, \"/JavaSearchBugs/lib/b123679.jar\", false);\n\taddLibraryEntry(JAVA_PROJECT, \"/JavaSearchBugs/lib/b140156.jar\", false);\n\taddLibraryEntry(JAVA_PROJECT, \"/JavaSearchBugs/lib/b164791.jar\", false);\n\taddLibraryEntry(JAVA_PROJECT, \"/JavaSearchBugs/lib/b166348.jar\", false);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "setUpSuite", "class_name": "JavaSearchBugsTests", "index": 2932, "label": 1}
{"input": "private boolean dfs(int r, int c, int[][] map){\r\n        int rows = map.length;\r\n        int cols = map[0].length;\r\n        if(c < 0 || c >= cols || r < 0 || r >= rows){\r\n            return false;\r\n        }\r\n        if(map[r][c] == 0){\r\n            return false;\r\n        }\r\n        if(map[r][c] == 9){\r\n            return true;\r\n        }\r\n        if(map[r][c] == 1){\r\n            map[r][c] = 0;\r\n            return dfs(r + 1, c, map)\r\n                    || dfs(r - 1, c, map)\r\n                    || dfs(r, c + 1, map)\r\n                    || dfs(r, c - 1, map);\r\n                    \r\n        }\r\n        return false;\r\n    }", "timestamp": "2023-03-08T12:01:09.493197Z", "repo_name": "arnabs542/Practice", "path": "/LeetCodePractice/src/DFS/CanReachTheEndpoint.java", "source": "the-stack-v2", "method_name": "dfs", "class_name": "CanReachTheEndpoint", "index": 2933, "label": 1}
{"input": "private void errorePaloPartenza()\n        {\n            alert.setTitle(\"ATTENZIONE\");\n            alert.setHeaderText(\"ATTENZIONE!!\");\n            alert.setContentText(\"Il palo di partenza non può essere vuoto\");\n            alert.showAndWait();\n        }", "timestamp": "2023-03-15T21:04:55.054868Z", "repo_name": "lbottona/UNITN-lingProg-Torre_Hanoi", "path": "/src/it/unitn/disi/giugno2018/torrehannoi.java", "source": "the-stack-v2", "method_name": "errorePaloPartenza", "class_name": "ListenerPali", "index": 2934, "label": 1}
{"input": "public void positionList() {\n        \n        double x = addGenre[0].getLayoutX();\n        \n        double y = (super.getcHeight() / 2.0) - (list.getWidthT() / 2.0);\n\n        list.setListPosition(x, y);\n    }", "timestamp": "2023-07-21T07:53:23.626708Z", "repo_name": "Julio-L/AnimeLib", "path": "/src/MainMenu.java", "source": "the-stack-v2", "method_name": "positionList", "class_name": "MainMenu", "index": 2935, "label": 1}
{"input": "public static <T> T getBean(String beanId, Class<T> clazz) {\n        return context.getBean(beanId, clazz);\n    }", "timestamp": "2021-05-23T08:43:42.737533Z", "repo_name": "jojofans/alpha-glacier", "path": "/glacier-common/src/main/java/com/geektcp/alpha/common/base/context/SpringContext.java", "source": "the-stack-v2", "method_name": "getBean", "class_name": "SpringContext", "index": 2936, "label": 1}
{"input": "@Test\n    public void deleteEntryCategory() throws Exception {\n        \n        entryCategoryRepository.save(entryCategory);\n        int databaseSizeBeforeDelete = entryCategoryRepository.findAll().size();\n\n        \n        restEntryCategoryMockMvc.perform(delete(\"/api/entry-categories/{id}\", entryCategory.getId())\n            .accept(TestUtil.APPLICATION_JSON_UTF8))\n            .andExpect(status().isOk());\n\n        \n        List<EntryCategory> entryCategoryList = entryCategoryRepository.findAll();\n        assertThat(entryCategoryList).hasSize(databaseSizeBeforeDelete - 1);\n    }", "timestamp": "2021-06-26T15:26:23.855027Z", "repo_name": "stupant/timesheet", "path": "/src/test/java/com/wbs/web/rest/EntryCategoryResourceIntTest.java", "source": "the-stack-v2", "method_name": "deleteEntryCategory", "class_name": "EntryCategoryResourceIntTest", "index": 2937, "label": 1}
{"input": "void flushAllRule(final List<RuleData> ruleDataList) {\n        if (CollectionUtils.isEmpty(ruleDataList)) {\n            LOGGER.info(\"clear all rule cache, old cache:{}\", RULE_MAP);\n            RULE_MAP.clear();\n        } else {\n            \n            Map<String, List<RuleData>> selectorToRules = ruleDataList.stream()\n                    .collect(Collectors.groupingBy(RuleData::getSelectorId));\n            selectorToRules.keySet().forEach(selectorId -> {\n                List<RuleData> sorted = selectorToRules.get(selectorId).stream()\n                        .sorted(Comparator.comparing(RuleData::getSort)).collect(Collectors.toList());\n                selectorToRules.put(selectorId, sorted);\n            });\n            RULE_MAP.clear();\n            RULE_MAP.putAll(selectorToRules);\n        }\n    }", "timestamp": "2020-09-20T02:12:13.480092Z", "repo_name": "zhouyanggs/soul", "path": "/soul-web/src/main/java/org/dromara/soul/web/cache/HttpCacheHandler.java", "source": "the-stack-v2", "method_name": "flushAllRule", "class_name": "HttpCacheHandler", "index": 2938, "label": 1}
{"input": "@DontRepeat\n    @Test\n    public void testCannotInstantiate() throws Exception\n    {\n        assertThrows(BlackNectarAssertions.class::newInstance);\n    }", "timestamp": "2021-06-18T06:05:39.558041Z", "repo_name": "BlackSourceLabs/BlackNectar-Service", "path": "/src/test/java/tech/blacksource/blacknectar/service/BlackNectarAssertionsTest.java", "source": "the-stack-v2", "method_name": "testCannotInstantiate", "class_name": "BlackNectarAssertionsTest", "index": 2939, "label": 1}
{"input": "@Test public void testWhereNot() throws IOException {\n    CalciteAssert.that()\n        .with(CalciteAssert.Config.FOODMART_CLONE)\n        .query(\"select 1\\n\"\n            + \"from \\\"store\\\"\\n\"\n            + \"where NOT (\\\"store\\\".\\\"grocery_sqft\\\" < 22000)\\n\"\n            + \"group by \\\"store\\\".\\\"store_street_address\\\"\\n\")\n        .returnsCount(8);\n  }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "testWhereNot", "class_name": "JdbcTest", "index": 2940, "label": 1}
{"input": "public static int[] twoSum(int[] nums, int target) {\n        int[] result = new int[2];\n        Map<Integer, Integer> map = new HashMap<>();\n\n        for(int i = 0; i < nums.length; i++) {\n            if(map.containsKey(target - nums[i])) {\n                result[1] = i;\n                result[0] = map.get(target - nums[i]);\n                break;\n            }\n            map.put(nums[i], i);\n        }\n        return result;\n    }", "timestamp": "2023-04-12T02:29:45.858841Z", "repo_name": "kalpak92/TechInterview2020", "path": "/src/Leetcode/TwoSum.java", "source": "the-stack-v2", "method_name": "twoSum", "class_name": "TwoSum", "index": 2941, "label": 1}
{"input": "private boolean isAllDelived(List<Ticket> tickets)\n    {\n        for (Ticket t : tickets) {\n            if (t.getStatus().equals(TicketStatus.未送票)) {\n                return false;\n            }\n        }\n        return true;\n    }", "timestamp": "2021-01-18T13:50:32.011316Z", "repo_name": "THEMING/TZLottery", "path": "/core/com/xsc/lottery/task/ticket/.svn/text-base/TicketTreatmentWork.java.svn-base", "source": "the-stack-v2", "method_name": "isAllDelived", "class_name": "TicketTreatmentWork", "index": 2942, "label": 1}
{"input": "@PutMapping(value = \"/{id}\")\n    public Result update(@RequestBody SeckillGoods seckillGoods, @PathVariable Long id) {\n        \n        seckillGoods.setId(id);\n        \n        seckillGoodsService.update(seckillGoods);\n        return new Result(true, StatusCode.OK, \"修改成功\");\n    }", "timestamp": "2022-12-10T08:56:48.169450Z", "repo_name": "RobodLee/changgou_datum", "path": "/day14/代码/changgou/changgou-parent/changgou-service/changgou-service-seckill/src/main/java/com/changgou/seckill/controller/SeckillGoodsController.java", "source": "the-stack-v2", "method_name": "update", "class_name": "SeckillGoodsController", "index": 2943, "label": 1}
{"input": "@Override \n        public void supplyNetworkDepersonalizationResponse(RadioResponseInfo info, int remainingRetries) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            _hidl_request.writeInt32(remainingRetries);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(8, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "supplyNetworkDepersonalizationResponse", "class_name": "Proxy", "index": 2944, "label": 1}
{"input": "@Override\n  public <RET extends ORecord> RET lock(ORID recordId) throws OLockException {\n    checkOpenness();\n    checkIfActive();\n    pessimisticLockChecks(recordId);\n    internalLockRecord(recordId, OStorage.LOCKING_STRATEGY.EXCLUSIVE_LOCK);\n    return load(recordId, null, true);\n  }", "timestamp": "2020-06-14T16:12:00.437691Z", "repo_name": "Param999/orientdb", "path": "/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java", "source": "the-stack-v2", "method_name": "lock", "class_name": "ODatabaseDocumentEmbedded", "index": 2945, "label": 1}
{"input": "public Builder clearConfidentialityImpact() {\n\n      confidentialityImpact_ = 0;\n      onChanged();\n      return this;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "clearConfidentialityImpact", "class_name": "Builder", "index": 2946, "label": 1}
{"input": "public boolean match(ExpressionStatement node, Object other) {\n\t\t\tcheckPositions(node, other);\n\t\t\treturn super.match(node, other);\n\t\t}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/52042/src_1.java", "source": "the-stack-v2", "method_name": "match", "class_name": "CheckPositionsMatcher", "index": 2947, "label": 1}
{"input": "public static Measurement updateMeasure(Measurement m) {\n\t\tEntityManager em = PersonHealthDao.instance.createEntityManager();\n\t\tEntityTransaction tx = em.getTransaction();\n\t\ttx.begin();\n\t\tm = em.merge(m);\n\t\ttx.commit();\n\t    PersonHealthDao.instance.closeConnections(em);\n\t    return m;\n\t}", "timestamp": "2021-01-13T00:15:53.828594Z", "repo_name": "djbb7/introsde-2015-assignment-2", "path": "/src/introsde/assignment2/ehealth/model/Measurement.java", "source": "the-stack-v2", "method_name": "updateMeasure", "class_name": "Measurement", "index": 2948, "label": 1}
{"input": "@Test public void arrayEqualsGenericTypeArray() {\n    assertThat(Types.equals(int[].class, Types.arrayOf(int.class))).isTrue();\n    assertThat(Types.equals(Types.arrayOf(int.class), int[].class)).isTrue();\n    assertThat(Types.equals(String[].class, Types.arrayOf(String.class))).isTrue();\n    assertThat(Types.equals(Types.arrayOf(String.class), String[].class)).isTrue();\n  }", "timestamp": "2021-04-27T09:37:55.346570Z", "repo_name": "nedtwigg/moshi", "path": "/moshi/src/test/java/com/squareup/moshi/TypesTest.java", "source": "the-stack-v2", "method_name": "arrayEqualsGenericTypeArray", "class_name": "TypesTest", "index": 2949, "label": 1}
{"input": "public final VariableDeclaratorIdContext variableDeclaratorId() throws RecognitionException {\n\t\tVariableDeclaratorIdContext _localctx = new VariableDeclaratorIdContext(_ctx, getState());\n\t\tenterRule(_localctx, 80, RULE_variableDeclaratorId);\n\t\tint _la;\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(565);\n\t\t\tmatch(Identifier);\n\t\t\tsetState(570);\n\t\t\t_errHandler.sync(this);\n\t\t\t_la = _input.LA(1);\n\t\t\twhile (_la==T__22) {\n\t\t\t\t{\n\t\t\t\t{\n\t\t\t\tsetState(566);\n\t\t\t\tmatch(T__22);\n\t\t\t\tsetState(567);\n\t\t\t\tmatch(T__23);\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetState(572);\n\t\t\t\t_errHandler.sync(this);\n\t\t\t\t_la = _input.LA(1);\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "timestamp": "2020-08-12T07:21:52.578771Z", "repo_name": "HamiltonManalo/SessionTypes", "path": "/antlr/JavaParsing/.antlr/JavaParser.java", "source": "the-stack-v2", "method_name": "variableDeclaratorId", "class_name": "JavaParser", "index": 2950, "label": 1}
{"input": "@Override\n  public void addException(Exception exception) {\n    serviceImpl.addException(exception);\n  }", "timestamp": "2023-09-04T09:09:02.481897Z", "repo_name": "googleapis/google-cloud-java", "path": "/java-debugger-client/google-cloud-debugger-client/src/test/java/com/google/cloud/debugger/v2/MockController2.java", "source": "the-stack-v2", "method_name": "addException", "class_name": "MockController2", "index": 2951, "label": 1}
{"input": "public void deserializeSnapshot(InputArchive ia) throws IOException {\n        clear();\n        SerializeUtils.deserializeSnapshot(getDataTree(),ia,getSessionWithTimeOuts());\n        initialized = true;\n    }", "timestamp": "2021-11-23T14:30:09.439604Z", "repo_name": "airtimemedia/zookeeper", "path": "/src/java/main/org/apache/zookeeper/server/ZKDatabase.java", "source": "the-stack-v2", "method_name": "deserializeSnapshot", "class_name": "ZKDatabase", "index": 2952, "label": 1}
{"input": "public ActionForward toYwtjOperation(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response) {\n\t\treturn mapping.findForward(\"ywtjview\");\n\t}", "timestamp": "2021-01-12T15:41:00.492001Z", "repo_name": "MoonLuckSir/MoonRepository", "path": "/src/java/com/yitong/app/action/judicial/dxzpzfdj/ZfdjAction.java", "source": "the-stack-v2", "method_name": "toYwtjOperation", "class_name": "ZfdjAction", "index": 2953, "label": 1}
{"input": "public Criteria andVdef10LessThan(String value) {\r\n            addCriterion(\"VDEF10 <\", value, \"vdef10\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef10LessThan", "class_name": "GeneratedCriteria", "index": 2954, "label": 1}
{"input": "@Override\n\tpublic void init() {\n\t\tmermaid = new Mermaid(0, 480-156, 71, 156);\n\t\tstar = new Star(23, 300);\n\t\tstars = new ArrayList<Star>();\n\t\tfor (int i = 0; i<maxStars; i++){\n\t\t\tstars.add(new Star(random.nextInt(380), random.nextInt(420)));\n\t\t}\n\t\tgamePieces = new ArrayList<GamePiece>();\n\t\t\n\t\tgamePieces.add(new Eyefrown(300, 140-34, 83, 34));\n\t\t\n\t}", "timestamp": "2020-05-15T20:09:09.580480Z", "repo_name": "wcmaclean/home-repo", "path": "/android/experiments/SpaceMermaid/src/com/toymoon/game/state/PlayState.java", "source": "the-stack-v2", "method_name": "init", "class_name": "PlayState", "index": 2955, "label": 1}
{"input": "static void rotateLeftCounterClockwise(int[][] cube) {\n        int temp1 = cube[3][0];\n        int temp2 = cube[4][0];\n        int temp3 = cube[5][0];\n        cube[3][0] = cube[8][8];\n        cube[4][0] = cube[7][8];\n        cube[5][0] = cube[6][8];\n        cube[8][8] = cube[5][8];\n        cube[7][8] = cube[4][8];\n        cube[6][8] = cube[3][8];\n        cube[5][8] = cube[2][8];\n        cube[4][8] = cube[1][8];\n        cube[3][8] = cube[0][8];\n        cube[2][8] = temp1;\n        cube[1][8] = temp2;\n        cube[0][8] = temp3;\n\n        temp1 = cube[3][9];\n        temp2 = cube[4][9];\n        cube[3][9] = cube[3][11];\n        cube[4][9] = cube[3][10];\n        cube[3][11] = cube[5][11];\n        cube[3][10] = cube[4][11];\n        cube[5][11] = cube[5][9];\n        cube[4][11] = cube[5][10];\n        cube[5][9] = temp1;\n        cube[5][10] = temp2;\n    }", "timestamp": "2020-03-29T19:36:23.556615Z", "repo_name": "ronaldescobarj/a-algorithm", "path": "/src/com/company/Main.java", "source": "the-stack-v2", "method_name": "rotateLeftCounterClockwise", "class_name": "Main", "index": 2956, "label": 1}
{"input": "@Override\n        public Enumeration<String> getAttributeNames() {\n            return sc.getAttributeNames();\n        }", "timestamp": "2023-07-25T08:39:52.765441Z", "repo_name": "sustain/tomcat70", "path": "/java/org/apache/catalina/core/StandardContext.java", "source": "the-stack-v2", "method_name": "getAttributeNames", "class_name": "NoPluggabilityServletContext", "index": 2957, "label": 1}
{"input": "public void testBug124624_HMa_CamelCaseSamePartCount() throws CoreException {\n\tsetupBug124624();\n\tsearch(\"HMa\", IJavaSearchConstants.TYPE, IJavaSearchConstants.DECLARATIONS, SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);\n\tassertSearchResults(\n\t\t\"src/Test.java HashMap [HashMap] EXACT_MATCH\\n\" +\n\t\t\"src/Test.java HtmlMapper [HtmlMapper] EXACT_MATCH\\n\" +\n\t\t\"src/Test.java HaxMapxxxx [HaxMapxxxx] EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug124624_HMa_CamelCaseSamePartCount", "class_name": "JavaSearchBugsTests", "index": 2958, "label": 1}
{"input": "@Override\n        public void onClick(View v) {\n            \n            MeterService meter = MeterService.getInstance();\n            if (meter != null) {\n                if (meter.isConnected()) {\n                    meter.getDutyCycle(new MyGetDutyCycleCallback());\n                } else {\n                    showNoMeterConnectedAlert();\n                }\n            } else {\n                if (MyDebug.LOG) {\n                    Log.e(TAG, \"No Meter Service started\");\n                }\n                showNoMeterConnectedAlert();\n            }\n        }", "timestamp": "2021-01-21T11:23:29.957303Z", "repo_name": "jackw2050/Land_Android", "path": "/ultraGrav2/src/main/java/com/zlscorp/ultragrav/activity/fragment/CalculateFeedbackScaleFragment.java", "source": "the-stack-v2", "method_name": "onClick", "class_name": "StartOnClick", "index": 2959, "label": 1}
{"input": "public boolean removeBlockAssignment(BlockAssignment aBlockAssignment)\n  {\n    boolean wasRemoved = false;\n    \n    if (!this.equals(aBlockAssignment.getGame()))\n    {\n      blockAssignments.remove(aBlockAssignment);\n      wasRemoved = true;\n    }\n    return wasRemoved;\n  }", "timestamp": "2020-09-27T06:19:22.075701Z", "repo_name": "mustafain117/Block-Breaker-Game", "path": "/Block223v2/src/ca/mcgill/ecse223/block/model/Game.java", "source": "the-stack-v2", "method_name": "removeBlockAssignment", "class_name": "Game", "index": 2960, "label": 1}
{"input": "@Override \n        public void changeIccPinForAppResponse(RadioResponseInfo info, int remainingRetries) throws RemoteException {\n            HwParcel _hidl_request = new HwParcel();\n            _hidl_request.writeInterfaceToken(android.hardware.radio.V1_0.IRadioResponse.kInterfaceName);\n            info.writeToParcel(_hidl_request);\n            _hidl_request.writeInt32(remainingRetries);\n            HwParcel _hidl_reply = new HwParcel();\n            try {\n                this.mRemote.transact(6, _hidl_request, _hidl_reply, 1);\n                _hidl_request.releaseTemporaryStorage();\n            } finally {\n                _hidl_reply.release();\n            }\n        }", "timestamp": "2023-07-29T05:26:14.603817Z", "repo_name": "morningblu/HWFramework", "path": "/DVC-AN20_EMUI10.1.1/src/main/java/android/hardware/radio/V1_1/IRadioResponse.java", "source": "the-stack-v2", "method_name": "changeIccPinForAppResponse", "class_name": "Proxy", "index": 2961, "label": 1}
{"input": "@Override\n\tpublic String execute() throws Exception {\n\t\tActionContext actionContext=ActionContext.getContext();\n\t\tsession=actionContext.getSession();\n\t\tUser u=(User) session.get(\"onlineUser\");\n\t\tif(u!=null){\n\t\t\tString uid=u.getU_id();\n\t\t\tOrderDao od=new OrderDao();\n\t\t\tuoList=od.selectAUserOrders(uid);\n\t\t\tDateTool dt=new DateTool();\n\t\t\tDate date;\n\t\t\tfor(UserOrder o:uoList){\n\t\t\t\tdate=dt.parseDateTime(o.getO_time());\n\t\t\t\to.setO_time(ConstVar.DATE_FORMAT_DATETIME_PRINT.format(date));\n\t\t\t\n\t\t\t}\n\t\t\tShowMyOrderService smos=new ShowMyOrderService(uid);\n\t\t\timgsMap=smos.selectAUserOrdersImgs();\n\t\t\tpmap=smos.selectAUserOrdersProducts();\n\t\t\tcneeMap=smos.selectAUserOrdersCnee();\n\t\t\tdt=null;\n\t\t\treturn SUCCESS;\n\t\t}else\n\t\t\treturn LOGIN;\n\t}", "timestamp": "2021-09-14T07:42:22.685862Z", "repo_name": "LiuYiChen0704/OnlineShop", "path": "/src/com/yichen/action/ShowMyOrder.java", "source": "the-stack-v2", "method_name": "execute", "class_name": "ShowMyOrder", "index": 2962, "label": 1}
{"input": "@Override\n    protected Class<?>[] getRootConfigClasses() {\n        return new Class[] { AppConfig.class };\n    }", "timestamp": "2020-03-22T07:43:47.530665Z", "repo_name": "mopetkova/todo-WebAppSpringMVC", "path": "/src/main/java/it/si2001/springangular/configuration/AppInitializer.java", "source": "the-stack-v2", "method_name": "getRootConfigClasses", "class_name": "AppInitializer", "index": 2963, "label": 1}
{"input": "private void overrideProfileSyncService(\n            final boolean usingPassphrase, final boolean syncingPasswords) {\n        TestThreadUtils.runOnUiThreadBlocking(() -> {\n            ProfileSyncService.overrideForTests(new ProfileSyncService() {\n                @Override\n                public boolean isUsingSecondaryPassphrase() {\n                    return usingPassphrase;\n                }\n\n                @Override\n                public Set<Integer> getActiveDataTypes() {\n                    if (syncingPasswords) return CollectionUtil.newHashSet(ModelType.PASSWORDS);\n                    return CollectionUtil.newHashSet(ModelType.AUTOFILL);\n                }\n            });\n        });\n    }", "timestamp": "2022-12-08T04:12:54.583056Z", "repo_name": "yeahhhhhhhh/chromium_quic", "path": "/src/chrome/android/javatests/src/org/chromium/chrome/browser/preferences/password/SavePasswordsPreferencesTest.java", "source": "the-stack-v2", "method_name": "overrideProfileSyncService", "class_name": "SavePasswordsPreferencesTest", "index": 2964, "label": 1}
{"input": "@Override\n    public void setRendererFocus(boolean focus)\n    {\n        focusGained();\n\n        if (_blockRendererController != null)\n        {\n            _blockRendererController.setHasFocus(focus);\n        }\n    }", "timestamp": "2023-02-18T11:13:58.949927Z", "repo_name": "entirej/core", "path": "/entirej-core/src/org/entirej/framework/core/data/controllers/EJEditableBlockController.java", "source": "the-stack-v2", "method_name": "setRendererFocus", "class_name": "EJEditableBlockController", "index": 2965, "label": 1}
{"input": "@Override public String toString() {\n      return \"Event [eventid: \" + eventid + \", ts: \" + ts + \"]\";\n    }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "toString", "class_name": "Event", "index": 2966, "label": 1}
{"input": "@java.lang.Override\n    public com.google.cloud.securitycenter.v1.Cvssv3.Scope getScope() {\n      @SuppressWarnings(\"deprecation\")\n      com.google.cloud.securitycenter.v1.Cvssv3.Scope result =\n          com.google.cloud.securitycenter.v1.Cvssv3.Scope.valueOf(scope_);\n      return result == null ? com.google.cloud.securitycenter.v1.Cvssv3.Scope.UNRECOGNIZED : result;\n    }", "timestamp": "2022-05-04T11:43:50.284969Z", "repo_name": "meltsufin/google-cloud-java", "path": "/java-securitycenter/proto-google-cloud-securitycenter-v1/src/main/java/com/google/cloud/securitycenter/v1/Cvssv3.java", "source": "the-stack-v2", "method_name": "getScope", "class_name": "Builder", "index": 2967, "label": 1}
{"input": "private static boolean IsLeapYear(int year)\n    {\n        return year % 4 == 0 && (year % 100 != 0 || year % 400 == 0);\n    }", "timestamp": "2016-09-05T17:02:01.575534Z", "repo_name": "thegreatape/slim", "path": "/yuicompressor-2.4.2/rhino1_6R7/src/org/yuimozilla/javascript/NativeDate.java", "source": "the-stack-v2", "method_name": "IsLeapYear", "class_name": "NativeDate", "index": 2968, "label": 1}
{"input": "public void getThree(View view){\n        operation  +=\"3\";\n        editText.setText(operation);\n    }", "timestamp": "2021-05-31T01:02:53.417110Z", "repo_name": "phndavid/calculator", "path": "/Calculator/app/src/main/java/com/master/ndavid/calculator/MainActivity.java", "source": "the-stack-v2", "method_name": "getThree", "class_name": "MainActivity", "index": 2969, "label": 1}
{"input": "@Override public boolean equals(Object obj) {\n      return obj == this\n          || obj instanceof Dependent\n          && empid == ((Dependent) obj).empid\n          && Objects.equals(name, ((Dependent) obj).name);\n    }", "timestamp": "2020-12-11T16:24:56.946003Z", "repo_name": "vaibhavjain-dm/calcite", "path": "/core/src/test/java/org/apache/calcite/test/JdbcTest.java", "source": "the-stack-v2", "method_name": "equals", "class_name": "Dependent", "index": 2970, "label": 1}
{"input": "public void setTitle(String title) {\n            TextView titleNew = (TextView) mView.findViewById(R.id.singlePostTitle);\n            titleNew.setText(title);\n        }", "timestamp": "2021-01-20T16:10:02.437775Z", "repo_name": "adamfils/SchoolAssistant", "path": "/app/src/main/java/com/adamapps/coursealert/HomeActivity.java", "source": "the-stack-v2", "method_name": "setTitle", "class_name": "PostViewHolder", "index": 2971, "label": 1}
{"input": "@Override\n      public List setUploadProtocol(java.lang.String uploadProtocol) {\n        return (List) super.setUploadProtocol(uploadProtocol);\n      }", "timestamp": "2023-04-25T11:39:13.761933Z", "repo_name": "Jucivam/google-api-java-client-services", "path": "/clients/google-api-services-doubleclicksearch/v2/1.31.0/com/google/api/services/doubleclicksearch/Doubleclicksearch.java", "source": "the-stack-v2", "method_name": "setUploadProtocol", "class_name": "List", "index": 2972, "label": 1}
{"input": "public void testBug95152_jar03() throws CoreException {\n\tIType type = getPackageFragment(\"JavaSearchBugs\", \"lib/b95152.jar\", \"b95152\").getClassFile(\"T3$T32.class\").getType();\n\t\n\tsearch(type.getMethods()[0], REFERENCES);\n\ttype = getPackageFragment(\"JavaSearchBugs\", \"lib/b95152.jar\", \"b95152\").getClassFile(\"T3$T32$T33.class\").getType();\n\t\n\tsearch(type.getMethods()[0], REFERENCES);\n\tassertSearchResults(\n\t\t\"lib/b95152.jar b95152.T3(b95152.T3) EXACT_MATCH\\n\" +\n\t\t\"lib/b95152.jar b95152.T3(b95152.T3) EXACT_MATCH\"\n\t);\n}", "timestamp": "2022-04-25T17:59:03.905613Z", "repo_name": "martinezmatias/GenPat-data-C3", "path": "/eclipsejdt_cluster/20794/tar_1.java", "source": "the-stack-v2", "method_name": "testBug95152_jar03", "class_name": "JavaSearchBugsTests", "index": 2973, "label": 1}
{"input": "@Test\n    public void testSupportedState() throws Exception\n    {\n        AlchemyAssertion<State> assertion = BlackNectarAssertions.supportedState(websiteFactory);\n        assertThat(assertion, notNullValue());\n        assertion.check(state);\n    }", "timestamp": "2021-06-18T06:05:39.558041Z", "repo_name": "BlackSourceLabs/BlackNectar-Service", "path": "/src/test/java/tech/blacksource/blacknectar/service/BlackNectarAssertionsTest.java", "source": "the-stack-v2", "method_name": "testSupportedState", "class_name": "BlackNectarAssertionsTest", "index": 2974, "label": 1}
{"input": "public void setDeliveryPerson(String deliveryPerson) {\n        this.deliveryPerson = deliveryPerson;\n    }", "timestamp": "2021-01-10T07:10:13.758215Z", "repo_name": "nieshr/xjr", "path": "/src/main/java/com/ynyes/kjxjr/entity/TdOrder.java", "source": "the-stack-v2", "method_name": "setDeliveryPerson", "class_name": "TdOrder", "index": 2975, "label": 1}
{"input": "public void setRecommendSheetlist(ArrayList<Sheetitem> recommendSheetlist) {\n        this.recommendSheetlist = recommendSheetlist;\n    }", "timestamp": "2020-09-01T23:44:27.627439Z", "repo_name": "ChaoYunTian/Software_second-hand-trading", "path": "/Server/src/vo/IndexData.java", "source": "the-stack-v2", "method_name": "setRecommendSheetlist", "class_name": "IndexData", "index": 2976, "label": 1}
{"input": "public void setCompletionDate(String mCompletionDate) {\n\t\tDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd\");\n\t\tDate date;\n\t\ttry {\n\t\t\tdate = df.parse(mCompletionDate);\n\t\t\tthis.mCompletionDate = date;\n\t\t} catch (ParseException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}", "timestamp": "2021-01-21T12:43:39.445233Z", "repo_name": "SandeepDhull1990/Android-TodoList", "path": "/src/com/example/todolist/model/Task.java", "source": "the-stack-v2", "method_name": "setCompletionDate", "class_name": "Task", "index": 2977, "label": 1}
{"input": "public static Transaction createEntity(EntityManager em) {\n        Transaction transaction = new Transaction()\n            .name(DEFAULT_NAME)\n            .description(DEFAULT_DESCRIPTION)\n            .dateAdded(DEFAULT_DATE_ADDED)\n            .amount(DEFAULT_AMOUNT)\n            .originalAmount(DEFAULT_ORIGINAL_AMOUNT)\n            .movementType(DEFAULT_MOVEMENT_TYPE)\n            .scheduled(DEFAULT_SCHEDULED)\n            .addToReports(DEFAULT_ADD_TO_REPORTS)\n            .incomingTransaction(DEFAULT_INCOMING_TRANSACTION)\n            .transactionType(DEFAULT_TRANSACTION_TYPE);\n        \n        Wallet wallet;\n        if (TestUtil.findAll(em, Wallet.class).isEmpty()) {\n            wallet = WalletResourceIT.createEntity(em);\n            em.persist(wallet);\n            em.flush();\n        } else {\n            wallet = TestUtil.findAll(em, Wallet.class).get(0);\n        }\n        transaction.setWallet(wallet);\n        return transaction;\n    }", "timestamp": "2023-07-12T10:43:54.547416Z", "repo_name": "Jukebox-Projects/Money-Roomba", "path": "/src/test/java/com/moneyroomba/web/rest/TransactionResourceIT.java", "source": "the-stack-v2", "method_name": "createEntity", "class_name": "TransactionResourceIT", "index": 2978, "label": 1}
{"input": "public Criteria andVdef8EqualTo(String value) {\r\n            addCriterion(\"VDEF8 =\", value, \"vdef8\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef8EqualTo", "class_name": "GeneratedCriteria", "index": 2979, "label": 1}
{"input": "@Override\r\n  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)\r\n  {\r\n    switch (featureID)\r\n    {\r\n      case AsmetaLPackage.FUNCTION_INITIALIZATION__DOMAIN:\r\n        return ((InternalEList<?>)getDomain()).basicRemove(otherEnd, msgs);\r\n      case AsmetaLPackage.FUNCTION_INITIALIZATION__BODY:\r\n        return basicSetBody(null, msgs);\r\n    }\r\n    return super.eInverseRemove(otherEnd, featureID, msgs);\r\n  }", "timestamp": "2023-05-25T04:51:25.190702Z", "repo_name": "Favio-Quinteros/Quinteros-WebEditor", "path": "/org.xtext.asmetal.parent/org.xtext.asmetal/src/main/xtext-gen/org/xtext/asmetal/asmetaL/impl/FunctionInitializationImpl.java", "source": "the-stack-v2", "method_name": "eInverseRemove", "class_name": "FunctionInitializationImpl", "index": 2980, "label": 1}
{"input": "public static WebElement rightArrow() {\n            return driver.findElement(By.xpath(\"//div[@class='calendar-widget']//div[@class='left-arrow']\"));\n        }", "timestamp": "2021-07-10T10:13:04.390846Z", "repo_name": "inteticsal/dn-cucumber", "path": "/src/test/java/pageObject/desktop/CalendarWidget.java", "source": "the-stack-v2", "method_name": "rightArrow", "class_name": "Popup", "index": 2981, "label": 1}
{"input": "public Criteria andVdef1NotEqualTo(String value) {\r\n            addCriterion(\"VDEF1 <>\", value, \"vdef1\");\r\n            return (Criteria) this;\r\n        }", "timestamp": "2020-03-27T05:58:40.037801Z", "repo_name": "zhangjbf/ssm", "path": "/wljt-boot-web/src/main/java/com/yonyou/wljt/pojo/UserVOExample.java", "source": "the-stack-v2", "method_name": "andVdef1NotEqualTo", "class_name": "GeneratedCriteria", "index": 2982, "label": 1}
{"input": "public QueryOrderDetail4DistributionResponse setHeaders(java.util.Map<String, String> headers) {\n        this.headers = headers;\n        return this;\n    }", "timestamp": "2023-09-01T04:10:33.640756Z", "repo_name": "aliyun/alibabacloud-java-sdk", "path": "/linkedmall-20220531/src/main/java/com/aliyun/linkedmall20220531/models/QueryOrderDetail4DistributionResponse.java", "source": "the-stack-v2", "method_name": "setHeaders", "class_name": "QueryOrderDetail4DistributionResponse", "index": 2983, "label": 1}
{"input": "@Test\n\tpublic void testObterPessoaFisicaInstituicao() throws BancoobException{\n\t\tInteger idPessoa = 1;\n\t\tInteger idInstituicao = 2;\n\t\t\n\t\tCapesIntegracaoServicoEJB ejb = new CapesIntegracaoServicoEJB();\n\t\tPessoaFisicaVO pessoaFisicaVO = new PessoaFisicaVO(); \n\t\t\n\t\tPessoaFisicaDelegate mockPessoaFisicaDelegate = EasyMock.createMock(PessoaFisicaDelegate.class);\n\t\tEasyMock.expect(mockPessoaFisicaDelegate.obterPorPessoaInstituicao(EasyMock.anyInt(), EasyMock.anyInt())).andReturn(pessoaFisicaVO);\n\t\t\n\t\tejb.setPessoaFisicaDelegate(mockPessoaFisicaDelegate);\n\t\t\n\t\tEasyMock.replay(mockPessoaFisicaDelegate);\n\t\tPessoaFisicaIntegracaoDTO pessoa = ejb.obterPessoaFisicaInstituicao(idPessoa, idInstituicao);\n\t\tAssert.assertNotNull(pessoa);\n\t\tEasyMock.verify(mockPessoaFisicaDelegate);\n\t}", "timestamp": "2022-12-01T05:20:26.998529Z", "repo_name": "pabllo007/cca", "path": "/Integracao/ContaCapitalIntegracaoEJB/src/test/java/br/com/sicoob/sisbr/cca/integracao/negocio/servicos/ejb/CapesIntegracaoServicoEJBTest.java", "source": "the-stack-v2", "method_name": "testObterPessoaFisicaInstituicao", "class_name": "CapesIntegracaoServicoEJBTest", "index": 2984, "label": 1}
{"input": "public void CopyDB(InputStream inputStream, OutputStream outputStream)\n\t\t\tthrows IOException {\n\t\t\t\n\t\t\tbyte[] buffer = new byte[1024];\n\t\t\tint length;\n\t\t\twhile ((length = inputStream.read(buffer)) > 0) {\n\t\t\toutputStream.write(buffer, 0, length);\n\t\t\t}\n\t\t\tinputStream.close();\n\t\t\toutputStream.close();\n\t\t}", "timestamp": "2021-01-10T02:48:04.633612Z", "repo_name": "tanujchawla1991/CallJugnu", "path": "/CallJugnu/src/com/example/calljugnu/TasteBuds.java", "source": "the-stack-v2", "method_name": "CopyDB", "class_name": "TasteBuds", "index": 2985, "label": 1}
{"input": "public static void main(String[] args) \r\n\t{\r\n\t\tint rev=0,sum=0;\r\n\t\tint op[]=new int[10];\r\n\t\tint k=0;\r\n\t\tScanner sc=new Scanner(System.in);\r\n\t\tSystem.out.println(\"Enter the first number :\");\r\n\t\tint n1=sc.nextInt();\r\n\t\tSystem.out.println(\"Enter the second number :\");\r\n\t\tint limit=sc.nextInt();\r\n\t\tfor(int i=n1;i<=limit;i++){\r\n\t\t\tn1=i;\r\n\t\t\twhile(n1>0){\r\n\t\t\t\tint b=n1%10;\r\n\t\t\t\t\r\n\t\t\t\trev=rev*10+b;\r\n\t\t\t\tn1=n1/10;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\tif(rev==i){\r\n\t\t\tSystem.out.println(i+\"\");\r\n\t\t\top[k]=i;\r\n\t\t\tk++;\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\trev=0;\r\n\t\t}\r\n\t\tfor(int s:op){\r\n\t\t\tsum=sum+s;\r\n\t\t}\r\n\t\t\r\n\t\tSystem.out.println(\"Addition :\"+sum);\r\n\t}", "timestamp": "2020-03-10T21:08:32.438447Z", "repo_name": "Nagaraj-Acharya/NIIT_Programs", "path": "/src/program1/Q13.java", "source": "the-stack-v2", "method_name": "main", "class_name": "Q13", "index": 2986, "label": 1}
{"input": "void argentChange(Joueur j, String etab, int prevArgent) {\n\t\tcui.argentChange(j, etab, prevArgent);\n\t}", "timestamp": "2020-05-29T14:30:59.287416Z", "repo_name": "Quentin-V/Miniville", "path": "/src/Controleur.java", "source": "the-stack-v2", "method_name": "argentChange", "class_name": "Controleur", "index": 2987, "label": 1}
{"input": "@RequestMapping(value=\"/todolist\")\n    public ModelAndView list(String user_name, HttpSession session){\n        System.out.println(\"开始搜寻事务\");\n        user_name = (String)session.getAttribute(\"user_name\");\n        System.out.println(\"用户名\"+user_name);\n        ModelAndView modelAndView = new ModelAndView(\"list\");\n        System.out.println(\"准备查询用户表\");\n        Cux_users cux_users = userdao.selectuser_name(user_name);\n        System.out.println(\"用户表查询结束\");\n        long user_id = cux_users.getUser_id();\n        session.setAttribute(\"user_id\", user_id);\n        System.out.println(\"准备查询事务表\");\n        Cux_todo_items cux_todo_items = businessdao.selectbusiness(user_id);\n        System.out.println(\"事务表查询结束\"+cux_todo_items.getPriority()+cux_todo_items.getTodo_item_title());\n        modelAndView.addObject(\"list\",cux_todo_items);\n        System.out.println(\"开始搜寻事务\"1);\n        return modelAndView;\n    }", "timestamp": "2020-03-25T04:00:18.175902Z", "repo_name": "abcnull/RoughWebProject", "path": "/src/main/java/com/example/transaction/controller/Control.java", "source": "the-stack-v2", "method_name": "list", "class_name": "Control", "index": 2988, "label": 1}
{"input": "public static void main(String[] args) {\n\t\t\n\t\tdouble [] prices = new double[5];\n\t\tScanner in = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter 5 prices: \");\n\t\tprices[0] = in.nextDouble();\n\t\tprices[1] = in.nextDouble();\n\t\tprices[2] = in.nextDouble();\n\t\tprices[4] = in.nextDouble();\n\t\tprices[5] = in.nextDouble();\n\t\tdouble total = prices[0]+prices[1]+prices[2]+prices[3]+prices[4];\n\t\tSystem.out.println(\"The total for all 5 items is: $%5.2f\", total);\n\t\tSystem.out.println();\n\t}", "timestamp": "2021-07-14T02:23:30.545972Z", "repo_name": "edpedron/training", "path": "/GroceryList.java", "source": "the-stack-v2", "method_name": "main", "class_name": "GroceryList", "index": 2989, "label": 1}
{"input": "public void setAssociatePublicIPAddress(Boolean associatePublicIPAddress) {\n      this.associatePublicIPAddress = associatePublicIPAddress;\n    }", "timestamp": "2023-04-27T16:24:27.422581Z", "repo_name": "TheWeatherCompany/dasein-cloud-core", "path": "/src/main/java/org/dasein/cloud/compute/LaunchConfiguration.java", "source": "the-stack-v2", "method_name": "setAssociatePublicIPAddress", "class_name": "LaunchConfiguration", "index": 2990, "label": 1}
{"input": "@Test\n    @Transactional\n    public void getAllAuthoritiesByCodeContainsSomething() throws Exception {\n        \n        authorityRepository.saveAndFlush(authority);\n\n        \n        defaultAuthorityShouldBeFound(\"code.contains=\" + DEFAULT_CODE);\n\n        \n        defaultAuthorityShouldNotBeFound(\"code.contains=\" + UPDATED_CODE);\n    }", "timestamp": "2023-03-21T11:42:40.672265Z", "repo_name": "luhai1/jhi-ant-vue", "path": "/src/test/java/com/aidriveall/cms/web/rest/AuthorityResourceIT.java", "source": "the-stack-v2", "method_name": "getAllAuthoritiesByCodeContainsSomething", "class_name": "AuthorityResourceIT", "index": 2991, "label": 1}
{"input": "public Builder setRemove(\n        java.lang.String value) {\n      if (value == null) {\n    throw new NullPointerException();\n  }\n  operationCase_ = 3;\n      operation_ = value;\n      onChanged();\n      return this;\n    }", "timestamp": "2023-06-04T15:51:18.380826Z", "repo_name": "dizcology/googleapis-gen", "path": "/google/ads/googleads/v5/googleads-java/proto-googleads-java/src/main/java/com/google/ads/googleads/v5/services/FeedItemOperation.java", "source": "the-stack-v2", "method_name": "setRemove", "class_name": "Builder", "index": 2992, "label": 1}
{"input": "@Override\n    public ASTNode visitAssignmentValue(final AssignmentValueContext ctx) {\n        ExprContext expr = ctx.expr();\n        if (null != expr) {\n            return visit(expr);\n        }\n        return new CommonExpressionSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), ctx.getText());\n    }", "timestamp": "2020-09-10T15:32:50.163756Z", "repo_name": "avalon566/incubator-shardingsphere", "path": "/shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/impl/PostgreSQLDMLVisitor.java", "source": "the-stack-v2", "method_name": "visitAssignmentValue", "class_name": "PostgreSQLDMLVisitor", "index": 2993, "label": 1}
{"input": "@Transactional\n\tpublic void save(ReportTmpMapping reportTmpMapping) {\n\t\tif (StringUtils.isEmpty(reportTmpMapping.getId())) {\n\t\t\treportTmpMapping.setId(idGenerator.getNextId(\"REPORT_TMP_MAPPING\"));\n\t\t\treportTmpMapping.setCreateDatetime(new Date());\n\t\t\treportTmpMapping.setDeleteFlag(0);\n\t\t\treportTmpMapping.setSystemId(Environment.DEFAULT_SYSTEM_NAME);\n\t\t\treportTmpMapping.setCreator(Authentication.getAuthenticatedActorId());\n\t\t\treportTmpMappingMapper.insertReportTmpMapping(reportTmpMapping);\n\t\t} else {\n\t\t\treportTmpMapping.setModifyDatetime(new Date());\n\t\t\treportTmpMapping.setModifier(Authentication.getAuthenticatedActorId());\n\t\t\treportTmpMappingMapper.updateReportTmpMapping(reportTmpMapping);\n\t\t}\n\t}", "timestamp": "2021-05-08T16:38:30.406098Z", "repo_name": "eosite/openyourarm", "path": "/glaf-web/src/main/java/com/glaf/report/core/service/ReportTmpMappingServiceImpl.java", "source": "the-stack-v2", "method_name": "save", "class_name": "ReportTmpMappingServiceImpl", "index": 2994, "label": 1}
{"input": "public void setSecondaryTag(String tagName) {\n        if (!ReaderTag.isDefaultTagTitle(tagName)) {\n            this.secondaryTag = StringUtils.notNullStr(tagName);\n        }\n    }", "timestamp": "2021-01-12T14:00:19.468063Z", "repo_name": "kageiit/perf-android-large", "path": "/di/da/src/main/java/org.wp.da/models/ReaderPost.java", "source": "the-stack-v2", "method_name": "setSecondaryTag", "class_name": "ReaderPost", "index": 2995, "label": 1}
{"input": "@Test(expected = NullPointerException.class)\n    public void testNullData() {\n        Log.topicsAndData(this.address, Collections.emptyList(), null);\n    }", "timestamp": "2020-06-03T14:12:10.752160Z", "repo_name": "aionnetwork/aion_types", "path": "/test/org/aion/types/LogTest.java", "source": "the-stack-v2", "method_name": "testNullData", "class_name": "LogTest", "index": 2996, "label": 1}
{"input": "public static Builder builder(String businessUnitId, LocalDate weekDateId, String forecastId) {\n\t    return new Builder()\n\t            .withRequiredParams(businessUnitId, weekDateId, forecastId);\n\t}", "timestamp": "2023-08-17T01:42:17.287918Z", "repo_name": "MyPureCloud/platform-client-sdk-java", "path": "/build/src/main/java/com/mypurecloud/sdk/v2/api/request/GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdataRequest.java", "source": "the-stack-v2", "method_name": "builder", "class_name": "GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdataRequest", "index": 2997, "label": 1}
{"input": "protected void marshallAttributes(XMLObject xmlObject, Element domElement) throws MarshallingException {\n        \n    }", "timestamp": "2020-12-24T05:20:59.477842Z", "repo_name": "Safewhere/kombit-service-java", "path": "/XmlTooling/src/org/opensaml/xml/signature/impl/X509SerialNumberMarshaller.java", "source": "the-stack-v2", "method_name": "marshallAttributes", "class_name": "X509SerialNumberMarshaller", "index": 2998, "label": 1}
{"input": "@Test\n    public void checkNameIsRequired() throws Exception {\n        int databaseSizeBeforeTest = entryCategoryRepository.findAll().size();\n        \n        entryCategory.setName(null);\n\n        \n\n        restEntryCategoryMockMvc.perform(post(\"/api/entry-categories\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(entryCategory)))\n            .andExpect(status().isBadRequest());\n\n        List<EntryCategory> entryCategoryList = entryCategoryRepository.findAll();\n        assertThat(entryCategoryList).hasSize(databaseSizeBeforeTest);\n    }", "timestamp": "2021-06-26T15:26:23.855027Z", "repo_name": "stupant/timesheet", "path": "/src/test/java/com/wbs/web/rest/EntryCategoryResourceIntTest.java", "source": "the-stack-v2", "method_name": "checkNameIsRequired", "class_name": "EntryCategoryResourceIntTest", "index": 2999, "label": 1}
